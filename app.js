webpackJsonp([0], [function(e, t, i) {
    "use strict";
    t.__esModule = !0,
        t.default = function(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(148),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function() {
        function e(e, t) {
            for (var i = 0; i < t.length; i++) {
                var n = t[i];
                n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value" in n && (n.writable = !0),
                    (0,
                        s.default)(e, n.key, n)
            }
        }
        return function(t, i, n) {
            return i && e(t.prototype, i),
                n && e(t, n),
                t
        }
    }()
}, function(e, t, i) {
    e.exports = {
        default: i(452),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(58),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function(e, t) {
        if (!e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !t || "object" !== (void 0 === t ? "undefined" : (0,
            s.default)(t)) && "function" != typeof t ? e : t
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.__esModule = !0;
    var s = i(109),
        r = n(s),
        a = i(110),
        o = n(a),
        l = i(58),
        u = n(l);
    t.default = function(e, t) {
        if ("function" != typeof t && null !== t)
            throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : (0,
                u.default)(t)));
        e.prototype = (0,
                o.default)(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (r.default ? (0,
                r.default)(e, t) : e.__proto__ = t)
    }
}, , function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(448),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = s.default || function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var i = arguments[t];
            for (var n in i)
                Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
        }
        return e
    }
}, function(e, t, i) {
    e.exports = {
        default: i(482),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.__esModule = !0;
    var s = i(2),
        r = n(s),
        a = i(522),
        o = n(a);
    t.default = function e(t, i, n) {
        null === t && (t = Function.prototype);
        var s = (0,
            o.default)(t, i);
        if (void 0 === s) {
            var a = (0,
                r.default)(t);
            return null === a ? void 0 : e(a, i, n)
        }
        if ("value" in s)
            return s.value;
        var l = s.get;
        if (void 0 !== l)
            return l.call(n)
    }
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(72),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function(e) {
        if (Array.isArray(e)) {
            for (var t = 0, i = Array(e.length); t < e.length; t++)
                i[t] = e[t];
            return i
        }
        return (0,
            s.default)(e)
    }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(22),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {};
    r.EARTH_RADIUS_KM = 6371,
        r.EARTH_CIRC_KM = 40075,
        r.getHeading = function(e, t) {
            var i = r.radToDeg(Math.atan2(t.y - e.y, t.x - e.x));
            return i = (360 + i) % 360,
                Math.round(i / 45) % 8
        },
        r.destinationOnPlane = function(e, t, i) {
            t = r.degToRad(t);
            var n = 1e3 * r.EARTH_RADIUS_KM,
                s = Math.cos(t) * i / (n * Math.cos(r.degToRad(e.lat))),
                a = Math.sin(t) * i / n;
            return new OL.LonLat(r.radToDeg(s) + e.lon, r.radToDeg(a) + e.lat)
        },
        r.distanceOnPlane = function(e, t) {
            var i = r.degToRad((e.lat + t.lat) / 2),
                n = r.degToRad(e.lon - t.lon),
                s = r.degToRad(e.lat - t.lat);
            return 1e3 * r.EARTH_RADIUS_KM * Math.sqrt(s * s + Math.pow(Math.cos(i) * n, 2))
        },
        r.getPointAlongLine = function(e, t, i) {
            var n = e,
                a = t,
                o = void 0,
                l = void 0,
                u = 0,
                d = void 0,
                c = void 0,
                h = void 0;
            for (s.default.defined(i) ? (o = i,
                    u = r.getPointEdge(n, i)) : o = n[u]; u < n.length - 1;) {
                if (l = n[u + 1],
                    c = o.distanceTo(l), !(a - c > 0)) {
                    d = a / c,
                        o = new OpenLayers.Geometry.Point((1 - d) * o.x + d * l.x, (1 - d) * o.y + d * l.y),
                        h = Math.atan2(o.y - l.y, o.x - l.x);
                    break
                }
                o = l,
                    a -= c,
                    u++
            }
            return {
                point: o,
                angle: h
            }
        },
        r.getDistanceToPointOnLine = function(e, t) {
            for (var i = e.distanceTo(t, {
                    details: !0
                }).line, n = new OL.Geometry.Point(i.x1, i.y1), s = new OL.Geometry.Point(i.x2, i.y2), r = 0, a = e.components, o = a.length, l = 0; r < o - 1; r++) {
                if (a[r].equals(s) && a[r + 1].equals(n) || a[r].equals(n) && a[r + 1].equals(s))
                    return l += a[r].distanceTo(t);
                l += a[r].distanceTo(a[r + 1])
            }
            return l
        },
        r.splitLineStringWithPolygon = function(e, t) {
            var i = t.distanceTo(e, {
                    details: !0
                }),
                n = new OL.Geometry.Point(i.x0, i.y0);
            if (i.distance > 0)
                return null;
            i = e.distanceTo(n, {
                details: !0
            });
            var s = i.line,
                r = new OL.Geometry.Point(s.x1, s.y1),
                a = new OL.Geometry.Point(s.x2, s.y2),
                o = e.components.slice(),
                l = o.length,
                u = 0;
            for (u; u < l - 1 && !(o[u].equals(a) && o[u + 1].equals(r) || o[u].equals(r) && o[u + 1].equals(a)); u++)
            ;
            var d = [n.clone()].concat(o.splice(u + 1));
            return o.push(n.clone()), [new OL.Geometry.LineString(o), new OL.Geometry.LineString(d)]
        },
        r.getPointEdge = function(e, t) {
            for (var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n = Number.POSITIVE_INFINITY, s = 0, r = 0; r < e.length - 1; r++) {
                var a = OpenLayers.Geometry.distanceToSegment(t, {
                    x1: e[r].x,
                    y1: e[r].y,
                    x2: e[r + 1].x,
                    y2: e[r + 1].y
                }).distance;
                if (a <= i)
                    return r;
                a < n && (n = a,
                    s = r)
            }
            return s
        },
        r.toGeoJSON = function(e) {
            return OL.Format.GeoJSON.prototype.extract.geometry.apply(OL.Format.GeoJSON.prototype, [e])
        },
        r.parse = function(e) {
            var t = OL.Format.GeoJSON.prototype.parseGeometry(e);
            return r.project(t),
                t
        },
        r.project = function(e) {
            return e.transform(W.Config.map.projection.remote, W.Config.map.projection.local),
                e
        },
        r.unproject = function(e) {
            return e.transform(W.Config.map.projection.local, W.Config.map.projection.remote),
                e
        },
        r.geometryToGeoJSON = function(e) {
            return OpenLayers.Format.GeoJSON.prototype.extract.geometry.apply(OpenLayers.Format.GeoJSON.prototype, [e])
        },
        r.pointToSquarePolygon = function(e, t) {
            var i = r.unproject(e.clone()),
                n = OL.Util.destinationVincenty({
                    lon: i.x,
                    lat: i.y
                }, 45, Math.sqrt(2 * Math.pow(t / 2, 2))),
                s = i.x - n.lon,
                a = i.y - n.lat,
                o = new OL.Geometry.LinearRing([new OL.Geometry.Point(i.x - s, i.y - a), new OL.Geometry.Point(i.x + s, i.y - a), new OL.Geometry.Point(i.x + s, i.y + a), new OL.Geometry.Point(i.x - s, i.y + a)]),
                l = new OL.Geometry.Polygon([o]);
            return r.project(l)
        },
        r.polygonToPoint = function(e) {
            var t = e.getBounds().getCenterLonLat();
            return new OL.Geometry.Point(t.lon, t.lat)
        },
        r.getBoundsWithRatio = function(e, t) {
            if (null === e)
                return null;
            var i = e.getCenterLonLat(),
                n = e.getWidth() * t,
                s = e.getHeight() * t;
            return new OpenLayers.Bounds(i.lon - n / 2, i.lat - s / 2, i.lon + n / 2, i.lat + s / 2)
        },
        r.radToDeg = function(e) {
            return e / Math.PI * 180
        },
        r.degToRad = function(e) {
            return e * Math.PI / 180
        },
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.ARCHIVE_SESSION = "archive",
        t.ARCHIVE_SESSION_DATA = "archiveSession",
        t.BIG_JUNCTION = "bigJunction",
        t.CITY = "city",
        t.COUNTRY = "country",
        t.HOUSE_NUMBER = "houseNumber",
        t.JUNCTION = "junction",
        t.JUNCTION_NC = "junctionConnection",
        t.MAP_PROBLEM = "mapProblem",
        t.MERGED_NODE = "mergedNode",
        t.MTE = "majorTrafficEvent",
        t.NC = "nodeConnection",
        t.NODE = "node",
        t.PROBLEM_DETAILS = "problemDetail",
        t.RESTRICTED_AREA = "restrictedArea",
        t.RESTRICTION = "restriction",
        t.ROAD_CLOSURE = "roadClosure",
        t.SEGMENT = "segment",
        t.SPEED_CAMERA = "camera",
        t.STATE = "state",
        t.STREET = "street",
        t.TURN_PROBLEM = "turnProblem",
        t.UPDATE_REQUEST = "mapUpdateRequest",
        t.UPDATE_REQUEST_SESSION = "updateRequestSession",
        t.USER = "user",
        t.USER_AREA = "userArea",
        t.VENUE = "venue",
        t.VENUE_UPDATE_REQUEST = "venueUpdateRequest"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(18),
        v = n(m),
        y = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i.subActions = [],
                    i
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "destroy",
                    value: function() {
                        for (var e = 0, i = this.subActions.length; e < i; e++)
                            this.subActions[e].destroy();
                        (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "destroy", this).call(this)
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "doSubAction",
                    value: function(e) {
                        e.setModel(this.model);
                        var t = e.doAction();
                        return !1 !== t ? this.subActions.push(e) : e.destroy(),
                            t
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        for (var e = !1, t = void 0, i = 0, n = this.subActions.length; i < n; i++)
                            t = !1 !== this.subActions[i].doAction(),
                            e = e || t
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        for (var e = this.subActions.length - 1; e >= 0; e--)
                            this.subActions[e].undoAction()
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        for (var e = 0, t = this.subActions.length; e < t; e++)
                            this.subActions[e].redoAction()
                    }
                }, {
                    key: "accept",
                    value: function(e) {
                        var t = e.beforeEnter(this);
                        e.visit(this), !1 !== t && this.subActions.forEach(function(t) {
                                t.accept(e)
                            }),
                            e.afterLeave(this)
                    }
                }, {
                    key: "flat",
                    value: function() {
                        var e = _.flatten(this.subActions.map(function(e) {
                            return e.flat()
                        }));
                        return e.push(this),
                            e
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        var e = void 0,
                            t = void 0,
                            i = void 0,
                            n = void 0;
                        if (_.isEmpty(this.subActions))
                            return null;
                        for (n = this.subActions[0].getBounds(),
                            e = n ? n.clone() : new OpenLayers.Bounds,
                            t = 1; t < this.subActions.length; t++)
                            i = this.subActions[t],
                            (n = i.getBounds()) && n.getWidth() > 0 && n.getHeight() > 0 && e.extend(n);
                        return e
                    }
                }, {
                    key: "serialize",
                    value: function(e, t) {
                        return null
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return _.flatten(this.subActions.map(function(e) {
                            return e.getAffectedUniqueIds()
                        }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return []
                    }
                }]),
                t
        }(v.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.__esModule = !0;
    var s = i(434),
        r = n(s),
        a = i(21),
        o = n(a);
    t.default = function() {
        function e(e, t) {
            var i = [],
                n = !0,
                s = !1,
                r = void 0;
            try {
                for (var a, l = (0,
                        o.default)(e); !(n = (a = l.next()).done) && (i.push(a.value), !t || i.length !== t); n = !0)
                ;
            } catch (e) {
                s = !0,
                    r = e
            } finally {
                try {
                    !n && l.return && l.return()
                } finally {
                    if (s)
                        throw r
                }
            }
            return i
        }
        return function(t, i) {
            if (Array.isArray(t))
                return t;
            if ((0,
                    r.default)(Object(t)))
                return e(t, i);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }()
}, , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(22),
        c = n(d),
        h = i(156),
        f = n(h),
        p = function() {
            function e(t, i) {
                (0,
                    o.default)(this, e),
                this.id = null,
                    this.state = null,
                    this.persistent = !1,
                    i && i.parse && t && this.parse(t),
                    (0,
                        r.default)(this, t)
            }
            return (0,
                    u.default)(e, [{
                    key: "getID",
                    value: function() {
                        return this.id || this.ID
                    }
                }, {
                    key: "getUniqueID",
                    value: function() {
                        return this.type + ":" + this.getID()
                    }
                }, {
                    key: "setID",
                    value: function(e) {
                        this.id = e
                    }
                }, {
                    key: "changeID",
                    value: function(e) {
                        this._prevID = this.getID(),
                            this.setID(e)
                    }
                }, {
                    key: "isNew",
                    value: function() {
                        var e = this.getID();
                        return e < 0 || null === e || _.isUndefined(e)
                    }
                }, {
                    key: "isDeleted",
                    value: function() {
                        return Boolean(this.state && this.state === OpenLayers.State.DELETE)
                    }
                }, {
                    key: "isUpdated",
                    value: function() {
                        return this.state === OpenLayers.State.UPDATE
                    }
                }, {
                    key: "isUnchanged",
                    value: function() {
                        return !this.state
                    }
                }, {
                    key: "getVersion",
                    value: function() {
                        return this.version || 1
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new e(this)
                    }
                }, {
                    key: "setSelected",
                    value: function(e) {
                        this.selected = e
                    }
                }, {
                    key: "isSelected",
                    value: function() {
                        return Boolean(this.selected)
                    }
                }, {
                    key: "setSnapped",
                    value: function(e) {
                        this.snapped = e
                    }
                }, {
                    key: "isSnapped",
                    value: function() {
                        return Boolean(this.snapped)
                    }
                }, {
                    key: "setPersistent",
                    value: function(e) {
                        this.persistent = e
                    }
                }, {
                    key: "isPersistent",
                    value: function() {
                        return this.persistent
                    }
                }, {
                    key: "getPermissions",
                    value: function() {
                        return c.default.isDefined(this.permissions) ? this.permissions : 0
                    }
                }, {
                    key: "isAllowed",
                    value: function(e) {
                        return e && 0 != (this.getPermissions() & e)
                    }
                }, {
                    key: "isInUse",
                    value: function(e) {
                        e = e || {};
                        var t = c.default.isDefined(this.state) && null !== this.state,
                            i = e.keepUnsaved && t,
                            n = e.keepSelected && (this.isSelected() || this.isSnapped()),
                            s = e.keepPersistent && this.isPersistent();
                        return i || n || s
                    }
                }, {
                    key: "isDeletable",
                    value: function() {
                        return this.PERMISSIONS.DELETE && this.isAllowed(this.PERMISSIONS.DELETE)
                    }
                }, {
                    key: "arePropertiesEditable",
                    value: function() {
                        return this.PERMISSIONS.EDIT_PROPERTIES && this.isAllowed(this.PERMISSIONS.EDIT_PROPERTIES)
                    }
                }, {
                    key: "isGeometryEditable",
                    value: function() {
                        return this.PERMISSIONS.EDIT_GEOMETRY && this.isAllowed(this.PERMISSIONS.EDIT_GEOMETRY)
                    }
                }, {
                    key: "merge",
                    value: function(e) {
                        this.parse(e),
                            _.extend(this, e),
                            this.originalValues && (this.originalValues = void 0)
                    }
                }, {
                    key: "getOriginalValue",
                    value: function(e) {
                        return this.originalValues && !_.isUndefined(this.originalValues[e]) ? this.originalValues[e] : this[e]
                    }
                }, {
                    key: "getAttributes",
                    value: function() {
                        return this
                    }
                }]),
                e
        }();
    (0,
        r.default)(p.prototype, {
        CLASS_NAME: "Waze.Model.Object"
    }),
    _.extend(p.prototype, f.default),
        p.ALL_PERMISSIONS = 2147483647,
        t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function s(e) {
        return (e.temporary ? I18n.t("user.temporary") : e.userName) + "(" + (e.isStaffUser() ? "staff" : e.normalizedLevel) + ")"
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(13),
        a = n(r),
        o = i(70),
        l = n(o),
        u = i(71),
        d = n(u),
        c = i(59),
        h = n(c),
        f = {},
        p = 0;
    f.isBlank = function(e) {
            return null == e || (_.isString(e) ? /^\s*$/.test(e) : _.isFunction(e.isEmpty) ? e.isEmpty() : !(!_.isArray(e) && !_.isObject(e)) && _.isEmpty(e))
        },
        f.getTimeFromSeconds = function(e) {
            if (null == e || isNaN(e))
                return null;
            e = Math.abs(Math.round(e));
            var t = Math.floor(e / 60),
                i = {};
            return i.seconds = e,
                i.hours = Math.floor(t / 60),
                i.minutes = Math.floor(t % 60),
                i.days = Math.floor(i.hours / 24),
                1 === i.days ? this.safe_t("common.time.day", {
                    day: i.days
                }) : i.days > 1 ? this.safe_t("common.time.days", {
                    days: i.days
                }) : i.hours > 0 ? 0 === i.minutes ? this.safe_t("common.time.hours", {
                    hours: i.hours
                }) : this.safe_t("common.time.hours_minutes", {
                    hours: i.hours,
                    minutes: i.minutes
                }) : i.minutes > 0 ? this.safe_t("common.time.minutes", {
                    minutes: i.minutes
                }) : this.safe_t("common.time.seconds", {
                    seconds: i.seconds
                })
        },
        f.safe_t = function(e, t) {
            var i = {},
                n = void 0;
            return t && (0,
                    l.default)(t).forEach(function(e) {
                    var t = (0,
                            a.default)(e, 2),
                        n = t[0];
                    t[1];
                    i[n] = "%{" + n + "}"
                }),
                n = f.escape(I18n.t(e, i)),
                t && (0,
                    l.default)(t).forEach(function(e) {
                    var t = (0,
                            a.default)(e, 2),
                        i = t[0],
                        s = t[1];
                    s.htmlSafe || (s = f.escape(s)),
                        n = n.replace(new RegExp("%\\{" + i + "\\}"), s)
                }),
                n
        },
        f.safeString = function(e) {
            var t = new String(e);
            return t.htmlSafe = !0,
                t
        },
        f.contentTag = function(e, t) {
            return t = f.escape(t),
                this.safeString("<" + e + ">" + t + "</" + e + ">")
        },
        f.copyShortcut = function() {
            return $.browser.mac ? "⌘+C" : "Ctrl+C"
        },
        f.link = function(e, t, i) {
            e = f.escape(e);
            var n = "";
            return i = i || {},
                (0,
                    l.default)(i).forEach(function(e) {
                    var t = (0,
                            a.default)(e, 2),
                        i = t[0],
                        s = t[1];
                    n += " " + f.escape(i) + '="' + f.escape(s) + '"'
                }),
                n += ' href="' + window.encodeURI(t) + '"',
                this.safeString("<a" + n + ">" + e + "</a>")
        },
        f._formInput = function(e, t, i, n, s, r, a, o, l, u) {
            t = f.escape(t),
                i = f.escape(i),
                e = f.escape(e);
            var d = i + "-" + n + "-" + p++,
                c = "<input type='" + e + "' name='" + i + "' value='" + n + "' id='" + d + "'";
            return (String(n) === String(s) || u) && (c += " checked "), !1 === r && (c += " disabled "),
                a && (c += " data-type='" + a + "'"),
                l && (c += " data-nullable='true'"),
                c += "/><label for='" + d + "' class='" + (o || "") + "'>" + t + "</label>"
        },
        f.radio = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = e.label,
                i = void 0 === t ? "" : t,
                n = e.name,
                s = void 0 === n ? "" : n,
                r = e.dataType,
                a = void 0 === r ? "string" : r,
                o = e.value,
                l = void 0 === o ? "" : o,
                u = e.currentValue,
                d = void 0 === u ? null : u,
                c = e.enable,
                h = void 0 === c || c,
                p = e.className,
                g = void 0 === p ? "" : p,
                m = e.nullable,
                v = void 0 !== m && m,
                _ = e.forceChecked,
                y = void 0 !== _ && _;
            if (i)
                return f._formInput("radio", i, s, l, d, h, a, g, v, y)
        },
        f.checkbox = function(e, t, i, n, s) {
            return f._formInput("checkbox", e, t, i, n, s)
        },
        f.option = function(e, t, i, n, s) {
            var r = "<option value='" + f.escape(t) + "'";
            return i instanceof Array || t !== i && (n || parseInt(t, 10) !== parseInt(i, 10)) || (r += " selected"),
                s && (r += " disabled"),
                r += ">" + f.escape(e) + "</option>"
        },
        f.categoryOption = function(e, t) {
            return f.option(I18n.t("venues.categories." + t), t, e[t] ? t : null, !0)
        },
        f.directionRadio = function(e) {
            return -1 === e ? f.radio({
                label: I18n.t("edit.multiple_values"),
                name: "direction",
                dataType: "numeric",
                value: e,
                nullable: !0
            }) : f.radio({
                label: I18n.t("segment.direction." + e),
                name: "direction",
                dataType: "numeric",
                value: e
            })
        },
        f.formatDate = function(e) {
            return e ? new Date(e).toDateString() : ""
        },
        f.durationString = function(e, t) {
            var i = (t - e) / 1e3;
            return this.getTimeFromSeconds(i)
        },
        f.timeDistanceInWords = function(e, t) {
            null == t && (t = new Date),
                e = new Date(e),
                t = new Date(t);
            var i = Math.round(Math.abs((t - e) / 60 / 1e3));
            if (i >= 0 && i <= 1)
                return 0 === i ? I18n.t("datetime.distance_in_words.less_than_x_minutes", {
                    count: 1
                }) : I18n.t("datetime.distance_in_words.x_minutes", {
                    count: i
                });
            if (i >= 2 && i <= 44)
                return I18n.t("datetime.distance_in_words.x_minutes", {
                    count: i
                });
            if (i >= 45 && i <= 89)
                return I18n.t("datetime.distance_in_words.about_x_hours", {
                    count: 1
                });
            if (i >= 90 && i <= 1439)
                return I18n.t("datetime.distance_in_words.about_x_hours", {
                    count: Math.round(i / 60)
                });
            if (i >= 1440 && i <= 2519)
                return I18n.t("datetime.distance_in_words.x_days", {
                    count: 1
                });
            if (i >= 2520 && i <= 43199)
                return I18n.t("datetime.distance_in_words.x_days", {
                    count: Math.round(i / 1440)
                });
            if (i >= 43200 && i <= 86399)
                return I18n.t("datetime.distance_in_words.about_x_months", {
                    count: 1
                });
            if (i >= 86400 && i <= 525599)
                return I18n.t("datetime.distance_in_words.x_months", {
                    count: Math.round(i / 43200)
                });
            var n = e.getFullYear(),
                s = t.getFullYear(),
                r = i % 525600,
                a = Math.floor(i / 525600);
            return e.getMonth() + 1 >= 3 && n++,
                t.getMonth() + 1 < 3 && s--,
                r < 131400 ? I18n.t("datetime.distance_in_words.about_x_years", {
                    count: a
                }) : r < 394200 ? I18n.t("datetime.distance_in_words.over_x_years", {
                    count: a
                }) : I18n.t("datetime.distance_in_words.almost_x_years", {
                    count: a + 1
                })
        },
        f.dateOnlyString = function(e) {
            return e ? I18n.l("date.formats.long", e) : ""
        },
        f.dateString = function(e) {
            function t(e, i) {
                return e.toString().length < i ? t("0" + e, i) : e
            }
            var i = new Date(e),
                n = void 0;
            return e ? (n = f.dateOnlyString.apply(this, arguments),
                n += ", " + t(i.getHours(), 2) + ":" + t(i.getMinutes(), 2)) : ""
        },
        f.lengthString = function(e, t) {
            t = _.defaults(t || {}, {
                units: c.UNIT.METER,
                translationKey: "measurements.length"
            });
            var i = c.UNIT.KILOMETER,
                n = h.default.getLocalizedDisplayValue(e, t.units, i);
            n < 1 && (i = c.UNIT.METER,
                    n = h.default.getLocalizedDisplayValue(e, t.units, i)),
                n = n.toFixed(2) / 1;
            var s = h.default.localizeUnit(i);
            return I18n.t(t.translationKey + "." + s, {
                count: n
            })
        },
        f.speedString = function(e) {
            var t = h.default.localizeUnit(c.UNIT.KILOMETER),
                i = "";
            return _.isUndefined(e) || (i = h.default.getLocalizedValue(e, c.UNIT.KILOMETER),
                    i = i.toFixed(2)),
                I18n.t("measurements.speed." + t, {
                    speed: i
                })
        },
        f.areaString = function(e) {
            var t = Math.sqrt(e),
                i = h.default.getLocalizedDisplayValue(t, c.UNIT.METER, c.UNIT.KILOMETER),
                n = h.default.localizeUnit(c.UNIT.KILOMETER);
            return i = (i * i).toFixed(2),
                I18n.t("measurements.area." + n + "_squared", {
                    area: i
                })
        },
        f.userProfileLink = function(e) {
            return !e || e.temporary ? null : W.Config.user_profile.url + window.encodeURIComponent(e.userName)
        },
        f.formatUserName = function(e, t) {
            null == t && (t = W.model);
            var i = t.users.get(e);
            return i ? s(i) : "" + e
        },
        f.userProfile = function(e, t) {
            null == t && (t = W.model);
            var i = t.users.get(e),
                n = this.userProfileLink(i),
                s = this.formatUserName(e, t);
            return null !== n && W.Config.user_profile.enable ? this.link(s, n, {
                target: "_blank"
            }) : f.escape(s)
        },
        f.formatRank = function(e) {
            return e === d.default.prototype.StaffRank ? I18n.t("edit.segment.lock_levels.staff") : d.default.normalizeLevel(e)
        },
        f.venueRankOption = function(e, t, i) {
            var n = f.formatRank(t);
            return f.radio({
                label: n,
                name: "lockRank",
                dataType: "numeric",
                value: t,
                currentValue: i,
                className: "",
                nullable: !0
            })
        },
        f.getDisplayUnitValue = function(e, t, i) {
            return null == (e = h.default.getLocalizedValue(e, t)) ? e : (i && (e = Math.round(e)),
                e)
        },
        f.shortcutMaskToKeys = function(e) {
            var t = "",
                i = void 0;
            return ["alt", "ctrl", "shift"].forEach(function(n) {
                    i = n + "Key",
                        e[i] && (t += "<kbd class='" + f.escape(i) + "'><span>" + f.escape(i) + "</span></kbd> + ")
                }),
                t
        },
        f.getShortcutKey = function(e) {
            var t = W.accelerators.SpecialKeys[e.keyCode];
            return t || (t = String.fromCharCode(e.keyCode)),
                t
        },
        f.formatDays = function(e) {
            return f._groupDays(e).map(function(e) {
                return e.length > 1 ? I18n.t("date.abbr_day_names")[e[0]] + "-" + I18n.t("date.abbr_day_names")[_.last(e)] : I18n.t("date.abbr_day_names")[e[0]]
            }).join(",")
        },
        f.formatMonthRange = function(e, t) {
            if (!e && !t)
                return "";
            if (t < e)
                return "";
            if (e && !t)
                return I18n.strftime(e, I18n.t("formats.date.month_range.end_missing"));
            if (t && !e)
                return I18n.strftime(t, I18n.t("formats.date.month_range.start_missing"));
            var i = e.getFullYear() === t.getFullYear(),
                n = i && e.getMonth() === t.getMonth(),
                s = I18n.strftime(e, "%b"),
                r = I18n.strftime(e, "%Y"),
                a = I18n.strftime(t, "%b"),
                o = I18n.strftime(t, "%Y"),
                l = void 0;
            return l = i ? n ? "formats.date.month_range.single_year_single_month" : "formats.date.month_range.single_year_multi_month" : "formats.date.month_range.multi_year",
                I18n.t(l, {
                    startMonth: s,
                    startYear: r,
                    endMonth: a,
                    endYear: o
                })
        },
        f.formatOpeningHour = function(e) {
            var t = f.formatDays(e.get("days"));
            return e.isAllDay() ? t += " " + I18n.t("edit.landmark.opening_hours.time_span.all_day") : t += " " + e.get("fromHour") + "-" + e.get("toHour"),
                t
        },
        f._groupDays = function(e) {
            var t = [],
                i = [],
                n = e.sort(),
                s = void 0;
            return "monday" === I18n.t("date.first_day") && 0 === n[0] && (n.shift(),
                    n.push(0)),
                s = n[0],
                n.forEach(function(e, r) {
                    Math.abs(e - s) % 6 <= 1 ? i.push(e) : (t.push(i),
                            i = [e]),
                        r === n.length - 1 && t.push(i),
                        s = e
                }),
                t
        },
        f.formatAddress = function(e) {
            return null == e ? I18n.t("edit.landmark.no_address") : e.format()
        },
        f.formatVenueCategories = function(e) {
            return e = e.map(function(e) {
                    return I18n.t("venues.categories." + e)
                }),
                e.sort().join(", ")
        },
        f.formatVenueName = function(e) {
            return e || I18n.t("edit.landmark.unnamed")
        },
        f.formatVenueUpdateRequestId = function(e) {
            var t = String(e),
                i = t.split("/");
            return i[i.length - 1]
        },
        f.getSaveErrorTitle = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "save.error_types.default.title",
                i = I18n.t("save.error_types"),
                n = i[e];
            return n && n.title || I18n.t(t)
        },
        f.formatYesNo = function(e) {
            return !0 === e ? I18n.t("formats.boolean.is_true") : I18n.t("formats.boolean.is_false")
        },
        f.escape = function(e) {
            return ("" + e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/\//g, "&#47;")
        },
        f.cleanValue = function(e) {
            switch (e) {
                case null:
                case void 0:
                    return "";
                case !0:
                case !1:
                    return "" + e;
                default:
                    return e
            }
        },
        f.categoryToClassName = function(e) {
            return "string" == typeof e ? e.toLowerCase().replace(/[^a-z0-9]+/g, "-") : ""
        },
        t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(148),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function(e, t, i) {
        return t in e ? (0,
                s.default)(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i,
            e
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(22),
        c = n(d),
        h = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this.model = null,
                    this._timestamp = (new Date).getTime(),
                    this._description = "",
                    (0,
                        r.default)(this, t)
            }
            return (0,
                    u.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this.model = null
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "accept",
                    value: function(e) {
                        e.visit(this)
                    }
                }, {
                    key: "setModel",
                    value: function(e) {
                        this.model = e
                    }
                }, {
                    key: "undoSupported",
                    value: function() {
                        return c.default.isDefined(this.undoAction)
                    }
                }, {
                    key: "doAction",
                    value: function() {}
                }, {
                    key: "redoAction",
                    value: function() {}
                }, {
                    key: "undoAction",
                    value: function() {}
                }, {
                    key: "flat",
                    value: function() {
                        return this
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        return null
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return []
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return []
                    }
                }, {
                    key: "getTimestamp",
                    value: function() {
                        return this._timestamp
                    }
                }, {
                    key: "generateDescription",
                    value: function() {}
                }, {
                    key: "getDescription",
                    value: function() {
                        return this._description
                    }
                }]),
                e
        }();
    (0,
        r.default)(h.prototype, {
        CLASS_NAME: "Waze.Action"
    }),
    h.TYPE = {
            ADD: "ADD",
            DELETE: "DELETE",
            UPDATE: "UPDATE",
            REPLACE: "REPLACE",
            MERGE: "MERGE"
        },
        t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(470),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(18),
        b = n(y),
        w = i(113),
        E = function(e) {
            function t(e, i, n) {
                (0,
                    c.default)(this, t);
                var s = (0,
                    g.default)(this, (t.__proto__ || (0,
                    u.default)(t)).call(this, n));
                return s.object = e,
                    s.newAttributes = i,
                    s.oldAttributes = {},
                    s.object.writableAttributes ? s.newAttributes = _.pick(s.newAttributes, s.object.writableAttributes) : s.newAttributes = _.clone(s.newAttributes),
                    s.changed = !1,
                    s.stateChanged = !1,
                    s.object.attributes ? s.attributes = s.object.attributes : s.attributes = s.object,
                    s
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this.repository = this.model.getRepository(this.object.type);
                        var e = !0,
                            t = !1,
                            i = void 0;
                        try {
                            for (var n, s = (0,
                                    o.default)((0,
                                    r.default)(this.newAttributes)); !(e = (n = s.next()).done); e = !0) {
                                var a = n.value,
                                    l = this.newAttributes[a];
                                this.attributes[a] !== l && (this._keepOriginal(a),
                                    this.oldAttributes[a] = this.attributes[a],
                                    this.attributes[a] = l,
                                    this.changed = !0)
                            }
                        } catch (e) {
                            t = !0,
                                i = e
                        } finally {
                            try {
                                !e && s.return && s.return()
                            } finally {
                                if (t)
                                    throw i
                            }
                        }
                        return !!this.changed && (this.object.state || (this.object.state = OL.State.UPDATE,
                                this.stateChanged = !0),
                            this.repository.changed(this.object), !0)
                    }
                }, {
                    key: "_keepOriginal",
                    value: function(e) {
                        this.object.keepOriginal && this.object.keepOriginal[e] && (this.object.originalValues || (this.object.originalValues = {}),
                            _.isUndefined(this.object.originalValues[e]) && (this.object.originalValues[e] = this.attributes[e]))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        var e = !0,
                            t = !1,
                            i = void 0;
                        try {
                            for (var n, s = (0,
                                    o.default)((0,
                                    r.default)(this.oldAttributes)); !(e = (n = s.next()).done); e = !0) {
                                var a = n.value,
                                    l = this.oldAttributes[a];
                                this.attributes[a] = l
                            }
                        } catch (e) {
                            t = !0,
                                i = e
                        } finally {
                            try {
                                !e && s.return && s.return()
                            } finally {
                                if (t)
                                    throw i
                            }
                        }
                        return this.stateChanged && (this.object.state = null),
                            this.repository.changed(this.object)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.stateChanged && (this.object.state = OL.State.UPDATE);
                        var e = !0,
                            t = !1,
                            i = void 0;
                        try {
                            for (var n, s = (0,
                                    o.default)((0,
                                    r.default)(this.newAttributes)); !(e = (n = s.next()).done); e = !0) {
                                var a = n.value,
                                    l = this.newAttributes[a];
                                this.attributes[a] = l
                            }
                        } catch (e) {
                            t = !0,
                                i = e
                        } finally {
                            try {
                                !e && s.return && s.return()
                            } finally {
                                if (t)
                                    throw i
                            }
                        }
                        return this.repository.changed(this.object)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this.newAttributes;
                        return e.id = this.object.getID(), {
                            _objectType: this.object.type,
                            action: b.default.TYPE.UPDATE,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.object.getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.object]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            w.generateUpdateActionDescription)(this)
                    }
                }]),
                t
        }(b.default);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(444),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(70),
        r = n(s),
        a = i(19),
        o = n(a),
        l = i(58),
        u = n(l),
        d = i(111),
        c = n(d),
        h = i(25),
        f = {};
    f.isUndefined = function(e) {
            return _.isUndefined(e)
        },
        f.isDefined = function(e) {
            return !_.isUndefined(e)
        },
        f.defined = function(e) {
            return void 0 !== e && null !== e
        },
        f.localStorage = {
            get: function(e) {
                try {
                    var t = window.localStorage.getItem(e);
                    return t ? JSON.parse(t) : null
                } catch (e) {
                    return null
                }
            },
            set: function(e, t) {
                try {
                    return t = (0,
                            c.default)(t),
                        window.localStorage.setItem(e, t), !0
                } catch (e) {
                    return !1
                }
            }
        },
        f.protect = function(e, t, i) {
            try {
                return t.call(i)
            } catch (t) {
                throw (0,
                        h.httpPost)(W.Config.paths.logger, {
                        action: e,
                        type: t.name,
                        message: t.message,
                        trace: t.stack
                    }),
                    t
            }
        },
        f.deepClone = function(e) {
            if ("object" === (void 0 === e ? "undefined" : (0,
                    u.default)(e)) && null !== e) {
                if (Array.isArray(e))
                    return e.map(function(e) {
                        return f.deepClone(e)
                    });
                if ("function" == typeof e.clone)
                    return e.clone();
                if ("function" == typeof e.__clone)
                    return e.__clone();
                var t = {};
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = f.deepClone(e[i]));
                return t
            }
            return e
        },
        f.runLater = function(e) {
            o.default.resolve().then(e)
        },
        f.printMap = function(e) {
            return "{" + (0,
                r.default)(e).map(function(e) {
                return e[0] + ": " + e[1]
            }).join(",") + "}"
        },
        t.default = f,
        e.exports = t.default
}, , , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function s(e) {
        if (204 === e.status)
            return !1;
        var t = e.headers.get("content-type");
        return t && P.test(t)
    }

    function r(e, t, i, n, s) {
        var r = void 0;
        return null != t && ("GET" !== n && "HEAD" !== n ? "json" === i ? (r = (0,
                O.default)(t),
            s.append("Content-Type", "application/json; charset=utf-8")) : r = new URLSearchParams(t) : (e = new URL(e, location.origin),
            (0,
                D.default)(t).forEach(function(i) {
                return e.searchParams.append(i, t[i] || "")
            }))), {
            url: e,
            body: r
        }
    }

    function a(e, t) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            n = i.method,
            a = void 0 === n ? "GET" : n,
            o = i.dataType,
            l = void 0 === o ? "form" : o,
            u = i.signal,
            d = void 0 === u ? null : u,
            c = new Headers,
            h = r(e, t, l, a, c),
            f = h.url,
            p = h.body,
            g = new Request(f, {
                body: p,
                method: a,
                headers: c,
                credentials: "same-origin"
            });
        return L.forEach(function(e) {
                e.call(void 0, g)
            }),
            fetch(g, {
                signal: d
            }).then(function(e) {
                var t = void 0;
                return t = s(e) ? e.json().then(function(t) {
                        return e.parsedJSON = t,
                            e
                    }).catch(function() {
                        return e.parsedJSON = {},
                            e
                    }) : e.text().then(function(t) {
                        return e.bodyText = t,
                            e
                    }).catch(function() {
                        e.bodyText = ""
                    }),
                    x.forEach(function(i) {
                        t = t.then(function() {
                            return i.call(void 0, e)
                        })
                    }),
                    e.ok ? t.then(function() {
                        return e
                    }) : t.then(function() {
                        throw new N(e)
                    })
            }).then(function(e) {
                return s(e) ? e.parsedJSON : e.bodyText
            })
    }

    function o(e) {
        L.push(e)
    }

    function l(e) {
        x.push(e)
    }

    function u(e, t, i) {
        return a(e, t, (0,
            b.default)({
            method: "GET"
        }, i))
    }

    function d(e, t, i) {
        return a(e, t, (0,
            b.default)({
            method: "POST"
        }, i))
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.FetchError = t.addHttpResponseMiddleware = t.addHttpRequestMiddleware = t.httpRequest = t.httpPost = t.httpGet = void 0;
    var c = i(110),
        h = n(c),
        f = i(109),
        p = n(f),
        g = i(72),
        m = n(g),
        v = i(155),
        _ = n(v),
        y = i(6),
        b = n(y),
        w = i(2),
        E = n(w),
        k = i(0),
        M = n(k),
        S = i(3),
        T = n(S),
        C = i(4),
        I = n(C),
        A = i(7),
        D = n(A),
        R = i(111),
        O = n(R),
        L = [],
        x = [],
        P = /(application|text)\/(x-)?json/,
        N = function(e) {
            function t(e) {
                (0,
                    M.default)(this, t);
                var i = s(e) ? (0,
                        O.default)(e.parsedJSON) : e.statusText,
                    n = (0,
                        T.default)(this, (t.__proto__ || (0,
                        E.default)(t)).call(this, "Server Response Error: " + i));
                return Error.captureStackTrace && Error.captureStackTrace(n, t),
                    n.response = s(e) ? e.parsedJSON : e.statusText,
                    n.status = e.status,
                    n
            }
            return (0,
                    I.default)(t, e),
                t
        }(function(e) {
            function t() {
                var t = (0,
                    _.default)(e, (0,
                    m.default)(arguments));
                return (0,
                        p.default)(t, (0,
                        E.default)(this)),
                    t
            }
            return t.prototype = (0,
                    h.default)(e.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                p.default ? (0,
                    p.default)(t, e) : t.__proto__ = e,
                t
        }(Error));
    t.httpGet = u,
        t.httpPost = d,
        t.httpRequest = a,
        t.addHttpRequestMiddleware = o,
        t.addHttpResponseMiddleware = l,
        t.FetchError = N
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e(t, i) {
                (0,
                    o.default)(this, e),
                this.events = null,
                    this.className = t,
                    this.moveWithTransform = Boolean(i),
                    this.$div = $("<div />").addClass(t),
                    this.div = this.$div.get(0),
                    this.imageDiv = this.$div.get(0)
            }
            return (0,
                    u.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this.erase(),
                            this.$div = null
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new e(this.className)
                    }
                }, {
                    key: "draw",
                    value: function(e) {
                        return this.moveWithTransform ? (this.$div.css({
                                    transform: "translate(" + e.x + "px, " + e.y + "px)"
                                }),
                                this.$div.css({
                                    position: "absolute"
                                })) : this.$div.css({
                                position: "absolute",
                                left: e.x,
                                top: e.y
                            }),
                            this.$div.get(0)
                    }
                }, {
                    key: "moveTo",
                    value: function(e) {
                        null !== e && (this.px = e),
                            null === this.px ? this.display(!1) : this.moveWithTransform ? this.$div.css({
                                transform: "translate(" + this.px.x + "px, " + this.px.y + "px)"
                            }) : this.$div.css({
                                left: this.px.x,
                                top: this.px.y
                            })
                    }
                }, {
                    key: "erase",
                    value: function() {
                        this.$div.remove()
                    }
                }, {
                    key: "display",
                    value: function(e) {
                        this.$div.toggle(e)
                    }
                }, {
                    key: "isDrawn",
                    value: function() {
                        return Boolean(this.$div.parent().length)
                    }
                }, {
                    key: "bringToFront",
                    value: function() {
                        if (this.isDrawn()) {
                            var e = this.$div.parent();
                            this.$div.detach().appendTo(e)
                        }
                    }
                }, {
                    key: "forceReflow",
                    value: function() {
                        return this.$div.get(0).offsetWidth
                    }
                }]),
                e
        }();
    (0,
        r.default)(d.prototype, {
        CLASS_NAME: "Waze.DivIcon"
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.ADDED = "objectsadded",
        t.CHANGED = "objectschanged",
        t.CHANGED_ID = "objectschanged-id",
        t.REMOVED = "objectsremoved",
        t.SYNCED = "objectssynced",
        t.UPDATED = "objectsupdated"
}, , , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.FLAG_ATTRIBUTES = t.SEGMENT_DELETION_REJECTION = t.WALKING_ROAD_TYPES = t.HIGHWAY_ROAD_TYPES = t.ROAD_TYPES = void 0;
    var s = i(9),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(7),
        u = n(l),
        d = i(21),
        c = n(d),
        h = i(15),
        f = n(h),
        p = i(89),
        g = n(p),
        m = i(31),
        v = n(m),
        y = i(10),
        b = n(y),
        w = i(91),
        E = i(540),
        k = i(20),
        M = n(k),
        S = i(22),
        T = n(S),
        C = i(39),
        I = n(C),
        A = i(163),
        D = n(A),
        R = i(32),
        O = n(R),
        L = i(50),
        x = n(L),
        P = i(164),
        N = n(P),
        V = i(216),
        F = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(V),
        U = {
            NOT_REJECTED: 0,
            USER_RANK_TOO_LOW: 1,
            USER_QUOTA_EXCEEDED: 2,
            IN_BIG_JUNCTION: 3,
            HAS_CLOSURES: 4,
            OTHER_REASON: 5
        },
        j = {
            STREET: 1,
            PRIMARY_STREET: 2,
            FREEWAY: 3,
            RAMP: 4,
            WALKING_TRAIL: 5,
            MAJOR_HIGHWAY: 6,
            MINOR_HIGHWAY: 7,
            OFF_ROAD: 8,
            PEDESTRIAN_BOARDWALK: 10,
            FERRY: 15,
            STAIRWAY: 16,
            PRIVATE_ROAD: 17,
            RAILROAD: 18,
            RUNWAY_TAXIWAY: 19,
            PARKING_LOT_ROAD: 20,
            ALLEY: 22
        },
        B = [j.FREEWAY, j.RAMP, j.MAJOR_HIGHWAY, j.MINOR_HIGHWAY],
        G = [j.STREET, j.PRIMARY_STREET, j.MINOR_HIGHWAY, j.MAJOR_HIGHWAY, j.FREEWAY],
        z = [j.STREET, j.PRIMARY_STREET, j.WALKING_TRAIL, j.MAJOR_HIGHWAY, j.MINOR_HIGHWAY, j.OFF_ROAD, j.PEDESTRIAN_BOARDWALK, j.STAIRWAY, j.PRIVATE_ROAD, j.PARKING_LOT_ROAD, j.ALLEY],
        H = [j.WALKING_TRAIL, j.PEDESTRIAN_BOARDWALK, j.STAIRWAY],
        $ = [].concat(H, [j.RAILROAD, j.RUNWAY_TAXIWAY]),
        q = {
            tunnel: {
                mask: "flags",
                flag: E.FLAGS.TUNNEL
            },
            unpaved: {
                mask: "flags",
                flag: E.FLAGS.UNPAVED
            },
            headlights: {
                mask: "flags",
                flag: E.FLAGS.HEADLIGHTS
            },
            nearbyHOV: {
                mask: "flags",
                flag: E.FLAGS.NEARBY_HOV
            },
            fwdSpeedCamera: {
                mask: "fwdFlags",
                flag: E.FWD.SPEED_CAMERA
            },
            revSpeedCamera: {
                mask: "revFlags",
                flag: E.REV.SPEED_CAMERA
            }
        },
        Y = OL.Class(v.default, {
            defaults: function() {
                return {
                    type: 1,
                    roadType: 1,
                    fromNodeID: null,
                    toNodeID: null,
                    virtualNodeIDs: [],
                    crossroadID: null,
                    fwdDirection: !0,
                    revDirection: !1,
                    fwdMaxSpeed: null,
                    revMaxSpeed: null,
                    fwdToll: null,
                    revToll: null,
                    hasHNs: !1,
                    fwdMaxSpeedUnverified: !1,
                    revMaxSpeedUnverified: !1,
                    fwdTurnsLocked: !0,
                    revTurnsLocked: !0,
                    level: 0,
                    allowNoDirection: !0,
                    rank: 0,
                    lockRank: null,
                    permissions: f.default.ALL_PERMISSIONS & ~this.PERMISSIONS.EDIT_ROUTING_ROAD_TYPES,
                    routingRoadType: null,
                    flags: 0,
                    fwdFlags: 0,
                    revFlags: 0,
                    primaryStreetID: null,
                    fromCrossroads: [],
                    toCrossroads: [],
                    streetIDs: [],
                    restrictions: [],
                    pickupRestrictions: []
                }
            },
            nested: {
                geometry: OL.Geometry,
                restrictions: I.default,
                pickupRestrictions: D.default
            },
            FLAG_ATTRIBUTES: q,
            initialize: function(e) {
                v.default.prototype.initialize.apply(this, arguments)
            },
            getEndPoints: function() {
                return this.geometry.getVertices(!0)
            },
            getFlagAttributes: function() {
                var e = {},
                    t = !0,
                    i = !1,
                    n = void 0;
                try {
                    for (var s, r = (0,
                            c.default)((0,
                            u.default)(this.FLAG_ATTRIBUTES)); !(t = (s = r.next()).done); t = !0) {
                        var a = s.value;
                        e[a] = this.getFlagAttribute(a)
                    }
                } catch (e) {
                    i = !0,
                        n = e
                } finally {
                    try {
                        !t && r.return && r.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return e
            },
            getFlagAttribute: function(e) {
                var t = this.FLAG_ATTRIBUTES[e],
                    i = this.attributes[t.mask];
                return new g.default(i).isEnabled(t.flag)
            },
            merge: function() {
                return delete this.attributes.origIDs,
                    v.default.prototype.merge.apply(this, arguments)
            },
            copyAttributes: function(e) {
                var t = this.attributes,
                    i = t.geometry;
                (0,
                    o.default)(t, e.attributes);
                var n = !0,
                    s = !1,
                    r = void 0;
                try {
                    for (var a, l = (0,
                            c.default)((0,
                            u.default)(t)); !(n = (a = l.next()).done); n = !0) {
                        var d = a.value,
                            h = t[d];
                        h instanceof Array && (t[d] = h.slice(0))
                    }
                } catch (e) {
                    s = !0,
                        r = e
                } finally {
                    try {
                        !n && l.return && l.return()
                    } finally {
                        if (s)
                            throw r
                    }
                }
                delete t.origIDs,
                    t.geometry = i
            },
            setSelected: function(e) {
                v.default.prototype.setSelected.apply(this, arguments),
                    this.getAddress().setSelected(e)
            },
            getAddress: function() {
                return x.default.fromStreetID(this.attributes.primaryStreetID, this.model, {
                    altStreets: this.attributes.streetIDs
                })
            },
            getCenter: function() {
                for (var e = this.geometry.getLength(), t = e / 2, i = e, n = 1, s = this.geometry.components.length; n < s;) {
                    if ((i -= this.geometry.components[n - 1].distanceTo(this.geometry.components[n])) <= t)
                        break;
                    n++
                }
                var r = this.geometry.components[n - 1],
                    a = this.geometry.components[n],
                    o = Math.atan2(a.y - r.y, a.x - r.x),
                    l = t - i,
                    u = new OpenLayers.Geometry.Point(r.x, r.y);
                return u.x += l * Math.cos(o),
                    u.y += l * Math.sin(o),
                    u
            },
            getArrowPoints: function(e, t, i) {
                var n = [],
                    s = this.geometry.components,
                    r = 0,
                    a = 0;
                if (!T.default.defined(e))
                    return [];
                t && t < e && (r += e - t);
                for (var o = s[a]; a < s.length - 1;) {
                    var l = s[a + 1],
                        u = o.distanceTo(l);
                    if (i && a === s.length - 2 && (u -= i),
                        r + u < e)
                        r += u,
                        a++,
                        o = l;
                    else {
                        var d = Math.atan2(l.y - o.y, l.x - o.x),
                            c = e - r;
                        o = new OpenLayers.Geometry.Point(o.x, o.y),
                            o.move(c * Math.cos(d), c * Math.sin(d)),
                            n.push([o.clone(), d]),
                            r = 0
                    }
                }
                return n
            },
            getSubSegment: function(e, t) {
                var i = 0,
                    n = this.geometry.components,
                    s = [],
                    r = 0;
                t && (n = n.clone().reverse());
                var a = n[0];
                for (s.push(new OpenLayers.Geometry.Point(a.x, a.y)); i < e && r < n.length - 1;) {
                    var o = n[r + 1],
                        l = a.distanceTo(o);
                    if (i + l < e)
                        s.push(new OpenLayers.Geometry.Point(o.x, o.y)),
                        i += l,
                        a = o,
                        r++;
                    else {
                        var u = e - i,
                            d = Math.atan2(o.y - a.y, o.x - a.x);
                        a = new OpenLayers.Geometry.Point(a.x, a.y),
                            a.move(u * Math.cos(d), u * Math.sin(d)),
                            s.push(a),
                            i = e
                    }
                }
                return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(s))
            },
            clone: function() {
                var e = _.extend({}, this.attributes);
                this.attributes.geometry && (e.geometry = this.attributes.geometry.clone());
                var t = new Y(e);
                return this.attributes.streetIDs && (t.attributes.streetIDs = this.attributes.streetIDs.concat()),
                    t
            },
            splitByGeoms: function(e) {
                var t = this.clone(),
                    i = [];
                return delete t.geometry,
                    e.forEach(function(e) {
                        var n = t.clone();
                        n.geometry = e,
                            n.geometry.calculateBounds(),
                            n.state = OpenLayers.State.INSERT,
                            i.push(n)
                    }),
                    i
            },
            isOneWay: function() {
                return this.attributes.fwdDirection ? !this.attributes.revDirection : this.attributes.revDirection
            },
            isDeletable: function() {
                return this.deletionRejection() === U.NOT_REJECTED
            },
            deletionRejection: function() {
                if (this.isInBigJunction())
                    return U.IN_BIG_JUNCTION;
                if (this.hasClosures())
                    return U.HAS_CLOSURES;
                var e = W.loginManager.user;
                if (e) {
                    if (this.attributes.createdBy === e.id)
                        return U.NOT_REJECTED;
                    var t = e.canDeleteSegments();
                    if (t !== U.NOT_REJECTED)
                        return t
                }
                return this.isAllowed(w.Segments.DELETE) ? U.NOT_REJECTED : U.OTHER_REASON
            },
            reverseDirection: function() {
                this.isOneWay() && (this.attributes.fwdDirection = !this.attributes.fwdDirection,
                    this.attributes.revDirection = !this.attributes.revDirection)
            },
            isConnectedToNode: function(e) {
                return this.attributes.toNodeID === e.getID() || this.attributes.fromNodeID === e.getID()
            },
            isVirtuallyConnectedToNode: function(e) {
                return this.attributes.virtualNodeIDs.includes(e.getID())
            },
            isPoint: function() {
                var e = this.geometry.components[0];
                return this.geometry.components.every(function(t) {
                    return t.equals(e)
                })
            },
            edgeIntersectionWithEllipse: function(e, t, i, n, s) {
                var r = 1,
                    a = 1,
                    o = void 0;
                i > n ? (a = i / n,
                    o = i) : (r = n / i,
                    o = n);
                var l = (e[1].x - e[0].x) * r,
                    u = (e[1].y - e[0].y) * a,
                    d = (e[0].x - t.x) * r,
                    c = (e[0].y - t.y) * a,
                    h = (e[1].x - t.x) * r,
                    f = (e[1].y - t.y) * a,
                    p = Math.sqrt(d * d + c * c),
                    g = p < o,
                    m = [],
                    v = l * l + u * u,
                    y = 2 * (d * l + c * u),
                    b = d * d + c * c - o * o,
                    w = y * y - 4 * v * b;
                return !(w < 0) && (w = Math.sqrt(w), [(-y + w) / (2 * v), (-y - w) / (2 * v)].sort().forEach(function(i) {
                        if (i >= 0 && i <= 1) {
                            var n = new OpenLayers.Geometry.Point(e[0].x + i * l / r, e[0].y + i * u / a);
                            m.push({
                                    point: n,
                                    angle: (2 * Math.PI + Math.atan2((n.y - t.y) * a, (n.x - t.x) * r)) % (2 * Math.PI),
                                    goingOut: g,
                                    index: s
                                }),
                                g = !g
                        }
                    }),
                    _.isEmpty(m) ? p < o && Math.sqrt(h * h + f * f) < o : m)
            },
            intersectionWithEllipse: function(e, t, i) {
                for (var n = this.geometry.getVertices(), s = [], r = !0, a = n[0], o = 0; o < n.length - 1;) {
                    var l = n[o + 1],
                        u = this.edgeIntersectionWithEllipse([a, l], e, t, i, o);
                    if (u instanceof Array ? s = s.concat(u) : r &= u,
                        s.length > 2)
                        return !1;
                    a = l,
                        o++
                }
                return _.isEmpty(s) ? r : s
            },
            getEntireStreet: function() {
                var e = this.attributes.primaryStreetID,
                    t = this.model.streets.get(e);
                return !t || t.isEmpty ? [this] : _.values(this.model.segments.objects).filter(function(t) {
                    return t.attributes.primaryStreetID === e
                })
            },
            getConnectedSegments: function(e) {
                var t = this,
                    i = this.model.nodes.get(this.attributes[e + "NodeID"]);
                return i ? i.attributes.segIDs.map(function(e) {
                    return t.model.segments.get(e)
                }).filter(function(e) {
                    return Boolean(e)
                }) : []
            },
            getTurnsLockAttribute: function(e) {
                return e.getID() === this.attributes.toNodeID ? "fwdTurnsLocked" : "revTurnsLocked"
            },
            getNodeAttribute: function(e) {
                return this.attributes.fromNodeID === e.getID() ? "from" : this.attributes.toNodeID === e.getID() ? "to" : null
            },
            areTurnsLocked: function(e) {
                return e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked : this.attributes.revTurnsLocked
            },
            setTurnsLock: function(e, t) {
                e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked = t : this.attributes.revTurnsLocked = t
            },
            equals: function(e) {
                return e.getID() === this.getID() && e.type === this.type
            },
            isLockedByHigherRank: function() {
                return !(!this.attributes.lockRank || !this.model.loginManager.isLoggedIn()) && this.getLockRank() > this.model.loginManager.user.rank
            },
            getLockRank: function() {
                return null === this.attributes.lockRank ? this.attributes.rank : this.attributes.lockRank
            },
            hasNonEmptyStreet: function() {
                var e = this.getAddress();
                return null != e.getStreet() && !e.isEmptyStreet()
            },
            isHighway: function() {
                return B.includes(this.attributes.roadType)
            },
            isDrivable: function() {
                return !$.includes(this.attributes.roadType)
            },
            isWalkingRoadType: function() {
                return H.includes(this.attributes.roadType)
            },
            getVirtualNodes: function() {
                var e = this;
                return this.attributes.virtualNodeIDs.map(function(t) {
                    return e.model.nodes.get(t)
                }).filter(function(e) {
                    return null != e
                })
            },
            hasFromNode: function() {
                return null !== this.attributes.fromNodeID
            },
            getFromNode: function() {
                return this.hasFromNode() ? this.model.nodes.get(this.attributes.fromNodeID) : null
            },
            hasToNode: function() {
                return null !== this.attributes.toNodeID
            },
            getToNode: function() {
                return this.hasToNode() ? this.model.nodes.get(this.attributes.toNodeID) : null
            },
            getNodeByDirection: function(e) {
                return null != this.attributes[e + "NodeID"] ? this.model.nodes.get(this.attributes[e + "NodeID"]) : null
            },
            isToNode: function(e) {
                return !!this.hasToNode() && e.getID() === this.getToNode().getID()
            },
            isFromNode: function(e) {
                return !!this.hasFromNode() && e.getID() === this.getFromNode().getID()
            },
            isInBigJunction: function() {
                return this.isBigJunctionShort() || this.hasFromBigJunction() || this.hasToBigJunction()
            },
            isBigJunctionShort: function() {
                return null != this.attributes.crossroadID
            },
            getBigJunction: function() {
                return this.isBigJunctionShort() ? this.model.bigJunctions.get(this.attributes.crossroadID) : null
            },
            hasFromBigJunction: function(e) {
                return null != e ? _.includes(this.attributes.fromCrossroads, e) : this.attributes.fromCrossroads.length > 0
            },
            getFromBigJunction: function() {
                return this.hasFromBigJunction() ? this.model.bigJunctions.get(this.attributes.fromCrossroads) : null
            },
            hasToBigJunction: function(e) {
                return null != e ? _.contains(this.attributes.toCrossroads, e) : this.attributes.toCrossroads.length > 0
            },
            getToBigJunction: function() {
                return this.hasToBigJunction() ? this.model.bigJunctions.get(this.attributes.toCrossroads) : null
            },
            getRelatedBigJunction: function() {
                return this.getBigJunction() || this.getFromBigJunction() || this.getToBigJunction()
            },
            getBigJunctionRank: function() {
                var e = this.getRelatedBigJunction();
                return e ? e.rank : 0
            },
            isJunctionEntry: function() {
                return !this.isBigJunctionShort() && (this.hasFromBigJunction() || this.hasToBigJunction())
            },
            getJunctionTurns: function() {
                var e = [];
                return null != this.getFromBigJunction() && e.push.apply(e, (0,
                        r.default)(this.getFromBigJunction().getTurnsFrom(O.default.reverseOf(this.getID())))),
                    null != this.getToBigJunction() && e.push.apply(e, (0,
                        r.default)(this.getToBigJunction().getTurnsFrom(O.default.forwardOf(this.getID())))),
                    e
            },
            getConnectedSegmentsByDirection: function(e) {
                var t = this;
                return this.getConnectedSegments(e).filter(function(i) {
                    if (i === t)
                        return !1;
                    var n = t.getNodeByDirection(e);
                    return t.isTurnAllowed(i, n) || i.isTurnAllowed(t, n)
                })
            },
            canForceHouseNumbers: function() {
                return this.isAllowed(this.PERMISSIONS.FORCE_HOUSE_NUMBERS)
            },
            canEditHouseNumbers: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_HOUSE_NUMBERS)
            },
            isClosuresSupported: function() {
                return !this.isWalkingRoadType()
            },
            canEditClosures: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_CLOSURES)
            },
            canEditHeadlightsReminder: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_HEADLIGHTS_REMINDER)
            },
            canEditAverageSpeedCamera: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_AVERAGE_SPEED_CAMERA)
            },
            isSpeedUnverified: function(e) {
                return !0 === this.attributes[e]
            },
            canChangeMaxSpeedUnverified: function(e) {
                return this.arePropertiesEditable() && this.isSpeedUnverified(e)
            },
            arePropertiesEditable: function() {
                return !this.hasClosures() && v.default.prototype.arePropertiesEditable.apply(this, arguments)
            },
            isGeometryEditable: function() {
                return !this.isInBigJunction() && !this.hasClosures() && v.default.prototype.isGeometryEditable.apply(this, arguments)
            },
            hasClosures: function() {
                return Boolean(this.attributes.hasClosures)
            },
            lockTurns: function(e, t) {
                var i = {};
                i[this.getTurnsLockAttribute(e)] = !0;
                var n = new M.default(this, i);
                return t ? n : this.model.actionManager.add(n)
            },
            getFwdHeading: function() {
                var e = this.geometry.components;
                return b.default.getHeading(e[0], e[e.length - 1])
            },
            getRevHeading: function() {
                var e = this.geometry.components;
                return b.default.getHeading(e[e.length - 1], e[0])
            },
            isTurnAllowed: function(e, t) {
                return null != t && this.model.getTurnGraph().getTurnThroughNode(t, this, e).getTurnData().isAllowed()
            },
            canUserSetDefaultRank: function(e) {
                return e >= this.attributes.rank
            },
            canEditRoutingRoadTypes: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_ROUTING_ROAD_TYPES)
            },
            canEditConnections: function() {
                return this.canEditFromConnections() && this.canEditToConnections()
            },
            canEditFromConnections: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_CONNECTIONS) && !this.hasFromBigJunction()
            },
            canEditToConnections: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_CONNECTIONS) && !this.hasToBigJunction()
            },
            isRoutable: function() {
                return G.includes(this.attributes.roadType)
            },
            isInRoundabout: function() {
                return null != this.attributes.junctionID
            },
            getRoundabout: function() {
                return this.isInRoundabout() ? this.model.junctions.get(this.attributes.junctionID) : null
            },
            isEntireRoundabout: function() {
                var e = this.getRoundabout();
                return e && 1 === e.attributes.segIDs.length
            },
            getRoutingRoadTypes: function() {
                var e = {
                    prev: null,
                    next: null
                };
                if (!this.isRoutable())
                    return e;
                var t = G.indexOf(this.attributes.roadType);
                return e.prev = G[t - 1] || null,
                    e.next = G[t + 1] || null,
                    e
            },
            getRoadType: function() {
                return this.attributes.roadType
            },
            getDrivingRestrictions: function() {
                return this.attributes.restrictions.slice()
            },
            getPickupRestrictions: function() {
                return this.attributes.pickupRestrictions.slice()
            },
            getDrivingRestrictionCount: function() {
                return F.dedupRestrictions(this.attributes.restrictions).length
            },
            getPickupRestrictionCount: function() {
                return F.dedupRestrictions(this.attributes.pickupRestrictions).length
            },
            hasRestrictions: function() {
                return this.getDrivingRestrictionCount() > 0 || this.getPickupRestrictionCount() > 0
            },
            getForwardDrivingRestrictions: function() {
                return this.getDrivingRestrictions().filter(function(e) {
                    return e.isForward()
                })
            },
            getReverseDrivingRestrictions: function() {
                return this.getDrivingRestrictions().filter(function(e) {
                    return e.isReverse()
                })
            },
            getBidiDrivingRestrictions: function() {
                return this.getDrivingRestrictions().filter(function(e) {
                    return e.isBidi()
                })
            },
            allowRestrictionEditing: function() {
                return this.arePropertiesEditable() && !this.isInBigJunction()
            },
            supportsPickupRestrictions: function() {
                var e = this.getAddress();
                if (!e)
                    return !1;
                var t = e.getCountry();
                return !!t && t.allowPickupRestrictions
            },
            supportsHouseNumbers: function() {
                return z.includes(this.attributes.roadType) && this.hasNonEmptyStreet()
            },
            getFwdLanes: function() {
                return N.default.forSegment(this.model, this, P.SEGMENT_LANE_DIRECTION.FWD)
            },
            getRevLanes: function() {
                return N.default.forSegment(this.model, this, P.SEGMENT_LANE_DIRECTION.REV)
            },
            supportsLanes: function() {
                var e = this.getAddress();
                if (!e)
                    return !1;
                var t = e.getCountry();
                return !!t && t.allowLanes
            },
            MinLevel: -5,
            MaxLevel: 9,
            keepOriginal: {
                fwdMaxSpeedUnverified: !0,
                revMaxSpeedUnverified: !0
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4,
                EDIT_EMPTY_STREET: 8,
                SPLIT_DIRECTIONS: 16,
                SET_UNKNOWN_DIRECTIONS: 32,
                EDIT_HOUSE_NUMBERS: 64,
                FORCE_HOUSE_NUMBERS: 128,
                EDIT_CONNECTIONS: 256,
                EDIT_ROUTING_ROAD_TYPES: 512,
                EDIT_CLOSURES: 1024,
                EDIT_HEADLIGHTS_REMINDER: 2048,
                EDIT_AVERAGE_SPEED_CAMERA: 4096
            },
            CLASS_NAME: "Waze.Feature.Vector.Segment"
        });
    t.default = Y,
        t.ROAD_TYPES = j,
        t.HIGHWAY_ROAD_TYPES = B,
        t.WALKING_ROAD_TYPES = H,
        t.SEGMENT_DELETION_REJECTION = U,
        t.FLAG_ATTRIBUTES = q
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(15),
        o = n(a),
        l = i(22),
        u = n(l),
        d = OpenLayers.Class(o.default, {
            initialize: function(e, t) {
                this.attributes = e || {},
                    t && t.parse && e && this.parse(e),
                    e && (this.attributes = (0,
                        r.default)(this.attributes, e)),
                    _.defaults(this.attributes, _.result(this, "defaults"))
            },
            merge: function(e) {
                this.parse(e),
                    (0,
                        r.default)(this.attributes, e),
                    this.originalValues && (this.originalValues = void 0)
            },
            getOriginalValue: function(e) {
                return this.originalValues && !_.isUndefined(this.originalValues[e]) ? this.originalValues[e] : this.attributes[e]
            },
            getID: function() {
                return this.attributes.id
            },
            setID: function(e) {
                this.attributes.id = e
            },
            changeID: function(e) {
                o.default.prototype.changeID.apply(this, arguments),
                    null != this.fid && (this.fid = e)
            },
            getVersion: function() {
                return this.attributes.version || o.default.prototype.getVersion.apply(this)
            },
            clone: function() {
                var e = null,
                    t = _.extend({}, this.attributes);
                this.attributes.geometry && (e = this.attributes.geometry.clone()),
                    t.geometry = e;
                var i = new d(t);
                return i.state = this.state,
                    i
            },
            getPermissions: function() {
                return u.default.isDefined(this.attributes.permissions) ? this.attributes.permissions : 0
            },
            getAttributes: function() {
                return this.attributes
            },
            CLASS_NAME: "Waze.Feature.Vector"
        });
    Object.defineProperty(d.prototype, "geometry", {
            get: function() {
                if (this.attributes)
                    return this.attributes.geometry
            },
            set: function(e) {
                this.attributes.geometry = e
            }
        }),
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i) {
                (0,
                    r.default)(this, e),
                this._segmentID = t,
                    this._direction = i
            }
            return (0,
                    o.default)(e, [{
                    key: "isForward",
                    value: function() {
                        return this._direction === e.Direction.FORWARD
                    }
                }, {
                    key: "isReverse",
                    value: function() {
                        return this._direction === e.Direction.REVERSE
                    }
                }, {
                    key: "getSegmentID",
                    value: function() {
                        return this._segmentID
                    }
                }, {
                    key: "getOpposite",
                    value: function() {
                        return this.isForward() ? new e(this._segmentID, e.Direction.REVERSE) : new e(this._segmentID, e.Direction.FORWARD)
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return this._segmentID === e._segmentID && this._direction === e._direction
                    }
                }, {
                    key: "getID",
                    value: function() {
                        return this._segmentID + (this._direction ? "f" : "r")
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return this.getID()
                    }
                }], [{
                    key: "forwardOf",
                    value: function(t) {
                        return new e(t, e.Direction.FORWARD)
                    }
                }, {
                    key: "reverseOf",
                    value: function(t) {
                        return new e(t, e.Direction.REVERSE)
                    }
                }, {
                    key: "for",
                    value: function(t, i) {
                        return t.attributes.toNodeID === i.getID() ? e.forwardOf(t.getID()) : e.reverseOf(t.getID())
                    }
                }, {
                    key: "fromID",
                    value: function(t) {
                        var i = parseInt(t.slice(0, -1), 10),
                            n = t.slice(-1);
                        return n = "f" === n ? e.Direction.FORWARD : e.Direction.REVERSE,
                            new e(i, n)
                    }
                }]),
                e
        }();
    l.Direction = {
            FORWARD: !0,
            REVERSE: !1
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e, t) {
        return e = "./" + e + ".hamlc",
            t = _.extend({}, o, t),
            a(e)(t)
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.getHTML = void 0;
    var s = i(16),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s),
        a = i(484);
    a.keys().map(a);
    var o = {
        t: I18n.t.bind(I18n),
        l: I18n.l.bind(I18n),
        h: r.default,
        safe_t: r.default.safe_t,
        __htmlEscape: r.default.escape,
        __cleanValue: r.default.cleanValue
    };
    o.renderPartial = n,
        Marionette.Renderer.render = function(e, t) {
            return "function" == typeof e ? e(t) : n(e, t)
        },
        t.getHTML = n
}, , function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        _getManifestsWith: function(e) {
            return W.Config.enabled_modules.map(function(t) {
                try {
                    return i(518)("./" + t + "/Manifest")[e]
                } catch (e) {
                    throw new Error("Error loading module " + t + ":\nManifest file does not exist.")
                }
            }).filter(function(e) {
                return void 0 !== e
            })
        },
        getEntryPoints: function() {
            return this._getManifestsWith("entryPoint").map(function(e) {
                return e.class[e.callback].bind(e.class)
            })
        },
        getMenus: function() {
            return this._getManifestsWith("menu")
        },
        getRepositories: function() {
            return this._getManifestsWith("feature")
        },
        getLayers: function() {
            return _.flatten(this._getManifestsWith("layers"))
        },
        getLayerSwitcherConfig: function() {
            return this._getManifestsWith("layerSwitcher")
        },
        getFeatureEditors: function() {
            return this._getManifestsWith("feature").filter(function(e) {
                return void 0 !== e.featureEditorClass
            }).map(function(e) {
                return _.pick(e, "featureType", "featureEditorClass")
            })
        },
        getModels: function() {
            return this._getManifestsWith("feature").filter(function(e) {
                return void 0 !== e.modelClass
            }).map(function(e) {
                return _.pick(e, "repositoryName", "modelClass")
            })
        }
    };
    n.LAYER_TYPE = {
            RASTER: "raster",
            FEATURE: "feature",
            MARKER: "marker"
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function s(e) {
        var t = "";
        t = e.isForward() ? I18n.t("segment.direction.1") : I18n.t("segment.direction.2");
        var i = "";
        return i = e.isAllowed() ? I18n.t("restrictions.editing.pickup.allowed") : e.isNotAllowed() ? I18n.t("restrictions.editing.pickup.not_allowed") : I18n.t("restrictions.editing.pickup.unknown"),
            t + ": " + i
    }

    function r(e) {
        var t = new T.TimeFrameViewHelpers({
            timeFrame: e.getTimeFrame()
        });
        return t.formatWeekdays() + " " + t.formatHours()
    }

    function a(e, t) {
        return function(i) {
            return i.map(function(t) {
                return new e(t)
            }).map(t)
        }
    }

    function o(e) {
        return !0 === e ? I18n.t("element_history.boolean_attributes.enabled") : I18n.t("element_history.boolean_attributes.disabled")
    }

    function l(e, t) {
        var i = "objects." + e + ".fields." + t,
            n = "objects.common.fields." + t;
        return e === A && (i = "objects.venue.category_fields." + t),
            e === C.SEGMENT && I.FLAG_ATTRIBUTES[t] && (i = "objects." + e + ".flag_fields." + t),
            I18n.lookup(i) ? I18n.t(i) : I18n.lookup(n) ? I18n.t(n) : t
    }

    function u(e, t, i, n) {
        var s = D.default[i],
            r = D[t],
            a = n;
        return r && r[i] ? a = r[i](n, e) : null != s && (a = s(n, e)),
            _.isBoolean(a) ? o(a) : _.isString(a) ? a : Array.isArray(a) ? a.join(", ") : (0,
                v.default)(a)
    }

    function d(e, t, i, n) {
        return b.default.isBlank(n) ? null : u(e, t, i, n)
    }

    function c(e, t) {
        return b.default.userProfile(e, t)
    }

    function h(e) {
        var t = "objects." + e + ".name";
        return I18n.lookup(t) ? I18n.t(t) : e
    }

    function f(e, t, i) {
        var n = i > 1 ? "multi" : "name",
            s = I18n.t("objects." + t.object.type + "." + n, {
                count: i
            });
        if (1 === e.length) {
            var r = e[0],
                a = r.newValue,
                o = r.displayName,
                l = r.added,
                u = r.removed,
                d = "save.changes_log.actions.UpdateObject.single",
                c = a;
            return null === c ? d = "save.changes_log.actions.UpdateObject.deleted" : (l && !u && (d = "save.changes_log.actions.UpdateObject.added",
                    c = l), !l && u && (d = "save.changes_log.actions.UpdateObject.removed",
                    c = u)),
                I18n.t(d, {
                    featuresCount: i,
                    value: c,
                    propertyName: o,
                    objectsString: s
                })
        }
        return I18n.t("save.changes_log.actions.UpdateObject.multiple", {
            featuresCount: i,
            objectsString: s
        })
    }

    function p(e, t) {
        var i = e.getAddress(),
            n = e.attributes.name,
            s = i ? i.getStreetName({
                emptyString: null
            }) : null;
        return n ? I18n.t("save.changes_log.actions." + t + ".has_name", {
            name: n
        }) : s ? I18n.t("save.changes_log.actions." + t + ".has_street", {
            streetName: s
        }) : I18n.t("save.changes_log.actions." + t + ".default")
    }

    function g(e, t, i, n) {
        var s = e.segments.get(t),
            r = s.getAddress().getStreetName({
                emptyString: ""
            });
        return I18n.t("save.changes_log.actions." + n, {
            houseNumber: i,
            streetName: r
        })
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.CATEGORY_ATTRIBUTES_TYPE = t.formatUpdateActionDescription = t.formatActionAddressDescription = t.formatHouseNumberActionDescription = t.formatObjectName = t.userProfile = t.formatValue = t.formatFieldName = t.formatBoolean = t.FORMATTERS = void 0;
    var m = i(111),
        v = n(m),
        y = i(16),
        b = n(y),
        w = i(39),
        E = n(w),
        k = i(163),
        M = n(k),
        S = i(114),
        T = i(90),
        C = i(11),
        I = i(30),
        A = "venueCategoryAttributes",
        D = {
            default: {
                lockRank: function(e) {
                    return b.default.formatRank(e)
                },
                streetID: function(e, t) {
                    var i = t.streets.get(e),
                        n = "",
                        s = void 0,
                        r = void 0;
                    return null != i && (n = i.name,
                            i.isEmpty || (s = t.cities.get(i.cityID),
                                r = s.attributes.name)),
                        _.compact([n, r]).join(", ")
                }
            },
            segment: {
                level: function(e) {
                    return 0 === e ? I18n.t("edit.segment.levels.0") : e
                },
                roadType: function(e) {
                    return I18n.t("segment.road_types." + e)
                },
                routingRoadType: function(e) {
                    return I18n.t("segment.road_types." + e)
                },
                primaryStreetID: function(e, t) {
                    return D.default.streetID(e, t)
                },
                streetIDs: function(e, t) {
                    return e.map(function(e) {
                        return D.default.streetID(e, t)
                    })
                },
                fwdMaxSpeed: function(e) {
                    return b.default.speedString(e)
                },
                revMaxSpeed: function(e) {
                    return b.default.speedString(e)
                },
                fwdMaxSpeedUnverified: function(e) {
                    return !e
                },
                revMaxSpeedUnverified: function(e) {
                    return !e
                },
                restrictions: a(E.default, r),
                pickupRestrictions: a(M.default, s)
            },
            venue: {
                services: function(e) {
                    return e.map(function(e) {
                        return I18n.t("venues.services." + e)
                    })
                },
                categories: function(e) {
                    return e.map(function(e) {
                        return I18n.t("venues.categories." + e)
                    })
                },
                openingHours: function(e) {
                    return e.map(function(e) {
                        return new S.OpeningHour(e)
                    }).map(b.default.formatOpeningHour)
                },
                images: function(e) {
                    return e.map(function(e) {
                        return e.id
                    })
                },
                externalProviderIDs: function(e) {
                    return e.map(function(e) {
                        return e instanceof Backbone.Model ? e.get("uuid") : e
                    })
                }
            },
            venueCategoryAttributes: {
                estimatedNumberOfSpots: function(e) {
                    return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots." + e)
                },
                paymentType: function(e) {
                    return e.map(function(e) {
                        return I18n.t("edit.landmark.parking.types.paymentType." + e)
                    })
                },
                costType: function(e) {
                    return I18n.t("edit.landmark.parking.types.costType." + e)
                },
                parkingType: function(e) {
                    return I18n.t("edit.landmark.parking.types.parkingType." + e)
                },
                lotType: function(e) {
                    return I18n.t("edit.landmark.parking.types.lotType." + e)
                }
            },
            camera: {
                type: function(e) {
                    return I18n.t("edit.camera.fields.type." + e)
                },
                azymuth: function(e) {
                    return (e % 360).toFixed(2)
                }
            }
        };
    t.FORMATTERS = D,
        t.formatBoolean = o,
        t.formatFieldName = l,
        t.formatValue = d,
        t.userProfile = c,
        t.formatObjectName = h,
        t.formatHouseNumberActionDescription = g,
        t.formatActionAddressDescription = p,
        t.formatUpdateActionDescription = f,
        t.CATEGORY_ATTRIBUTES_TYPE = A
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(11),
        v = i(18),
        y = n(v),
        b = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, n));
                return s._turnGraph = e,
                    s._turn = i,
                    s._previousTurn = e.getTurn(i.getFromVertex(), i.getToVertex()),
                    s._nodeID = null,
                    s._node = null,
                    s._junction = null,
                    s._junctionID = null,
                    s._fromSegment = null,
                    s._toSegment = null,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this._turnGraph.putTurn(this._turn),
                            this._turn.getTurnData().hasSegmentPath() || !this._previousTurn.getTurnData().isUnknown() || this._turn.getTurnData().isAllowed() || (this.dontSerialize = !0);
                        var e = this._turn.getFromVertex(),
                            t = this._turn.getToVertex();
                        if (this._fromSegment = this.model.segments.get(e.getSegmentID()),
                            this._toSegment = this.model.segments.get(t.getSegmentID()),
                            this._turn.getTurnData().hasSegmentPath()) {
                            var i = this._turn.getTurnData().getSegmentPath()[0],
                                n = this.model.segments.get(i);
                            this._junctionID = n.getBigJunction().getID(),
                                this._junction = this.model.junctions.get(this._junctionID)
                        } else
                            this._nodeID = this.model.getRoadGraph().getVertexNodeID(this._turn.getFromVertex()),
                            this._node = this.model.nodes.get(this._nodeID)
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this._turnGraph.putTurn(this._previousTurn)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.doAction()
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this._turn.getFromVertex(),
                            t = this._turn.getToVertex(),
                            i = this._turn.getTurnData().isAllowed(),
                            n = void 0,
                            s = {
                                id: {
                                    fromSegID: e.getSegmentID(),
                                    toSegID: t.getSegmentID(),
                                    fromSegFwd: e.isForward(),
                                    toSegFwd: t.isForward()
                                },
                                navigable: i,
                                restrictions: this._turn.getTurnData().getRestrictions().map(function(e) {
                                    return e.toJSON()
                                }),
                                instructionOpCode: this._turn.getTurnData().getInstructionOpcode()
                            },
                            r = void 0;
                        if (this._turn.getTurnData().hasSegmentPath())
                            s.junctionID = this._junctionID,
                            s.segmentPath = this._turn.getTurnData().getSegmentPath(),
                            n = m.JUNCTION_NC,
                            r = y.default.TYPE.UPDATE;
                        else {
                            s.nodeID = this._nodeID,
                                n = m.NC;
                            var a = this._previousTurn.getTurnData();
                            r = (a.isUnknown() || a.isDisallowed() && !a.hasAdditionalData()) && i ? y.default.TYPE.ADD : y.default.TYPE.UPDATE
                        }
                        return {
                            _objectType: n,
                            action: r,
                            attributes: s
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = _.compact([this._fromSegment, this._toSegment, this._node, this._junction]);
                        return _.compact(e.map(function(e) {
                            return e && e.getUniqueID()
                        }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return _.compact([this._node, this._junction, this._fromSegment, this._toSegment])
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.SetTurn.update")
                    }
                }]),
                t
        }(y.default);
    (0,
        r.default)(b.prototype, {
        CLASS_NAME: "Waze.Action.SetTurn"
    }),
    t.default = b,
        e.exports = t.default
}, , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.RESTRICTION_SEGMENT_DISPOSITION = t.RESTRICTION_SEGMENT_LANE_TYPE = t.RESTRICTION_SEGMENT_DIRECTION = void 0;
    var s = i(6),
        r = n(s),
        a = i(48),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(8),
        v = n(m),
        _ = i(4),
        y = n(_),
        b = i(49),
        w = {
            FWD: "FWD",
            REV: "REV",
            BOTH: "BOTH"
        },
        E = {
            WHOLE_SEGMENT: 1,
            LEFT_LANE: 2,
            MIDDLE_LANE: 3,
            RIGHT_LANE: 4
        },
        k = {
            HOV: 1,
            HOT: 2,
            EXPRESS: 3,
            BUS: 4,
            FAST: 5
        },
        M = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = e.direction,
                    n = void 0 === i ? w.FWD : i,
                    s = e.disposition,
                    r = void 0 === s ? E.WHOLE_SEGMENT : s,
                    a = e.laneType,
                    l = void 0 === a ? null : a;
                (0,
                    c.default)(this, t);
                var d = (0,
                    g.default)(this, (t.__proto__ || (0,
                    u.default)(t)).apply(this, arguments));
                return d._direction = n,
                    d._disposition = r,
                    d._laneType = l,
                    (0,
                        o.default)(d),
                    d
            }
            return (0,
                    y.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "withoutDirection",
                    value: function() {
                        return this.with({
                            direction: null
                        })
                    }
                }, {
                    key: "withReverseDirection",
                    value: function() {
                        if (this.isBidi())
                            return this;
                        var e = this.isForward() ? w.REV : w.FWD;
                        return this.with({
                            direction: e
                        })
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return (0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "equals", this).call(this, e) && this._direction === e._direction && this._disposition === e._disposition && this._laneType === e._laneType
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return (0,
                            r.default)((0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "toJSON", this).call(this), {
                            direction: this._direction,
                            disposition: this._disposition,
                            laneType: this._laneType
                        })
                    }
                }, {
                    key: "getLaneType",
                    value: function() {
                        return this._laneType
                    }
                }, {
                    key: "getDisposition",
                    value: function() {
                        return null === this._disposition ? E.WHOLE_SEGMENT : this._disposition
                    }
                }, {
                    key: "getDirection",
                    value: function() {
                        return this._direction
                    }
                }, {
                    key: "isForward",
                    value: function() {
                        return this._direction === w.FWD
                    }
                }, {
                    key: "isReverse",
                    value: function() {
                        return this._direction === w.REV
                    }
                }, {
                    key: "isBidi",
                    value: function() {
                        return this._direction === w.BOTH
                    }
                }]),
                t
        }(b.BaseRestriction);
    t.default = M,
        t.RESTRICTION_SEGMENT_DIRECTION = w,
        t.RESTRICTION_SEGMENT_LANE_TYPE = k,
        t.RESTRICTION_SEGMENT_DISPOSITION = E
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class({
            visible: !0,
            enabled: !0,
            initialize: function(e) {
                (0,
                    s.default)(this, e, this)
            },
            destroy: function() {},
            show: function() {
                this.setVisible(!0)
            },
            hide: function() {
                this.setVisible(!1)
            },
            setVisible: function(e) {
                e !== this.visible && (this.visible = e,
                    this.div && (e ? OpenLayers.Element.show(this.div) : OpenLayers.Element.hide(this.div)),
                    this.events && this.events.triggerEvent("visibilitychanged"))
            },
            enable: function(e) {
                this.setEnabled(!0, e)
            },
            disable: function(e) {
                this.setEnabled(!1, e)
            },
            isEnabled: function() {
                return this.enabled
            },
            setEnabled: function(e, t) {
                this.enabled !== e && (this.enabled = e,
                    this.events && !t && this.events.triggerEvent("enablechanged"))
            },
            CLASS_NAME: "Waze.Control"
        });
    t.default = r,
        e.exports = t.default
}, , , , , function(e, t, i) {
    e.exports = {
        default: i(525),
        __esModule: !0
    }
}, , , function(e, t, i) {
    e.exports = {
        default: i(531),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.RESTRICTION_DESCRIPTION_CHAR_LIMIT = t.RESTRICTION_MODALITY = t.RESTRICTION_TYPE = t.BaseRestriction = void 0;
    var s = i(6),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(160),
        f = i(533),
        p = {
            FREE: "FREE",
            BLOCKED: "BLOCKED",
            TOLL: "TOLL",
            PENALTY: "PENALTY",
            ENTER_ONLY: "ENTER_ONLY",
            DANGEROUS_AREA: "DANGEROUS_AREA",
            DIFFICULT: "DIFFICULT"
        },
        g = {
            DRIVING_BLOCKED: "DRIVING_BLOCKED",
            DRIVING_ALLOWED: "DRIVING_ALLOWED",
            DRIVING_TOLL_FREE: "DRIVING_TOLL_FREE"
        },
        m = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.timeFrames,
                    n = void 0 === i ? [] : i,
                    s = t.defaultType,
                    r = void 0 === s ? null : s,
                    a = t.driveProfiles,
                    l = void 0 === a ? {} : a,
                    d = t.description,
                    c = void 0 === d ? "" : d,
                    p = t.editable,
                    g = void 0 === p || p;
                (0,
                    u.default)(this, e),
                this._editable = g,
                    this._defaultType = r,
                    this._description = c,
                    this._timeFrames = n.map(function(e) {
                        return new h.RestrictionTimeFrame(e)
                    }),
                    this._driveProfiles = (0,
                        o.default)(l).reduce(function(e, t) {
                        var i = l[t];
                        return e[t] = new f.RestrictionDriveProfileList({
                                driveProfiles: i
                            }),
                            e
                    }, {})
            }
            return (0,
                    c.default)(e, [{
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            r.default)(this.toJSON(), e))
                    }
                }, {
                    key: "__clone",
                    value: function() {
                        return this.toJSON()
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return this._editable === e._editable && this._defaultType === e._defaultType && this._description === e._description && this._timeFramesEquals(e._timeFrames) && this._driveProfilesEquals(e._driveProfiles)
                    }
                }, {
                    key: "_timeFramesEquals",
                    value: function(e) {
                        return this._timeFrames.length === e.length && this._timeFrames.every(function(t) {
                            return e.some(function(e) {
                                return e.equals(t)
                            })
                        })
                    }
                }, {
                    key: "_driveProfilesEquals",
                    value: function(e) {
                        var t = this,
                            i = (0,
                                o.default)(this._driveProfiles);
                        return i.length === (0,
                            o.default)(e).length && i.every(function(i) {
                            return t._driveProfiles[i].equals(e[i])
                        })
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = this;
                        return {
                            editable: this._editable,
                            defaultType: this._defaultType,
                            description: this._description,
                            timeFrames: this._timeFrames.map(function(e) {
                                return e.toJSON()
                            }),
                            driveProfiles: (0,
                                o.default)(this._driveProfiles).reduce(function(t, i) {
                                return t[i] = e._driveProfiles[i].toJSON(),
                                    t
                            }, {})
                        }
                    }
                }, {
                    key: "getDefaultType",
                    value: function() {
                        return this._defaultType
                    }
                }, {
                    key: "getDescription",
                    value: function() {
                        return null != this._description ? this._description : ""
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this._timeFrames.length ? this._timeFrames[0] : h.RestrictionTimeFrame.getAlwaysOn()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function(e) {
                        return this.hasDriveProfile(e) ? this._driveProfiles[e] : new f.RestrictionDriveProfileList
                    }
                }, {
                    key: "hasDriveProfile",
                    value: function(e) {
                        return this._driveProfiles.hasOwnProperty(e)
                    }
                }, {
                    key: "isDriveProfileEmpty",
                    value: function() {
                        return 0 === (0,
                            o.default)(this._driveProfiles).length
                    }
                }, {
                    key: "isTimeRestricted",
                    value: function() {
                        return this._timeFrames && this._timeFrames.length > 0
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._editable
                    }
                }, {
                    key: "isDifficult",
                    value: function() {
                        return this._defaultType === p.DIFFICULT
                    }
                }, {
                    key: "isSimplyDifficult",
                    value: function() {
                        return this.isDifficult() && !this.isTimeRestricted()
                    }
                }, {
                    key: "supportsNumPassengers",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsSubscriptions",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsTollDriveProfileEntries",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsDriveProfiles",
                    value: function() {
                        return !this.isDifficult()
                    }
                }, {
                    key: "getDrivingModality",
                    value: function() {
                        return this._defaultType === p.TOLL ? g.DRIVING_TOLL_FREE : this._defaultType === p.BLOCKED && this.hasDriveProfile(p.FREE) ? g.DRIVING_ALLOWED : this._defaultType === p.FREE && this.hasDriveProfile(p.BLOCKED) || this._defaultType === p.BLOCKED && this.isDriveProfileEmpty() ? g.DRIVING_BLOCKED : null
                    }
                }, {
                    key: "isBlockedModality",
                    value: function() {
                        return this.getDrivingModality() === g.DRIVING_BLOCKED
                    }
                }, {
                    key: "isAllowedModality",
                    value: function() {
                        return this.getDrivingModality() === g.DRIVING_ALLOWED
                    }
                }, {
                    key: "isTollFreeModality",
                    value: function() {
                        return this.getDrivingModality() === g.DRIVING_TOLL_FREE
                    }
                }]),
                e
        }();
    t.BaseRestriction = m,
        t.RESTRICTION_TYPE = p,
        t.RESTRICTION_MODALITY = g,
        t.RESTRICTION_DESCRIPTION_CHAR_LIMIT = 1e3
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(206),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(534),
        b = n(y),
        w = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            street: null,
                            city: null,
                            state: null,
                            country: null,
                            houseNumber: null,
                            isEmpty: !1,
                            altStreets: []
                        }
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return this.attributes.isEmpty
                    }
                }, {
                    key: "getStreet",
                    value: function() {
                        return this.get("street")
                    }
                }, {
                    key: "getStreetName",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.emptyString,
                            i = void 0 === t ? I18n.t("edit.address.no_street") : t,
                            n = this.getStreet();
                        return n && !n.isEmpty ? n.name : i
                    }
                }, {
                    key: "isEmptyStreet",
                    value: function() {
                        return Boolean(null != this.getStreet() && this.getStreet().isEmpty)
                    }
                }, {
                    key: "getCity",
                    value: function() {
                        return this.get("city")
                    }
                }, {
                    key: "getCityName",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.emptyString,
                            i = void 0 === t ? I18n.t("edit.address.no_city") : t,
                            n = this.getCity();
                        return null == n || n.isEmpty() ? i : n.attributes.name
                    }
                }, {
                    key: "hasState",
                    value: function() {
                        var e = this.getState();
                        return null != e && e.model.hasStates() && !e.isDefault
                    }
                }, {
                    key: "getState",
                    value: function() {
                        return this.get("state")
                    }
                }, {
                    key: "getStateName",
                    value: function() {
                        var e = this.getState();
                        return this.hasState() ? e.name : null
                    }
                }, {
                    key: "getCountry",
                    value: function() {
                        return this.get("country")
                    }
                }, {
                    key: "getCountryName",
                    value: function() {
                        var e = this.getCountry();
                        return null != e && e.name
                    }
                }, {
                    key: "format",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.formatStreet,
                            i = void 0 === t || t;
                        if (this.isEmpty())
                            return I18n.t("edit.landmark.no_address");
                        var n = _.compact([i ? this.getStreetName() : null, this.getCityName(), this.hasState() ? this.getStateName() : this.getCountryName()]),
                            s = n.join(", "),
                            r = this.get("houseNumber");
                        return null != r && (s = r + " " + s),
                            s
                    }
                }, {
                    key: "setSelected",
                    value: function(e) {
                        var t = this.attributes,
                            i = t.street,
                            n = t.city,
                            s = t.state,
                            r = t.country,
                            a = t.altStreets;
                        i && i.setSelected(e),
                            n && n.setSelected(e),
                            s && s.setSelected(e),
                            r && r.setSelected(e),
                            a && a.forEach(function(t) {
                                t && t.setSelected(e)
                            })
                    }
                }]),
                t
        }(b.default),
        E = new w({
            isEmpty: !0
        });
    w.CITY_NAME_PATTERN = "^\\S.*",
        w.fromStreetID = function(e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                n = t.streets.get(e);
            if (null == n)
                return E;
            var s = i.altStreets,
                a = (0,
                    o.default)(i, ["altStreets"]);
            return s && (i.altStreets = s.map(function(e) {
                    return w.fromStreetID(e, t, a)
                })),
                w.fromCityID(n.cityID, t, (0,
                    r.default)({}, i, {
                    street: n
                }))
        },
        w.fromCityID = function(e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                n = t.cities.get(e),
                s = void 0,
                a = void 0;
            return n && (s = t.states.get(n.attributes.stateID)),
                s && (a = t.countries.get(n.attributes.countryID)), [n, s, a].some(function(e) {
                    return null == e
                }) ? E : new w((0,
                    r.default)({}, i, {
                    city: n,
                    state: s,
                    country: a
                }))
        },
        t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(207),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            TYPE: {
                MAP_PROBLEM: "MAP_PROBLEM",
                VENUE_UPDATE_REQUEST: "VENUE_UPDATE_REQUEST",
                UPDATE_REQUEST: "UPDATE_REQUEST"
            },
            MOTIVATIONS: {
                1: "REPORTED_BY_USER",
                2: "USER_FOLLOWS_ISSUE",
                4: "USER_FOLLOWS_ISSUE_LAST_COMMENT",
                8: "CLOSE_TO_FAVORITES",
                16: "NEAR_DRIVES",
                32: "ISSUE_AGE",
                64: "ISSUE_REOPENED",
                128: "CAN_BE_SOLVED_BY_RANK"
            },
            defaults: {
                state: ""
            },
            initialize: function() {
                s.default.prototype.initialize.apply(this),
                    this.set("state", this.getFeedIssueState())
            },
            _isModified: function() {
                return !1
            },
            _isResolved: function() {
                return !1
            },
            getSeverity: function() {
                return null
            },
            onModelChanged: function() {
                this.set("modified", this._isModified()),
                    this.set("state", this.getFeedIssueState())
            },
            onModelSynced: function() {
                if (this.set("modified", !1),
                    this.set("state", this.getFeedIssueState()),
                    this._isResolved())
                    return this.trigger("resolved")
            },
            onModelRemoved: function() {
                return this.destroy()
            },
            sync: function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                if ("delete" === e) {
                    var n = W.Config.paths.issues + "/" + t.get("type") + "/" + t.get("id");
                    i.url = encodeURI(n)
                }
                return Backbone.sync(e, t, i)
            },
            getFeedIssueState: function() {
                return ""
            }
        });
    r.prototype.defaults = _.extend({
            modified: !1
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(12),
        v = n(m),
        _ = i(20),
        y = n(_),
        b = i(237),
        w = n(b),
        E = i(124),
        k = n(E),
        M = i(10),
        S = n(M),
        T = i(36),
        C = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    u.default)(this, t);
                var s = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, n)),
                    r = n.virtual,
                    a = void 0 !== r && r;
                return s.node = e,
                    s.segment = i,
                    s._connectVirtually = a,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment, this.node]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = {};
                        if (this.node.isVirtual() && !this.segment.isWalkingRoadType() && this.doSubAction(new w.default(this.node)),
                            this._connectVirtually)
                            e.virtualNodeIDs = [].concat((0,
                                r.default)(this.segment.attributes.virtualNodeIDs), [this.node.getID()]),
                            this._updateSegmentGeometry();
                        else {
                            var t = this._findSegmentEdge();
                            if (!t)
                                return !1;
                            e[t + "NodeID"] = this.node.getID()
                        }
                        return this.segment.getID(),
                            this.node.getID(),
                            this.doSubAction(new y.default(this.segment, e)),
                            this._updateNodeSegmentList(), !0
                    }
                }, {
                    key: "_updateSegmentGeometry",
                    value: function() {
                        var e = this;
                        if (!this.segment.geometry.components.some(function(t) {
                                return e.node.geometry.equals(t)
                            })) {
                            var t = S.default.getPointEdge(this.segment.geometry.components, this.node.geometry),
                                i = this.segment.geometry.clone();
                            i.components.splice(t + 1, 0, this.node.geometry.clone()),
                                this.doSubAction(new k.default(this.segment, this.segment.geometry, i))
                        }
                    }
                }, {
                    key: "_findSegmentEdge",
                    value: function() {
                        var e = this.segment.geometry.getVertices(!0);
                        return e[0].equals(this.node.geometry) ? "from" : e[1].equals(this.node.geometry) ? "to" : null
                    }
                }, {
                    key: "_updateNodeSegmentList",
                    value: function() {
                        var e = this.node.attributes.segIDs.concat();
                        return e.includes(this.segment.getID()) || e.push(this.segment.getID()),
                            this.doSubAction(new y.default(this.node, {
                                segIDs: e
                            }, {
                                dontSerialize: !0
                            }))
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            T.formatActionAddressDescription)(this.segment, "ConnectSegment")
                    }
                }]),
                t
        }(v.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(12),
        v = n(m),
        y = function(e) {
            function t(e, i) {
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return n.subActions = e || [],
                    n
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "undoSupported",
                    value: function() {
                        for (var e = 0, t = this.subActions.length; e < t; e++)
                            if (!this.subActions[e].undoSupported())
                                return !1;
                        return !0
                    }
                }, {
                    key: "setModel",
                    value: function(e) {
                        (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "setModel", this).call(this, e);
                        for (var i = 0, n = this.subActions.length; i < n; i++)
                            this.subActions[i].setModel(e)
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return _.uniq(_.flatten(this.subActions.map(function(e) {
                            return e.getFocusFeatures()
                        })))
                    }
                }]),
                t
        }(v.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(22),
        o = n(a),
        l = OpenLayers.Class(OpenLayers.Renderer.SVG, {
            initialize: function() {
                OpenLayers.Renderer.SVG.prototype.initialize.apply(this, arguments),
                    this.supportUse = !0
            },
            setAnimation: function(e, t) {
                var i = document.createElementNS(this.xmlns, "animate");
                i.setAttributeNS(null, "attributeName", t.attributeName),
                    i.setAttributeNS(null, "dur", t.dur),
                    (0,
                        r.default)(t).forEach(function(e) {
                        i.setAttributeNS(null, e, t[e])
                    }),
                    e.appendChild(i)
            },
            setStyle: function(e, t, i) {
                if (OpenLayers.Renderer.SVG.prototype.setStyle.apply(this, arguments),
                    t.animation && this.setAnimation(e, t.animation),
                    t.mask && e.setAttributeNS(null, "mask", t.mask),
                    t.filter && e.setAttributeNS(null, "filter", t.filter),
                    o.default.defined(t.rx) && e.setAttributeNS(null, "rx", t.rx),
                    o.default.defined(t.ry) && e.setAttributeNS(null, "ry", t.ry),
                    o.default.defined(t.maskID)) {
                    var n = document.getElementById(t.maskID),
                        s = void 0;
                    n || (n = document.createElementNS(this.xmlns, "mask"),
                            s = document.createElementNS(this.xmlns, "rect"),
                            s.setAttributeNS(null, "x", "0"),
                            s.setAttributeNS(null, "y", "0"),
                            s.setAttributeNS(null, "width", "100%"),
                            s.setAttributeNS(null, "height", "100%"),
                            s.setAttributeNS(null, "fill", "white"),
                            n.setAttributeNS(null, "id", t.maskID),
                            n.appendChild(s)),
                        n.appendChild(e),
                        n._style = t,
                        e = n
                }
                return e
            },
            importSymbol: function(e) {
                return this.symbolMetrics = {},
                    this.symbolMetrics[e] = [0, 0, 0],
                    e
            },
            getNodeType: function(e, t) {
                var i = OpenLayers.Renderer.SVG.prototype.getNodeType.apply(this, arguments);
                return "circle" === i && o.default.defined(t.rx) && o.default.defined(t.ry) && (i = "ellipse"),
                    i
            },
            dashStyle: function(e, t) {
                var i = void 0;
                if (e.strokeDashArray)
                    return e.strokeDashArray;
                i = e.strokeWidth * t;
                var n = e.strokeDashstyle;
                switch (n) {
                    case "solid":
                        return "none";
                    case "dot":
                        return [1, 4 * i].join();
                    case "dash":
                        return [4 * i, 4 * i].join();
                    case "dashdot":
                        return [4 * i, 4 * i, 1, 4 * i].join();
                    case "longdash":
                        return [8 * i, 4 * i].join();
                    case "longdashdot":
                        return [8 * i, 4 * i, 1, 4 * i].join();
                    default:
                        return OpenLayers.String.trim(n).replace(/\s+/g, ",")
                }
            },
            CLASS_NAME: "Waze.Renderer.ExtendedSVG"
        });
    t.default = l,
        e.exports = t.default
}, , , , , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.UNIT = void 0;
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = {},
        u = {},
        d = {},
        c = {
            KILOMETER: "km",
            MILE: "mi",
            METER: "m",
            FEET: "ft"
        },
        h = {};
    h[c.KILOMETER] = c.MILE,
        h[c.METER] = c.FEET;
    var f = {},
        p = !0,
        g = !1,
        m = void 0;
    try {
        for (var v, _ = (0,
                o.default)((0,
                r.default)(h)); !(p = (v = _.next()).done); p = !0) {
            var y = v.value,
                b = h[y];
            f[b] = y,
                u[y] = !0,
                d[b] = !0
        }
    } catch (e) {
        g = !0,
            m = e
    } finally {
        try {
            !p && _.return && _.return()
        } finally {
            if (g)
                throw m
        }
    }
    var w = OpenLayers,
        E = w.INCHES_PER_UNIT;
    l = {
            convert: function(e, t, i) {
                return e * E[t] / E[i]
            },
            localizeUnit: function(e) {
                return u[e] && W.model.isImperial ? e = h[e] : d[e] && !W.model.isImperial && (e = f[e]),
                    e
            },
            getLocalizedValue: function(e, t) {
                if (null == e)
                    return e;
                var i = this.localizeUnit(t);
                return this.convert(e, t, i)
            },
            getLocalizedDisplayValue: function(e, t, i) {
                if (null == e)
                    return e;
                var n = this.convert(e, t, i);
                return this.getLocalizedValue(n, i)
            },
            getOriginalValue: function(e, t) {
                if (null == e)
                    return e;
                var i = this.localizeUnit(t);
                return this.convert(e, i, t)
            }
        },
        t.UNIT = c,
        t.default = l
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(15),
        o = n(a),
        l = i(35),
        u = n(l),
        d = i(528),
        c = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(d),
        h = OL.Class(OL.Format.GeoJSON, {
            initialize: function() {
                var e = this;
                this._typeToClass = _.clone(c.TYPE_TO_CLASS),
                    u.default.getModels().forEach(function(t) {
                        var i = t.repositoryName,
                            n = t.modelClass;
                        e._typeToClass[i] = n
                    })
            },
            read: function(e) {
                var t = this;
                return (0,
                        r.default)(e).forEach(function(i) {
                        var n = e[i];
                        _.isUndefined(n.objects) || t._parseObjects(i, n.objects)
                    }),
                    e
            },
            _parseObjects: function(e, t) {
                var i = c.TYPE_TO_FACTORY[e];
                if (i)
                    return t.map(function(e, n) {
                        return t[n] = i.create(e)
                    });
                var n = this._typeToClass[e] || o.default;
                return t.map(function(e, i) {
                    return t[i] = new n(e, {
                        parse: !0
                    })
                })
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(159),
        u = n(l),
        d = i(49),
        c = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
                    a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                (0,
                    r.default)(this, e),
                this._state = t,
                    this._restrictions = i.slice(),
                    this._instructionOpcode = n,
                    this._segmentPath = s.slice(),
                    this._lanes = a
            }
            return (0,
                    o.default)(e, [{
                    key: "getRestrictions",
                    value: function() {
                        return this._restrictions.slice()
                    }
                }, {
                    key: "getInstructionOpcode",
                    value: function() {
                        return this._instructionOpcode
                    }
                }, {
                    key: "getLaneData",
                    value: function() {
                        return this._lanes
                    }
                }, {
                    key: "hasLanes",
                    value: function() {
                        return null != this.getLaneData()
                    }
                }, {
                    key: "hasInstructionOpcode",
                    value: function() {
                        return null !== this._instructionOpcode
                    }
                }, {
                    key: "isDifficult",
                    value: function() {
                        return this.getRestrictions().some(function(e) {
                            return e.isDifficult()
                        })
                    }
                }, {
                    key: "isSimplyDifficult",
                    value: function() {
                        return this._restrictions.some(function(e) {
                            return e.isSimplyDifficult()
                        })
                    }
                }, {
                    key: "isTimeRestricted",
                    value: function() {
                        return this.getRestrictions().some(function(e) {
                            return e.isTimeRestricted()
                        })
                    }
                }, {
                    key: "isDifficultTimeRestricted",
                    value: function() {
                        return this._restrictions.some(function(e) {
                            return e.isDifficult() && e.isTimeRestricted()
                        })
                    }
                }, {
                    key: "isNonDifficultTimeRestricted",
                    value: function() {
                        return this.getRestrictions().some(function(e) {
                            return !e.isDifficult() && e.isTimeRestricted()
                        })
                    }
                }, {
                    key: "withSimpleDifficulty",
                    value: function(e) {
                        if (e !== this.isSimplyDifficult()) {
                            var t = this.getRestrictions();
                            return e ? t.push(new u.default({
                                    defaultType: d.RESTRICTION_TYPE.DIFFICULT
                                })) : t = t.filter(function(e) {
                                    return !e.isSimplyDifficult()
                                }),
                                this.withRestrictions(t)
                        }
                        return this
                    }
                }, {
                    key: "withoutDifficultRestrictions",
                    value: function() {
                        var e = this.getRestrictions().filter(function(e) {
                            return !e.isDifficult()
                        });
                        return this.withRestrictions(e)
                    }
                }, {
                    key: "withState",
                    value: function(t) {
                        return e.create(t, this._restrictions, this._instructionOpcode, this._segmentPath, this._lanes)
                    }
                }, {
                    key: "withRestrictions",
                    value: function(t) {
                        return e.create(this._state, t, this._instructionOpcode, this._segmentPath, this._lanes)
                    }
                }, {
                    key: "withInstructionOpcode",
                    value: function(t) {
                        return e.create(this._state, this._restrictions, t, this._segmentPath, this._lanes)
                    }
                }, {
                    key: "withLanes",
                    value: function(t) {
                        return e.create(this._state, this._restrictions, this._instructionOpcode, this._segmentPath, t)
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return "" + this._state
                    }
                }, {
                    key: "isUnknown",
                    value: function() {
                        return this._state === e.State.UNKNOWN
                    }
                }, {
                    key: "isAllowed",
                    value: function() {
                        return this._state === e.State.ALLOWED
                    }
                }, {
                    key: "isDisallowed",
                    value: function() {
                        return this._state === e.State.DISALLOWED
                    }
                }, {
                    key: "hasAdditionalData",
                    value: function() {
                        return this.hasInstructionOpcode() || this._restrictions && this._restrictions.length > 0
                    }
                }, {
                    key: "withToggledState",
                    value: function(t) {
                        return t ? this.withState(e.State.ALLOWED) : this.withState(e.State.DISALLOWED)
                    }
                }, {
                    key: "hasSegmentPath",
                    value: function() {
                        return this._segmentPath.length > 0
                    }
                }, {
                    key: "getSegmentPath",
                    value: function() {
                        return this._segmentPath.slice()
                    }
                }], [{
                    key: "createAllowed",
                    value: function() {
                        return e._ALLOWED_TURN
                    }
                }, {
                    key: "createDisallowed",
                    value: function() {
                        return e._DISALLOWED_TURN
                    }
                }, {
                    key: "createUnknown",
                    value: function() {
                        return e._UNKNOWN_TURN
                    }
                }, {
                    key: "create",
                    value: function(t) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                            s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
                            r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                        return 0 === i.length && null === n && 0 === s.length && null === r ? t === e.State.ALLOWED ? e._ALLOWED_TURN : e._DISALLOWED_TURN : new e(t, i, n, s, r)
                    }
                }]),
                e
        }();
    c.State = {
            DISALLOWED: 0,
            ALLOWED: 1,
            UNKNOWN: 2
        },
        c._ALLOWED_TURN = new c(c.State.ALLOWED),
        c._DISALLOWED_TURN = new c(c.State.DISALLOWED),
        c._UNKNOWN_TURN = new c(c.State.UNKNOWN),
        t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    for (var n = W.Config.venues.categories, s = _.object(n, n), r = [], a = 0; a < n.length; a++) {
        var o = n[a];
        r.push({
            id: o
        });
        for (var l = 0; l < W.Config.venues.subcategories[o].length; l++) {
            var u = W.Config.venues.subcategories[o][l];
            r.push({
                id: u
            })
        }
    }
    t.GAS_STATION = "GAS_STATION",
        t.PARKING_LOT = "PARKING_LOT",
        t.mainCategories = n,
        t.mainCategoryMap = s,
        t.allCategories = r
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = i(15),
        v = n(m),
        y = function(e) {
            function t(e, i, n, s) {
                (0,
                    o.default)(this, t);
                var a = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, s));
                return a.attributes = null,
                    null === e ? (a.object = new v.default(n),
                        a.attributes = n) : (a.object = e,
                        a.attributes = _.extend({}, a.object.getAttributes())),
                    a.object.writableAttributes && (a.attributes = _.pick(a.attributes, a.object.writableAttributes)),
                    a.repository = i,
                    a
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.object]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        return this.object.setID(this.repository.generateUniqueID()),
                            this.object.version = 1,
                            this.object.state = OL.State.INSERT,
                            this.repository.put(this.object), !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.repository.remove(this.object)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.repository.put(this.object)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = _.extend({}, this.attributes);
                        return e.id = this.object.getID(), {
                            _objectType: this.object.type,
                            action: g.default.TYPE.ADD,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.object.getUniqueID()]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = I18n.t("objects." + this.object.type + ".name");
                        this._description = I18n.t("save.changes_log.actions.CreateObject", {
                            type: e
                        })
                    }
                }]),
                t
        }(g.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(18),
        y = n(_),
        b = i(12),
        w = n(b),
        E = i(79),
        k = n(E),
        M = i(11),
        S = i(36),
        T = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    u.default)(this, t);
                var n = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, i)),
                    s = i.hide,
                    r = void 0 !== s && s,
                    a = i.userInitiated,
                    l = void 0 !== a && a;
                return n.segment = e,
                    n.hideSegment = r,
                    n.userInitiated = l,
                    n.origState = null,
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = this;
                        this.segment.getID(),
                            this.origState = this.segment.state, ["fromNodeID", "toNodeID"].forEach(function(e) {
                                if (this.segment.attributes[e]) {
                                    var t = this.model.nodes.get(this.segment.attributes[e]);
                                    t && t.isConnectedToSegment(this.segment) && this.doSubAction(new k.default(this.segment, t, {
                                        deleteNode: this.deleteNode,
                                        dontSerialize: !0
                                    }))
                                }
                            }, this),
                            this.segment.attributes.virtualNodeIDs.forEach(function(t) {
                                var i = e.model.nodes.get(t);
                                e.doSubAction(new k.default(e.segment, i, {
                                    dontSerialize: !0
                                }))
                            }),
                            this.hideSegment && (this.segment.hidden || (this.hidSegment = !0),
                                this.segment.hidden = !0),
                            this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                                this.model.segments.changed(this.segment)),
                            this.userInitiated && this.model.loginManager.user.incrementDeleteSegmentCount()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.segment.getID(),
                            this.userInitiated && this.model.loginManager.user.decrementDeleteSegmentCount(),
                            this.segment.state = this.origState,
                            this.hidSegment && delete this.segment.hidden,
                            this.segment.state === OpenLayers.State.INSERT ? this.model.segments.put(this.segment) : this.model.segments.changed(this.segment),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "redoAction", this).call(this),
                            this.hidSegment && (this.segment.hidden = !0),
                            this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                                this.model.segments.changed(this.segment)),
                            this.userInitiated && this.model.loginManager.user.incrementDeleteSegmentCount()
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: M.SEGMENT,
                            action: y.default.TYPE.DELETE,
                            attributes: {
                                id: this.segment.getID()
                            }
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.segment.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            S.formatActionAddressDescription)(this.segment, "DeleteSegment")
                    }
                }]),
                t
        }(w.default);
    t.default = T,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DIRECTION = void 0;
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {
            A_TO_B: 1,
            B_TO_A: 2,
            TWO_WAY: 3
        },
        a = ["startDate", "endDate", "reason", "location", "permanent", "createdBy", "eventId"],
        o = /^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}$/,
        l = Backbone.Model.extend({
            defaults: function() {
                return {
                    startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                    endDate: (new Date).toString("yyyy-MM-dd 23:59"),
                    reason: null,
                    location: null,
                    permanent: !1,
                    eventId: null,
                    direction: r.A_TO_B,
                    createdBy: null,
                    segments: [],
                    closures: [],
                    reverseSegments: {}
                }
            },
            initialize: function() {
                var e = this.get("closures");
                if (e && e.length > 0) {
                    var t = e[0];
                    this._setFromSingleClosure(t)
                }
                var i = this.get("segments");
                null != i && (i = _(i).sortBy(function(e) {
                            return e.getID()
                        }),
                        this.set({
                            segments: i
                        })),
                    this._originalAttribs = this.toJSON()
            },
            _setFromSingleClosure: function(e) {
                for (var t = 0; t < a.length; t++) {
                    var i = a[t];
                    this.set(i, e[i])
                }
                return this.set({
                    direction: this._getDirectionFromClosure(e)
                })
            },
            _getDirectionFromClosure: function(e) {
                var t = e.forward;
                return this.isReverse(e.segID) && (t = !t),
                    t ? r.A_TO_B : r.B_TO_A
            },
            original: function(e) {
                return this._originalAttribs[e]
            },
            differsFromOriginal: function(e) {
                return this.get(e) !== this.original(e)
            },
            hasChanged: function() {
                var e = this;
                return a.some(function(t) {
                    return e.differsFromOriginal(t)
                })
            },
            isOppositeToOriginal: function() {
                var e = this.original("direction"),
                    t = this.get("direction");
                return this._areOpposites(e, t)
            },
            isOppositeTo: function(e) {
                var t = e.get("direction"),
                    i = this.get("direction");
                return this._areOpposites(i, t) && this._hasSameAttributes(e) && this._hasSameSegmentIDs(e)
            },
            _hasSameAttributes: function(e) {
                var t = this;
                return a.every(function(i) {
                    return t.get(i) === e.get(i)
                })
            },
            _hasSameSegmentIDs: function(e) {
                return _.isEqual(this.getSegIDs(), e.getSegIDs())
            },
            _areOpposites: function(e, t) {
                return e === r.A_TO_B && t === r.B_TO_A || e === r.B_TO_A && t === r.A_TO_B
            },
            getSegIDs: function() {
                return _(this.get("segments")).invoke("getID")
            },
            findSegmentByID: function(e) {
                for (var t = this.get("segments"), i = 0; i < t.length; i++) {
                    var n = t[i];
                    if (n.getID() === e)
                        return n
                }
                return null
            },
            mergeWithOpposite: function(e) {
                this.set({
                        direction: r.TWO_WAY
                    }),
                    this._originalAttribs.direction = r.TWO_WAY;
                var t = this.get("closures").concat(e.get("closures"));
                return this.set({
                    closures: t
                })
            },
            isReverse: function(e) {
                return !0 === this.get("reverseSegments")[e]
            },
            saveSimpleFieldsToClosure: function(e) {
                var t = this;
                return a.map(function(i) {
                    return e[i] = t.get(i)
                })
            },
            validate: function() {
                return this.errors = {},
                    this._validateField("startDate", {
                        required: !1,
                        date: !0,
                        futureDate: !1
                    }),
                    this._validateField("endDate", {
                        required: !0,
                        date: !0,
                        futureDate: !0
                    }),
                    this._validateDateRange(),
                    _.isEmpty(this.errors)
            },
            isPresent: function(e) {
                return !s.default.isBlank(this.get(e))
            },
            _validateField: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (t.required && !this.isPresent(e))
                    return void(this.errors[e] = "required");
                if (this.isPresent(e)) {
                    var i = this.get(e);
                    if (null != t.pattern && !t.pattern.test(i))
                        return void(this.errors[e] = "invalid");
                    if (t.date && !this._isValidDate(i))
                        return void(this.errors[e] = "invalid-date");
                    if (t.futureDate) {
                        Date.parse(i).isBefore(1..days().ago()) && (this.errors[e] = "in-past")
                    }
                }
            },
            _isValidDate: function(e) {
                return o.test(e) && null != Date.parse(e)
            },
            _validateDateRange: function() {
                if (null == this.errors.startDate && null == this.errors.endDate) {
                    var e = Date.parse(this.get("startDate"));
                    Date.parse(this.get("endDate")).isAfter(e) || (this.errors.endDate = "before-start-date")
                }
            },
            calculateForwardValuesForSegment: function(e) {
                var t = this.get("direction"),
                    i = this.isReverse(e);
                return t === r.TWO_WAY ? [!0, !1] : t === r.A_TO_B ? [!i] : [i]
            },
            isEndDateSet: function() {
                return null !== this.get("endDate")
            },
            isStartDateSet: function() {
                return null !== this.get("startDate")
            }
        });
    t.default = l,
        t.DIRECTION = r
}, , , , , function(e, t, i) {
    e.exports = {
        default: i(446),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t() {
                (0,
                    u.default)(this, t);
                var e = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments));
                return e.normalizedLevel = e.NormalizedLevels[e.rank],
                    e
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "isStaffUser",
                    value: function() {
                        return this.rank >= this.StaffRank
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        NormalizedLevels: {
            0: 1,
            1: 2,
            2: 3,
            3: 4,
            4: 5,
            5: 6,
            6: 6
        },
        MinLevel: 0,
        MaxLevel: 5,
        StaffRank: 6,
        CLASS_NAME: "Waze.Feature.Vector.User"
    }),
    _.normalizeLevel = function(e) {
            return _.prototype.NormalizedLevels[e]
        },
        t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(477),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(45),
        o = n(a),
        l = i(6),
        u = n(l),
        d = i(527),
        c = n(d),
        h = i(27),
        f = i(22),
        p = n(f),
        g = Marionette.Object.extend({
            KEEP_CHANGED: function(e, t) {
                return e
            },
            REPLACE_CHANGED: function(e, t) {
                return t
            },
            DEFAULT_PROJECTION: new OpenLayers.Projection("EPSG:4326"),
            GENERATED_ID_BASE: -100,
            GENERATED_ID_STEP: -1,
            objectType: null,
            objects: null,
            persistentObjects: null,
            idGenerator: null,
            projection: null,
            active: null,
            name: null,
            currentDataBounds: null,
            minZoom: 0,
            onDemand: !0,
            additionalInfo: null,
            useVersions: !0,
            filter: null,
            storePersistentSeparately: !1,
            initialize: function(e, t) {
                (0,
                    u.default)(this, t),
                this.objects = {},
                    this.persistentObjects = {},
                    this.objectType = e,
                    this.idGenerator = new c.default(this.GENERATED_ID_BASE, this.GENERATED_ID_STEP),
                    null === this.projection && (this.projection = this.DEFAULT_PROJECTION),
                    this.active = !p.default.defined(t.active) || t.active,
                    this.filter && this.filter.on("change", this._onFilterChanged, this)
            },
            _onFilterChanged: function() {
                this.clear({
                    keepUnsaved: !0
                })
            },
            setActive: function(e) {
                this.active = e,
                    this.trigger("change:active", {
                        active: e
                    })
            },
            updateDataExtent: function(e, t, i) {
                var n = {};
                return i < this.minZoom ? (this.clear({
                        keepUnsaved: !0,
                        keepSelected: !0
                    }),
                    null) : !this.filtered && (!this.onDemand || this.currentDataBounds && this.currentDataBounds.containsBounds(e)) ? null : this.filter ? (this.filter.isEmpty() || (n[this.filter.getName()] = this.filter.serialize()),
                    n) : (n[this.objectType + "s"] = !0,
                    n)
            },
            get: function(e) {
                return this.objects[e] || this.persistentObjects[e]
            },
            getByAttributes: function(e) {
                return _.where(this.objects, e)
            },
            put: function(e) {
                e instanceof Array || (e = [e]);
                for (var t = [], i = [], n = 0, s = e.length; n < s; n++) {
                    var r = e[n],
                        a = r.getID(),
                        o = void 0;
                    o = this.storePersistentSeparately && r.isPersistent() ? this.persistentObjects : this.objects,
                        r.type = this.objectType,
                        r.model = this.model,
                        o[a] ? t.push(r) : i.push(r),
                        o[a] = r
                }
                t.length > 0 && this.trigger(h.CHANGED, t),
                    i.length > 0 && this.trigger(h.ADDED, i),
                    (i.length > 0 || t.length > 0) && this.trigger(h.UPDATED)
            },
            changed: function(e) {
                e instanceof Array || (e = [e]),
                    this.trigger(h.CHANGED, e),
                    this.trigger(h.UPDATED)
            },
            _triggerChangedID: function(e, t) {
                var i = {
                    oldID: e,
                    newID: t
                };
                this.trigger(h.CHANGED_ID, i)
            },
            synced: function(e) {
                e instanceof Array || (e = [e]),
                    this.trigger(h.SYNCED, e)
            },
            remove: function(e) {
                e instanceof Array || (e = [e]);
                for (var t = [], i = 0, n = e.length; i < n; i++) {
                    var s = e[i];
                    this.objects[s.getID()] && (delete this.objects[s.getID()],
                        t.push(s))
                }
                t.length > 0 && (this.trigger(h.REMOVED, t),
                    this.trigger(h.UPDATED))
            },
            mergeObjectAttributes: function(e, t) {
                e.merge(t),
                    e.state = null,
                    this.changed(e),
                    this.synced(e)
            },
            changeObjectID: function(e, t) {
                var i = e.getID();
                e.changeID(t),
                    delete this.objects[i],
                    this.objects[t] = e,
                    this._triggerChangedID(i, t),
                    e.state = null,
                    this.changed(e),
                    this.synced(e)
            },
            generateUniqueID: function() {
                return this.idGenerator.next()
            },
            getObjectArray: function(e) {
                return _.isUndefined(e) ? (0,
                    o.default)(this.objects) : _.filter(this.objects, e)
            },
            clear: function(e) {
                var t = this;
                this.currentDataBounds = null;
                var i = [];
                e = _.extend({
                        keepPersistent: !0
                    }, e),
                    (0,
                        r.default)(this.objects).forEach(function(n) {
                        var s = t.objects[n];
                        s.isInUse(e) ? s.state !== OpenLayers.State.INSERT && (s.outOfScope = !0) : (i.push(s),
                            delete t.objects[n])
                    }),
                    e && e.silent || i.length > 0 && (this.trigger(h.REMOVED, i),
                        this.trigger(h.UPDATED))
            },
            mergeObjects: function(e, t, i) {
                this.currentDataBounds = i.clone(),
                    t || (t = this.KEEP_CHANGED),
                    this.filtered = Boolean(e) && Boolean(e.filtered),
                    (e = e ? e.objects : []) || (e = []);
                for (var n = [], s = [], r = 0, a = e.length; r < a; ++r) {
                    var o = e[r].getID();
                    if (this.objects[o])
                        if (!this.useVersions || e[r].getVersion() > this.objects[o].getVersion())
                            if (this.objects[o].state) {
                                var l = t(this.objects[o], e[r]);
                                l && l !== this.objects[o] && (s.push(this.objects[o]),
                                    this.objects[o] = e[r],
                                    n.push(e[r]),
                                    e[r].type = this.objectType,
                                    e[r].model = this.model)
                            } else
                                s.push(this.objects[o]),
                                this.objects[o] = e[r],
                                n.push(e[r]),
                                e[r].type = this.objectType,
                                e[r].model = this.model;
                    else
                        delete this.objects[o].outOfScope;
                    else
                        this.objects[o] = e[r],
                        n.push(e[r]),
                        e[r].type = this.objectType,
                        e[r].model = this.model
                }
                delete e.objects,
                    this.additionalInfo = e,
                    s.length > 0 && this.trigger(h.REMOVED, s),
                    n.length > 0 && this.trigger(h.ADDED, n),
                    (s.length > 0 || n.length > 0) && this.trigger(h.UPDATED)
            },
            getModifiedObjects: function() {
                var e = {};
                e[OpenLayers.State.INSERT] = [],
                    e[OpenLayers.State.UPDATE] = [],
                    e[OpenLayers.State.DELETE] = [];
                for (var t in this.objects)
                    this.objects[t].state && e[this.objects[t].state].push(this.objects[t]);
                return e
            },
            hasModifiedObjects: function() {
                for (var e in this.objects)
                    if (this.objects[e].state)
                        return !0;
                return !1
            },
            getByIds: function(e) {
                var t = [],
                    i = void 0;
                return e.forEach(function(e) {
                        (i = this.get(e)) && t.push(i)
                    }, this),
                    t
            },
            CLASS_NAME: "Waze.Model.ObjectRepository"
        });
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(208),
        o = n(a),
        l = i(162),
        u = n(l),
        d = i(537),
        c = n(d),
        h = i(538),
        f = n(h),
        p = i(71),
        g = n(p),
        m = i(539),
        v = n(m),
        y = Backbone.Model.extend({
            MORE_INFO_DEFAULTS: [{
                name: "averageSession",
                visible: !0
            }, {
                name: "allSessions",
                visible: !1
            }],
            _moreInfoTypes: null,
            _moreInfoTypeMap: null,
            constructor: function(e) {
                return this.problem = e,
                    Backbone.Model.apply(this)
            },
            setState: function(e) {
                var t = {};
                t.open = e === o.default.OPEN,
                    t.resolution = function() {
                        switch (e) {
                            case o.default.SOLVED:
                                return u.default.FIXED;
                            case o.default.NOT_IDENTIFIED:
                                return u.default.NOT_A_PROBLEM;
                            case o.default.OPEN:
                                return null
                        }
                    }(),
                    this.problem.model.actionManager.add(new v.default(this.problem, t))
            },
            getState: function() {
                var e = this;
                return this.problem.attributes.open ? o.default.OPEN : function() {
                    switch (e.problem.attributes.resolution) {
                        case u.default.FIXED:
                            return o.default.SOLVED;
                        case u.default.NOT_A_PROBLEM:
                            return o.default.NOT_IDENTIFIED;
                        case u.default.AUTO:
                            return o.default.CLOSED_AUTOMATICALLY
                    }
                }()
            },
            reportStateChanged: function() {
                var e = this.problem.attributes.problemType;
                null != this.problem.attributes.subType && (e += "_" + this.problem.attributes.subType),
                    this.getState() === o.default.SOLVED ? W.Report.mapProblemAction("update_state", e, 1) : this.getState() === o.default.NOT_IDENTIFIED && W.Report.mapProblemAction("update_state", e, -1)
            },
            getTitle: function() {
                return I18n.t("problems.types." + this.problem.attributes.subType + ".title")
            },
            getReportedString: function() {
                return I18n.t("problems.panel.auto_detected")
            },
            hasDescription: function() {
                return !0
            },
            getDescription: function() {
                return I18n.t("problems.types." + this.problem.attributes.subType + ".description")
            },
            getDescriptionTemplate: function() {
                return null
            },
            isConversationAvailable: function() {
                return !1
            },
            getMoreInfoTypes: function() {
                var e = this;
                return null !== this._moreInfoTypes ? this._moreInfoTypes : (this._moreInfoTypeMap = {},
                    this._moreInfoTypes = this.MORE_INFO_DEFAULTS.map(function(t) {
                        var i = new f.default({
                            name: t.name,
                            visible: t.visible
                        });
                        return e._moreInfoTypeMap[t.name] = i,
                            i
                    }),
                    this._moreInfoTypes)
            },
            getMoreInfo: function() {
                var e = this;
                return this.moreInfo ? r.default.resolve(this.moreInfo) : this.problem.getSessions().then(function(t) {
                    return e._moreInfoTypeMap.averageSession.set({
                            available: t[0].average && t.average.geometry
                        }),
                        e._moreInfoTypeMap.allSessions.set({
                            available: t[0].sessions && t.sessions.length > 0
                        }),
                        e.moreInfo = t
                })
            },
            isMoreInfoAvailable: function() {
                return _.some(this.getMoreInfoTypes(), function(e) {
                    return e.get("available")
                })
            },
            getSeverity: function() {
                return this.problem.attributes.severity
            },
            getRepository: function() {
                return this.problem.model.problems
            },
            createMoreInfoRenderer: function(e, t, i) {
                return new c.default(e, t, i)
            },
            getMarkerLayer: function() {
                return W.map.problemLayer
            },
            isEditable: function() {
                return this.problem.canEdit()
            },
            rankAllowsEdit: function() {
                return W.loginManager.getUserRank() >= this.minRankForEdit()
            },
            minRankForEdit: function() {
                return 0
            },
            minLevelForEdit: function() {
                return g.default.normalizeLevel(this.minRankForEdit())
            },
            getBounds: function() {
                return this.problem.getDisconnectBounds()
            },
            getGeometry: function() {
                return this.problem.geometry.clone()
            },
            getOpenStateString: function() {
                return I18n.t("problems.panel.states.open")
            },
            getSolvedStateString: function() {
                return I18n.t("problems.panel.states.solved")
            },
            getNotIdentifiedStateString: function() {
                return I18n.t("problems.panel.states.not_identified")
            },
            getNextButtonString: function() {
                return this._nextButtonString || I18n.t("problems.panel.next")
            },
            setNextButtonString: function(e) {
                this._nextButtonString = e
            }
        });
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return a = e.getConfigurationInfo(),
            a.then(function(e) {
                r = e,
                    W.serverConfig = r
            })
    }

    function s() {
        if (null == r)
            throw new Error("call init() before reading server config");
        return r
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.init = n,
        t.getServerConfig = s;
    var r = null,
        a = null
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        getUrl: function(e) {
            return this.getUrlById(e, this.id)
        },
        getUrlById: function(e, t) {
            return e === n.SIZE.ORIGINAL ? W.Config.venues.image_bucket_url + t : W.Config.venues.image_bucket_url + "thumbs/thumb" + e + "_" + t
        }
    });
    n.SIZE = {
            ORIGINAL: 0,
            SMALL: 32,
            MEDIUM: 100,
            WEB: 347,
            MOBILE: 700,
            BIG: 700
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = function(e) {
            function t(e, i, n, s, a) {
                (0,
                    o.default)(this, t);
                var l = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, a));
                return l.feature = e,
                    l.repo = i,
                    l.oldGeometry = n,
                    l.newGeometry = s,
                    l.changedState = !1,
                    l
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this.feature.type,
                            this.feature.getID(),
                            this.replaceGeometry(this.newGeometry.clone()),
                            this.feature.state || (this.changedState = !0,
                                this.feature.state = OpenLayers.State.UPDATE),
                            this.repo.changed(this.feature)
                    }
                }, {
                    key: "replaceGeometry",
                    value: function(e) {
                        e !== this.feature.geometry && (e.id = this.feature.geometry.id,
                            this.feature.geometry = e,
                            this.feature.bounds = this.feature.geometry.bounds)
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.changedState && (this.feature.state = null),
                            this.replaceGeometry(this.oldGeometry.clone()),
                            this.repo.changed(this.feature)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.replaceGeometry(this.newGeometry.clone()),
                            this.changedState && (this.feature.state = OpenLayers.State.UPDATE),
                            this.repo.changed(this.feature)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return e.id = this.feature.getID(),
                            e.geometry = this.newGeometry, {
                                _objectType: this.feature.type,
                                action: g.default.TYPE.UPDATE,
                                attributes: e
                            }
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        return this.newGeometry.getBounds().clone()
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.feature.getUniqueID()]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = I18n.t("objects." + this.feature.type + ".name");
                        this._description = I18n.t("save.changes_log.actions.UpdateFeatureGeometry", {
                            objectType: e
                        })
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.feature]
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(52),
        v = n(m),
        y = i(64),
        b = n(y),
        w = i(12),
        E = n(w),
        k = i(125),
        M = n(k),
        S = i(10),
        T = n(S),
        C = i(22),
        I = n(C),
        A = i(749),
        D = n(A),
        R = i(37),
        O = n(R),
        L = i(61),
        x = n(L),
        P = i(161),
        N = n(P),
        V = i(32),
        F = n(V),
        U = i(96),
        j = n(U),
        B = i(36),
        G = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    u.default)(this, t);
                var n = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, i)),
                    s = i.splits,
                    r = void 0 === s ? null : s,
                    a = i.splitNode,
                    l = void 0 === a ? null : a,
                    d = i.splitAtPoint,
                    c = void 0 === d ? null : d,
                    h = i.splittingPointDistance,
                    p = void 0 === h ? null : h,
                    g = i.splittingPointIndex,
                    m = void 0 === g ? null : g,
                    v = i.splitWithSegment,
                    _ = void 0 === v ? null : v;
                return n.splits = r,
                    n.splitNode = l,
                    n.splitAtPoint = c,
                    n.splittingPointDistance = p,
                    n.splittingPointIndex = m,
                    n.splitWithSegment = _,
                    n.segment = e,
                    n
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_splitSegment",
                    value: function(e) {
                        this.segment.getID(),
                            e.length;
                        var t = this.model.nodes.get(this.segment.attributes.fromNodeID),
                            i = this.model.nodes.get(this.segment.attributes.toNodeID),
                            n = this.addSplitNode();
                        this._createSegments(n),
                            this.connectSegmentsToSplitNode(),
                            this.connectSplitToNode(this.splits[0], t),
                            this.connectSplitToNode(_.last(this.splits), i),
                            this.connectParts(),
                            this.doSubAction(new D.default(this.segment.getID(), _.last(this.splits).getID(), this.splits[0].getID()), {
                                dontSerialize: !0
                            }),
                            this.doSubAction(new b.default(this.segment, {
                                hide: !0
                            }))
                    }
                }, {
                    key: "connectParts",
                    value: function() {
                        if (this.segment.isDrivable()) {
                            var e = this.splits[0],
                                t = _.last(this.splits);
                            if (this.splitNode.isTurnAllowedBySegDirections(e, t)) {
                                var i = new N.default(F.default.forwardOf(e.getID()), F.default.forwardOf(t.getID()), x.default.createAllowed());
                                this.doSubAction(new O.default(this.model.getTurnGraph(), i))
                            }
                            if (this.splitNode.isTurnAllowedBySegDirections(t, e)) {
                                var n = new N.default(F.default.reverseOf(t.getID()), F.default.reverseOf(e.getID()), x.default.createAllowed());
                                this.doSubAction(new O.default(this.model.getTurnGraph(), n))
                            }
                        }
                    }
                }, {
                    key: "_setVirtualNodes",
                    value: function(e, t, i) {
                        var n = this,
                            s = this._getSplitEdge(i.geometry),
                            a = this.segment.attributes.virtualNodeIDs,
                            o = _.partition(a, function(e) {
                                var t = n.model.nodes.get(e);
                                return n._getSplitEdge(t.geometry) < s
                            }),
                            l = (0,
                                r.default)(o, 2),
                            u = l[0],
                            d = l[1];
                        e.attributes.virtualNodeIDs = u,
                            t.attributes.virtualNodeIDs = d
                    }
                }, {
                    key: "_createSegments",
                    value: function(e) {
                        var t = this.segment.attributes.origID || this.segment.getID() || null,
                            i = this.segment.attributes,
                            n = this.splits[0],
                            s = this.splits[1];
                        n.attributes.toNodeID = e.getID(),
                            n.attributes.fromNodeID = i.fromNodeID,
                            s.attributes.toNodeID = i.toNodeID,
                            s.attributes.fromNodeID = e.getID(),
                            this._setVirtualNodes(n, s, e),
                            this.splits.forEach(function(e) {
                                e.attributes.fwdDirection = i.fwdDirection,
                                    e.attributes.revDirection = i.revDirection,
                                    e.attributes.fwdToll = i.fwdToll,
                                    e.attributes.revToll = i.revToll,
                                    e.attributes.origIDs = [t],
                                    e.setID(null),
                                    this.doSubAction(new j.default(e))
                            }, this)
                    }
                }, {
                    key: "addSplitNode",
                    value: function() {
                        var e = void 0,
                            t = void 0;
                        return this.splitNode || (e = _.last(this.splits[0].geometry.components),
                                e = new OpenLayers.Geometry.Point(e.x, e.y),
                                t = new M.default(e, []),
                                this.doSubAction(t),
                                this.splitNode = t.node),
                            this.splitNode
                    }
                }, {
                    key: "connectSegmentsToSplitNode",
                    value: function() {
                        this.splitWithSegment && this.doSubAction(new v.default(this.splitNode, this.splitWithSegment)),
                            this.splits.forEach(function(e) {
                                this.doSubAction(new v.default(this.splitNode, e, {
                                    dontSerialize: !0
                                }))
                            }, this)
                    }
                }, {
                    key: "connectSplitToNode",
                    value: function(e, t) {
                        t && this.doSubAction(new v.default(t, e, {
                            dontSerialize: !0
                        }))
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        return !(this.splitAtPoint && !this.createSplitsFromPoint(this.splitAtPoint)) && (!!this.splits && (!this.hasSingularParts() && void this._splitSegment(this.splits)))
                    }
                }, {
                    key: "hasSingularParts",
                    value: function() {
                        var e = this.model.distanceCache.getValue(this.segment.geometry.getVertices(!0)[0]);
                        return this.splits.some(function(t) {
                            return t.geometry.getLength() < e
                        }, this)
                    }
                }, {
                    key: "createSplitsFromPoint",
                    value: function(e) {
                        var t = void 0;
                        if (I.default.defined(this.splittingPointIndex))
                            t = this.splittingPointIndex;
                        else if (-1 === (t = this._getSplitEdge(e)))
                            return !1;
                        var i = this.segment.geometry.getVertices().map(function(e) {
                                return new OpenLayers.Geometry.Point(e.x, e.y)
                            }),
                            n = new OpenLayers.Geometry.LineString(i.slice(0, t + 1));
                        _.last(n.components).equals(e) || n.components.push(e.clone());
                        var s = new OpenLayers.Geometry.LineString(i.slice(t + 1));
                        return s.components[0].equals(e) || s.components.unshift(e.clone()),
                            this.splits = [n, s].map(function(e) {
                                return this.createSplitSegmentPart(this.segment, e)
                            }, this), !0
                    }
                }, {
                    key: "_getSplitEdge",
                    value: function(e) {
                        var t = this.segment.geometry.getVertices();
                        return T.default.getPointEdge(t, e, this.splittingPointDistance)
                    }
                }, {
                    key: "createSplitSegmentPart",
                    value: function(e, t) {
                        var i = e.clone();
                        return delete i.geometry,
                            i.geometry = t,
                            i
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return this.splits
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            B.formatActionAddressDescription)(this.segment, "SplitSegments")
                    }
                }]),
                t
        }(E.default);
    t.default = G,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(20),
        v = n(m),
        _ = i(238),
        y = n(_),
        b = i(37),
        w = n(b),
        E = i(32),
        k = n(E),
        M = i(36),
        S = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    o.default)(this, t);
                var s = (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).call(this, n)),
                    a = n.deleteNode,
                    l = void 0 === a || a,
                    u = n.keepTurns,
                    d = void 0 !== u && u;
                return s.deleteNode = l,
                    s.keepTurns = d,
                    s.segment = e,
                    s.node = i,
                    s.vertex = k.default.for(s.segment, s.node),
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment, this.node]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = this,
                            i = {};
                        if (this.segment.isVirtuallyConnectedToNode(this.node)) {
                            var n = this.segment.attributes.virtualNodeIDs.filter(function(t) {
                                return t !== e.node.getID()
                            });
                            i.virtualNodeIDs = n
                        } else {
                            var s = this.segment.getTurnsLockAttribute(this.node),
                                r = this.segment.getNodeAttribute(this.node);
                            if (!r)
                                return !1;
                            i[s] = !1,
                                i[r + "NodeID"] = null,
                                this._updateTurns()
                        }
                        var a = this.node.attributes.segIDs.filter(function(t) {
                            return t !== e.segment.getID()
                        });
                        if (this.segment.getID(),
                            this.node.getID(),
                            this.doSubAction(new v.default(this.segment, i)),
                            this.doSubAction(new v.default(this.node, {
                                segIDs: a
                            })),
                            this.node.isVirtual() && 1 === this.node.attributes.segIDs.length) {
                            var o = this.model.segments.get(this.node.attributes.segIDs[0]);
                            this.doSubAction(new t(o, this.node))
                        }
                        return this.node.isDisconnected() && this.deleteNode && this.doSubAction(new y.default(this.node)), !0
                    }
                }, {
                    key: "_updateTurns",
                    value: function() {
                        var e = this,
                            t = this.model.getTurnGraph();
                        return this.keepTurns || (t.getTurnsFrom(this.vertex).forEach(function(i) {
                                return e.doSubAction(new w.default(t, i.withUnknownTurnData()))
                            }),
                            t.getTurnsTo(this.vertex.getOpposite()).forEach(function(i) {
                                return e.doSubAction(new w.default(t, i.withUnknownTurnData()))
                            })), !0
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            M.formatActionAddressDescription)(this.segment, "DisconnectSegment")
                    }
                }]),
                t
        }(g.default);
    t.default = S,
        e.exports = t.default
}, , , , , , , , , function(e, t, i) {
    var n = i(44),
        s = i(194),
        r = i(195),
        a = i(34),
        o = i(101),
        l = i(147),
        u = {},
        d = {},
        t = e.exports = function(e, t, i, c, h) {
            var f, p, g, m, v = h ? function() {
                    return e
                } :
                l(e),
                _ = n(i, c, t ? 2 : 1),
                y = 0;
            if ("function" != typeof v)
                throw TypeError(e + " is not iterable!");
            if (r(v)) {
                for (f = o(e.length); f > y; y++)
                    if ((m = t ? _(a(p = e[y])[0], p[1]) : _(e[y])) === u || m === d)
                        return m
            } else
                for (g = v.call(e); !(p = g.next()).done;)
                    if ((m = s(g, _, p.value, t)) === u || m === d)
                        return m
        };
    t.BREAK = u,
        t.RETURN = d
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                (0,
                    r.default)(this, e),
                this._value = t
            }
            return (0,
                    o.default)(e, [{
                    key: "add",
                    value: function(e) {
                        this._value |= e
                    }
                }, {
                    key: "remove",
                    value: function(e) {
                        this._value &= ~e
                    }
                }, {
                    key: "setBits",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            e[1] ? t.add(e[0]) : t.remove(e[0])
                        })
                    }
                }, {
                    key: "isEnabled",
                    value: function(e) {
                        return 0 != (this._value & e)
                    }
                }, {
                    key: "isPowerOf2Enabled",
                    value: function(e) {
                        return 0 != (this._value & 1 << e)
                    }
                }, {
                    key: "isDisabled",
                    value: function(e) {
                        return 0 == (this._value & e)
                    }
                }, {
                    key: "value",
                    get: function() {
                        return this._value
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SegmentRestrictionViewHelpers = t.TurnRestrictionViewHelpers = t.TimeFrameViewHelpers = void 0;
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(209),
        u = n(l),
        d = i(160),
        c = i(39),
        h = new u.default,
        f = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.timeFrame,
                    n = void 0 === i ? null : i;
                (0,
                    r.default)(this, e),
                this._timeFrame = n
            }
            return (0,
                    o.default)(e, [{
                    key: "formatWeekdays",
                    value: function() {
                        if (this._timeFrame.isAllWeek())
                            return I18n.t("restrictions.editing.timeframe.all_week");
                        var e = this._timeFrame.getWeekdays(),
                            t = e.map(function(e) {
                                return d.WEEKDAY_ORDINALS.indexOf(e)
                            });
                        return h.getWeekdaysGist(t, "*").map(function(e) {
                            return "*" !== e ? I18n.t("date.abbr_day_names")[e] : e
                        }).join(", ").replace(/, \*,/g, "-")
                    }
                }, {
                    key: "formatHours",
                    value: function() {
                        return this._timeFrame.isAllDay() ? I18n.t("restrictions.editing.timeframe.all_day") : this._timeFrame.getFromTime() + " - " + this._timeFrame.getToTime()
                    }
                }, {
                    key: "formatDateRange",
                    value: function() {
                        return this._timeFrame.isDuringDates() ? I18n.t("restrictions.editing.timeframe.date_range", {
                            start: new Date(this._timeFrame.getStartDate()).toLocaleDateString(),
                            end: new Date(this._timeFrame.getEndDate()).toLocaleDateString()
                        }) : I18n.t("restrictions.editing.timeframe.always")
                    }
                }]),
                e
        }(),
        p = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.dataModel,
                    n = t.segment;
                (0,
                    r.default)(this, e),
                this._dataModel = i,
                    this._segment = n
            }
            return (0,
                    o.default)(e, [{
                    key: "getEditingDrivingTitle",
                    value: function(e) {
                        return this.getDrivingRestrictedTitle(e.getDirection())
                    }
                }, {
                    key: "getDrivingRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.driving_restricted", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "getDrivingNotRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.driving_not_restricted", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "getPickupTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.pickup", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "_getHeading",
                    value: function(e) {
                        return e === c.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._segment.getFwdHeading() : e === c.RESTRICTION_SEGMENT_DIRECTION.REV ? this._segment.getRevHeading() : e === c.RESTRICTION_SEGMENT_DIRECTION.BOTH ? null : void 0
                    }
                }, {
                    key: "_getDirectionString",
                    value: function(e) {
                        if (e === c.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            return I18n.t("restrictions.editing.titles.segment.both_ways");
                        var t = this._getHeading(e);
                        return I18n.t("segment.heading")[t]
                    }
                }]),
                e
        }(),
        g = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.dataModel,
                    n = t.turn;
                (0,
                    r.default)(this, e),
                this._turn = n,
                    this._dataModel = i,
                    this._restrictions = this._turn.getTurnData().getRestrictions(),
                    this._fromSegment = this._dataModel.segments.get(this._turn.getFromVertex().getSegmentID()),
                    this._toSegment = this._dataModel.segments.get(this._turn.getToVertex().getSegmentID())
            }
            return (0,
                    o.default)(e, [{
                    key: "getEditingTitle",
                    value: function(e) {
                        return e.isDifficult() ? this._getDifficultTitle() : this._getRestrictedTitle()
                    }
                }, {
                    key: "getDifficultSummaryTitle",
                    value: function() {
                        return this._getDifficultTitle()
                    }
                }, {
                    key: "getSummaryTitle",
                    value: function() {
                        return this._getRestrictedTitle()
                    }
                }, {
                    key: "_getRestrictedTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.restricted", {
                            street: this._fromSegment.getAddress().getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.restricted", {
                            from_street: this._fromSegment.getAddress().getStreetName(),
                            to_street: this._toSegment.getAddress().getStreetName()
                        })
                    }
                }, {
                    key: "_getDifficultTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.difficult", {
                            street: this._fromSegment.getAddress().getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.difficult", {
                            from_street: this._fromSegment.getAddress().getStreetName(),
                            to_street: this._toSegment.getAddress().getStreetName()
                        })
                    }
                }]),
                e
        }();
    t.TimeFrameViewHelpers = f,
        t.TurnRestrictionViewHelpers = g,
        t.SegmentRestrictionViewHelpers = p
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.Segments = {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4,
            EDIT_EMPTY_STREET: 8,
            SPLIT_DIRECTIONS: 16
        },
        t.Nodes = {
            EDIT_GEOMETRY: 1,
            DELETE: 2
        },
        t.Landmarks = {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4
        }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(31),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            TYPE: {
                DISCONNECTION: "DISCONNECTION",
                TURN: "TURN",
                DATA: "DATA",
                ROAD_CLOSURE: "ROAD_CLOSURE"
            },
            nested: {
                geometry: OL.Geometry,
                bounds: OL.Geometry
            },
            ONE_WEEK_IN_MILLIS: 6048e5,
            SeverityThreshold: {
                low: 3,
                medium: 7
            },
            disconnectBounds: null,
            initialize: function(e) {
                s.default.prototype.initialize.apply(this, arguments),
                    this.setSeverity(this.attributes.weight),
                    this.editable = this.attributes.open
            },
            merge: function(e) {
                s.default.prototype.merge.apply(this, arguments),
                    this.editable = this.attributes.open
            },
            getDisconnectBounds: function() {
                return this.disconnectBounds || (this.disconnectBounds = this.attributes.bounds.getBounds()),
                    this.disconnectBounds
            },
            setSeverity: function(e) {
                var t = "high";
                e <= this.SeverityThreshold.low ? t = "low" : e <= this.SeverityThreshold.medium && (t = "medium"),
                    this.attributes.severity = t
            },
            getSessions: function() {
                return this.model.problemDetails.get([this.getID()])
            },
            isRecentlyClosed: function() {
                return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= this.ONE_WEEK_IN_MILLIS
            },
            getLocation: function() {
                return this.attributes.geometry
            },
            canEdit: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT)
            },
            PERMISSIONS: {
                EDIT: 1,
                FORCE_CLOSE: 2
            },
            CLASS_NAME: "Waze.Feature.Vector.MapProblem"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(70),
        o = n(a),
        l = i(31),
        u = n(l),
        d = i(15),
        c = n(d),
        h = i(114),
        f = i(76),
        p = n(f),
        g = i(62),
        m = i(166),
        v = n(m),
        y = i(572),
        b = n(y),
        w = i(223),
        E = n(w),
        k = i(50),
        M = n(k),
        S = i(10),
        T = n(S),
        C = i(116),
        I = i(115),
        A = n(I),
        D = OpenLayers.Class(u.default, {
            defaults: function() {
                return {
                    name: "",
                    description: "",
                    rank: 0,
                    lockRank: 0,
                    url: null,
                    phone: null,
                    brand: null,
                    residential: !1,
                    openingHours: [],
                    categories: [],
                    categoryAttributes: this._defaultCategoryAttributes(),
                    services: [],
                    entryExitPoints: [],
                    images: [],
                    venueUpdateRequests: [],
                    aliases: [],
                    approved: !0,
                    externalProviderIDs: [],
                    adLocked: !1,
                    permissions: c.default.ALL_PERMISSIONS
                }
            },
            _defaultCategoryAttributes: function() {
                var e = {};
                if (this.isParkingLot()) {
                    var t = _.result(A.default.prototype, "defaults");
                    this.isNew() && (t.parkingType = C.PARKING_TYPE_PUBLIC),
                        e[g.PARKING_LOT] = t
                }
                return e
            },
            nested: {
                geometry: OL.Geometry,
                images: p.default,
                entryExitPoints: E.default,
                externalProviderIDs: v.default
            },
            SERVICE_TYPES: {
                GENERAL: ["VALLET_SERVICE", "DRIVETHROUGH", "WI_FI", "RESTROOMS", "CREDIT_CARDS", "RESERVATIONS", "OUTSIDE_SEATING", "AIR_CONDITIONING", "PARKING_FOR_CUSTOMERS", "DELIVERIES", "TAKE_AWAY", "WHEELCHAIR_ACCESSIBLE"],
                PARKING_LOT: ["RESERVATIONS", "DISABILITY_PARKING", "CARPOOL_PARKING", "EV_CHARGING_STATION", "VALLET_SERVICE", "CAR_WASH", "SECURITY", "AIRPORT_SHUTTLE"]
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4,
                EDIT_UPDATE_REQUESTS: 8,
                EDIT_EXTERNAL_PROVIDERS: 16
            },
            DEFAULT_POLYGON_SIZE_METERS: 20,
            initialize: function(e) {
                u.default.prototype.initialize.apply(this, arguments),
                    this._originalResidential = this.attributes.residential
            },
            parse: function(e) {
                u.default.prototype.parse.apply(this, arguments),
                    this.parseUpdateRequests(e)
            },
            merge: function(e) {
                _.defaults(e, this.defaults()),
                    u.default.prototype.merge.apply(this, arguments),
                    this._originalResidential = this.attributes.residential
            },
            parseUpdateRequests: function(e) {
                if (e.venueUpdateRequests) {
                    var t = c.default.prototype.arePropertiesEditable.apply(this),
                        i = new b.default({
                            isInEditArea: t,
                            isAdLockedEditable: W.loginManager.canEditAdLockedPlaceUpdates(),
                            isEditable: this.areUpdateRequestsEditable()
                        });
                    e.venueUpdateRequests = e.venueUpdateRequests.map(function(e) {
                        return e.place = this,
                            i.build(e)
                    }, this)
                }
            },
            hasPendingMerge: function() {
                return this.model.actionManager.hasPendingMerge(this.getID())
            },
            setPendingMerge: function(e) {
                this.attributes._pendingMerge = Boolean(e)
            },
            isAdLocked: function() {
                return this.attributes.adLocked
            },
            getCategorySet: function() {
                return this.attributes.categories.reduce(function(e, t) {
                    return e[t] = !0,
                        e
                }, {})
            },
            getMainCategory: function() {
                return this._categoryToParentMap || (this._categoryToParentMap = this._generateCategoryToParentMap()),
                    0 === this.attributes.categories.length ? null : this._categoryToParentMap[this.attributes.categories[0]]
            },
            _generateCategoryToParentMap: function() {
                var e = {};
                return (0,
                        o.default)(W.Config.venues.subcategories).forEach(function(t) {
                        var i = (0,
                                r.default)(t, 2),
                            n = i[0],
                            s = i[1];
                        e[n] = n,
                            s.forEach(function(t) {
                                e[t] = n
                            })
                    }),
                    e
            },
            getServiceSet: function() {
                return this.attributes.services.reduce(function(e, t) {
                    return e[t] = !0,
                        e
                }, {})
            },
            getAddress: function() {
                return M.default.fromStreetID(this.attributes.streetID, this.model, {
                    houseNumber: this.attributes.houseNumber
                })
            },
            is2D: function() {
                return this.geometry.components && this.geometry.components.every(function(e) {
                    return e.components.length > 3
                })
            },
            isPoint: function() {
                return "OpenLayers.Geometry.Point" === this.geometry.CLASS_NAME
            },
            isGasStation: function() {
                return Boolean(this.getCategorySet().GAS_STATION)
            },
            getPolygonGeometry: function() {
                return this.isPoint() ? T.default.pointToSquarePolygon(this.geometry, this.DEFAULT_POLYGON_SIZE_METERS) : this.geometry.clone()
            },
            getPointGeometry: function() {
                return this.isPoint() ? this.geometry.clone() : T.default.polygonToPoint(this.geometry)
            },
            getLockRank: function() {
                return Math.max(this.attributes.rank, this.attributes.lockRank)
            },
            getNavigationPoints: function() {
                return this.attributes.entryExitPoints
            },
            isApproved: function() {
                return this.attributes.approved
            },
            getOpeningHours: function() {
                return new h.Collection(this.attributes.openingHours.map(function(e) {
                    return new h.OpeningHour(e)
                }))
            },
            hasUpdateRequests: function() {
                return this.attributes.venueUpdateRequests && this.attributes.venueUpdateRequests.length > 0
            },
            requiresModeration: function() {
                return this.model.loginManager.getUserRank() < this.attributes.lockRank
            },
            getImagesByUserId: function(e) {
                return _.filter(this.attributes.images, function(t) {
                    return t.get("creatorUserId") === e
                })
            },
            getImageById: function(e) {
                return _.find(this.attributes.images, function(t) {
                    return t.id === e
                })
            },
            arePropertiesEditable: function() {
                return c.default.prototype.arePropertiesEditable.apply(this, arguments) && this.attributes.approved
            },
            areUpdateRequestsEditable: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_UPDATE_REQUESTS)
            },
            areExternalProvidersEditable: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_EXTERNAL_PROVIDERS)
            },
            hasOpenUpdateRequests: function() {
                return this.attributes.venueUpdateRequests.some(function(e) {
                    return null === e.get("approved")
                })
            },
            canConvertToPublic: function() {
                return !1 === this._originalResidential
            },
            isParkingLot: function() {
                var e = this.attributes.categories;
                return Array.isArray(e) && e[0] === g.PARKING_LOT
            },
            isResidential: function() {
                return this.attributes.residential
            },
            CLASS_NAME: "Waze.Feature.Vector.Landmark"
        });
    t.default = D,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(6),
        o = n(a),
        l = Marionette.Behavior.extend({
            defaults: {
                modelAttribute: "model"
            },
            timepickerOptions: {
                defaultTime: !1,
                showMeridian: !1,
                template: "dropdown",
                icons: {
                    up: "fa fa-angle-up",
                    down: "fa fa-angle-down"
                }
            },
            datepickerOptions: {
                singleDatePicker: !0,
                autoUpdateInput: !1,
                locale: {
                    format: "YYYY-MM-DD"
                }
            },
            ui: {
                startDate: ".start-date",
                startTime: ".start-time",
                endDate: ".end-date",
                endTime: ".end-time"
            },
            events: {
                "click .date-input-group .input-group-addon": "_focusSiblingInput",
                "click .input-group.bootstrap-timepicker .input-group-addon": "_focusSiblingInput",
                "click .end-time ,.start-time": "_onTimeInputClicked",
                "click .clear-btn": "_onClearClick"
            },
            bindings: function() {
                return {
                    ".start-date": {
                        observe: "startDate",
                        onGet: this._getDate.bind(this),
                        onSet: this._setDate.bind(this)
                    },
                    ".start-time": {
                        observe: "startDate",
                        onGet: this._getTime.bind(this),
                        onSet: this._setTime.bind(this)
                    },
                    ".end-date": {
                        observe: "endDate",
                        onGet: this._getDate.bind(this),
                        onSet: this._setDate.bind(this)
                    },
                    ".end-time": {
                        observe: "endDate",
                        onGet: this._getTime.bind(this),
                        onSet: this._setTime.bind(this)
                    },
                    ".no-end-date": {
                        observe: "endDate",
                        onGet: function(e) {
                            return e ? e.length > 0 : void 0
                        },
                        onSet: function(e) {
                            return null
                        }
                    }
                }
            },
            onRender: function() {
                this.view.stickit(this.view[this.options.modelAttribute], this.bindings()),
                    this._createTimePickers(),
                    this._createDatePickers()
            },
            onBeforeDestroy: function() {
                this._destroyTimePickers(),
                    this._destroyDatePickers()
            },
            _getModel: function() {
                return this.view[this.options.modelAttribute]
            },
            _onStartDateChanged: function() {
                var e = this._getModel(),
                    t = e.get("startDate"),
                    i = e.get("endDate"),
                    n = null == i || Date.parse(i) < Date.parse(t);
                null != t && (n && e.set({
                        endDate: t
                    }),
                    this._createEndDatePicker())
            },
            _createTimePickers: function() {
                return this.ui.startTime.timepicker(this.timepickerOptions),
                    this.ui.endTime.timepicker(this.timepickerOptions)
            },
            _createDatePickers: function() {
                this._createDatePicker(this.ui.startDate, this.ui.startTime),
                    this._createEndDatePicker(),
                    this._getModel().on("change:startDate", this._onStartDateChanged, this)
            },
            _createEndDatePicker: function() {
                this._destroyEndDatePicker();
                var e = (0,
                    o.default)({
                    minDate: moment(this._getModel().attributes.startDate)
                }, this.datepickerOptions);
                this._createDatePicker(this.ui.endDate, this.ui.endTime, e)
            },
            _createDatePicker: function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.datepickerOptions;
                e.daterangepicker(i),
                    e.on("apply.daterangepicker", function(i, n) {
                        e.val(n.startDate.format(n.locale.format)),
                            e.trigger("change"),
                            t && t.focus()
                    })
            },
            _destroyTimePickers: function() {
                this.ui.startTime && this.ui.startTime.data("timepicker") && this.ui.startTime.data("timepicker").remove(),
                    this.ui.endTime && this.ui.endTime.data("timepicker") && this.ui.endTime.data("timepicker").remove(),
                    this._getModel().off("change:startDate", this._onStartDateChanged)
            },
            _destroyDatePickers: function() {
                this.ui.startDate && this.ui.startDate.data("daterangepicker") && this.ui.startDate.data("daterangepicker").remove(),
                    this._destroyEndDatePicker()
            },
            _destroyEndDatePicker: function() {
                this.ui.endDate && this.ui.endDate.data("daterangepicker") && this.ui.endDate.data("daterangepicker").remove()
            },
            _focusSiblingInput: function(e) {
                return this.$(e.target).parents(".input-group").find("input").focus()
            },
            _onTimeInputClicked: function(e) {
                this.$(e.target).parents(".input-group").find("input").timepicker("showWidget")
            },
            _onClearClick: function(e) {
                this._getModel().set({
                    startDate: null,
                    endDate: null
                })
            },
            _getDate: function(e) {
                var t = null;
                if (null != e) {
                    var i = e.split(" ")[0];
                    this._isValidDate(i) && (t = i)
                }
                return t
            },
            _getTime: function(e) {
                var t = null;
                return e && e.length > 0 && (t = e.split(" ")[1]),
                    t
            },
            _setDate: function(e, t) {
                if (this._isValidDate(e)) {
                    var i = t.view[this.options.modelAttribute].get(t.observe),
                        n = this._getTime(i);
                    return null == n && (n = "00:00"), [e, this._padTime(n)].join(" ")
                }
                return null
            },
            _setTime: function(e, t) {
                var i = t.view[this.options.modelAttribute].get(t.observe),
                    n = this._getDate(i);
                return this._isValidDate(n) ? [n, this._padTime(e)].join(" ") : " " + this._padTime(e)
            },
            _padTime: function(e) {
                var t = e.split(":");
                return 1 === (0,
                        r.default)(t, 1)[0].length && (e = "0" + e),
                    e
            },
            _isValidDate: function(e) {
                return null != Date.parse(e)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(63),
        v = n(m),
        _ = i(205),
        y = n(_),
        b = function(e) {
            function t(e, i, n, s, a) {
                (0,
                    o.default)(this, t);
                var l = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, a));
                return l.city = null,
                    l.state = e,
                    l.country = i,
                    l.name = n,
                    l.isEmpty = s,
                    l
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = null,
                            t = void 0,
                            i = !1;
                        if (this.state || (this.state = this.model.states.getByAttributes({
                                isDefault: !0
                            })[0]), !(e = this.isEmpty ? this.model.cities.getByAttributes({
                                countryID: this.country.getID(),
                                stateID: this.state.getID(),
                                isEmpty: !0
                            })[0] : this.model.cities.getByAttributes({
                                name: this.name,
                                countryID: this.country.getID(),
                                stateID: this.state.getID()
                            })[0])) {
                            this.isEmpty || this.name;
                            var n = new y.default({
                                countryID: this.country.getID(),
                                stateID: this.state.getID(),
                                isEmpty: this.isEmpty,
                                name: this.isEmpty ? "" : this.name
                            });
                            t = new v.default(n, this.model.cities),
                                e = t.object,
                                this.doSubAction(t),
                                i = !0
                        }
                        return this.city = e,
                            i
                    }
                }]),
                t
        }(g.default);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(18),
        v = n(m),
        _ = i(239),
        y = n(_),
        b = i(12),
        w = n(b),
        E = i(170),
        k = n(E),
        M = i(11),
        S = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    o.default)(this, t);
                var n = i.createTwoWay,
                    s = void 0 !== n && n,
                    a = i.openAllTurns,
                    l = void 0 !== a && a,
                    u = (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).call(this, e, i));
                return u.initialSegmentGeometry = null,
                    u.openAllTurns = l,
                    u.segment = e,
                    u.segmentAttributes = {},
                    s && (u.segment.attributes.revDirection = !0,
                        u.segment.attributes.fwdDirection = !0),
                    u
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        if (this.segment.isPoint())
                            return !1;
                        this.segment.geometry.bounds || this.segment.geometry.calculateBounds(),
                            this.segment.bounds || (this.segment.bounds = this.segment.geometry.bounds),
                            this.segment.state = OpenLayers.State.INSERT,
                            this.segment.getID() || this.segment.setID(this.model.segments.generateUniqueID()),
                            this.segment.attributes.streetIDs || (this.segment.attributes.streetIDs = []),
                            this.initialSegmentGeometry = this.segment.geometry.clone(),
                            this.segment.getID(),
                            this.model.segments.put(this.segment);
                        var e = this.segment.attributes.geometry;
                        this.segment.attributes.geometry = null,
                            $.extend(!0, this.segmentAttributes, this.segment.attributes),
                            this.segment.attributes.geometry = e,
                            this.updateEndPoint(null, this.touching.fromVertex, !0),
                            this.updateEndPoint(null, this.touching.toVertex, !1),
                            this.openAllTurns && ["from", "to"].forEach(function(e) {
                                var t = this.segment.getNodeByDirection(e);
                                this.doSubAction(new k.default(t, !0, {
                                    forSegment: this.segment
                                }))
                            }, this)
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.segment.getID(),
                            (0,
                                f.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "undoAction", this).call(this),
                            this.model.segments.remove(this.segment)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.segments.put(this.segment),
                            (0,
                                f.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this.segmentAttributes;
                        return e.id = this.segment.getID(),
                            e.geometry = this.initialSegmentGeometry, {
                                _objectType: M.SEGMENT,
                                action: v.default.TYPE.ADD,
                                attributes: e
                            }
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        var e = w.default.prototype.getBounds.apply(this, arguments) || new OpenLayers.Bounds;
                        return e.extend(this.initialSegmentGeometry.getBounds()),
                            e
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.AddSegment")
                    }
                }]),
                t
        }(y.default);
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(9),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = function() {
            function e(t) {
                (0,
                    u.default)(this, e),
                this.started = !1,
                    this.stopDown = !0,
                    this.dragging = !1,
                    this.touch = !1,
                    this.last = null,
                    this.start = null,
                    this.lastMoveEvt = null,
                    this.oldOnselectstart = null,
                    this.interval = 0,
                    this.timeoutId = null,
                    this.forced = !1,
                    this.active = !1,
                    this.map = t,
                    this.uniqueID = e.baseID--
            }
            return (0,
                    c.default)(e, [{
                    key: "callback",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                        if (this[e])
                            return this[e].apply(this, (0,
                                o.default)(t))
                    }
                }, {
                    key: "dragstart",
                    value: function(e) {
                        e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1]);
                        var t = !0;
                        return this.dragging = !1,
                            (OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) && (this.started = !0,
                                this.start = e.xy,
                                this.last = e.xy,
                                OL.Element.addClass(this.map.viewPortDiv, "olDragDown"),
                                this.down(e),
                                this.callback("down", [e.xy]),
                                OL.Event.stop(e),
                                this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : function() {
                                    return !0
                                }),
                                document.onselectstart = function() {
                                    return !1
                                },
                                t = !this.stopDown),
                            t
                    }
                }, {
                    key: "forceStart",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        return this.started = !0,
                            this.endOnMouseUp = e,
                            this.forced = !0,
                            this.last = {
                                x: 0,
                                y: 0
                            },
                            this.callback("force")
                    }
                }, {
                    key: "forceEnd",
                    value: function() {
                        if (this.forced)
                            return this.endDrag()
                    }
                }, {
                    key: "dragmove",
                    value: function(e) {
                        return this.map.viewPortDiv.offsets && (e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1])),
                            this.lastMoveEvt = e, !this.started || this.timeoutId || e.xy.x === this.last.x && e.xy.y === this.last.y || (this.interval > 0 && (this.timeoutId = window.setTimeout(this.removeTimeout.bind(this), this.interval)),
                                this.dragging = !0,
                                this.move(e),
                                this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                                    document.onselectstart = function() {
                                        return !1
                                    }
                                ),
                                this.last = e.xy), !0
                    }
                }, {
                    key: "dragend",
                    value: function(e) {
                        if (e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1]),
                            this.started) {
                            var t = this.start !== this.last;
                            this.endDrag(),
                                this.up(e),
                                this.callback("up", [e.xy]),
                                t && this.callback("done", [e.xy])
                        }
                        return !0
                    }
                }, {
                    key: "endDrag",
                    value: function() {
                        this.started = !1,
                            this.dragging = !1,
                            this.forced = !1,
                            OL.Element.removeClass(this.map.viewPortDiv, "olDragDown"),
                            document.onselectstart = this.oldOnselectstart
                    }
                }, {
                    key: "down",
                    value: function(e) {}
                }, {
                    key: "move",
                    value: function(e) {}
                }, {
                    key: "up",
                    value: function(e) {}
                }, {
                    key: "out",
                    value: function(e) {}
                }, {
                    key: "mousedown",
                    value: function(e) {
                        return this.dragstart(e)
                    }
                }, {
                    key: "touchstart",
                    value: function(e) {
                        return this.touch || (this.touch = !0,
                                this.map.events.un({
                                    mousedown: this.mousedown,
                                    mouseup: this.mouseup,
                                    mousemove: this.mousemove,
                                    click: this.click,
                                    scope: this
                                })),
                            this.dragstart(e)
                    }
                }, {
                    key: "mousemove",
                    value: function(e) {
                        return this.dragmove(e)
                    }
                }, {
                    key: "touchmove",
                    value: function(e) {
                        return this.dragmove(e)
                    }
                }, {
                    key: "removeTimeout",
                    value: function() {
                        if (this.timeoutId = null,
                            this.dragging)
                            return this.mousemove(this.lastMoveEvt)
                    }
                }, {
                    key: "mouseup",
                    value: function(e) {
                        if (!this.forced || this.endOnMouseUp)
                            return this.started ? this.dragend(e) : void 0
                    }
                }, {
                    key: "touchend",
                    value: function(e) {
                        if (e.xy = this.last, !this.forced)
                            return this.dragend(e)
                    }
                }, {
                    key: "click",
                    value: function(e) {
                        return this.start === this.last
                    }
                }, {
                    key: "activate",
                    value: function(e) {
                        this.$el = e,
                            this.active = !0;
                        var t = $(this.map.viewPortDiv);
                        return this.$el.on("mousedown.drag-" + this.uniqueID, this.mousedown.bind(this)),
                            this.$el.on("touchstart.drag-" + this.uniqueID, this.touchstart.bind(this)),
                            this.map.events.register("mouseup", this, this.mouseup, !0),
                            t.on("mousemove.drag-" + this.uniqueID, this.mousemove.bind(this)),
                            t.on("touchmove.drag-" + this.uniqueID, this.touchmove.bind(this)),
                            t.on("touchend.drag-" + this.uniqueID, this.touchend.bind(this))
                    }
                }, {
                    key: "deactivate",
                    value: function() {
                        return this.active = !1,
                            this.$el.off(".drag-" + this.uniqueID),
                            $(this.map.viewPortDiv).off(".drag-" + this.uniqueID),
                            $(document).off(".drag-" + this.uniqueID),
                            this.map.events.unregister("mouseup", this, this.mouseup),
                            this.touch = !1,
                            this.started = !1,
                            this.forced = !1,
                            this.dragging = !1,
                            this.start = null,
                            this.last = null,
                            OL.Element.removeClass(this.map.viewPortDiv, "olDragDown")
                    }
                }, {
                    key: "adjustXY",
                    value: function(e) {
                        var t = OL.Util.pagePosition(this.map.viewPortDiv);
                        return e.xy.x -= t[0],
                            e.xy.y -= t[1]
                    }
                }]),
                e
        }();
    (0,
        r.default)(h.prototype, {
        CLASS_NAME: "W.Handler.DragElement"
    }),
    h.baseID = 0,
        t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.CHANGE_EVENT = void 0;
    var s = i(7),
        r = n(s),
        a = i(219),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(161),
        f = n(h),
        p = i(61),
        g = n(p),
        m = i(751),
        v = n(m),
        y = i(32),
        b = n(y),
        w = i(159),
        E = n(w),
        k = function() {
            function e(t) {
                (0,
                    u.default)(this, e),
                this._roadGraph = t,
                    this._adjacencyList = new o.default,
                    this._reverseAdjacencyList = new o.default
            }
            return (0,
                    c.default)(e, [{
                    key: "getTurn",
                    value: function(e, t) {
                        var i = null,
                            n = this._adjacencyList.get(e.getID());
                        return n && (i = n[t.getID()]),
                            i || (i = g.default.createUnknown()),
                            new f.default(e, t, i)
                    }
                }, {
                    key: "_putTurnInList",
                    value: function(e, t, i, n) {
                        var s = e.get(t);
                        s || (s = {},
                                e.set(t, s)),
                            s[i] = n
                    }
                }, {
                    key: "_removeTurnFromList",
                    value: function(e, t, i) {
                        var n = e.get(t);
                        n && (delete n[i],
                            0 === (0,
                                r.default)(n).length && e.delete(t))
                    }
                }, {
                    key: "putTurn",
                    value: function(e) {
                        var t = e.getTurnData();
                        if (null === t || t.isUnknown())
                            return void this._deleteTurn(e);
                        this._putTurnInList(this._adjacencyList, e.getFromVertex().getID(), e.getToVertex().getID(), t),
                            this._putTurnInList(this._reverseAdjacencyList, e.getToVertex().getID(), e.getFromVertex().getID(), t),
                            this.trigger("change", e)
                    }
                }, {
                    key: "_deleteTurn",
                    value: function(e) {
                        this._removeTurnFromList(this._adjacencyList, e.getFromVertex().getID(), e.getToVertex().getID()),
                            this._removeTurnFromList(this._reverseAdjacencyList, e.getToVertex().getID(), e.getFromVertex().getID()),
                            this.trigger("change", e)
                    }
                }, {
                    key: "getTurnThroughNode",
                    value: function(e, t, i) {
                        var n = b.default.for(t, e),
                            s = b.default.for(i, e).getOpposite();
                        return this.getTurn(n, s)
                    }
                }, {
                    key: "_getVerticesForPrimaryIndex",
                    value: function(e, t) {
                        var i = e.get(t);
                        return i ? (0,
                            r.default)(i).map(function(e) {
                            return b.default.fromID(e)
                        }) : []
                    }
                }, {
                    key: "getTurnsFrom",
                    value: function(e) {
                        var t = this;
                        return this._getVerticesForPrimaryIndex(this._adjacencyList, e.getID()).map(function(i) {
                            return t.getTurn(e, i)
                        }).filter(function(e) {
                            return !e.getTurnData().isUnknown()
                        })
                    }
                }, {
                    key: "getLegalTrivialTurnsFrom",
                    value: function(e) {
                        var t = this;
                        return this._roadGraph.getConnectedVertices(e).filter(function(i) {
                            return t._roadGraph.isTurnLegal(e, i)
                        }).map(function(i) {
                            return t.getTurn(e, i)
                        })
                    }
                }, {
                    key: "getTurnsTo",
                    value: function(e) {
                        var t = this;
                        return this._getVerticesForPrimaryIndex(this._reverseAdjacencyList, e.getID()).map(function(i) {
                            return t.getTurn(i, e)
                        }).filter(function(e) {
                            return !e.getTurnData().isUnknown()
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this._adjacencyList.clear(),
                            this._reverseAdjacencyList.clear()
                    }
                }, {
                    key: "_parseDescartesLanes",
                    value: function(e, t) {
                        if (null != t.lanes) {
                            var i = new v.default(t.lanes.fromLaneIndex, t.lanes.toLaneIndex, t.lanes.laneArrowAngle);
                            return e.withLanes(i)
                        }
                        return e
                    }
                }, {
                    key: "_parseDescartesTurnData",
                    value: function(e) {
                        var t = void 0;
                        if ("boolean" == typeof e)
                            t = e ? g.default.createAllowed() : g.default.createDisallowed();
                        else {
                            var i = void 0;
                            i = e.navigable ? g.default.State.ALLOWED : g.default.State.DISALLOWED;
                            var n = e.restrictions.map(function(e) {
                                return new E.default(e)
                            });
                            t = g.default.create(i, n, e.instructionOpCode, e.segmentPath),
                                t = this._parseDescartesLanes(t, e)
                        }
                        return t
                    }
                }, {
                    key: "fromDescartes",
                    value: function(e) {
                        var t = this;
                        (0,
                            r.default)(e).forEach(function(i) {
                                (0,
                                    r.default)(e[i]).forEach(function(n) {
                                    var s = t._parseDescartesTurnData(e[i][n]);
                                    t._putTurnInList(t._adjacencyList, i, n, s),
                                        t._putTurnInList(t._reverseAdjacencyList, n, i, s)
                                })
                            }),
                            this.trigger("change")
                    }
                }, {
                    key: "_removeVertexFromList",
                    value: function(e, t) {
                        e.forEach(function(e, i) {
                                delete e[t]
                            }),
                            e.delete(t)
                    }
                }, {
                    key: "_removeVertex",
                    value: function(e) {
                        this._removeVertexFromList(this._adjacencyList, e.getID()),
                            this._removeVertexFromList(this._reverseAdjacencyList, e.getID())
                    }
                }, {
                    key: "deleteNewSegments",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            t._removeVertex(b.default.forwardOf(e)),
                                t._removeVertex(b.default.reverseOf(e))
                        })
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = {};
                        return this._adjacencyList.forEach(function(t, i) {
                                var n = (0,
                                    r.default)(t).filter(function(e) {
                                    return null !== t[e]
                                }).map(function(e) {
                                    return t[e].isAllowed() || (e += "!"),
                                        e
                                });
                                n.length > 0 && (e[i] = n)
                            }),
                            e
                    }
                }]),
                e
        }();
    _.extend(k.prototype, Backbone.Events),
        t.default = k,
        t.CHANGE_EVENT = "change"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SaveError = void 0;
    var s = i(110),
        r = n(s),
        a = i(109),
        o = n(a),
        l = i(72),
        u = n(l),
        d = i(155),
        c = n(d),
        h = i(17),
        f = n(h),
        p = i(19),
        g = n(p),
        m = i(21),
        v = n(m),
        y = i(7),
        b = n(y),
        w = i(6),
        E = n(w),
        k = i(1),
        M = n(k),
        S = i(2),
        T = n(S),
        C = i(0),
        I = n(C),
        A = i(3),
        D = n(A),
        R = i(4),
        O = n(R),
        L = i(22),
        x = n(L),
        P = i(60),
        N = n(P),
        V = i(248),
        F = n(V),
        U = i(777),
        j = n(U),
        B = i(12),
        G = n(B),
        z = i(25),
        H = function(e) {
            function t(e) {
                (0,
                    I.default)(this, t);
                var i = (0,
                    D.default)(this, (t.__proto__ || (0,
                    T.default)(t)).call(this, "Save Error"));
                return Error.captureStackTrace && Error.captureStackTrace(i, t),
                    i.errors = e,
                    i
            }
            return (0,
                    O.default)(t, e),
                t
        }(function(e) {
            function t() {
                var t = (0,
                    c.default)(e, (0,
                    u.default)(arguments));
                return (0,
                        o.default)(t, (0,
                        T.default)(this)),
                    t
            }
            return t.prototype = (0,
                    r.default)(e.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                o.default ? (0,
                    o.default)(t, e) : t.__proto__ = e,
                t
        }(Error)),
        $ = function() {
            function e(t) {
                (0,
                    I.default)(this, e),
                this.scale = null,
                    this.zoom = null,
                    this.oldScale = null,
                    this.keepObjects = !1,
                    this.lastReadRequest = null,
                    (0,
                        E.default)(this, t),
                    this.app = W.app,
                    this.model = W.model,
                    this.map = W.map,
                    this.descartes = this.app.descartes,
                    this.selectionManager = W.selectionManager,
                    this.events = new OpenLayers.Events(this),
                    this.serializer = new N.default,
                    this.loadingOperation = {
                        id: "pending.road_data"
                    },
                    this.snapshotManager.on("change:state", this.reload, this),
                    this.selectionManager.events.on({
                        selectionchanged: this._onSelectionChange,
                        scope: this
                    })
            }
            return (0,
                    M.default)(e, [{
                    key: "bindToMap",
                    value: function(e) {
                        var t = this;
                        e.events.on({
                            moveend: function() {
                                t.updateModel(!1)
                            }
                        })
                    }
                }, {
                    key: "reload",
                    value: function() {
                        return this.model.clear(),
                            this.updateModel(!1)
                    }
                }, {
                    key: "updateModel",
                    value: function(e) {
                        var t = {};
                        this.keepObjects = e,
                            this.oldScale = this.scale,
                            this.scale = this.map.getScale(),
                            this.zoom = this.map.getZoom();
                        var i = this.map.calculateBounds(),
                            n = this.descartes.getExpandedDataBounds(i);
                        if (null !== n) {
                            var s = !0,
                                r = !1,
                                a = void 0;
                            try {
                                for (var o, l = (0,
                                        v.default)((0,
                                        b.default)(this.model.repos)); !(s = (o = l.next()).done); s = !0) {
                                    var u = o.value,
                                        d = this.model.repos[u];
                                    d.active && (0,
                                        E.default)(t, d.updateDataExtent(i, this.scale, this.zoom))
                                }
                            } catch (e) {
                                r = !0,
                                    a = e
                            } finally {
                                try {
                                    !s && l.return && l.return()
                                } finally {
                                    if (r)
                                        throw a
                                }
                            }
                            _.isEmpty((0,
                                b.default)(t)) || (this.app.isSandboxMode() && (t.sandbox = !0),
                                x.default.printMap(t),
                                this.sendReadFeatures(t, n))
                        }
                    }
                }, {
                    key: "_isEqualToLastRequest",
                    value: function(e, t) {
                        return null !== this.lastReadRequest && _.isEqual(this.lastReadRequest.filter, e) && t.equals(this.lastReadRequest.bounds)
                    }
                }, {
                    key: "sendReadFeatures",
                    value: function(e, t) {
                        var i = this;
                        if (!this._isEqualToLastRequest(e, t))
                            return this.events.triggerEvent("loadstart"),
                                W.vent.trigger("operationPending", {
                                    operation: this.loadingOperation
                                }),
                                null != this.model.lastTransactionID && (e.mapVersionID = this.model.lastTransactionID),
                                this.snapshotManager.isSnapshotOn() && (e.snapshot = !0),
                                this.app.set("loadingFeatures", !0),
                                this.lastReadRequest = {
                                    filter: e,
                                    bounds: t
                                },
                                this.descartes.getFeatures(this.map.calculateBounds(), e).then(function(e) {
                                    return i.serializer.read(e),
                                        i.model.mergeObjects(t, e, i.keepObjects)
                                }).catch(function(e) {
                                    "abort" !== e.reason && console.error("Error getting features", e)
                                }).finally(function() {
                                    i.events.triggerEvent("loadend"),
                                        W.vent.trigger("operationDone", {
                                            operation: i.loadingOperation
                                        }),
                                        i.app.set("loadingFeatures", !1),
                                        i.keepObjects = !1,
                                        i.lastReadRequest = null
                                })
                    }
                }, {
                    key: "save",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return x.default.protect("saving", function() {
                            var i = t.actions || e.model.actionManager.getActions(),
                                n = {
                                    actions: e._serializeActions(i)
                                };
                            return e.descartes.postFeatures(n, e.model.getChangesExtent(), t.ignoreWarnings).then(function(t) {
                                return e._processSaveResponse(t), {
                                    pendingEdits: e._getPendingEdits(t),
                                    saveCount: e._getSaveCount(t),
                                    unsavedFeatures: t.unsavedFeatures
                                }
                            }).catch(function(t) {
                                if (t instanceof z.FetchError) {
                                    var i = e._parseErrorResponse(t.response),
                                        n = i[0],
                                        s = void 0;
                                    throw n && (s = n.get("code")),
                                        W.Report.generalAction("save_error", s),
                                        new H(i)
                                }
                                throw t
                            }).finally(function() {
                                W.Report.generalAction("save_clicked", e.model.actionManager.unsavedActionsNum())
                            })
                        })
                    }
                }, {
                    key: "_serializeActions",
                    value: function(e) {
                        var t = new j.default,
                            i = new G.default;
                        return i.subActions = e,
                            i.accept(t),
                            t.getResult()
                    }
                }, {
                    key: "_getPendingEdits",
                    value: function(e) {
                        var t = void 0;
                        return t = e.pendingEdits ? e.pendingEdits.venues : [], {
                            venues: this.model.venues.getByIds(t)
                        }
                    }
                }, {
                    key: "_getSaveCount",
                    value: function(e) {
                        for (var t = {}, i = ["segments", "nodes", "venues", "bigJunctions"], n = 0; n < i.length; n++) {
                            var s = i[n],
                                r = e[s] || {};
                            t[s] = (0,
                                b.default)(r).length
                        }
                        return t
                    }
                }, {
                    key: "_parseErrorResponse",
                    value: function(e) {
                        if (!e) {
                            return [new F.default({
                                code: 500,
                                details: "fatal server error"
                            })]
                        }
                        return this._parseErrors(e)
                    }
                }, {
                    key: "_parseErrors",
                    value: function(e) {
                        var t = void 0;
                        t = e.errorList ? e : {
                            errorList: [e],
                            errorLevel: "ERROR"
                        };
                        var i = "WARNING" === e.errorLevel,
                            n = t.errorList.map(function(e) {
                                return e.ignorable = i,
                                    new F.default(e, {
                                        parse: !0
                                    })
                            });
                        return n.length ? n : [new F.default({
                            code: "default"
                        })]
                    }
                }, {
                    key: "_processSaveResponse",
                    value: function(e) {
                        var t = this;
                        return x.default.protect("processing save results", function() {
                            var i = null != e.userLimits,
                                n = null != e.connections,
                                s = null != e.segmentsIdMapping;
                            t._updateRepositoriesFromSaveResponse(e),
                                t._removeDeletedObjectsAfterSave(),
                                i && t._updateUserQuotasAfterSave(e.userLimits),
                                s && t._updateTurnGraphSegmentsIdMapping(e.segmentsIdMapping),
                                n && t._updateTurnGraphConnections(e.connections),
                                t.model.actionManager.clear(),
                                t.model.setLastTransactionID(e.mapVersionID)
                        })
                    }
                }, {
                    key: "_updateRepositoriesFromSaveResponse",
                    value: function(e) {
                        var t = this;
                        (0,
                            b.default)(e).filter(function(e) {
                            return t.model.isRepository(e)
                        }).map(function(e) {
                            return t.model[e]
                        }).forEach(function(i) {
                            var n = i.name,
                                s = e[n];
                            t._updateRepositoryFromServerResponse(i, s)
                        })
                    }
                }, {
                    key: "_updateRepositoryFromServerResponse",
                    value: function(e, t) {
                        var i = this;
                        (0,
                            b.default)(t).forEach(function(n) {
                            var s = t[n];
                            g.default.resolve(e.get(n)).then(function(t) {
                                null == t ? i._createNewObjectInRepository(s, e) : i._updateExistingObjectInRepository(t, s, e, n)
                            })
                        })
                    }
                }, {
                    key: "_createNewObjectInRepository",
                    value: function(e, t) {
                        var i = (0,
                            f.default)({}, t.name, {
                            objects: [e]
                        });
                        this.serializer.read(i);
                        var n = i[t.name].objects[0];
                        t.put(n)
                    }
                }, {
                    key: "_updateExistingObjectInRepository",
                    value: function(e, t, i, n) {
                        null == t ? this._deletedObjectInRepository(e, i) : this._updateObjectInRepository(e, i, t, n)
                    }
                }, {
                    key: "_deletedObjectInRepository",
                    value: function(e, t) {
                        e.state = OpenLayers.State.DELETE,
                            t.remove(e)
                    }
                }, {
                    key: "_updateObjectInRepository",
                    value: function(e, t, i, n) {
                        var s = i.id,
                            r = n !== s,
                            a = _.omit(i, "id");
                        t.mergeObjectAttributes(e, a),
                            r && t.changeObjectID(e, s)
                    }
                }, {
                    key: "_removeDeletedObjectsAfterSave",
                    value: function() {
                        this.model.removeModifiedDeletedObjects()
                    }
                }, {
                    key: "_updateUserQuotasAfterSave",
                    value: function(e) {
                        this.model.loginManager.resetUserLimits(e)
                    }
                }, {
                    key: "_updateTurnGraphConnections",
                    value: function(e) {
                        this.model.getTurnGraph().fromDescartes(e)
                    }
                }, {
                    key: "_updateTurnGraphSegmentsIdMapping",
                    value: function(e) {
                        this.model.getTurnGraph().deleteNewSegments((0,
                            b.default)(e))
                    }
                }, {
                    key: "_onSelectionChange",
                    value: function() {
                        return this.app.set("featureSelected", this.selectionManager.hasSelectedFeatures()),
                            this.app.trigger("selectionChanged", {
                                selection: W.selectionManager.getSelectedFeatures()
                            })
                    }
                }]),
                e
        }();
    (0,
        E.default)($.prototype, {
        CLASS_NAME: "Waze.Controller"
    }),
    t.default = $,
        t.SaveError = H
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(13),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {
            selectionRequiredOption: function(e) {
                return Backbone.$("<option/>").prop("disabled", "disabled").prop("selected", "selected").text(e).val("")
            },
            selectOptionsFromList: function(e, t, i) {
                var n = null,
                    s = e.map(function(e) {
                        return {
                            value: e,
                            label: t(e)
                        }
                    });
                return void 0 !== i && (s = s.filter(function(e) {
                        return e.value !== i
                    }),
                    n = {
                        value: i,
                        label: t(i)
                    }), {
                    collection: s,
                    defaultOption: n
                }
            },
            checkboxList: function(e) {
                return {
                    observe: e,
                    getVal: function(e, t, i) {
                        return e.filter(":checked").toArray().map(function(e) {
                            return $(e).attr("value")
                        })
                    },
                    update: function(e, t, i, n) {
                        var s = t || [];
                        return e.toArray().forEach(function(e) {
                            var t = $(e),
                                i = s.indexOf(t.attr("value")) > -1;
                            return t.attr("checked", i)
                        })
                    }
                }
            },
            requireAndEnableIfNot: function(e) {
                return [{
                    observe: e,
                    name: "required",
                    onGet: function(e) {
                        return !e
                    }
                }, {
                    name: "disabled",
                    observe: e
                }]
            },
            contentsAndVisiblity: function(e) {
                return {
                    observe: [e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e],
                    onGet: function(e) {
                        var t = (0,
                                s.default)(e, 2),
                            i = t[0];
                        return t[1] && i
                    },
                    visible: !0,
                    updateView: !0
                }
            },
            initBootstrapSupport: function() {
                return Backbone.Stickit.addHandler({
                        selector: ".btn-group input[type=radio]",
                        update: function(e, t) {
                            if (e.parent(".btn").removeClass("active"),
                                null !== t && "" !== t) {
                                var i = e.filter("[value=" + t + "]");
                                i.parent(".btn").addClass("active"),
                                    i.prop("checked", "checked")
                            }
                        }
                    }),
                    Backbone.Stickit.addHandler({
                        selector: ".btn-group[data-type=boolean] input[type=radio]",
                        onSet: function(e) {
                            return "true" === e
                        }
                    })
            }
        };
    r.initBootstrapSupport(),
        t.default = r,
        e.exports = t.default
}, , , function(e, t, i) {
    var n = i(82),
        s = i(28)("toStringTag"),
        r = "Arguments" == n(function() {
            return arguments
        }()),
        a = function(e, t) {
            try {
                return e[t]
            } catch (e) {}
        };
    e.exports = function(e) {
        var t, i, o;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(i = a(t = Object(e), s)) ? i : r ? n(t) : "Object" == (o = n(t)) && "function" == typeof t.callee ? "Arguments" : o
    }
}, , function(e, t, i) {
    var n = i(23),
        s = i(14),
        r = i(47);
    e.exports = function(e, t) {
        var i = (s.Object || {})[e] || Object[e],
            a = {};
        a[e] = t(i),
            n(n.S + n.F * r(function() {
                i(1)
            }), "Object", a)
    }
}, , , , function(e, t, i) {
    e.exports = {
        default: i(465),
        __esModule: !0
    }
}, function(e, t, i) {
    e.exports = {
        default: i(468),
        __esModule: !0
    }
}, function(e, t, i) {
    e.exports = {
        default: i(476),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.VEHICLE_TYPES = void 0;
    var s = i(6),
        r = n(s),
        a = i(48),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = {
            TRUCK: 0,
            PUBLIC_TRANSPORTATION: 256,
            TAXI: 272,
            BUS: 288,
            RV: 512,
            TOWING_VEHICLE: 768,
            MOTORCYCLE: 1024,
            PRIVATE: 1280,
            HAZARDOUS_MATERIALS: 1536,
            CAV: 1792,
            EV: 1808,
            HYBRID: 1824,
            CLEAN_FUEL: 1840
        },
        f = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.vehicleTypes,
                    n = void 0 === i ? [] : i,
                    s = t.subscriptions,
                    r = void 0 === s ? [] : s,
                    a = t.numPassengers,
                    l = void 0 === a ? 0 : a;
                (0,
                    u.default)(this, e),
                this._vehicleTypes = n,
                    this._subscriptions = r,
                    this._numPassengers = l,
                    (0,
                        o.default)(this)
            }
            return (0,
                    c.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._numPassengers === e._numPassengers && _.isEqual(this._vehicleTypes.sort(), e._vehicleTypes.sort()) && _.isEqual(this._subscriptions.sort(), e._subscriptions.sort())
                    }
                }, {
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            r.default)(this.toJSON(), e))
                    }
                }, {
                    key: "getNumPassengers",
                    value: function() {
                        return this._numPassengers
                    }
                }, {
                    key: "getVehicleTypes",
                    value: function() {
                        return this._vehicleTypes.slice()
                    }
                }, {
                    key: "getSubscriptions",
                    value: function() {
                        return null == this._subscriptions ? [] : this._subscriptions.slice()
                    }
                }, {
                    key: "hasSubscriptions",
                    value: function() {
                        return null != this._subscriptions && this._subscriptions.length > 0
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return !this._vehicleTypes || 0 === this._vehicleTypes.length
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            vehicleTypes: this._vehicleTypes,
                            numPassengers: this._numPassengers,
                            subscriptions: this._subscriptions
                        }
                    }
                }]),
                e
        }();
    t.default = f,
        t.VEHICLE_TYPES = h
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function s(e, t) {
        return (0,
            v.default)(t).reduce(function(i, n) {
            return S[e] && S[e][n] || !C[e] || !C[e][n] ? i[n] = t[n] : i[n] = C[e][n](t[n]),
                i
        }, {})
    }

    function r(e, t, i, n, s) {
        return i.map(function(i) {
            var r = n[i],
                a = s[i],
                o = T[t] && T[t][i],
                l = {};
            if (Array.isArray(r)) {
                var u, d, c = a && a.length > 0 ? (u = _).without.apply(u, [r].concat((0,
                        g.default)(a))) : r.concat(),
                    h = r && r.length > 0 ? (d = _).without.apply(d, [a].concat((0,
                        g.default)(r))) : a.concat();
                l = {
                    added: (0,
                        y.formatValue)(e, t, i, c),
                    removed: (0,
                        y.formatValue)(e, t, i, h)
                }
            }
            return (0,
                f.default)({
                name: i,
                displayName: (0,
                    y.formatFieldName)(t, i),
                newValue: (0,
                    y.formatValue)(e, t, i, r),
                oldValue: (0,
                    y.formatValue)(e, t, i, a)
            }, l, {
                isVisual: o
            })
        })
    }

    function a(e, t, i, n) {
        i = s(t, i),
            n = s(t, n);
        var a = _.unique((0,
            v.default)(i).concat((0,
            v.default)(n))).filter(function(e) {
            return !(S[t] && S[t][e] || _.isEqual(n[e], i[e]))
        });
        return r(e, t, a, i, n)
    }

    function o(e, t, i, n) {
        var a = (new E.default).attributes,
            o = i.categoryAttributes || {},
            l = n.categoryAttributes || {};
        o = s(t, o),
            l = s(t, l);
        var u = (0,
                f.default)({}, a, (0,
                v.default)(l).reduce(function(e, t) {
                return (0,
                    f.default)(e, l[t])
            }, {})),
            d = (0,
                f.default)({}, a, (0,
                v.default)(o).reduce(function(e, t) {
                return (0,
                    f.default)(e, o[t])
            }, {}));
        return r(e, t, _.unique((0,
            v.default)(u).concat((0,
            v.default)(d))).filter(function(e) {
            return !_.isEqual(u[e], d[e])
        }), d, u)
    }

    function l(e, t, i, n) {
        var r = new M.default((0,
                f.default)({}, i)),
            o = new M.default((0,
                f.default)({}, n)),
            l = r.getFlagAttributes(),
            u = o.getFlagAttributes();
        return l = s(t, l),
            u = s(t, u),
            a(e, t, l, u)
    }

    function u(e, t, i, n) {
        var s = a(e, t, i, n);
        return t === b.VENUE ? s.push.apply(s, (0,
                g.default)(o(e, y.CATEGORY_ATTRIBUTES_TYPE, i, n))) : t === b.SEGMENT && s.push.apply(s, (0,
                g.default)(l(e, b.SEGMENT, i, n))),
            s
    }

    function d(e) {
        var t = e.object.type;
        return u(e.model, t, (0,
            f.default)({}, e.newAttributes), (0,
            f.default)({}, e.oldAttributes))
    }

    function c(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
            i = d(e);
        return (0,
            y.formatUpdateActionDescription)(i, e, t)
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.buildChanges = t.generateUpdateActionDescription = void 0;
    var h = i(6),
        f = n(h),
        p = i(9),
        g = n(p),
        m = i(7),
        v = n(m),
        y = i(36),
        b = i(11),
        w = i(115),
        E = n(w),
        k = i(30),
        M = n(k),
        S = {
            segment: {
                fromNodeID: !0,
                toNodeID: !0,
                crossroadID: !0,
                flags: !0,
                fwdFlags: !0,
                revFlags: !0,
                scheduleID: !0
            },
            venue: {
                categoryAttributes: !0,
                origIDs: !0
            }
        },
        T = {
            segment: {
                geometry: !0
            },
            venue: {
                geometry: !0,
                entryExitPoints: !0
            }
        },
        C = {
            venue: {
                externalProviderIDs: function(e) {
                    return e.map(function(e) {
                        return e instanceof Backbone.Model ? e.get("uuid") : e
                    })
                }
            }
        };
    t.generateUpdateActionDescription = c,
        t.buildChanges = u
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = t.OpeningHour = Backbone.Model.extend({
        ALL_DAY_FROM: "00:00",
        ALL_DAY_TO: "00:00",
        defaults: function() {
            return {
                fromHour: "09:00",
                toHour: "17:00",
                days: this.defaultDays.concat()
            }
        },
        defaultDays: [1, 2, 3, 4, 5],
        isAllDay: function() {
            return this.get("fromHour") === this.ALL_DAY_FROM && this.get("toHour") === this.ALL_DAY_TO
        },
        setAllDay: function() {
            return this.set("fromHour", this.ALL_DAY_FROM),
                this.set("toHour", this.ALL_DAY_TO)
        }
    });
    t.Collection = Backbone.Collection.extend({
        model: n
    })
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(13),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(116);
    t.default = Backbone.Model.extend({
            defaults: function() {
                return {
                    canExitWhileClosed: !1,
                    numberOfSpots: null,
                    estimatedNumberOfSpots: null,
                    costType: r.UNKNOWN,
                    lotType: [],
                    paymentType: [],
                    parkingType: null,
                    hasTBR: !1
                }
            },
            initialize: function() {
                this.attributes.numberOfSpots && this.attributes.numberOfSpots > 0 && null === this.attributes.estimatedNumberOfSpots && (this.attributes.estimatedNumberOfSpots = this._getSpotsEstimateValue())
            },
            clone: function() {
                var e = $.extend(!0, {}, this.attributes);
                return new this.constructor(e)
            },
            _getSpotsEstimateValue: function() {
                var e = this.attributes.numberOfSpots,
                    t = r.SPOTS_ESTIMATE,
                    i = null;
                if (null === e)
                    return i;
                for (var n = 0; n < t.length; n++) {
                    var a = t[n],
                        o = (0,
                            s.default)(a.range, 2),
                        l = o[0],
                        u = o[1];
                    if (e >= l && e <= u) {
                        i = a.value;
                        break
                    }
                }
                return i
            }
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = (t.UNKNOWN = "UNKNOWN",
        t.PARKING_TYPE_PUBLIC = "PUBLIC");
    t.PARKING_TYPE = [n, "RESTRICTED", "PRIVATE"],
        t.COST_TYPE = ["FREE", "LOW", "MODERATE", "EXPENSIVE"],
        t.PAYMENT_TYPE = ["CASH", "CHECKS", "CREDIT", "DEBIT_CARD", "PERMIT", "MEMBERSHIP", "PREPAID", "PARKING_APP", "DIGITAL_WALLET", "SMS_CALL", "ELECTRONIC_PASS"],
        t.LOT_TYPE = ["STREET_LEVEL", "STREET_LEVEL_COVERED", "MULTI_LEVEL", "UNDERGROUND"],
        t.SPOTS_ESTIMATE = [{
            value: "R_1_TO_10",
            range: [1, 10]
        }, {
            value: "R_11_TO_30",
            range: [11, 30]
        }, {
            value: "R_31_TO_60",
            range: [31, 60]
        }, {
            value: "R_61_TO_100",
            range: [61, 100]
        }, {
            value: "R_101_TO_300",
            range: [101, 300]
        }, {
            value: "R_301_TO_600",
            range: [301, 600]
        }, {
            value: "R_600_PLUS",
            range: [601, 1 / 0]
        }]
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.NOTIFICATION_TYPES = void 0;
    var n = i(207),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {
            PRIVATE_FORUM_MESSAGE: "PRIVATE_FORUM_MESSAGE",
            DISCOVER_COMMUNITY_FORUM: "DISCOVER_COMMUNITY_FORUM",
            DISCOVER_LOCAL_WIKI: "DISCOVER_LOCAL_WIKI",
            FIRST_TIME_VIDEOS: "FIRST_TIME_VIDEOS",
            CHECK_YOUR_NEIGHBORHOOD: "CHECK_YOUR_NEIGHBORHOOD",
            USER_FIRST_EDIT: "USER_FIRST_EDIT",
            MENTEE_CLICKED_LINK: "MENTEE_CLICKED_LINK",
            MENTEE_RETURNED_TO_WME: "MENTEE_RETURNED_TO_WME",
            MENTOR_ENCOURAGMENT: "MENTOR_ENCOURAGMENT",
            MENTOR_FEEDBACK_REQUEST: "MENTOR_FEEDBACK_REQUEST",
            MENTOR_PRIVATE_MESSAGE: "MENTOR_PRIVATE_MESSAGE"
        },
        a = s.default.extend({
            TYPE: r,
            GROUPS: {
                PRIVATE_FORUM_MESSAGE: [r.PRIVATE_FORUM_MESSAGE],
                FIRST_TIME_MESSAGES: [r.DISCOVER_COMMUNITY_FORUM, r.DISCOVER_LOCAL_WIKI, r.FIRST_TIME_VIDEOS, r.CHECK_YOUR_NEIGHBORHOOD],
                MENTORING: [r.USER_FIRST_EDIT, r.MENTEE_CLICKED_LINK, r.MENTEE_RETURNED_TO_WME, r.MENTOR_ENCOURAGMENT, r.MENTOR_FEEDBACK_REQUEST, r.MENTOR_PRIVATE_MESSAGE]
            },
            defaults: function() {
                return {
                    type: null,
                    timestamp: null,
                    parameters: {}
                }
            },
            isForumMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.PRIVATE_FORUM_MESSAGE.indexOf(e) > -1
            },
            isFirstTimeMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.FIRST_TIME_MESSAGES.indexOf(e) > -1
            },
            isMentoringMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.MENTORING.indexOf(e) > -1
            },
            isNotification: function() {
                return !this.isForumMessage() && !this.isFirstTimeMessage() && !this.isMentoringMessage()
            },
            getParameter: function(e) {
                return this.attributes.parameters[e]
            }
        });
    t.NOTIFICATION_TYPES = r,
        t.default = a
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function s(e, t) {
        for (var i = arguments.length, n = Array(i > 2 ? i - 2 : 0), s = 2; s < i; s++)
            n[s - 2] = arguments[s];
        var r = !0,
            a = !1,
            o = void 0;
        try {
            for (var u, c = (0,
                    m.default)((0,
                    p.default)((f = _).omit.apply(f, [(0,
                    h.default)(t)].concat(n)))); !(r = (u = c.next()).done); r = !0) {
                var f, g = (0,
                        d.default)(u.value, 2),
                    v = g[0],
                    y = g[1];
                (0,
                    l.default)(e, v, y)
            }
        } catch (e) {
            a = !0,
                o = e
        } finally {
            try {
                !r && c.return && c.return()
            } finally {
                if (a)
                    throw o
            }
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.WRITABLE_ATTRIBUTES = t.PERMISSIONS = t.CATEGORIES = t.ENGLISH_LOCALE = t.MTE_LOCALES = void 0;
    var r = i(6),
        a = n(r),
        o = i(148),
        l = n(o),
        u = i(13),
        d = n(u),
        c = i(577),
        h = n(c),
        f = i(70),
        p = n(f),
        g = i(21),
        m = n(g),
        v = i(2),
        y = n(v),
        b = i(0),
        w = n(b),
        E = i(1),
        k = n(E),
        M = i(3),
        S = n(M),
        T = i(8),
        C = n(T),
        I = i(4),
        A = n(I),
        D = i(15),
        R = n(D),
        O = i(11),
        L = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(O),
        x = i(31),
        P = n(x),
        N = i(50),
        V = n(N),
        F = {
            el: "ελληνικά"
        },
        U = {
            FESTIVAL: "FESTIVAL",
            PARADE: "PARADE",
            CONCERT: "CONCERT",
            SPORTING_EVENT: "SPORTING_EVENT",
            STADIUM_GAMES: "STADIUM_GAMES",
            VIP_VISIT: "VIP_VISIT",
            CRISIS: "CRISIS",
            CONSTRUCTION: "CONSTRUCTION",
            OTHER: "OTHER"
        },
        j = {
            EDIT_PROPERTIES: 1,
            MANIPULATE_PARTNERS: 2,
            PUBLISH: 4,
            EDIT_TWEET_TEXT: 16
        },
        B = ["id", "category", "cityID", "comment", "startDate", "endDate", "names", "url", "partners", "tweetText"],
        G = function(e) {
            function t(e, i) {
                (0,
                    w.default)(this, t);
                var n = (0,
                    S.default)(this, (t.__proto__ || (0,
                    y.default)(t)).call(this, e));
                return P.default.prototype.initialize.apply(n, arguments),
                    n.type = L.MTE,
                    n.writableAttributes = B,
                    n
            }
            return (0,
                    A.default)(t, e),
                (0,
                    k.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            id: null,
                            active: null,
                            category: null,
                            cityID: null,
                            comment: null,
                            contributors: [],
                            createdBy: null,
                            createdOn: null,
                            description: null,
                            startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                            endDate: null,
                            names: [],
                            permissions: R.default.ALL_PERMISSIONS & ~j.EDIT_TWEET_TEXT,
                            updatedBy: null,
                            updatedOn: null,
                            url: null,
                            published: !1,
                            ready: !1,
                            uniqueName: null,
                            partners: [],
                            tweetText: null,
                            twitterAccountsUrls: []
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        var e = (0,
                                C.default)(t.prototype.__proto__ || (0,
                                y.default)(t.prototype), "clone", this).apply(this, arguments),
                            i = $.extend(!0, [], this.get("names"));
                        return e.set({
                                names: i
                            }),
                            e.model = this.model,
                            e
                    }
                }, {
                    key: "getAddress",
                    value: function() {
                        return V.default.fromCityID(this.attributes.cityID, this.model)
                    }
                }, {
                    key: "getEnglishName",
                    value: function() {
                        var e = _.where(this.attributes.names, {
                            locale: this.ENGLISH_LOCALE
                        });
                        return e.length > 0 ? e[0].value : null
                    }
                }, {
                    key: "getLocale",
                    value: function() {
                        var e = this._getLocalNameObject();
                        return null !== e ? e.locale : null
                    }
                }, {
                    key: "getLocalName",
                    value: function() {
                        var e = this._getLocalNameObject();
                        return null !== e ? e.value : null
                    }
                }, {
                    key: "_getLocalNameObject",
                    value: function() {
                        var e = this,
                            t = _.reject(this.attributes.names, function(t) {
                                return t.locale === e.ENGLISH_LOCALE
                            });
                        return t.length > 0 ? t[0] : null
                    }
                }, {
                    key: "canPublish",
                    value: function() {
                        return !this.isNew() && this.get("ready") && this.isAllowed(j.PUBLISH)
                    }
                }, {
                    key: "canEditPartners",
                    value: function() {
                        return this.isAllowed(j.MANIPULATE_PARTNERS)
                    }
                }, {
                    key: "canEditTweetText",
                    value: function() {
                        return this.isAllowed(j.EDIT_TWEET_TEXT)
                    }
                }]),
                t
        }(Backbone.Model);
    s(G.prototype, R.default.prototype, "clone", "initialize", "constructor"),
        s(G.prototype, P.default.prototype, "clone", "initialize", "constructor"),
        (0,
            a.default)(G.prototype, {
            PERMISSIONS: j,
            CATEGORIES: U,
            MTE_LOCALES: F,
            ENGLISH_LOCALE: "en"
        }),
        t.MTE_LOCALES = F,
        t.ENGLISH_LOCALE = "en",
        t.CATEGORIES = U,
        t.PERMISSIONS = j,
        t.WRITABLE_ATTRIBUTES = B,
        t.default = G
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(156),
        g = n(p),
        m = i(581),
        v = n(m),
        y = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            transactionID: null,
                            actionType: null,
                            date: null,
                            userID: null,
                            objects: []
                        }
                    }
                }, {
                    key: "getObject",
                    value: function(e, t) {
                        return this.attributes.objects.filter(function(i) {
                            return i.attributes.objectID === t && i.attributes.objectType === e
                        })[0]
                    }
                }, {
                    key: "nested",
                    get: function() {
                        return {
                            objects: v.default
                        }
                    }
                }]),
                t
        }(Backbone.Model);
    y.ACTIONS = {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        _.extend(y.prototype, g.default),
        t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(20),
        g = n(p),
        m = i(59),
        v = n(m),
        y = i(27),
        b = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                i.dataModel = e.dataModel,
                    i.model = e.selection[0];
                var n = i.dataModel.getRepository(i.model.type);
                return i.listenTo(n, y.CHANGED, i.onFeaturesChanged),
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "submit .attributes-form": "_onAttributesFormSubmitted",
                            "change .attributes-form input, .attributes-form select, .attributes-form textarea": "_onAttributeChanged"
                        }
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "_onAttributesFormSubmitted",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "_toggleFormControls",
                    value: function(e) {
                        this.$(".attributes-form").find("input, textarea, select").prop("disabled", !e)
                    }
                }, {
                    key: "isModelEditable",
                    value: function() {
                        return this.model.arePropertiesEditable()
                    }
                }, {
                    key: "toggleEnabled",
                    value: function(e) {
                        e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                    }
                }, {
                    key: "serializeElement",
                    value: function(e) {
                        var t = void 0,
                            i = e.data("units"),
                            n = void 0;
                        if ("checkbox" === e.attr("type") && e.is("[data-multiple]"))
                            n = this.$el.find("input[name=" + e.attr("name") + "]:checked"),
                            t = n.toArray().map(function(e) {
                                return $(e).val()
                            });
                        else {
                            if ("checkbox" === e.attr("type"))
                                return e.is(":checked");
                            t = e.is("select") && e.prop("multiple") ? e.find("option:selected").toArray().map(function(e) {
                                return $(e).val()
                            }) : e.is("select") ? e.find("option:selected").val() : e.val()
                        }
                        return "boolean" === e.data("type") && (t = e.booleanVal()),
                            "numeric" === e.data("type") && (t = parseInt(t, 10),
                                isNaN(t) && e.is("[data-nullable]") ? t = null : i && (t = v.default.getOriginalValue(t, i))),
                            t
                    }
                }, {
                    key: "_removeMixedOption",
                    value: function(e) {
                        var t = e.parents(".waze-radio-container");
                        t.length > 0 ? t.find(".data-mixed-indicator").remove() : e.find("[data-mixed-indicator]").remove()
                    }
                }, {
                    key: "_onAttributeChanged",
                    value: function(e) {
                        var t = $(e.target),
                            i = t.attr("name"),
                            n = this.serializeElement(t),
                            s = this[i + "Changed"],
                            r = {},
                            a = {};
                        if (null != i) {
                            var o = _.has(this.model.attributes, i),
                                l = this.model.FLAG_ATTRIBUTES && this.model.FLAG_ATTRIBUTES[i];
                            (t.is("select") || t.parents(".waze-radio-container").length > 0) && this._removeMixedOption(t),
                                s ? s.call(this, n) : l ? (a[i] = n,
                                    this.changed(r, void 0, a)) : o ? (r[i] = n,
                                    this.changed(r)) : console.error("FeatureEditor: unknown attribute changed '" + i + "'")
                        }
                    }
                }, {
                    key: "changed",
                    value: function(e) {
                        arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        this.dataModel.actionManager.add(new g.default(this.model, e))
                    }
                }, {
                    key: "onFeaturesChanged",
                    value: function(e) {
                        this.hasEditedModelChanged(e) && this.isRendered && !this.isDestroyed() && this.renderOnceLater()
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        return 1 === e.length && e[0].getID() === this.model.getID()
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return this.model
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._toggleFormControls(this.isModelEditable())
                    }
                }]),
                t
        }(Marionette.View);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                (0,
                    r.default)(this, e),
                this._id = t,
                    Array.isArray(i) || (i = [i]),
                    this._strategies = i,
                    this._state = !1
            }
            return (0,
                    o.default)(e, [{
                    key: "getId",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        this._state = e
                    }
                }, {
                    key: "getState",
                    value: function() {
                        return this._state
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "writeStateToApp",
                    value: function(e, t) {
                        this._strategies.forEach(function(i) {
                            return i.writeStateToApp(e, t)
                        })
                    }
                }], [{
                    key: "of",
                    value: function(t, i) {
                        return new e(t, i)
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(31),
        r = n(s),
        a = i(15),
        o = n(a),
        l = i(10),
        u = n(l),
        d = i(25),
        c = OL.Class(r.default, {
            DEFAULT_POLYGON_SIZE_METERS: 50,
            MAX_SUBJECT_LENGTH: 30,
            MAX_BODY_LENGTH: 2e3,
            defaults: function() {
                return {
                    subject: "",
                    body: "",
                    geometry: null,
                    endDate: null,
                    lockRank: 0,
                    isFollowing: !1,
                    createdOn: null,
                    createdBy: null,
                    updatedBy: null,
                    updatedOn: null,
                    conversation: [],
                    permissions: o.default.ALL_PERMISSIONS,
                    id: null
                }
            },
            nested: {
                geometry: OL.Geometry
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4
            },
            DATE_FORMAT: "YYYY-MM-DD HH:mm",
            isPoint: function() {
                return "OpenLayers.Geometry.Point" === this.geometry.CLASS_NAME
            },
            getPolygonGeometry: function() {
                return this.isPoint() ? u.default.pointToSquarePolygon(this.geometry, this.DEFAULT_POLYGON_SIZE_METERS) : this.geometry.clone()
            },
            getPointGeometry: function() {
                return this.isPoint() ? this.geometry.clone() : u.default.polygonToPoint(this.geometry)
            },
            getComments: function() {
                return new Backbone.Collection(this.attributes.conversation)
            },
            isFollowing: function() {
                return this.attributes.isFollowing
            },
            setFollowing: function(e) {
                var t = this;
                return (0,
                    d.httpPost)(W.Config.paths.mapCommentFollow, {
                    mapCommentID: this.getID(),
                    follow: e
                }).then(function() {
                    t.attributes.isFollowing = e
                })
            },
            addComment: function(e) {
                var t = this;
                return (0,
                    d.httpPost)(W.Config.paths.mapCommentConversation, {
                    mapCommentID: this.getID(),
                    text: e
                }).then(function(e) {
                    return e.isAutoFollowed && (t.attributes.isFollowing = !0),
                        t.attributes.conversation.push(e.comment),
                        new Backbone.Model(e.comment)
                })
            }
        });
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(63),
        v = n(m),
        _ = function(e) {
            function t(e, i, n, s) {
                (0,
                    o.default)(this, t);
                var a = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, s));
                return a.street = null,
                    a.city = i,
                    a.name = e,
                    a.isEmpty = n,
                    a
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = null,
                            t = void 0,
                            i = !1;
                        return e = this.isEmpty ? this.model.streets.getByAttributes({
                                isEmpty: !0,
                                cityID: this.city.getID()
                            })[0] : this.model.streets.getByAttributes({
                                name: this.name,
                                cityID: this.city.getID()
                            })[0],
                            e || (this.isEmpty || this.name,
                                t = new v.default(null, this.model.streets, {
                                    name: this.isEmpty ? "" : this.name,
                                    isEmpty: this.isEmpty,
                                    cityID: this.city.getID()
                                }),
                                e = t.object,
                                this.doSubAction(t),
                                i = !0),
                            this.street = e,
                            i
                    }
                }]),
                t
        }(g.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(18),
        b = n(y),
        w = i(64),
        E = n(w),
        k = i(239),
        M = n(k),
        S = i(11),
        T = i(36),
        C = function(e) {
            function t(e, i, n, s) {
                (0,
                    u.default)(this, t);
                var r = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, e, s));
                return r.segment = e,
                    r.changedState = !1,
                    r.oldGeometry = i === e.geometry ? i.clone() : i,
                    r.newGeometry = n === e.geometry ? n.clone() : n,
                    r
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this.segment.getID();
                        var e = this.oldGeometry.getVertices(!0);
                        if (this.replaceGeometry(),
                            this.segment.isPoint())
                            return void this.doSubAction(new E.default(this.segment));
                        var t = this.segment.geometry.getVertices(!0);
                        e[0].equals(t[0]) || this.updateEndPoint(this.segment.attributes.fromNodeID, this.touching.fromVertex, !0),
                            e[1].equals(t[1]) || this.updateEndPoint(this.segment.attributes.toNodeID, this.touching.toVertex, !1),
                            this.segment.state || (this.changedState = !0,
                                this.segment.state = OpenLayers.State.UPDATE),
                            this.model.segments.changed(this.segment)
                    }
                }, {
                    key: "replaceGeometry",
                    value: function() {
                        this.segment.geometry.components.length = 0,
                            this.newGeometry.components.forEach(function(e) {
                                this.segment.geometry.addComponent(e.clone())
                            }, this),
                            this.segment.geometry.calculateBounds(),
                            this.segment.bounds = this.segment.geometry.bounds
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.changedState && (this.segment.state = null),
                            this.segment.geometry.components.length = 0,
                            this.oldGeometry.components.forEach(function(e) {
                                this.segment.geometry.addComponent(e.clone())
                            }, this),
                            this.segment.geometry.calculateBounds(),
                            this.segment.bounds = this.segment.geometry.bounds,
                            this.model.segments.changed(this.segment),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.segment.geometry.components.length = 0,
                            this.newGeometry.components.forEach(function(e) {
                                this.segment.geometry.addComponent(e.clone())
                            }, this),
                            this.segment.geometry.calculateBounds(),
                            this.segment.bounds = this.segment.geometry.bounds,
                            this.changedState && (this.segment.state = OpenLayers.State.UPDATE),
                            this.model.segments.changed(this.segment),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return e.id = this.segment.getID(),
                            e.geometry = this.newGeometry, {
                                _objectType: S.SEGMENT,
                                action: b.default.TYPE.UPDATE,
                                attributes: e
                            }
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        return this.newGeometry.getBounds().clone()
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        var e = _.flatten(this.subActions.map(function(e) {
                            return e.getFocusFeatures()
                        }));
                        return _.uniq([this.segment].concat((0,
                            r.default)(e)))
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "generateDescription", this).call(this),
                            this._description || (this._description = (0,
                                T.formatActionAddressDescription)(this.segment, "UpdateSegmentGeometry"))
                    }
                }]),
                t
        }(M.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(8),
        v = n(m),
        _ = i(4),
        y = n(_),
        b = i(18),
        w = n(b),
        E = i(52),
        k = n(E),
        M = i(12),
        S = n(M),
        T = i(11),
        C = i(218),
        I = n(C),
        A = {
            permissions: 2147483647
        },
        D = function(e) {
            function t(e, i, n) {
                (0,
                    c.default)(this, t);
                var s = (0,
                    g.default)(this, (t.__proto__ || (0,
                    u.default)(t)).call(this, n));
                return s.node = null,
                    s.point = e.clone(),
                    delete s.point.parent,
                    s.segments = i,
                    s.options = n,
                    s.nodeAttributes = {},
                    s
            }
            return (0,
                    y.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "createNode",
                    value: function(e) {
                        var t = new I.default({
                            geometry: e
                        });
                        return t.attributes || (t.attributes = {}),
                            (0,
                                o.default)(t.attributes, A, t.attributes),
                            t.attributes.segIDs = [],
                            t.state = OpenLayers.State.INSERT,
                            t.setID(this.model.nodes.generateUniqueID()),
                            $.extend(!0, this.nodeAttributes, t.attributes),
                            t
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (this.node = this.createNode(this.point.clone()),
                            this.node.getID(),
                            this.model.nodes.put(this.node),
                            null !== this.segments)
                            for (var e = 0, t = this.segments.length; e < t; e++)
                                this.doSubAction(new k.default(this.node, this.segments[e], this.options))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        (0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "undoAction", this).call(this),
                            this.model.nodes.remove(this.node)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.nodes.put(this.node),
                            (0,
                                v.default)(t.prototype.__proto__ || (0,
                                u.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this.nodeAttributes;
                        return e.id = this.node.getID(),
                            e.geometry = this.point, {
                                _objectType: T.NODE,
                                action: w.default.TYPE.ADD,
                                attributes: e
                            }
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.node]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.AddNode")
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = [this.node.getUniqueID()];
                        return this.segments && e.push.apply(e, (0,
                            r.default)(this.segments.map(function(e) {
                            return e.getUniqueID()
                        }))), [].concat(e, (0,
                            r.default)((0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(S.default);
    t.default = D,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = function(e) {
            function t(e, i) {
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return n.object = e,
                    n.repo = null,
                    n.origState = null,
                    n
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.object]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        return this.repo = this.model.getRepository(this.object.type),
                            null === this.repo ? (console.error("Error deleting object: could not find an object repository for type " + this.object.type), !1) : (this.origState = this.object.state,
                                this.removeObjct(), !0)
                    }
                }, {
                    key: "removeObjct",
                    value: function() {
                        this.object.state === OpenLayers.State.INSERT ? this.repo.remove(this.object) : (this.object.state = OpenLayers.State.DELETE,
                            this.repo.changed(this.object))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.object.type,
                            this.object.getID(),
                            this.object.state = this.origState,
                            this.object.state === OpenLayers.State.INSERT ? this.repo.put(this.object) : this.repo.changed(this.object)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.removeObjct()
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: this.object.type,
                            action: g.default.TYPE.DELETE,
                            attributes: {
                                id: this.object.getID()
                            }
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.object.getUniqueID()]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = I18n.t("objects." + this.object.type + ".name");
                        this._description = I18n.t("save.changes_log.actions.DeleteObject", {
                            type: e
                        })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.STATE_CHANGED = "STATE_CHANGED"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.LAYER_UNIQUE_NAMES = void 0;
    var s, r = i(17),
        a = n(r),
        o = i(176),
        l = n(o),
        u = i(806),
        d = n(u),
        c = i(256),
        h = n(c),
        f = i(807),
        p = n(f),
        g = i(815),
        m = n(g),
        v = i(816),
        y = n(v),
        b = i(258),
        w = n(b),
        E = i(819),
        k = n(E),
        M = i(820),
        S = n(M),
        T = i(129),
        C = n(T),
        I = i(821),
        A = n(I),
        D = i(845),
        R = n(D),
        O = i(846),
        L = n(O),
        x = i(847),
        P = n(x),
        N = i(259),
        V = n(N),
        F = i(848),
        U = n(F),
        j = i(849),
        B = n(j),
        G = i(850),
        z = n(G),
        H = i(851),
        q = n(H),
        Y = i(11),
        K = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(Y),
        J = i(10),
        Z = n(J),
        X = i(852),
        Q = n(X),
        ee = i(54),
        te = n(ee),
        ie = i(177),
        ne = n(ie),
        se = i(853),
        re = n(se),
        ae = i(35),
        oe = n(ae),
        le = oe.default.LAYER_TYPE,
        ue = {
            WMS: "wms",
            MAPNIK: "mapnik"
        },
        de = {
            ARCHIVE: "archive",
            AREA_MANAGERS: "area_managers",
            BIG_JUNCTIONS: "big_junctions",
            CLOSURES: "closures",
            EDITABLE_AREAS: "editable_areas",
            LANDMARKS: "landmarks",
            NODES: "nodes",
            PLACE_UPDATES: "place_updates",
            PROBLEMS: "problems",
            SATELLITE_IMAGERY: "satellite_imagery",
            SATELLITE_OVERLAY: "satellite_overlay",
            SEGMENTS: "segments",
            SPEED_CAMERAS: "speed_cameras",
            UPDATE_REQUESTS: "update_requests",
            LIVE_USERS: "live_users",
            SEARCH: "search_layer",
            GPS_POINTS: "gps_points",
            ROADS: "roads"
        },
        ce = {
            initializeLayers: function() {
                this._addAerials(),
                    this._addModulesLayers(le.RASTER),
                    this._addRasterLayers(),
                    this._addModulesLayers(le.FEATURE),
                    this._addModulesLayers(le.MARKER),
                    this._addVectorLayers(),
                    this._clearLayerContainerZIndex()
            },
            _addRasterLayers: function() {
                return this._addRasterLayer(W.Config.raster_layers[de.ROADS]),
                    this._addRasterLayer(W.Config.raster_layers[de.GPS_POINTS]),
                    this.roadLayers = [this.getLayerByUniqueName(de.ROADS)],
                    W.model.events.register("change:lastTransactionID", this, this._refreshRoadLayers),
                    this._setRoadLayerParams()
            },
            _clearLayerContainerZIndex: function() {
                this.layerContainerDiv.style.zIndex = ""
            },
            _addRasterLayer: function(e) {
                var t = {},
                    i = e.type || ue.WMS,
                    n = I18n.t("layers.name." + e.uniqueName),
                    s = e.file_name || W.Config.raster_layers[i].file_name,
                    r = W.Config.raster_layers[i].servers.map(function(e) {
                        return e + "/" + s
                    });
                $.extend(t, W.Config.raster_layers.options, e.options),
                    t.tileSize = new OL.Size(t.tileWidth, t.tileHeight),
                    t.removeBackBufferDelay = 0,
                    t.uniqueName = e.uniqueName,
                    t.visibility = e.visible;
                var a = {
                        text: I18n.t("layers.loading", {
                            layer_name: n
                        })
                    },
                    o = void 0;
                if (i === ue.WMS) {
                    var l = {};
                    $.extend(l, W.Config.raster_layers.wms.params, e.params),
                        l.layers = e.layers,
                        o = new OL.Layer.WMS(n, r, l, t)
                } else
                    o = new Q.default(n, r, t),
                    $.extend(o.params, e.params);
                return o.type = i,
                    o.events.on({
                        loadstart: function(e) {
                            return function() {
                                return W.vent.trigger("operationPending", {
                                    operation: e
                                })
                            }
                        }(a),
                        loadend: function(e) {
                            return function() {
                                return W.vent.trigger("operationDone", {
                                    operation: e
                                })
                            }
                        }(a)
                    }),
                    this.addUniqueLayer(o),
                    o
            },
            _setRoadLayerParams: function() {
                var e = this.snapshotManager && this.snapshotManager.isSnapshotOn() ? -1 : 1,
                    t = {
                        timestamp: e,
                        waitFor: W.model.lastTransactionID
                    };
                this.roadLayers.forEach(function(e) {
                    e.type === ue.MAPNIK ? e.params.addToQuery = $.param(t) : _.extend(e.params, t)
                })
            },
            _refreshRoadLayers: function(e) {
                return this._setRoadLayerParams(),
                    this.roadLayers.map(function(e) {
                        return e.redraw({
                                force: !0
                            }),
                            e.removeBackBuffer()
                    })
            },
            _addVectorLayers: function() {
                return this.segmentLayer = new k.default(I18n.t("layers.name.segments"), W.model, W.model.segments, {
                        styleMap: h.default,
                        uniqueName: de.SEGMENTS,
                        selectable: !0,
                        featureType: K.SEGMENT
                    }),
                    this.nodeLayer = new S.default(I18n.t("layers.name.nodes"), W.model, W.model.nodes, {
                        styleMap: d.default,
                        uniqueName: de.NODES,
                        selectable: !0,
                        featureType: K.NODE
                    }),
                    this.landmarkLayer = new C.default(I18n.t("layers.name.landmarks"), W.model, W.model.venues, {
                        styleMap: l.default,
                        uniqueName: de.LANDMARKS,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0,
                        featureType: K.VENUE
                    }),
                    this.bigJunctionLayer = new C.default(I18n.t("layers.name.big_junctions"), W.model, W.model.bigJunctions, {
                        styleMap: m.default,
                        uniqueName: de.BIG_JUNCTIONS,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0,
                        featureType: K.BIG_JUNCTION
                    }),
                    this.bigJunctionPathLayer = new OL.Layer.Vector("bigJunctionPathLayer", {
                        rendererOptions: {
                            zIndexing: !0
                        },
                        renderers: [te.default],
                        styleMap: ne.default,
                        selectable: !0
                    }),
                    this.camerasLayer = new C.default(I18n.t("layers.name.speed_cameras"), W.model, W.model.cameras, {
                        styleMap: p.default,
                        uniqueName: de.SPEED_CAMERAS,
                        selectable: !0,
                        featureType: K.SPEED_CAMERA,
                        toggleRepo: !0,
                        rendererOptions: {
                            zIndexing: !0
                        }
                    }),
                    this.problemLayer = new q.default(I18n.t("layers.name.problems"), [W.model.problems], {
                        markerClass: V.default,
                        uniqueName: de.PROBLEMS,
                        className: "map-problems"
                    }),
                    this.updateRequestLayer = new q.default(I18n.t("layers.name.update_requests"), [W.model.mapUpdateRequests], {
                        markerClass: U.default,
                        uniqueName: de.UPDATE_REQUESTS,
                        className: "update-requests"
                    }),
                    this.archiveLayer = new A.default(I18n.t("layers.name.archive"), {
                        rendererOptions: {
                            zIndexing: !0
                        },
                        uniqueName: de.ARCHIVE
                    }),
                    this.userLayer = new R.default(I18n.t("layers.name.editable_areas"), W.model, [W.model.userAreas], {
                        uniqueName: de.EDITABLE_AREAS
                    }),
                    this.managedAreasLayer = new C.default(I18n.t("layers.name.area_managers"), W.model, W.model.managedAreas, {
                        styleMap: w.default,
                        uniqueName: de.AREA_MANAGERS
                    }),
                    this.sketchLayer = new OpenLayers.Layer.Vector("sketch", {
                        styleMap: y.default,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0
                    }),
                    this.placeUpdatesLayer = new q.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: B.default,
                        uniqueName: de.PLACE_UPDATES,
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && !e.isParkingLot() && !e.isResidential()
                        }
                    }),
                    this.parkingPlaceUpdatesLayer = new q.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: B.default,
                        uniqueName: "PARKING_PLACE_UPDATES",
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && e.isParkingLot()
                        }
                    }),
                    this.residentialPlaceUpdatesLayer = new q.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: B.default,
                        uniqueName: "RESIDENTIAL_PLACE_UPDATES",
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && e.isResidential()
                        }
                    }),
                    this.liveUsersLayer = new OL.Layer.Markers(I18n.t("layers.name.live_users"), {
                        uniqueName: de.LIVE_USERS,
                        className: "live-users"
                    }),
                    this.searchLayer = new OL.Layer.Vector("Search", {
                        styleMap: re.default,
                        uniqueName: de.SEARCH
                    }),
                    this.addUniqueLayers([this.archiveLayer, this.managedAreasLayer, this.landmarkLayer, this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.residentialPlaceUpdatesLayer, this.bigJunctionLayer, this.segmentLayer, this.nodeLayer, this.camerasLayer, this.bigJunctionPathLayer, this.sketchLayer, this.problemLayer, this.updateRequestLayer, this.userLayer, this.liveUsersLayer, this.searchLayer]),
                    this.closuresMarkerLayer = new q.default(I18n.t("layers.name.closures"), [W.model.roadClosures], {
                        markerClass: z.default,
                        uniqueName: de.CLOSURES,
                        toggleRepo: !0
                    }),
                    this.addUniqueLayer(this.closuresMarkerLayer)
            },
            _addModulesLayers: function(e) {
                for (var t = oe.default.getLayers().filter(function(t) {
                        return t.type === e
                    }), i = 0; i < t.length; i++) {
                    var n = t[i];
                    if (n.type === le.RASTER)
                        this._addModuleRasterLayer(n);
                    else if (n.type === le.FEATURE)
                        this._addModuleFeatureLayer(n);
                    else {
                        if (n.type !== le.MARKER)
                            throw new Error("Invalid layer type " + n.type);
                        this._addModuleMarkerLayer(n)
                    }
                }
            },
            _addModuleRasterLayer: function(e) {
                return this._addRasterLayer(e.options)
            },
            _addModuleFeatureLayer: function(e) {
                var t = e.options || {},
                    i = [W.model.getRepository(t.objectType)],
                    n = void 0;
                n = t.enableZIndexing ? {
                    zIndexing: !0
                } : {};
                var s = new C.default(t.name, W.model, i, {
                    uniqueName: e.uniqueName,
                    visibility: t.visibleByDefault,
                    styleMap: t.styleMap,
                    selectable: t.selectable,
                    featureType: t.objectType,
                    toggleRepo: !0,
                    rendererOptions: n
                });
                return this.addUniqueLayer(s)
            },
            _addModuleMarkerLayer: function(e) {
                var t = e.options || {},
                    i = [W.model.getRepository(t.objectType)],
                    n = new q.default(t.name, i, {
                        uniqueName: e.uniqueName,
                        markerClass: t.markerClass,
                        className: t.markerClassName,
                        visibility: t.visibleByDefault,
                        featureType: t.objectType,
                        filter: t.filter
                    });
                return this.addUniqueLayer(n)
            },
            getLayerByUniqueName: function(e) {
                return this.getLayersBy("uniqueName", e)[0]
            },
            _addAerials: function() {
                var e = W.Config.map.initialPosition[W.location.code],
                    t = new OL.LonLat(e.lon, e.lat);
                Z.default.project(t);
                var i = new L.default({
                    name: I18n.t("layers.name.satellite_imagery"),
                    key: W.apiKeys.googleMapsApiKey,
                    type: "satellite",
                    zoomOffset: 12,
                    numZoomLevels: 11,
                    zoom: e.initialZoom,
                    minResolution: .037322767712175846,
                    center: t,
                    uniqueName: de.SATELLITE_IMAGERY,
                    transitionEffect: "resize"
                });
                this.addUniqueLayer(i);
                var n = new P.default(de.SATELLITE_OVERLAY);
                this.addUniqueLayer(n),
                    n.setZIndex(Number(i.getZIndex()) + 1);
                var s = {
                    text: I18n.t("layers.loading", {
                        layer_name: I18n.t("layers.name.satellite_imagery")
                    })
                };
                return i.events.on({
                        loadstart: function() {
                            if (this.getVisibility())
                                return W.vent.trigger("operationPending", {
                                    operation: s
                                })
                        },
                        loadend: function() {
                            return W.vent.trigger("operationDone", {
                                operation: s
                            })
                        },
                        loaderror: function() {
                            return W.vent.trigger("operationDone", {
                                operation: s
                            })
                        }
                    }),
                    this.setCenter(t, e.initialZoom)
            },
            getLayersByRepos: function(e, t) {
                return (t || null == this.layersPerRepo) && (this.layersPerRepo = this.layers.reduce(function(e, t) {
                        if (null != t.repo)
                            for (var i = 0; i < t.repo.length; i++) {
                                var n = t.repo[i];
                                null == e[n.name] && (e[n.name] = []),
                                    e[n.name].push(t)
                            }
                        return e
                    }, {})),
                    _.pick(this.layersPerRepo, e)
            },
            showLayerByObjectType: function(e) {
                var t = W.model.getRepository(e);
                return this.getLayersByRepos([t.name])[t.name].map(function(e) {
                    return e.setVisibility(!0)
                })
            },
            addUniqueLayer: function(e) {
                if (e.uniqueName) {
                    if (this.getLayersBy("uniqueName", e.uniqueName).length > 0)
                        throw new Error("Cannot add layer " + e.uniqueName + ", the provided\n        uniqueName already exists.")
                }
                return this.addLayer(e)
            },
            addUniqueLayers: function(e) {
                var t = this;
                return e.map(function(e) {
                    return t.addUniqueLayer(e)
                })
            },
            getPlaceUpdateLayers: function() {
                return [this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.residentialPlaceUpdatesLayer]
            }
        };
    ce.layerVisibilityBitmask = (s = {},
            (0,
                a.default)(s, de.SATELLITE_IMAGERY, 0),
            (0,
                a.default)(s, de.ROADS, 2),
            (0,
                a.default)(s, de.GPS_POINTS, 3),
            (0,
                a.default)(s, de.AREA_MANAGERS, 4),
            (0,
                a.default)(s, de.LANDMARKS, 5),
            (0,
                a.default)(s, de.SPEED_CAMERAS, 6),
            (0,
                a.default)(s, de.PROBLEMS, 7),
            (0,
                a.default)(s, de.UPDATE_REQUESTS, 8),
            (0,
                a.default)(s, de.EDITABLE_AREAS, 9),
            (0,
                a.default)(s, de.LIVE_USERS, 10),
            (0,
                a.default)(s, de.PLACE_UPDATES, 11),
            (0,
                a.default)(s, de.BIG_JUNCTIONS, 12),
            (0,
                a.default)(s, de.CLOSURES, 13),
            s),
        ce.LAYER_UNIQUE_NAMES = de,
        t.default = ce,
        t.LAYER_UNIQUE_NAMES = de
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(27),
        s = OL.Class(OL.Layer.Vector, {
            repo: null,
            _featureMap: null,
            model: null,
            initialize: function(e, t, i, n) {
                this.model = t,
                    this.repo = i,
                    OL.Layer.Vector.prototype.initialize.apply(this, [e, n]),
                    this._featureMap = {},
                    _(this.repo).isArray() || (this.repo = [this.repo]);
                for (var s = 0; s < this.repo.length; s++) {
                    var r = this.repo[s];
                    this.registerRepoEvents(r)
                }
            },
            registerRepoEvents: function(e) {
                e.on(n.ADDED, this.onFeaturesAdded, this),
                    e.on(n.CHANGED, this.onFeaturesChanged, this),
                    e.on(n.REMOVED, this.onFeaturesRemoved, this)
            },
            unregisterRepoEvents: function(e) {
                e.off(n.ADDED, this.onFeaturesAdded, this),
                    e.off(n.CHANGED, this.onFeaturesChanged, this),
                    e.off(n.REMOVED, this.onFeaturesRemoved, this)
            },
            destroy: function() {
                for (var e = 0; e < this.repo.length; e++) {
                    var t = this.repo[e];
                    this.unregisterRepoEvents(t)
                }
                return OL.Layer.Vector.prototype.destroy.apply(this)
            },
            getVector: function(e) {
                return this._featureMap[e.getID()] || null
            },
            onFeaturesAdded: function(e) {
                var t = this;
                return e = e.map(function(e) {
                        var i = new OL.Feature.Vector(e.geometry);
                        return i.model = e,
                            t._featureMap[e.getID()] = i,
                            t.fixRenderIntent(i),
                            i
                    }),
                    this.addFeatures(e)
            },
            _getFeatureByPrevId: function(e) {
                var t = e._prevID;
                if (!t)
                    return null;
                var i = this._featureMap[t];
                return i ? (this._featureMap[t] = void 0,
                    this._featureMap[e.getID()] = i,
                    i) : null
            },
            onFeaturesChanged: function(e) {
                for (var t = [], i = [], n = [], s = 0; s < e.length; s++) {
                    var r = e[s],
                        a = this._featureMap[r.getID()] || this._getFeatureByPrevId(r);
                    if (a)
                        this.fixRenderIntent(a),
                        this._updateFeatureModel(a, r),
                        r.hidden ? (this._featureMap[r.getID()] = void 0,
                            t.push(a)) : (a.geometry = r.geometry,
                            this.drawFeature(a)),
                        (r.isDeleted() || r.hidden) && i.push(a);
                    else {
                        var o = new OL.Feature.Vector(r.geometry);
                        o.model = r,
                            n.push(o),
                            this._featureMap[r.getID()] = o
                    }
                }
                return W.selectionManager.unselectFeatures(i),
                    this.removeFeatures(t),
                    this.addFeatures(n)
            },
            onFeaturesRemoved: function(e) {
                var t = this,
                    i = e.map(function(e) {
                        var i = t._featureMap[e.getID()];
                        return t._featureMap[e.getID()] = void 0,
                            i
                    });
                i = _(i).filter(function(e) {
                    return null != e
                });
                var n = _(i).filter(function(e) {
                    return W.selectionManager.isSelected(e)
                });
                return W.selectionManager.unselectFeatures(n),
                    this.removeFeatures(i)
            },
            fixRenderIntent: function(e) {
                e.model.isDeleted() ? e.renderIntent = "delete" : "delete" === e.renderIntent && (e.renderIntent = e.model.isSelected() ? "select" : "default")
            },
            _updateFeatureModel: function(e, t) {
                null != t.geometry && null != e.model.geometry && (t.geometry.id = e.model.geometry.id),
                    e.model = t
            },
            CLASS_NAME: "Waze.Layer.FeatureLayer"
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(60),
        r = n(s),
        a = i(117),
        o = n(a),
        l = Backbone.Collection.extend({
            model: o.default,
            initialize: function() {
                this.serializer = new r.default
            },
            url: function() {
                return W.Config.paths.notifications
            },
            parse: function(e) {
                return this.serializer.read(e),
                    _.filter(e.notifications.objects, function(e) {
                        return e.isNotification()
                    })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(181),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: function() {
                return "feed-item feed-notification"
            },
            template: "Waze/Modules/Feed/templates/notification_item",
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    title: this._getValueOrTemplate("title"),
                    shortMessage: this._getValueOrTemplate("shortMessage")
                })
            },
            _getValueOrTemplate: function(e) {
                var t = this.model.getParameter(e);
                if (null == t) {
                    var i = "feed.notifications.type." + this.model.attributes.type + "." + e;
                    void 0 !== I18n.lookup(i) && (t = I18n.translate(i, this.model.attributes.parameters))
                }
                return t
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(16),
        u = n(l),
        d = i(181),
        c = n(d),
        h = i(51),
        f = n(h),
        p = i(89),
        g = n(p),
        m = function(e) {
            return {
                observe: "state",
                onGet: function(t) {
                    return t === e
                }
            }
        },
        v = c.default.extend({
            className: function() {
                return "feed-item feed-issue feed-issue-" + this.model.getFeedIssueState()
            },
            template: "Waze/Modules/Feed/templates/issue_item",
            bindings: {
                ":el": {
                    classes: {
                        modified: "modified",
                        "feed-issue-open": m("open"),
                        "feed-issue-rejected": m("rejected"),
                        "feed-issue-solved": m("solved"),
                        "feed-issue-approved": m("approved"),
                        "feed-issue-not-identified": m("not-identified")
                    }
                }
            },
            onRender: function() {
                this.stickit()
            },
            getType: function() {
                return null
            },
            getStateClass: function() {
                return ""
            },
            serializeData: function() {
                return {
                    type: this.getType(),
                    motivation: this._getMotivationText(),
                    place: this._getPlaceText(),
                    street: this.model.get("streetText"),
                    city: this.model.get("cityText"),
                    state: this.model.get("stateText"),
                    country: this.model.get("countryText"),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _formatTimestamp: function() {
                return u.default.timeDistanceInWords(this.model.get("timestamp"))
            },
            _getMotivationText: function() {
                var e = new g.default(this.model.get("motivation")),
                    t = !0,
                    i = !1,
                    n = void 0;
                try {
                    for (var s, a = (0,
                            o.default)((0,
                            r.default)(f.default.prototype.MOTIVATIONS)); !(t = (s = a.next()).done); t = !0) {
                        var l = s.value,
                            u = f.default.prototype.MOTIVATIONS[l];
                        if (e.isEnabled(l))
                            return I18n.t("feed.issues.motivations." + u)
                    }
                } catch (e) {
                    i = !0,
                        n = e
                } finally {
                    try {
                        !t && a.return && a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return null
            },
            _getPlaceText: function() {
                var e = this.model.get("venue");
                return e ? e.attributes.name : ""
            },
            _getSeverityClass: function() {
                return this.model.getSeverity() ? "severity-" + this.model.getSeverity() : ""
            }
        });
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(17),
        o = n(a),
        l = i(6),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(206),
        f = n(h),
        p = i(0),
        g = n(p),
        m = i(3),
        v = n(m),
        y = i(1),
        b = n(y),
        w = i(4),
        E = n(w),
        k = i(20),
        M = n(k),
        S = i(963),
        T = n(S),
        C = i(27),
        I = function(e) {
            function t(e) {
                var i = e.dataModel,
                    n = void 0 === i ? null : i,
                    s = e.selection,
                    r = void 0 === s ? [] : s,
                    a = (0,
                        f.default)(e, ["dataModel", "selection"]);
                (0,
                    g.default)(this, t);
                var o = (0,
                    v.default)(this, (t.__proto__ || (0,
                    c.default)(t)).call(this, (0,
                    u.default)({}, a)));
                return o._dataModel = n,
                    o.repository = o._dataModel.getRepository(r[0].type),
                    o.featureID = r[0].getID(),
                    o.listenTo(o.repository, C.CHANGED, o.onFeaturesChanged),
                    o.listenTo(o.repository, C.CHANGED_ID, o._onFeatureChangedIDs),
                    o
            }
            return (0,
                    E.default)(t, e),
                (0,
                    b.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "submit .attributes-form": "_onAttributesFormSubmitted"
                        }
                    }
                }]),
                (0,
                    b.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return (0,
                            o.default)({
                            ".feature-id": {
                                observe: "id",
                                onGet: function(e) {
                                    return I18n.t("edit.id", {
                                        num: e
                                    })
                                }
                            }
                        }, ".attributes-form input, .attributes-form textarea, .attributes-form select, .attributes-form label", {
                            attributes: [{
                                name: "disabled",
                                observe: "propertiesEditable",
                                onGet: _.negate(_.identity)
                            }]
                        })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return _.pick(this.viewModel.attributes, "createdBy", "updatedBy", "updatedOn", "userRank")
                    }
                }, {
                    key: "getFeature",
                    value: function() {
                        return this.repository.get(this.featureID)
                    }
                }, {
                    key: "_makeViewModelAttributes",
                    value: function(e) {
                        return (0,
                            u.default)({
                            id: e.getID(),
                            createdBy: e.attributes.createdBy,
                            updatedBy: e.attributes.updatedBy,
                            updatedOn: e.attributes.updatedOn,
                            propertiesEditable: e.arePropertiesEditable(),
                            userRank: W.model.loginManager.getUserRank()
                        }, this.featureToViewModel(e))
                    }
                }, {
                    key: "_makeModelAttributes",
                    value: function(e) {
                        var t = {},
                            i = this.viewModelToFeature();
                        return (0,
                                r.default)(e.changedAttributes()).forEach(function(n) {
                                "function" == typeof i[n] && i[n](e.get(n), t)
                            }),
                            t
                    }
                }, {
                    key: "toggleEnabled",
                    value: function(e) {
                        e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                    }
                }, {
                    key: "simpleAttribute",
                    value: function(e) {
                        return function(t, i) {
                            i[e] = t
                        }
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        return {}
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function(e) {
                        return {}
                    }
                }, {
                    key: "_onAttributesFormSubmitted",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "onFeaturesChanged",
                    value: function(e) {
                        if (this.hasEditedModelChanged(e)) {
                            var t = this.getFeature();
                            this.viewModel.set(this._makeViewModelAttributes(t), {
                                fromRepo: !0
                            })
                        }
                    }
                }, {
                    key: "_onFeatureChangedIDs",
                    value: function(e) {
                        var t = e.oldID,
                            i = e.newID;
                        this.featureID === t && (this.featureID = i)
                    }
                }, {
                    key: "_onViewModelChanged",
                    value: function(e, t) {
                        t.fromRepo || this._updateRepoFromViewModel()
                    }
                }, {
                    key: "_updateRepoFromViewModel",
                    value: function() {
                        var e = this._getRepositoryObjectsToUpdate();
                        !_.isEmpty(e) && this._updateObjectsInRepository(e)
                    }
                }, {
                    key: "_getRepositoryObjectsToUpdate",
                    value: function() {
                        var e = [],
                            t = this.getFeature();
                        return null == t ? console.error("Cannot update a non-existing object with id " + this.featureID + " and type " + this.repository.objectType) : e.push(t),
                            e
                    }
                }, {
                    key: "_updateObjectsInRepository",
                    value: function(e) {
                        var t = this._makeModelAttributes(this.viewModel);
                        if (!_.isEmpty(t)) {
                            var i = this._createUpdateAction(e, t);
                            this._dataModel.actionManager.add(i)
                        }
                    }
                }, {
                    key: "_createUpdateAction",
                    value: function(e, t) {
                        var i = this;
                        return 1 === e.length ? this._createObjectUpdateAction(e[0], t) : new T.default(e.map(function(e) {
                            return i._createObjectUpdateAction(e, t)
                        }))
                    }
                }, {
                    key: "_createObjectUpdateAction",
                    value: function(e, t) {
                        return new M.default(e, t)
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        if (1 !== e.length)
                            return !1;
                        var t = e[0];
                        return this.featureID === t.getID()
                    }
                }, {
                    key: "onBeforeRender",
                    value: function() {
                        var e = this.getFeature();
                        this.viewModel = new Backbone.Model(this._makeViewModelAttributes(e)),
                            this.listenTo(this.viewModel, "change", this._onViewModelChanged)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.viewModel, this.bindings())
                    }
                }]),
                t
        }(Marionette.View);
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(13),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(966),
        b = n(y),
        w = i(27),
        E = i(100),
        k = n(E),
        M = i(173),
        S = n(M),
        T = i(235),
        C = n(T),
        I = i(967),
        A = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(I),
        D = i(182),
        R = n(D),
        O = i(970),
        L = n(O),
        x = i(972),
        P = n(x),
        N = i(20),
        V = n(N),
        F = i(974),
        U = n(F),
        j = i(75),
        B = i(976),
        G = n(B),
        z = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "className",
                    value: function() {
                        return "address-edit-view"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "submit .address-form": "_formSubmitted",
                            "click .full-address": "_editClicked",
                            "click .cancel-button": "_cancelClicked",
                            "click .add-alt-street-btn": "_addAltStreetClicked"
                        }
                    }
                }, {
                    key: "modelEvent",
                    value: function() {
                        return {
                            "change:altStreets": "render"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            streetNameInput: ".street-name",
                            cityNameInput: ".city-name"
                        }
                    }
                }, {
                    key: "defaultOptions",
                    value: function() {
                        return {
                            editStreet: !0,
                            editHouseNumber: !1,
                            editAltStreets: !1
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            altStreetsRegion: ".alt-streets",
                            newAltStreetsRegion: ".new-alt-streets",
                            ttsPlaybackRegion: ".tts-playback-region"
                        }
                    }
                }, {
                    key: "cityBindings",
                    value: function() {
                        return {
                            ".city-id": {
                                observe: "cityID",
                                attributes: k.default.requireAndEnableIfNot("emptyCity"),
                                selectOptions: {
                                    collection: "this.cityOptions",
                                    defaultOption: {
                                        value: null,
                                        label: I18n.t("mte.edit.select_city")
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".street-name": {
                                observe: ["streetName", "emptyStreet"],
                                onGet: function(e) {
                                    var t = (0,
                                            o.default)(e, 2),
                                        i = t[0];
                                    return t[1] ? "" : i
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: k.default.requireAndEnableIfNot("emptyStreet")
                            },
                            ".city-name": {
                                observe: ["cityName", "emptyCity"],
                                onGet: function(e) {
                                    var t = (0,
                                            o.default)(e, 2),
                                        i = t[0];
                                    return t[1] ? "" : i
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: k.default.requireAndEnableIfNot("emptyCity")
                            },
                            ".state-id": {
                                observe: "stateID",
                                selectOptions: {
                                    collection: "this.stateOptions"
                                }
                            },
                            ".country-id": {
                                observe: "countryID",
                                selectOptions: {
                                    collection: "this.countryOptions"
                                }
                            },
                            ".empty-street": {
                                observe: "emptyStreet",
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return this.options.disableEmptyStreet
                                    }
                                }]
                            },
                            ".empty-city": {
                                observe: "emptyCity",
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return this.options.disableEmptyCity
                                    }
                                }]
                            },
                            ".house-number": "houseNumber",
                            ".preview": {
                                observe: "addressFormShown",
                                visible: function(e) {
                                    return !e
                                }
                            },
                            ".address-form": {
                                observe: "addressFormShown",
                                visible: !0
                            },
                            ".quota-tooltip": {
                                visible: !0,
                                onGet: function() {
                                    return !this._canChangeStreetName()
                                }
                            },
                            ".full-address": {
                                observe: "fullAddress",
                                classes: {
                                    disabled: {
                                        observe: "editable",
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this;
                        this.options = _.defaults(e, this.defaultOptions()),
                            this.addressModel = e.addressModel,
                            this.dataModel = e.dataModel,
                            this.model = b.default.fromAddress(this.addressModel, this.dataModel),
                            this.model.set({
                                editable: e.editable,
                                fullAddress: this.addressModel.format({
                                    formatStreet: this.options.editStreet
                                })
                            }),
                            this.showStatesSelection = this.dataModel.hasStates(),
                            this._generateOptions(),
                            this.options.showCitySelect ? this._initCitySelect() : this._initCityInput(),
                            this.listenTo(this.model, "change:cityID change:cityName change:emptyCity", function() {
                                t.showStatesSelection && t._updateStateFromCity(),
                                    t._refreshStreetAutocompleteOptions()
                            }),
                            this.showStatesSelection && this.listenTo(this.model, "change:stateID", function() {
                                t._refreshCityAutocompleteOptions()
                            }),
                            this.options.editStreet && this._initStreetInput()
                    }
                }, {
                    key: "_generateOptions",
                    value: function() {
                        this.countryOptions = _.map(this.dataModel.countries.objects, function(e) {
                                return {
                                    label: e.name,
                                    value: e.getID()
                                }
                            }),
                            this.stateOptions = _.map(this.dataModel.states.objects, function(e) {
                                return {
                                    label: e.name,
                                    value: e.getID()
                                }
                            })
                    }
                }, {
                    key: "_generateCityOptions",
                    value: function() {
                        this.cityOptions = this.dataModel.cities.getValidCities().map(function(e) {
                            return {
                                label: e.attributes.name,
                                value: e.getID()
                            }
                        })
                    }
                }, {
                    key: "_generateCityNames",
                    value: function() {
                        this.cityNames = this.dataModel.cities.getValidCities().map(function(e) {
                            return e.attributes.name
                        })
                    }
                }, {
                    key: "_generateStreetNames",
                    value: function() {
                        var e = this._getSelectedCity();
                        null == e || e.isEmpty() ? this.streetNames = _.chain(this.dataModel.streets.objects).pluck("name").compact().uniq().value() : this.streetNames = _.chain(this.dataModel.streets.objects).filter(function(t) {
                            return e.getID() === t.cityID
                        }).pluck("name").compact().value()
                    }
                }, {
                    key: "_canChangeStreetName",
                    value: function() {
                        return this.dataModel.loginManager.canChangeStreetName()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.stickit(this.model, _.extend(this.bindings(), this.cityBindings())),
                            this.ui.cityNameInput.typeahead({
                                source: this.cityNames
                            }),
                            this.ui.streetNameInput.typeahead({
                                source: this.streetNames
                            }),
                            this._initTTSView(),
                            this.options.editAltStreets && !this.options.isAltAddress && (this.showChildView("altStreetsRegion", new L.default({
                                    collection: this.model.attributes.altStreets
                                })),
                                this.showChildView("newAltStreetsRegion", new P.default({
                                    dataModel: this.options.dataModel,
                                    collection: this.model.attributes.newAltStreets
                                })))
                    }
                }, {
                    key: "_initCitySelect",
                    value: function() {
                        var e = this;
                        return this._generateCityOptions(),
                            this.listenTo(this.dataModel.cities, w.UPDATED, function() {
                                return e._generateCityOptions(),
                                    e.stickit(e.model, e.cityBindings())
                            })
                    }
                }, {
                    key: "_refreshCityAutocompleteOptions",
                    value: function() {
                        this._generateCityNames(),
                            this.ui.cityNameInput.data && this.ui.cityNameInput.data("typeahead") && (this.ui.cityNameInput.data("typeahead").source = this.cityNames)
                    }
                }, {
                    key: "_initCityInput",
                    value: function() {
                        var e = this;
                        return this._generateCityNames(),
                            this.listenTo(this.dataModel.cities, w.UPDATED, function() {
                                e._refreshCityAutocompleteOptions()
                            })
                    }
                }, {
                    key: "_refreshStreetAutocompleteOptions",
                    value: function() {
                        this._generateStreetNames(),
                            this.ui.streetNameInput.data && this.ui.streetNameInput.data("typeahead") && (this.ui.streetNameInput.data("typeahead").source = this.streetNames)
                    }
                }, {
                    key: "_initStreetInput",
                    value: function() {
                        var e = this;
                        return this._generateStreetNames(),
                            this.listenTo(this.dataModel.streets, w.UPDATED, function() {
                                e._refreshStreetAutocompleteOptions()
                            })
                    }
                }, {
                    key: "_initTTSView",
                    value: function() {
                        if (this.options.enableTTS) {
                            var e = this.options.feature;
                            e instanceof R.default && (e = e.children[0]);
                            var t = e.geometry.components[0],
                                i = U.default.fromAddress(this.model, t);
                            this.getRegion("ttsPlaybackRegion").reset(),
                                this.showChildView("ttsPlaybackRegion", i)
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = (0,
                                j.getServerConfig)(),
                            t = e.maxAllowedStreetNamesChanges;
                        return {
                            dataModel: this.dataModel,
                            MAX_LENGTH: y.MAX_LENGTH,
                            showStatesSelection: this.dataModel.hasStates(),
                            showHouseNumberInput: this.options.editHouseNumber,
                            showStreetInput: this.options.editStreet,
                            showCitySelect: this.options.showCitySelect,
                            showAltStreets: this.options.editAltStreets,
                            enableTTS: this.options.enableTTS,
                            maxAllowedStreetNamesChanges: t
                        }
                    }
                }, {
                    key: "_formSubmitted",
                    value: function(e) {
                        e.preventDefault();
                        var t = this.model.attributes,
                            i = this.options.showCitySelect && !t.emptyCity;
                        t.emptyStreet && (this.model.set("streetName", ""),
                                t = this.model.attributes),
                            t.emptyCity && (this.model.set("cityName", ""),
                                t = this.model.attributes),
                            i || this._cityExists(t) ? this._submitAddressChanges(t, i) : this._confirmCityChanges(t)
                    }
                }, {
                    key: "_getAltStreetActions",
                    value: function() {
                        if (!this.options.editAltStreets)
                            return [];
                        var e = this.options.feature,
                            t = e instanceof R.default ? e.children : [e],
                            i = [],
                            n = this.model.attributes.altStreets.filter(function(e) {
                                return !e.get("deleted")
                            });
                        return i.push.apply(i, (0,
                                r.default)(t.map(function(e) {
                                return new V.default(e, {
                                    streetIDs: n.map(function(e) {
                                        return e.id
                                    })
                                })
                            }))),
                            this.model.attributes.newAltStreets.forEach(function(e) {
                                i.push.apply(i, (0,
                                    r.default)(t.map(function(t) {
                                    return new C.default(t, e.attributes)
                                })))
                            }),
                            i
                    }
                }, {
                    key: "_submitAddressChanges",
                    value: function(e, t) {
                        var i = this,
                            n = this.options.feature,
                            s = n instanceof R.default ? n.children : [n],
                            a = s.map(function(n) {
                                return new S.default(n, e, {
                                    updateStreet: i.options.editStreet,
                                    getCityFromDataModel: t,
                                    updateHouseNumber: i.options.editHouseNumber,
                                    streetIDField: i.options.streetIDField
                                })
                            });
                        this.dataModel.actionManager.add(new G.default([].concat((0,
                                r.default)(a), (0,
                                r.default)(this._getAltStreetActions())))),
                            this.addressModel = this.options.feature.getAddress(),
                            this.model.set({
                                fullAddress: this.addressModel.format({
                                    formatStreet: this.options.editStreet
                                })
                            }),
                            this.model.set({
                                addressFormShown: !1
                            }),
                            this.trigger("addressChanged")
                    }
                }, {
                    key: "_cityExists",
                    value: function(e) {
                        return W.model.cities.getByAttributes({
                            isEmpty: e.isEmpty,
                            name: e.cityName,
                            countryID: e.countryID,
                            stateID: e.stateID
                        }).length > 0
                    }
                }, {
                    key: "_confirmCityChanges",
                    value: function(e) {
                        var t = this;
                        A.getAndConfirmCityChange(e.cityName, e.countryID, e.stateID).then(function(i) {
                            i && t._submitAddressChanges(e)
                        }).catch(function(i) {
                            console.error(i),
                                t._submitAddressChanges(e)
                        })
                    }
                }, {
                    key: "_editClicked",
                    value: function() {
                        this.editAddress()
                    }
                }, {
                    key: "_cancelClicked",
                    value: function() {
                        this.model.set({
                                addressFormShown: !1
                            }),
                            this.model.populateFromAddressModel(this.addressModel)
                    }
                }, {
                    key: "_getSelectedCity",
                    value: function() {
                        var e = void 0;
                        return e = this.model.get("emptyCity") ? {
                                isEmpty: !0
                            } : this.options.showCitySelect ? {
                                id: this.model.get("cityID")
                            } : {
                                name: this.model.get("cityName")
                            },
                            this.showStatesSelection && (e.stateID = this.model.get("stateID")),
                            e.countryID = this.model.get("countryID"),
                            this.dataModel.cities.getByAttributes(e)[0]
                    }
                }, {
                    key: "_updateStateFromCity",
                    value: function() {
                        var e = this._getSelectedCity();
                        null != e && null != e.attributes.stateID && this.model.set("stateID", e.attributes.stateID)
                    }
                }, {
                    key: "_addAltStreetClicked",
                    value: function() {
                        this.model.addNewAltStreet(this.options.emptyCityForAltStreets)
                    }
                }, {
                    key: "editAddress",
                    value: function() {
                        this.model.get("editable") && this.model.set({
                            addressFormShown: !0
                        })
                    }
                }, {
                    key: "toggleEditable",
                    value: function(e) {
                        return !1 === e && this.model.set({
                                addressFormShown: !1
                            }),
                            this.model.set({
                                editable: e
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/address/edit"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = z,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = Marionette.Behavior.extend({
            _eventsRegistered: !1,
            initialize: function() {
                return this._registerEvents()
            },
            onBeforeDestroy: function() {
                return this._unregisterEvents()
            },
            _getAcceleratorsObject: function() {
                return _.result(this.view, "accelerators", {})
            },
            _registerEvents: function() {
                if (!this._eventsRegistered) {
                    var e = this._getAcceleratorsObject(),
                        t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                o.default)((0,
                                r.default)(e)); !(t = (s = a.next()).done); t = !0) {
                            var l = s.value,
                                u = e[l];
                            W.accelerators.events.register(l, this.view, this.view[u])
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && a.return && a.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                    this._eventsRegistered = !0
                }
            },
            _unregisterEvents: function() {
                if (this._eventsRegistered) {
                    var e = this._getAcceleratorsObject(),
                        t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                o.default)((0,
                                r.default)(e)); !(t = (s = a.next()).done); t = !0) {
                            var l = s.value,
                                u = e[l];
                            W.accelerators.events.unregister(l, this.view, this.view[u])
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && a.return && a.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                    this._eventsRegistered = !1
                }
            },
            onEditingEnabled: function() {
                return this._registerEvents()
            },
            onEditingDisabled: function() {
                return this._unregisterEvents()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(183),
        g = n(p),
        m = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                        u.default)(this, (t.__proto__ || (0,
                        r.default)(t)).call(this, e)),
                    n = i.model.get(i.observeAttribute);
                return Array.isArray(n) || i.model.set(i.observeAttribute, [n]),
                    i.minSelectionCount = e.minSelectionCount || 0,
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            input: {
                                observe: this.observeAttribute,
                                updateModel: "_confirmUpdate",
                                update: function(e, t, i, n) {
                                    e.val(t)
                                },
                                onGet: function(t) {
                                    return t.map(e._optionToValue.bind(e))
                                },
                                onSet: function(t) {
                                    return Array.isArray(t) || (t = null === t ? [] : [t]),
                                        t.map(e._valueToOption.bind(e))
                                }
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/multi_selection_view"
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "_confirmUpdate",
                    value: function(e, t, i) {
                        return !((e && e.length || 0) < this.minSelectionCount && ($(t.currentTarget).prop("checked", !0),
                            1))
                    }
                }, {
                    key: "select",
                    value: function(e) {
                        var t = this.getSelected();
                        t.push(e),
                            this.setSelection(t)
                    }
                }, {
                    key: "setSelection",
                    value: function(e) {
                        e = _.uniq(e),
                            this.model.set(this.observeAttribute, e),
                            this.model.trigger("change:" + this.observeAttribute, this.model, e)
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, , , , , , , , , , , function(e, t, i) {
    var n = i(103),
        s = i(28)("iterator"),
        r = i(67);
    e.exports = i(14).getIteratorMethod = function(e) {
        if (void 0 != e)
            return e[s] || e["@@iterator"] || r[n(e)]
    }
}, function(e, t, i) {
    e.exports = {
        default: i(454),
        __esModule: !0
    }
}, , , , function(e, t) {
    e.exports = function(e, t, i, n) {
        if (!(e instanceof t) || void 0 !== n && n in e)
            throw TypeError(i + ": incorrect invocation!");
        return e
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        var t, i;
        this.promise = new e(function(e, n) {
                if (void 0 !== t || void 0 !== i)
                    throw TypeError("Bad Promise constructor");
                t = e,
                    i = n
            }),
            this.resolve = s(t),
            this.reject = s(i)
    }
    var s = i(55);
    e.exports.f = function(e) {
        return new n(e)
    }
}, function(e, t, i) {
    var n = i(46);
    e.exports = function(e, t, i) {
        for (var s in t)
            i && e[s] ? e[s] = t[s] : n(e, s, t[s]);
        return e
    }
}, function(e, t, i) {
    e.exports = {
        default: i(479),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(10),
        o = n(a),
        l = {
            parse: function(e) {
                var t = this;
                return this.nested ? ((0,
                        r.default)(this.nested).forEach(function(i) {
                        var n = t.nested[i],
                            s = e[i];
                        s && (_.isArray(s) ? e[i] = s.map(function(e) {
                            return t.parseField(e, n, i)
                        }) : e[i] = t.parseField(s, n, i))
                    }),
                    e) : e
            },
            parseField: function(e, t, i) {
                if (t === OL.Geometry) {
                    var n = o.default.parse(e);
                    return this.attributes && this.attributes[i] && this.attributes[i].id && (n.id = this.attributes[i].id),
                        n
                }
                return _.isObject(e) ? new t(e, {
                    parse: !0
                }) : new t({
                    id: e,
                    parse: !0
                })
            }
        };
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(10),
        f = n(h),
        p = i(60),
        g = n(p),
        m = i(25),
        v = function() {
            function e() {
                (0,
                    u.default)(this, e),
                this.serializer = new g.default,
                    this.getFeaturesjqXHR = null,
                    this.abortController = null
            }
            return (0,
                    c.default)(e, [{
                    key: "_toUnprojectedBBOX",
                    value: function(e) {
                        return f.default.unproject(e.clone()).toBBOX()
                    }
                }, {
                    key: "_newRequestParams",
                    value: function(e) {
                        return {
                            language: I18n.locale,
                            bbox: this._toUnprojectedBBOX(e)
                        }
                    }
                }, {
                    key: "getExpandedDataBounds",
                    value: function(e) {
                        return f.default.getBoundsWithRatio(e, 1.7)
                    }
                }, {
                    key: "getFeatures",
                    value: function(e, t, i) {
                        e = this.getExpandedDataBounds(e);
                        var n = (0,
                                o.default)(this._newRequestParams(e), t),
                            s = null;
                        return this._supportAbortController() ? (this.abortController && this.abortController.abort(),
                                this.abortController = new AbortController,
                                i = (0,
                                    o.default)({}, i, {
                                    signal: this.abortController.signal
                                }),
                                s = (0,
                                    m.httpGet)(W.Config.paths.features, n, i)) : (this.getFeaturesjqXHR && this.getFeaturesjqXHR.abort(),
                                this.getFeaturesjqXHR = $.get(W.Config.paths.features, n, i),
                                s = this.getFeaturesjqXHR),
                            r.default.resolve(s).catch(function(e) {
                                throw "abort" !== e.statusText && "AbortError" !== e.name || (e.reason = "abort"),
                                    e
                            })
                    }
                }, {
                    key: "_supportAbortController",
                    value: function() {
                        return "function" == typeof AbortController
                    }
                }, {
                    key: "postFeatures",
                    value: function(e, t, i) {
                        var n = (0,
                            o.default)(this._newRequestParams(t), {
                            ignoreWarnings: i
                        });
                        return (0,
                            m.httpPost)(W.Config.paths.features + "?" + $.param(n), e, {
                            dataType: "json"
                        })
                    }
                }, {
                    key: "getCityExists",
                    value: function(e, t, i, n) {
                        var s = parseInt(t, 10),
                            r = parseInt(i, 10);
                        return (0,
                            m.httpGet)(W.Config.paths.cityExists, {
                            cityName: e,
                            countryID: isNaN(s) ? void 0 : s,
                            stateID: isNaN(r) ? void 0 : r,
                            box: this._toUnprojectedBBOX(n)
                        })
                    }
                }, {
                    key: "getElementHistory",
                    value: function(e, t) {
                        var i = this,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                            s = {
                                objectType: e,
                                objectID: t
                            };
                        return null != n && (s.till = n),
                            (0,
                                m.httpGet)(W.Config.paths.elementHistory, s).then(function(e) {
                                return i.serializer.read(e)
                            })
                    }
                }, {
                    key: "getConfigurationInfo",
                    value: function() {
                        return (0,
                            m.httpGet)(W.Config.paths.configurationInfo)
                    }
                }]),
                e
        }();
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.MAX_POLYGON_SIZE_DEGREES = t.BigJunction = void 0;
    var s = i(15),
        r = n(s),
        a = i(31),
        o = n(a),
        l = i(529),
        u = n(l),
        d = i(50),
        c = n(d),
        h = i(10),
        f = n(h),
        p = i(61),
        g = n(p),
        m = OL.Class(o.default, {
            defaults: {
                name: "",
                rank: 0,
                segIDs: [],
                permissions: r.default.ALL_PERMISSIONS
            },
            nested: {
                geometry: OL.Geometry
            },
            _pathCache: null,
            initialize: function(e) {
                o.default.prototype.initialize.apply(this, arguments),
                    _.defaults(this.attributes, this.defaults)
            },
            merge: function() {
                return this._pathCache = null,
                    o.default.prototype.merge.apply(this, arguments)
            },
            getAddress: function() {
                return c.default.fromCityID(this.attributes.cityID, this.model)
            },
            getSegmentCount: function() {
                return this.attributes.segIDs.length
            },
            getPossibleTurns: function() {
                return null != this._pathCache ? this._pathCache : this._pathCache = u.default.for(this).getAllTurns()
            },
            getPossibleTurnsBetween: function(e, t) {
                return this.getPossibleTurns().filter(function(i) {
                    return i.getFromVertex().equals(e) && i.getToVertex().equals(t)
                })
            },
            getTurnsFrom: function(e) {
                var t = this,
                    i = this.model.getTurnGraph().getLegalTrivialTurnsFrom(e).filter(function(e) {
                        return !t._isShortSegment(e.getToVertex().getSegmentID())
                    }),
                    n = this.model.getTurnGraph().getTurnsFrom(e).filter(function(e) {
                        return e.getTurnData().hasSegmentPath()
                    }),
                    s = i.concat(n);
                return this.getShortestTurns().filter(function(t) {
                    return t.getFromVertex().equals(e)
                }).map(function(e) {
                    return e.withTurnData(e.getTurnData().withState(g.default.State.DISALLOWED))
                }).map(function(e) {
                    var t = s.find(function(t) {
                        return t.verticesEqual(e)
                    });
                    return void 0 !== t ? t : e
                }).concat(i)
            },
            _isShortSegment: function(e) {
                return this.attributes.segIDs.includes(e)
            },
            getShortestTurns: function() {
                var e = _.groupBy(this.getPossibleTurns(), function(e) {
                    return e.getFromVertex().toString() + e.getToVertex().toString()
                });
                return _.values(e).map(function(e) {
                    return _.min(e, function(e) {
                        return e.getTurnData().getSegmentPath().length
                    })
                })
            },
            getShortSegments: function() {
                return this.model.segments.getByIds(this.attributes.segIDs)
            },
            _getIntersectionWithLine: function(e) {
                var t = this.attributes.geometry.distanceTo(e, {
                        details: !0
                    }),
                    i = new OL.Geometry.Point(t.x0, t.y0),
                    n = f.default.getPointEdge(e.components, i); -
                1 === n && (n = 0);
                var s = e.components[n],
                    r = e.components[n + 1];
                if (this.attributes.geometry.intersects(r)) {
                    var a = [r, s];
                    s = a[0],
                        r = a[1]
                }
                var o = f.default.radToDeg(Math.atan2(r.y - s.y, r.x - s.x));
                return {
                    x: i.x,
                    y: i.y,
                    angle: o
                }
            },
            getAngleAtIntersection: function(e) {
                return this._getIntersectionWithLine(e).angle
            },
            getIntersectionPoint: function(e) {
                var t = this._getIntersectionWithLine(e);
                return new OL.Geometry.Point(t.x, t.y)
            },
            canEditTurns: function() {
                return this.isAllowed(this.PERMISSIONS.UPDATE)
            },
            arePropertiesEditable: function() {
                return this.PERMISSIONS.UPDATE && this.isAllowed(this.PERMISSIONS.UPDATE)
            },
            isPolygonAreaLegal: function() {
                var e = f.default.unproject(this.attributes.geometry.getBounds().clone());
                return e.getWidth() <= .01 && e.getHeight() <= .01
            },
            PERMISSIONS: {
                DELETE: 1,
                UPDATE: 2
            },
            CLASS_NAME: "Waze.Feature.FeatureVector.BigJunction"
        });
    t.BigJunction = m,
        t.MAX_POLYGON_SIZE_DEGREES = .01
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(48),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(49),
        v = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = e.defaultType,
                    n = void 0 === i ? m.RESTRICTION_TYPE.FREE : i;
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments));
                return s._defaultType = n,
                    (0,
                        r.default)(s),
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "supportsNumPassengers",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "supportsSubscriptions",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "supportsTollDriveProfileEntries",
                    value: function() {
                        return !1
                    }
                }]),
                t
        }(m.BaseRestriction);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DATE_FORMAT = t.WEEKDAY_ORDINALS = t.WEEKDAYS = t.RestrictionTimeFrame = void 0;
    var s, r = i(7),
        a = n(r),
        o = i(6),
        l = n(o),
        u = i(48),
        d = n(u),
        c = i(0),
        h = n(c),
        f = i(1),
        p = n(f),
        g = i(17),
        m = n(g),
        v = i(89),
        _ = n(v),
        y = {
            SUNDAY: "SUNDAY",
            MONDAY: "MONDAY",
            TUESDAY: "TUESDAY",
            WEDNESDAY: "WEDNESDAY",
            THURSDAY: "THURSDAY",
            FRIDAY: "FRIDAY",
            SATURDAY: "SATURDAY"
        },
        b = (s = {},
            (0,
                m.default)(s, y.MONDAY, 1),
            (0,
                m.default)(s, y.TUESDAY, 2),
            (0,
                m.default)(s, y.WEDNESDAY, 3),
            (0,
                m.default)(s, y.THURSDAY, 4),
            (0,
                m.default)(s, y.FRIDAY, 5),
            (0,
                m.default)(s, y.SATURDAY, 6),
            (0,
                m.default)(s, y.SUNDAY, 7),
            s),
        w = [y.SUNDAY, y.MONDAY, y.TUESDAY, y.WEDNESDAY, y.THURSDAY, y.FRIDAY, y.SATURDAY],
        E = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.startDate,
                    n = void 0 === i ? null : i,
                    s = t.endDate,
                    r = void 0 === s ? null : s,
                    a = t.fromTime,
                    o = void 0 === a ? null : a,
                    l = t.toTime,
                    u = void 0 === l ? null : l,
                    c = t.weekdays,
                    f = void 0 === c ? 0 : c;
                (0,
                    h.default)(this, e),
                this._startDate = n,
                    this._endDate = r,
                    this._fromTime = o,
                    this._toTime = u,
                    this._weekdays = f,
                    (0,
                        d.default)(this)
            }
            return (0,
                    p.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._startDate === e._startDate && this._endDate === e._endDate && this._fromTime === e._fromTime && this._toTime === e._toTime && this._weekdays === e._weekdays
                    }
                }, {
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            l.default)(this.toJSON(), e))
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            startDate: this._startDate,
                            endDate: this._endDate,
                            fromTime: this._fromTime,
                            toTime: this._toTime,
                            weekdays: this._weekdays
                        }
                    }
                }, {
                    key: "_isOnWeekday",
                    value: function(e) {
                        var t = b[e] - 1;
                        return new _.default(this._weekdays).isPowerOf2Enabled(t)
                    }
                }, {
                    key: "isAllDay",
                    value: function() {
                        return null === this._fromTime && null === this._toTime
                    }
                }, {
                    key: "isAllWeek",
                    value: function() {
                        return null == this._weekdays || 127 === this._weekdays
                    }
                }, {
                    key: "isDuringDates",
                    value: function() {
                        return null !== this._startDate || null !== this._endDate
                    }
                }, {
                    key: "getStartDate",
                    value: function() {
                        return this._startDate
                    }
                }, {
                    key: "getEndDate",
                    value: function() {
                        return this._endDate
                    }
                }, {
                    key: "getFromTime",
                    value: function() {
                        return this._fromTime
                    }
                }, {
                    key: "getToTime",
                    value: function() {
                        return this._toTime
                    }
                }, {
                    key: "getWeekdays",
                    value: function() {
                        var e = this;
                        return this.isAllWeek() ? (0,
                            a.default)(y) : (0,
                            a.default)(y).filter(function(t) {
                            return e._isOnWeekday(t)
                        })
                    }
                }], [{
                    key: "getWeekdaysBitValue",
                    value: function() {
                        return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).reduce(function(e, t) {
                            return e | 1 << b[t] - 1
                        }, 0)
                    }
                }, {
                    key: "getAlwaysOn",
                    value: function() {
                        return new e({
                            startDate: null,
                            endDate: null,
                            fromTime: null,
                            toTime: null,
                            weekdays: null
                        })
                    }
                }]),
                e
        }();
    t.RestrictionTimeFrame = E,
        t.WEEKDAYS = y,
        t.WEEKDAY_ORDINALS = w,
        t.DATE_FORMAT = "YYYY-MM-DD"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(61),
        u = n(l),
        d = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._fromVertex = t,
                    this._toVertex = i,
                    this._turnData = n
            }
            return (0,
                    o.default)(e, [{
                    key: "getFromVertex",
                    value: function() {
                        return this._fromVertex
                    }
                }, {
                    key: "getToVertex",
                    value: function() {
                        return this._toVertex
                    }
                }, {
                    key: "getTurnData",
                    value: function() {
                        return this._turnData
                    }
                }, {
                    key: "withTurnData",
                    value: function(t) {
                        return new e(this._fromVertex, this._toVertex, t)
                    }
                }, {
                    key: "withUnknownTurnData",
                    value: function() {
                        return new e(this._fromVertex, this._toVertex, u.default.createUnknown())
                    }
                }, {
                    key: "withFromVertex",
                    value: function(t) {
                        return new e(t, this._toVertex, this._turnData)
                    }
                }, {
                    key: "withToVertex",
                    value: function(t) {
                        return new e(this._fromVertex, t, this._turnData)
                    }
                }, {
                    key: "isUturn",
                    value: function() {
                        return this._fromVertex.getSegmentID() === this._toVertex.getSegmentID() && !this._turnData.hasSegmentPath()
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return "" + this._fromVertex + this._toVertex + this._turnData
                    }
                }, {
                    key: "verticesEqual",
                    value: function(e) {
                        return this.getFromVertex().equals(e.getFromVertex()) && this.getToVertex().equals(e.getToVertex())
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        FIXED: 0,
        NOT_A_PROBLEM: 1,
        AUTO: 2
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(48),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(39),
        c = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                (0,
                    o.default)(this, e),
                this._defaultType = t.defaultType,
                    this._direction = t.direction,
                    (0,
                        r.default)(this)
            }
            return (0,
                    u.default)(e, [{
                    key: "isForward",
                    value: function() {
                        return this._direction === d.RESTRICTION_SEGMENT_DIRECTION.FWD
                    }
                }, {
                    key: "isReverse",
                    value: function() {
                        return this._direction === d.RESTRICTION_SEGMENT_DIRECTION.REV
                    }
                }, {
                    key: "isAllowed",
                    value: function() {
                        return this._defaultType && "boolean" == typeof this._defaultType.allowed && this._defaultType.allowed
                    }
                }, {
                    key: "isNotAllowed",
                    value: function() {
                        return this._defaultType && "boolean" == typeof this._defaultType.allowed && !this._defaultType.allowed
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return _.isEqual(e._defaultType, this._defaultType) && this._direction === e._direction
                    }
                }, {
                    key: "__clone",
                    value: function() {
                        return this.toJSON()
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            defaultType: this._defaultType,
                            direction: this._direction
                        }
                    }
                }, {
                    key: "withReverseDirection",
                    value: function() {
                        return new e({
                            defaultType: _.clone(this._defaultType),
                            direction: this.isForward() ? d.RESTRICTION_SEGMENT_DIRECTION.REV : d.RESTRICTION_SEGMENT_DIRECTION.FWD
                        })
                    }
                }]),
                e
        }();
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SEGMENT_LANE_DIRECTION = void 0;
    var s = i(210),
        r = n(s),
        a = i(72),
        o = n(a),
        l = i(9),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(32),
        g = n(p),
        m = i(550),
        v = n(m),
        _ = {
            FWD: "FWD",
            REV: "REV"
        },
        y = function() {
            function e(t, i, n, s, r) {
                (0,
                    c.default)(this, e),
                this._dataModel = t,
                    this._segmentId = i,
                    this._direction = n,
                    this._laneCount = s,
                    this._lanes = [].concat((0,
                        u.default)(r))
            }
            return (0,
                    f.default)(e, [{
                    key: "getDirection",
                    value: function() {
                        return this._direction
                    }
                }, {
                    key: "getSegment",
                    value: function() {
                        return this._dataModel.segments.get(this._segmentId)
                    }
                }, {
                    key: "getLaneCount",
                    value: function() {
                        return this._laneCount
                    }
                }, {
                    key: "getLanes",
                    value: function() {
                        return [].concat((0,
                            u.default)(this._lanes))
                    }
                }, {
                    key: "isComplete",
                    value: function() {
                        var t = this;
                        return e._getOutgoingTurns(this._dataModel, this.getSegment(), this.getDirection()).every(function(e) {
                            return !e.getTurnData().isAllowed() || Boolean(t._lanes.find(function(t) {
                                return t.getToSegmentIDs().includes(e.getToVertex().getSegmentID())
                            }))
                        }) && this._laneCount === this._lanes.length && this._lanes.every(function(e) {
                            return e.isValid()
                        })
                    }
                }], [{
                    key: "_getOutgoingTurns",
                    value: function(e, t, i) {
                        var n = t.getID(),
                            s = i === _.FWD ? g.default.forwardOf(n) : g.default.reverseOf(n);
                        return e.getTurnGraph().getTurnsFrom(s)
                    }
                }, {
                    key: "forSegment",
                    value: function(t, i, n) {
                        if (null == i)
                            return null;
                        var s = n === _.FWD ? i.attributes.fwdLaneCount : i.attributes.revLaneCount,
                            a = e._getOutgoingTurns(t, i, n);
                        a = a.filter(function(e) {
                            return e.getTurnData().isAllowed()
                        });
                        for (var l = [], u = 0; u < s; u++)
                            ! function(e) {
                                var i = a.filter(function(t) {
                                        var i = t.getTurnData();
                                        return i.hasLanes() && i.getLaneData().includes(e)
                                    }),
                                    n = (0,
                                        o.default)(new r.default(i.map(function(e) {
                                        return e.getTurnData().getLaneData().getArrowAngle()
                                    }))),
                                    s = i.map(function(e) {
                                        return e.getToVertex().getSegmentID()
                                    });
                                l.push(new v.default(t, n, s))
                            }(u);
                        return new e(t, i.getID(), n, s, l)
                    }
                }]),
                e
        }();
    t.default = y,
        t.SEGMENT_LANE_DIRECTION = _
}, function(e, t, i) {
    var n = i(29);
    e.exports = function(e, t) {
        if (!n(e) || e._t !== t)
            throw TypeError("Incompatible receiver, " + t + " required!");
        return e
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(219),
        o = n(a),
        l = i(25),
        u = new o.default,
        d = Backbone.Model.extend({
            defaults: {
                uuid: null,
                name: null,
                url: null,
                location: null
            },
            initialize: function() {
                if (null === this.get("uuid"))
                    return this.set({
                        uuid: this.id
                    })
            },
            getDetails: function(e) {
                var t = this;
                e || (e = uuidGenerator.v1());
                var i = this.get("name");
                return null != i ? r.default.resolve({
                    name: i,
                    location: this.get("location"),
                    url: this.get("url")
                }) : this._getDetailsFromUuid(this.get("uuid"), e).then(function(e) {
                    var i = {
                        name: e.name,
                        location: e.location,
                        url: e.url
                    };
                    return t.set(i),
                        i
                }).catch(function() {
                    return t.set({
                            name: t.get("uuid")
                        }),
                        r.default.resolve({
                            name: t.get("uuid"),
                            location: "",
                            url: ""
                        })
                })
            },
            _getDetailsFromUuid: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    i = {
                        placeid: e,
                        key: W.apiKeys.googleMapsApiKey
                    };
                return null !== t && (i.sessiontoken = t),
                    u.has(e) ? r.default.resolve(u.get(e)) : (0,
                        l.httpGet)(W.Config.places_api.url.details, i).then(function(t) {
                        if ("OK" === t.status) {
                            var i = {
                                location: t.result.geometry.location,
                                name: t.result.name + ", " + t.result.formatted_address,
                                url: t.result.url
                            };
                            return u.set(e, i),
                                i
                        }
                        return r.default.reject(new Error("failed getting provider details"))
                    })
            },
            toJSON: function() {
                return this.get("uuid")
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(31),
        r = n(s),
        a = i(15),
        o = n(a),
        l = i(59),
        u = OpenLayers.Class(r.default, {
            nested: {
                geometry: OL.Geometry
            },
            initialize: function(e) {
                r.default.prototype.initialize.apply(this, arguments),
                    _.defaults(this.attributes, this.defaults)
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4
            },
            UNITS: {
                speed: l.UNIT.KILOMETER
            },
            TYPES: {
                SPEED_CAMERA: 2,
                DUMMY: 3,
                RED_LIGHT: 4
            },
            CLASS_NAME: "Waze.Feature.Vector.SpeedCamera"
        });
    u.prototype.defaults = {
            type: u.prototype.TYPES.SPEED_CAMERA,
            validated: !0,
            speed: 0,
            azymuth: 0,
            permissions: o.default.ALL_PERMISSIONS
        },
        t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this._layerUniqueName = t
            }
            return (0,
                    o.default)(e, [{
                    key: "writeStateToApp",
                    value: function(e, t) {
                        var i = t.map.getLayerByUniqueName(this._layerUniqueName),
                            n = i.repo;
                        i.setVisibility(e),
                            n && i.toggleRepo && n.forEach(function(t) {
                                return t.setActive(e)
                            })
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(17),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Behavior.extend({
            onRender: function() {
                this._bindModels()
            },
            _bindModels: function() {
                var e = this;
                this.options.charLimits.forEach(function(t) {
                    var i, n = e.view[t.modelAttribute];
                    n && e.view.stickit(n, (i = {},
                        (0,
                            s.default)(i, t.inputSelector, {
                            events: ["keyup"],
                            observe: t.observe,
                            attributes: [{
                                name: "maxlength",
                                onGet: function() {
                                    return t.maxLength
                                }
                            }]
                        }),
                        (0,
                            s.default)(i, t.charCountSelector, {
                            updateModel: !1,
                            observe: t.observe,
                            onGet: function(e) {
                                return t.maxLength - (e && e.length || 0)
                            }
                        }),
                        i))
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(37),
        w = n(b),
        E = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    u.default)(this, t);
                var s = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, n)),
                    r = n.forSegment,
                    a = void 0 === r ? null : r;
                return s.node = e,
                    s.navigable = i,
                    s.forSegment = a,
                    s
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = !1,
                            t = this.node.allConnectionKeys(!0),
                            i = void 0;
                        i = this.navigable ? t.legal : t.all;
                        for (var n = 0; n < i.length; n++) {
                            var s = i[n],
                                r = s.from === s.to;
                            if (s.from.areTurnsLocked(this.node) || this.doSubAction(s.from.lockTurns(this.node, !0)), !this.navigable || !r) {
                                var a = this.forSegment;
                                if (a && a !== s.from && a !== s.to)
                                    continue;
                                var o = this.model.getTurnGraph().getTurnThroughNode(this.node, s.from, s.to),
                                    l = o.getTurnData().isUnknown(),
                                    u = o.getTurnData().withToggledState(this.navigable);
                                if (o = o.withTurnData(u),
                                    l && !o.getTurnData().isAllowed())
                                    continue;
                                var d = new w.default(this.model.getTurnGraph(), o);
                                !1 !== this.doSubAction(d) && (e = !0)
                            }
                        }
                        return e
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.node]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this.navigable ? this._description = I18n.t("save.changes_log.actions.ModifyAllConnections.allow") : this._description = I18n.t("save.changes_log.actions.ModifyAllConnections.disallow")
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.node.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(y.default);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(6),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(0),
        f = n(h),
        p = i(1),
        g = n(p),
        m = i(3),
        v = n(m),
        _ = i(4),
        y = n(_),
        b = i(18),
        w = n(b),
        E = i(22),
        k = n(E),
        M = function(e) {
            function t(e, i, n, s) {
                (0,
                    f.default)(this, t);
                var r = (0,
                    v.default)(this, (t.__proto__ || (0,
                    c.default)(t)).call(this, s));
                return r.houseNumberSet = e,
                    r.houseNumber = i,
                    r.attributes = n,
                    r.oldAttributes = {},
                    r.stateChanged = !1,
                    r.changed = !1,
                    r
            }
            return (0,
                    y.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = !0,
                            t = !1,
                            i = void 0;
                        try {
                            for (var n, s = (0,
                                    o.default)((0,
                                    r.default)(this.attributes)); !(e = (n = s.next()).done); e = !0) {
                                var a = n.value,
                                    l = this.attributes[a];
                                null != this.houseNumber[a] && this.houseNumber[a] !== l && (this.changed = !0,
                                    this.oldAttributes[a] = this.houseNumber[a])
                            }
                        } catch (e) {
                            t = !0,
                                i = e
                        } finally {
                            try {
                                !e && s.return && s.return()
                            } finally {
                                if (t)
                                    throw i
                            }
                        }
                        return this.changed && (0,
                                u.default)(this.houseNumber, this.attributes),
                            this.houseNumberSet.state || (this.houseNumberSet.state = OL.State.UPDATE,
                                this.stateChanged = !0),
                            this.model.houseNumbers.changed(this.houseNumberSet),
                            this.changed
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        for (var e in this.oldAttributes)
                            k.default.isUndefined(this.oldAttributes[e]) ? delete this.attributes[e] : this.houseNumber[e] = this.oldAttributes[e];
                        return this.stateChanged && (this.houseNumberSet.state = null),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.houseNumberSet.state = OL.State.UPDATE,
                            (0,
                                u.default)(this.houseNumber, this.attributes),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return (0,
                                u.default)(e, this.attributes),
                            e.id = this.houseNumber.id,
                            e.segID = this.houseNumberSet.id, {
                                _objectType: this.houseNumberSet.type,
                                action: w.default.TYPE.UPDATE,
                                attributes: e
                            }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return this.model.segments.get(this.houseNumberSet.id).getEntireStreet().map(function(e) {
                            return e.getUniqueID
                        })
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this.model.segments.get(this.houseNumberSet.id),
                            t = e.getAddress().getStreetName({
                                emptyString: ""
                            });
                        this._description = I18n.t("save.changes_log.actions.UpdateHouseNumber", {
                            houseNumber: this.houseNumber,
                            streetName: t
                        })
                    }
                }]),
                t
        }(w.default);
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(12),
        v = n(m),
        y = i(52),
        b = n(y),
        w = i(64),
        E = n(w),
        k = i(96),
        M = n(k),
        S = i(22),
        T = n(S),
        C = i(30),
        I = n(C),
        A = i(32),
        D = n(A),
        R = i(37),
        O = n(R),
        L = i(36),
        x = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    u.default)(this, t);
                var s = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, n)),
                    r = n.level,
                    a = void 0 === r ? null : r;
                return s.level = a,
                    s.segments = e,
                    s.node = i,
                    s.mergedSegment = null,
                    s.keepLevel = !1,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_mergeVertices",
                    value: function(e, t) {
                        return [].concat((0,
                            r.default)(e.slice(0, -1)), (0,
                            r.default)(t))
                    }
                }, {
                    key: "createMergedSegment",
                    value: function(e, t) {
                        var i = this.segments[0],
                            n = this.segments[1],
                            s = i.geometry.clone().getVertices(),
                            r = n.geometry.clone().getVertices(),
                            a = void 0,
                            o = void 0,
                            l = void 0,
                            u = void 0,
                            d = void 0,
                            c = void 0,
                            h = void 0;
                        i.attributes.fromNodeID === t.getID() && n.attributes.toNodeID === t.getID() ? (a = n.attributes.fromNodeID,
                            o = i.attributes.toNodeID,
                            l = this._mergeVertices(r, s),
                            d = D.default.forwardOf(n.getID()),
                            u = D.default.reverseOf(n.getID()),
                            h = D.default.forwardOf(i.getID()),
                            c = D.default.reverseOf(i.getID())) : i.attributes.fromNodeID === t.getID() && n.attributes.fromNodeID === t.getID() ? (a = n.attributes.toNodeID,
                            o = i.attributes.toNodeID,
                            r.reverse(),
                            l = this._mergeVertices(r, s),
                            d = D.default.reverseOf(n.getID()),
                            u = D.default.forwardOf(n.getID()),
                            h = D.default.forwardOf(i.getID()),
                            c = D.default.reverseOf(i.getID())) : i.attributes.toNodeID === t.getID() && n.attributes.toNodeID === t.getID() ? (a = i.attributes.fromNodeID,
                            o = n.attributes.fromNodeID,
                            r.reverse(),
                            l = this._mergeVertices(s, r),
                            d = D.default.forwardOf(i.getID()),
                            u = D.default.reverseOf(i.getID()),
                            h = D.default.reverseOf(n.getID()),
                            c = D.default.forwardOf(n.getID())) : i.attributes.toNodeID === t.getID() && n.attributes.fromNodeID === t.getID() ? (a = i.attributes.fromNodeID,
                            o = n.attributes.toNodeID,
                            l = this._mergeVertices(s, r),
                            d = D.default.forwardOf(i.getID()),
                            u = D.default.reverseOf(i.getID()),
                            h = D.default.forwardOf(n.getID()),
                            c = D.default.reverseOf(n.getID())) : console.warn("Warning: illegal input for merging segments");
                        var f = new OpenLayers.Geometry.LineString(l),
                            p = new I.default($.extend({}, i.attributes));
                        return p.copyAttributes(i),
                            p.geometry = f,
                            p.setID(null), {
                                mergedSegment: p,
                                fromNodeID: a,
                                toNodeID: o,
                                firstReverse: u,
                                firstForward: d,
                                secondReverse: c,
                                secondForward: h
                            }
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (T.default.defined(this.segments) || (this.keepLevel = !0,
                                this.segments = this.node.attributes.segIDs.map(function(e) {
                                    return this.model.segments.get(e)
                                }, this)),
                            _(this.segments).invoke("getID").join(), !this.node.areSegmentsBridgable(this.segments))
                            return console.warn("Segments " + _(this.segments).invoke("getID").join() + " are not bridgable."), !1;
                        var e = this.createMergedSegment(this.segments, this.node),
                            i = e.mergedSegment,
                            n = e.fromNodeID,
                            s = e.toNodeID,
                            a = e.firstForward,
                            o = e.firstReverse,
                            l = e.secondForward,
                            u = e.secondReverse;
                        this.mergedSegment = i;
                        var d = this.mergedSegment.attributes,
                            c = this.level;
                        null !== c && (c = _.max(this.node.attributes.segIDs.map(function(e) {
                                    return this.model.segments.get(e).attributes.level
                                }, this)),
                                _.isUndefined(c) && (c = 0),
                                this.keepLevel || c++),
                            d.level = c,
                            d.streetIDs = _.union(this.segments[0].attributes.streetIDs || [], this.segments[1].attributes.streetIDs || []),
                            d.origIDs = [this.segments[0].getID(), this.segments[1].getID()],
                            this.mergedSegment.attributes.fromNodeID = n,
                            this.mergedSegment.attributes.toNodeID = s,
                            d.virtualNodeIDs = [].concat((0,
                                r.default)(this.segments[0].attributes.virtualNodeIDs), (0,
                                r.default)(this.segments[1].attributes.virtualNodeIDs)),
                            this.setLockLevel(this.mergedSegment),
                            this.doSubAction(new M.default(this.mergedSegment)),
                            this.mergedSegment.attributes.permissions = this.segments[0].attributes.permissions & this.segments[1].attributes.permissions;
                        var h = this.model.nodes.get(n),
                            f = this.model.nodes.get(s);
                        if (this._copyTurns(a, o, l, u),
                            h && this.doSubAction(new b.default(h, this.mergedSegment)),
                            f && this.doSubAction(new b.default(f, this.mergedSegment)),
                            this.doSubAction(new E.default(this.segments[0], {
                                hide: !0
                            })),
                            this.doSubAction(new E.default(this.segments[1], {
                                hide: !0
                            })),
                            this._connectVirtualNodes(d),
                            2 === this.node.attributes.segIDs.length) {
                            var p = this.node.attributes.segIDs.map(function(e) {
                                return this.model.segments.get(e)
                            }, this);
                            this.doSubAction(new t(p, this.node, {
                                level: c - 1
                            }))
                        }
                    }
                }, {
                    key: "_connectVirtualNodes",
                    value: function(e) {
                        var t = this,
                            i = this.node.getSegmentIds().filter(function(e) {
                                return t.model.segments.get(e).isWalkingRoadType()
                            }),
                            n = [];
                        n = i.length > 0 ? [this.node.getID()].concat((0,
                                r.default)(e.virtualNodeIDs)) : [].concat((0,
                                r.default)(e.virtualNodeIDs)),
                            n.forEach(function(e) {
                                var i = t.model.nodes.get(e);
                                t.doSubAction(new b.default(i, t.mergedSegment, {
                                    virtual: !0
                                }))
                            })
                    }
                }, {
                    key: "_copyTurns",
                    value: function(e, t, i, n) {
                        var s = this,
                            r = this.model.getTurnGraph();
                        r.getTurnsTo(e).forEach(function(e) {
                                e = e.withToVertex(D.default.forwardOf(s.mergedSegment.getID())),
                                    s.doSubAction(new O.default(r, e, {
                                        dontSerialize: !0
                                    }))
                            }),
                            r.getTurnsFrom(t).forEach(function(e) {
                                e = e.withFromVertex(D.default.reverseOf(s.mergedSegment.getID())),
                                    s.doSubAction(new O.default(r, e, {
                                        dontSerialize: !0
                                    }))
                            }),
                            r.getTurnsFrom(i).forEach(function(e) {
                                e = e.withFromVertex(D.default.forwardOf(s.mergedSegment.getID())),
                                    s.doSubAction(new O.default(r, e, {
                                        dontSerialize: !0
                                    }))
                            }),
                            r.getTurnsTo(n).forEach(function(e) {
                                e = e.withToVertex(D.default.reverseOf(s.mergedSegment.getID())),
                                    s.doSubAction(new O.default(r, e, {
                                        dontSerialize: !0
                                    }))
                            })
                    }
                }, {
                    key: "setLockLevel",
                    value: function(e) {
                        var t = [this.segments[0].attributes.lockRank, this.segments[1].attributes.lockRank],
                            i = [this.segments[0].attributes.rank, this.segments[1].attributes.rank];
                        e.attributes.lockRank = null === t[0] && null === t[1] ? null : Math.max.apply(null, t),
                            e.attributes.rank = Math.max.apply(null, i)
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.mergedSegment]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this.segments[0];
                        this._description = (0,
                            L.formatActionAddressDescription)(e, "MergeSegments")
                    }
                }]),
                t
        }(v.default);
    t.default = x,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(20),
        v = n(m),
        y = i(95),
        b = n(y),
        w = i(123),
        E = n(w),
        k = i(750),
        M = n(k),
        S = i(11),
        T = {
            getCityFromDataModel: !1,
            cityIDField: "cityID",
            streetIDField: "streetID",
            updateStreet: !0,
            updateHouseNumber: !1
        },
        C = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n));
                return s.feature = e,
                    s.attributes = i,
                    s.options = _.defaults(n, T),
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this.model.countries.get(this.attributes.countryID),
                            t = this.model.states.get(this.attributes.stateID),
                            i = void 0;
                        if (this.options.getCityFromDataModel)
                            i = this.model.cities.get(this.attributes.cityID);
                        else {
                            var n = new b.default(t, e, this.attributes.cityName, this.attributes.emptyCity);
                            this.doSubAction(n),
                                i = n.city
                        }
                        var s = {};
                        if (this.options.updateStreet) {
                            var r = new E.default(this.attributes.streetName, i, this.attributes.emptyStreet);
                            this.doSubAction(r);
                            var a = r.street;
                            s[this.options.streetIDField] = a.getID(),
                                this.feature.type === S.SEGMENT && this.doSubAction(new M.default)
                        } else
                            s[this.options.cityIDField] = i.getID();
                        return this.options.updateHouseNumber && this.doSubAction(new v.default(this.feature, {
                                houseNumber: this.attributes.houseNumber
                            })),
                            this.doSubAction(new v.default(this.feature, s)), !0
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.feature]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = I18n.t("objects." + this.feature.type + ".name");
                        this._description = I18n.t("save.changes_log.actions.UpdateFeatureAddress", {
                            objectType: e
                        })
                    }
                }]),
                t
        }(g.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DialogContentRegion = t.DialogRegion = void 0;
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = Marionette.Region.extend({
            el: "#dialog-region",
            initialize: function() {
                var e = this;
                return this._ensureElement(),
                    this.$el.addClass("modal").attr("tabindex", -1),
                    this.$el.on("hidden.bs.modal", function() {
                        if (!e._isClosing)
                            return e.empty()
                    }),
                    this.$el.on("click", ".cancel-button", function(t) {
                        return t.preventDefault(),
                            e.empty()
                    })
            },
            empty: function() {
                this._isClosing || (this._isClosing = !0,
                    this._destroyModal(),
                    Marionette.Region.prototype.empty.apply(this, arguments),
                    this._isClosing = !1)
            },
            _destroyModal: function() {
                this.stopListening(this.currentView),
                    this.$el.off("keydown.dialog-region"),
                    this.$el.modal("hide"),
                    this.$el.removeData()
            },
            show: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                Marionette.Region.prototype.show.apply(this, arguments),
                    _.defaults(i, {
                        keyboard: !0,
                        backdrop: "static",
                        modalDialogClass: ""
                    }),
                    e.on("destroy", function() {
                        return t.empty()
                    }),
                    e.$el.addClass("modal-dialog").addClass(i.modalDialogClass),
                    this.$el.on("keydown.dialog-region", function(e) {
                        return e.stopPropagation()
                    }),
                    this.$el.modal(i),
                    this.$el.find(".modal-content").focus()
            }
        }),
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        var t = e.onEscapeKeydown,
                            i = void 0 === t ? function(e) {
                                return e
                            } :
                            t;
                        this.onEscapeKeydown = i
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        var e = this;
                        this.$el.attr("tabindex", -1).focus(),
                            this.$el.off("keydown.dialog-content").on("keydown.dialog-content", function(t) {
                                if (27 === t.which)
                                    return e.onEscapeKeydown(t)
                            })
                    }
                }]),
                t
        }(Marionette.Region);
    t.DialogRegion = p,
        t.DialogContentRegion = g
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(27),
        o = i(77),
        l = n(o),
        u = OL.Class(OL.Control.ModifyFeature, {
            standalone: !0,
            initialize: function(e, t) {
                var i = (0,
                    r.default)({
                    clickout: !1,
                    standalone: !0
                }, t);
                OpenLayers.Control.ModifyFeature.prototype.initialize.call(this, e.layer, i),
                    this.repo.on(a.CHANGED, this._onFeaturesChanged, this),
                    this.repo.on(a.REMOVED, this._onFeaturesRemoved, this),
                    this.map.events.register("zoomend", this, this.resetVertices),
                    this._originalGeometry = e.geometry.clone(),
                    this.map.addControl(this),
                    this.activate(),
                    this.selectFeature(e),
                    this.handlers.drag.control.feature.geometryTypeMatches = this._isGeometryMatchForDrag
            },
            _isGeometryMatchForDrag: function(e) {
                return Boolean(e._sketch) || e.model && e.model.isSelected() && ("function" != typeof e.model.isPoint || e.model.isPoint())
            },
            destroy: function() {
                this.repo.off(a.CHANGED, this._onFeaturesChanged, this),
                    this.repo.off(a.REMOVED, this._onFeaturesRemoved, this),
                    this.map.events.unregister("zoomend", this, this.resetVertices),
                    this.deactivate(),
                    OL.Control.ModifyFeature.prototype.destroy.apply(this, arguments)
            },
            deactivate: function() {
                this.dragHandle && (this.layer.destroyFeatures([this.dragHandle], {
                            silent: !0
                        }),
                        delete this.dragHandle),
                    this.feature = null,
                    OL.Control.ModifyFeature.prototype.deactivate.call(this)
            },
            setFeatureState: function() {},
            _onFeaturesChanged: function() {
                this.feature && (this.resetVertices(),
                    this._originalGeometry = this.feature.geometry.clone())
            },
            _onFeaturesRemoved: function(e) {
                e.includes(this.feature) && this.unselectFeature(this.feature)
            },
            onModification: function() {
                var e = new l.default(this.feature.model, this.repo, this._originalGeometry, this.feature.geometry);
                this.model.actionManager.add(e),
                    this._originalGeometry = this.feature.geometry.clone()
            },
            collectDragHandle: function() {
                var e = this,
                    t = _.max(this.feature.geometry.getVertices(), function(e) {
                        return e.y
                    }),
                    i = new OpenLayers.Geometry.Point(t.x, t.y + 30 * this.map.getResolution()),
                    n = new OpenLayers.Feature.Vector(i);
                return i.move = function(t, n) {
                        return OpenLayers.Geometry.Point.prototype.move.call(i, t, n),
                            e.feature.geometry.move(t, n)
                    },
                    n.dragPoint = !0,
                    n._sketch = !0,
                    this.dragHandle = n,
                    this.layer.addFeatures([this.dragHandle], {
                        silent: !0
                    })
            },
            dragStart: function(e) {
                var t = "OpenLayers.Geometry.Point" === e.geometry.CLASS_NAME;
                this.toggle && this.feature === e && (this._unselect = e),
                    (e._sketch || t && this.feature === e) && (this.vertex = e,
                        this.handlers.drag.stopDown = !0)
            },
            unselectFeature: function(e) {
                OL.Control.ModifyFeature.prototype.unselectFeature.call(this, e),
                    W.selectionManager.unselectFeature(e)
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.MergeHGighlightStyleMap = void 0;
    var n = i(805),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(231),
        a = {
            strokeColor: "#ca9ace",
            fillColor: "#c290c6",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        o = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: "white",
            fillColor: "#c290c6",
            graphicZIndex: 0,
            fillOpacity: 1
        },
        l = {
            CAR_SERVICES: s.default.toUnicode("waze-icon-place-car"),
            CULTURE_AND_ENTERTAINEMENT: s.default.toUnicode("waze-icon-place-culture"),
            FOOD_AND_DRINK: s.default.toUnicode("waze-icon-place-food-drink"),
            LODGING: s.default.toUnicode("waze-icon-place-lodging"),
            NATURAL_FEATURES: s.default.toUnicode("waze-icon-place-natural"),
            OTHER: s.default.toUnicode("waze-icon-place-other"),
            OUTDOORS: s.default.toUnicode("waze-icon-place-outdoors"),
            PROFESSIONAL_AND_PUBLIC: s.default.toUnicode("waze-icon-place-professional"),
            SHOPPING_AND_SERVICES: s.default.toUnicode("waze-icon-place-shopping"),
            TRANSPORTATION: s.default.toUnicode("waze-icon-place-transportation")
        },
        u = function(e) {
            var t = W.defaultRule({
                Point: o,
                Polygon: a
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    },
                    getCategoryIcon: function(e) {
                        var t = void 0;
                        return e.model && (t = e.model.getMainCategory()),
                            l[t] || ""
                    }
                }
            })
        },
        d = W.defaultRule({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                pointRadius: 28,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        c = W.defaultRule({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        h = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        f = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        p = W.rule("isApproved", !1, {
            Point: {
                pointRadius: 6,
                fillColor: "#c290c6",
                strokeWidth: 3,
                strokeColor: "#00ece3"
            },
            Polygon: {
                fillColor: "#ca9ace",
                strokeColor: "#00ece3",
                strokeDashstyle: "dash"
            }
        }),
        g = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        }),
        m = W.rule("isResidential", !0, {
            graphicName: "triangle"
        }),
        v = {
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fillOpacity: .5,
                pointRadius: 28,
                strokeWidth: 3
            },
            Polygon: {
                fillOpacity: .5,
                strokeColor: "#00ece3",
                fillColor: "#00ece3",
                strokeWidth: 3
            }
        },
        _ = new OL.StyleMap({
            default: new OL.Style(null, {
                rules: [W.defaultRule(v)]
            })
        });
    t.MergeHGighlightStyleMap = _,
        t.default = new OL.StyleMap({
            default: u([g, r.DragPointRule, h, p, m]),
            highlight: u([W.defaultRule({
                Point: {
                    fontFamily: s.default.fontFamily,
                    label: "${getCategoryIcon}",
                    labelOutlineWidth: 0,
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: "#ca9ace",
                    fillOpacity: 1,
                    strokeOpacity: 1
                },
                Polygon: {
                    strokeColor: "#ca9ace",
                    fillColor: "#ca9ace"
                }
            }), g, r.DragPointHighlightRule, f, m]),
            select: u([d]),
            highlightselected: u([d]),
            delete: u([c]),
            highlightdeleted: u([c])
        })
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(822),
        r = n(s),
        a = i(257),
        o = n(a),
        l = i(823),
        u = n(l),
        d = i(824),
        c = n(d),
        h = i(825),
        f = n(h),
        p = {
            0: "unknown",
            1: "big_direction_left",
            2: "big_direction_right",
            3: "big_direction_exit_left",
            4: "big_direction_exit_right",
            5: "big_direction_forward",
            6: "big_directions_roundabout",
            7: "big_directions_roundabout",
            8: "big_directions_roundabout_l",
            9: "big_directions_roundabout_l",
            10: "big_directions_roundabout_s",
            11: "big_directions_roundabout_s",
            12: "big_directions_roundabout_r",
            13: "big_directions_roundabout_r",
            14: "big_directions_roundabout_u",
            15: "big_directions_roundabout_u",
            16: "big_direction_end",
            17: "big_direction_exit_left",
            18: "big_direction_exit_right",
            20: "big_direction_u"
        },
        g = {
            pointerEvents: "none",
            strokeLinecap: "square",
            strokeWidth: 5
        },
        m = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(g, {
                context: {
                    getInstructionCodeImages: function(e) {
                        return i(826)("./" + p[e.attributes.code] + ".png")
                    }
                }
            })
        });
    m.addUniqueValueRules("default", "type", {
            session: {
                strokeColor: "#7ddd7f",
                strokeWidth: 2,
                graphicZIndex: 0
            },
            drive: {
                strokeColor: "#7ddd7f",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            disallowedPath: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            driveArrow: {
                externalGraphic: r.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 2
            },
            disconnect: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                strokeDashstyle: "dash",
                strokeDashArray: "32 16",
                graphicZIndex: 2
            },
            matchedSegment: {
                strokeWidth: 8,
                strokeColor: "#00ece3",
                strokeOpacity: .7,
                graphicZIndex: 2
            },
            matchedSegmentArrow: {
                externalGraphic: o.default,
                rotation: "${angle}",
                fillOpacity: .7,
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            gutter: {
                strokeColor: "black",
                graphicZIndex: 2
            },
            pinA: {
                pointerEvents: "visiblePainted",
                externalGraphic: u.default,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            pinB: {
                pointerEvents: "visiblePainted",
                externalGraphic: c.default,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            suggestedRoute: {
                strokeWidth: 8,
                strokeColor: "#9400ff",
                graphicZIndex: 3
            },
            suggestedRouteArrow: {
                externalGraphic: f.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            driveWeight: {
                label: "${weight}",
                fontSize: 12,
                fontColor: "white",
                strokeWidth: 3,
                strokeOpacity: 1,
                pointRadius: 14,
                fillColor: "#529554",
                strokeColor: "#7ddd7f"
            },
            routeInstruction: {
                externalGraphic: "${getInstructionCodeImages}",
                graphicWidth: 30,
                graphicHeight: 32
            },
            shortSegment: {
                strokeWidth: 8,
                strokeColor: "#3a582c",
                graphicZIndex: 1
            },
            venue: {
                strokeColor: "#ea4e35",
                fillColor: "#ea4e35",
                strokeDashstyle: "dash",
                strokeOpacity: 1,
                strokeWidth: 2,
                fillOpacity: .3
            }
        }),
        t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(30),
        c = n(d),
        h = i(10),
        f = n(h),
        p = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this.layer = t
            }
            return (0,
                    u.default)(e, [{
                    key: "drawUserDrive",
                    value: function(e) {
                        var t = [];
                        return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                                type: "drive"
                            })),
                            this.drawArrows(e, t, "driveArrow"),
                            this.addFeatures(t),
                            t
                    }
                }, {
                    key: "drawDisallowedPath",
                    value: function(e) {
                        var t = [];
                        return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                                type: "disallowedPath"
                            })),
                            this.drawArrows(e, t, "matchedSegmentArrow"),
                            this.addFeatures(t),
                            t
                    }
                }, {
                    key: "drawDriveWeightPoint",
                    value: function(e, t, i) {
                        if (this.layer.map.getZoom() >= W.Config.user_drive.weightMinDisplayZoom) {
                            var n = e.distanceTo(t, {
                                details: !0
                            });
                            n = new OpenLayers.Geometry.Point(n.x1, n.y1),
                                n = f.default.getPointAlongLine(t.getVertices(), this.WEIGHT_POINT_DISTANCE * this.layer.map.getResolution(), n).point;
                            var s = new OpenLayers.Feature.Vector(n, {
                                weight: i.toString(),
                                type: "driveWeight"
                            });
                            this.addFeatures(s)
                        }
                    }
                }, {
                    key: "drawShortSegment",
                    value: function(e) {
                        var t = [];
                        t.push(new OpenLayers.Feature.Vector(e.clone(), {
                                type: "shortSegment"
                            })),
                            this.addFeatures(t)
                    }
                }, {
                    key: "drawMatchedSegment",
                    value: function(e) {
                        var t = [];
                        t.push(new OpenLayers.Feature.Vector(e.clone(), {
                                type: "matchedSegment"
                            })),
                            this.drawArrows(e, t, "matchedSegmentArrow"),
                            this.addFeatures(t)
                    }
                }, {
                    key: "drawSuggestedRoute",
                    value: function(e) {
                        var t = [];
                        return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                                type: "suggestedRoute"
                            })),
                            this.drawArrows(e, t, "suggestedRouteArrow"),
                            this.addFeatures(t),
                            t
                    }
                }, {
                    key: "drawSession",
                    value: function(e) {
                        this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "session"
                        }))
                    }
                }, {
                    key: "drawArrows",
                    value: function(e, t, i) {
                        if (this.layer.map.getZoom() >= W.Config.user_drive.arrowsMinDisplayZoom) {
                            var n = this.ARROW_DISTANCE * this.layer.map.getResolution();
                            new c.default({
                                geometry: e
                            }).getArrowPoints(n).forEach(function(e) {
                                t.push(new OpenLayers.Feature.Vector(e[0], {
                                    type: i,
                                    angle: 360 - OpenLayers.Util.deg(_.last(e))
                                }))
                            })
                        }
                    }
                }, {
                    key: "drawDisconnect",
                    value: function(e, t) {
                        var i = [];
                        i.push(new OpenLayers.Feature.Vector(e.clone(), {
                                type: "disconnect"
                            })),
                            t && this.drawDisconnectGutters(e, i),
                            this.addFeatures(i)
                    }
                }, {
                    key: "drawDisconnectGutters",
                    value: function(e, t) {
                        if (this.layer.map.getZoom() >= W.Config.user_drive.gutterMinDisplayZoom) {
                            var i = void 0,
                                n = this.DISCONNECT_GUTTER_SIZE * this.layer.map.getResolution();
                            [!0, !1].forEach(function(s) {
                                i = new c.default({
                                        geometry: e
                                    }).getSubSegment(n, s),
                                    i.attributes.type = "gutter",
                                    t.push(i)
                            })
                        }
                    }
                }, {
                    key: "drawPin",
                    value: function(e, t) {
                        this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "pin" + t
                        }))
                    }
                }, {
                    key: "drawRouteInstructions",
                    value: function(e, t) {
                        var i = [];
                        _.isEmpty(t) || this.layer.map.getZoom() < W.Config.user_drive.instructionsMinDisplayZoom || (t.forEach(function(e) {
                                this.HIDDEN_INSTRUCTION_CODES.includes(Number(e.code)) || i.push(new OpenLayers.Feature.Vector(e.point, {
                                    type: "routeInstruction",
                                    code: e.code
                                }))
                            }, this),
                            this.addFeatures(i))
                    }
                }, {
                    key: "drawVenue",
                    value: function(e) {
                        var t = new OL.Feature.Vector(e.clone(), {
                            type: "venue"
                        });
                        this.addFeatures(t)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this.layer.addFeatures(e, {
                            silent: !0
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this.layer.removeAllFeatures()
                    }
                }]),
                e
        }();
    (0,
        r.default)(p.prototype, {
        ARROW_DISTANCE: 70,
        DISCONNECT_GUTTER_SIZE: 5,
        WEIGHT_POINT_DISTANCE: 70,
        HIDDEN_INSTRUCTION_CODES: [0, 5]
    }),
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.GROUP_ISSUES = "GROUP_ISSUES",
        t.GROUP_MAP_ISSUES = "GROUP_MAP_ISSUES",
        t.ITEM_MAP_PROBLEMS = "ITEM_MAP_PROBLEMS",
        t.ITEM_CLOSED_MAP_PROBLEMS = "ITEM_CLOSED_MAP_PROBLEMS",
        t.ITEM_UPDATE_REQUESTS = "ITEM_UPDATE_REQUESTS",
        t.ITEM_CLOSED_UPDATE_REQUESTS = "ITEM_CLOSED_UPDATE_REQUESTS",
        t.ITEM_PLACE_UPDATE_REQUESTS = "ITEM_PLACE_UPDATE_REQUESTS",
        t.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS = "ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS",
        t.GROUP_PARKING_ISSUES = "GROUP_PARKING_ISSUES",
        t.ITEM_PARKING_MAP_PROBLEMS = "ITEM_PARKING_MAP_PROBLEMS",
        t.ITEM_PARKING_CLOSED_MAP_PROBLEMS = "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
        t.ITEM_PARKING_PLACE_UPDATE_REQUESTS = "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
        t.GROUP_PLACES = "GROUP_PLACES",
        t.ITEM_VENUES = "ITEM_VENUES",
        t.ITEM_RESIDENTIAL_PLACES = "ITEM_RESIDENTIAL_PLACES",
        t.ITEM_PARKING_PLACES = "ITEM_PARKING_PLACES",
        t.GROUP_ROAD = "GROUP_ROAD",
        t.ITEM_ROAD = "ITEM_ROAD",
        t.ITEM_JUNCTION_BOXES = "ITEM_JUNCTION_BOXES",
        t.ITEM_CLOSURES = "ITEM_CLOSURES",
        t.ITEM_SPEED_CAMERAS = "ITEM_SPEED_CAMERAS",
        t.GROUP_DISPLAY = "GROUP_DISPLAY",
        t.ITEM_SATELLITE_IMAGERY = "ITEM_SATELLITE_IMAGERY",
        t.ITEM_AREA_MANAGERS = "ITEM_AREA_MANAGERS",
        t.ITEM_GPS_POINTS = "ITEM_GPS_POINTS",
        t.ITEM_LIVE_USERS = "ITEM_LIVE_USERS",
        t.ITEM_EDITABLE_AREAS = "ITEM_EDITABLE_AREAS",
        t.ITEM_DISALLOWED_TURNS = "ITEM_DISALLOWED_TURNS"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(13),
        o = n(a),
        l = i(58),
        u = n(l),
        d = {
            bfs: function(e, t, i) {
                var n = [e],
                    s = {};
                s[e.getID()] = e.getID();
                for (; !_.isEmpty(n);) {
                    var r = function() {
                        for (var e = n.shift(), r = ["from", "to"], a = 0; a < r.length; a++)
                            for (var o = r[a], l = e.attributes[o + "NodeID"], u = e.getConnectedSegments(o).filter(function(i) {
                                    return i.getID() !== e.getID() && t(i)
                                }).map(function(e) {
                                    return e
                                }), d = 0; d < u.length; d++) {
                                var c = u[d];
                                if (!s[c.getID()]) {
                                    if (s[c.getID()] = e.getID(),
                                        i(c, l, o, u, e))
                                        return {
                                            v: [c, s]
                                        };
                                    n.push(c)
                                }
                            }
                    }();
                    if ("object" === (void 0 === r ? "undefined" : (0,
                            u.default)(r)))
                        return r.v
                }
                return [null, s]
            },
            getReversedSegments: function(e) {
                var t = {
                    multipleConnectedComponents: !1,
                    numReversed: 0
                };
                if (_.isEmpty(e))
                    return t;
                t[e[0].getID()] = !1;
                var i = this.bfs(e[0], function(t) {
                        return e.includes(t)
                    }, function(e, i, n, s, r) {
                        var a = "from" === n && e.attributes.toNodeID !== i || "to" === n && e.attributes.fromNodeID !== i,
                            o = t[r.getID()],
                            l = a ? !o : o;
                        return t[e.getID()] = l,
                            l && t.numReversed++, !1
                    }),
                    n = (0,
                        o.default)(i, 2),
                    s = n[1];
                return (0,
                        r.default)(s).length < e.length && (t = {
                        multipleConnectedComponents: !0,
                        numReversed: 0
                    }),
                    t
            }
        };
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            tagName: "li",
            className: "feed-item",
            triggers: {
                click: "click"
            },
            events: {
                "click .delete": "_onClickDelete"
            },
            initialize: function() {
                this.model.on("change:selected", this._toggleSelected, this),
                    this.model.on("delegate:delete", this._destroyModel, this),
                    this.model.on("resolved", this._destroyModel, this)
            },
            serializeData: function() {
                return {
                    title: this.model.getParameter("title"),
                    shortMessage: this.model.getParameter("shortMessage"),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _onClickDelete: function(e) {
                return e.stopPropagation(),
                    this._destroyModel()
            },
            _destroyModel: function() {
                var e = this;
                return this.$el.one("transitionend", function() {
                        return e.model.destroy()
                    }),
                    this.$el.addClass("deleting"),
                    W.Report.feedAction("dismiss", this.model.get("type"))
            },
            _toggleSelected: function() {
                var e = this.model.get("selected");
                this.$el.toggleClass("selected", e),
                    e && this.el.scrollIntoViewIfNeeded()
            },
            _formatTimestamp: function() {
                return s.default.dateString(this.model.get("timestamp"))
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(13),
        o = n(a),
        l = i(7),
        u = n(l),
        d = i(968),
        c = n(d),
        h = i(30),
        f = n(h),
        p = i(59),
        g = i(969),
        m = n(g),
        v = OpenLayers.Class(f.default, {
            children: null,
            address: null,
            addressDetails: null,
            attributeToReducer: null,
            attributeNames: ["flags", "fwdFlags", "revFlags", "roadType", "direction", "level", "fwdToll", "revToll", "fwdDirection", "revDirection", "fwdMaxSpeed", "fwdMaxSpeedUnverified", "revMaxSpeed", "revMaxSpeedUnverified", "permissions", "updatedBy", "createdBy", "createdOn", "updatedOn", "length", "allowNoDirection", "rank", "lockRank", "routingRoadType", "hasClosures", "hasHNs"],
            attributeReducers: {
                permissions: c.default.bitwise.and,
                length: c.default.sum,
                rank: c.default.max,
                hasClosures: c.default.logical.or,
                hasHNs: c.default.logical.or,
                flags: c.default.bitwise.or,
                fwdflags: c.default.bitwise.or,
                revFlags: c.default.bitwise.or,
                fwdToll: c.default.logical.or,
                revToll: c.default.logical.or,
                fwdMaxSpeedUnverified: c.default.logical.or,
                revMaxSpeedUnverified: c.default.logical.or
            },
            flagAttributeNames: (0,
                u.default)(f.default.prototype.FLAG_ATTRIBUTES),
            flagAttributeReducers: (0,
                u.default)(f.default.prototype.FLAG_ATTRIBUTES).reduce(function(e, t) {
                return e[t] = c.default.logical.and
            }, {}),
            attributeReverses: {
                fwdDirection: "directionReverser",
                revDirection: "directionReverser"
            },
            reversableAttributes: {
                fwdMaxSpeed: "revMaxSpeed",
                revMaxSpeed: "fwdMaxSpeed",
                fwdDirection: "revDirection",
                revDirection: "fwdDirection",
                fwdToll: "revToll",
                revToll: "fwdToll",
                fwdFlags: "revFlags",
                revFlags: "fwdFlags",
                fwdMaxSpeedUnverified: "revMaxSpeedUnverified",
                revMaxSpeedUnverified: "fwdMaxSpeedUnverified"
            },
            UNITS: {
                speed: p.UNIT.KILOMETER
            },
            initialize: function(e, t, i) {
                this.children = e,
                    this.model = t,
                    this.reverseSegments = i,
                    this.attributeToReducer = _.extend({}, this.attributeReducers, this.flagAttributeReducers),
                    this.calcAttributes()
            },
            directionReverser: function(e, t) {
                return e.isOneWay() ? !e.attributes[t] : e.attributes[t]
            },
            calcAttributes: function() {
                var e, t, i = this._computeAttributes(this.attributeNames),
                    n = (0,
                        o.default)(i, 2),
                    s = n[0],
                    a = n[1],
                    l = this._computeAttributes(this.flagAttributeNames),
                    u = (0,
                        o.default)(l, 2),
                    d = u[0],
                    c = u[1];
                this.attributes = s,
                    this.flagAttributes = d,
                    this.mixed = _.extend({}, a, c),
                    this.address = null,
                    this.addressDetails = null,
                    this.calcVirtualAttributes(),
                    this.attributes.restrictions = (e = []).concat.apply(e, (0,
                        r.default)(this.children.map(function(e) {
                        return e.getDrivingRestrictions()
                    }))),
                    this.attributes.pickupRestrictions = (t = []).concat.apply(t, (0,
                        r.default)(this.children.map(function(e) {
                        return e.getPickupRestrictions()
                    })))
            },
            _computeAttributes: function(e) {
                var t = this,
                    i = {},
                    n = {};
                return e.forEach(function(e) {
                    var s = null,
                        r = t.attributeToReducer[e],
                        a = _.unique(t.children.map(function(i) {
                            return t._getChildAttribute(i, e)
                        }));
                    1 === a.length ? (s = a[0],
                            n[e] = !1) : (n[e] = !0,
                            s = r ? a.reduce(r) : a),
                        i[e] = s
                }), [i, n]
            },
            calcVirtualAttributes: function() {
                this.mixed.fwdToll || this.mixed.revToll ? this.mixed.toll = !0 : this.attributes.toll = this.isTollRoad(),
                    this.mixed.fwdDirection || this.mixed.revDirection ? this.mixed.direction = !0 : this.attributes.direction = this._getDirection()
            },
            _getDirection: function() {
                return (this.attributes.fwdDirection ? 1 : 0) + (this.attributes.revDirection ? 2 : 0)
            },
            isTollRoad: function() {
                return this.attributes.fwdToll || this.attributes.revToll
            },
            isTollRoadMixed: function() {
                return Boolean(this.mixed.toll)
            },
            getAddress: function() {
                return new m.default(this.children.map(function(e) {
                    return e.getAddress()
                }), this.model)
            },
            getID: function() {
                return this.children.map(function(e) {
                    return e.getID()
                }).join(", ")
            },
            isHighway: function() {
                return this.children.every(function(e) {
                    return e.isHighway()
                })
            },
            isInBigJunction: function() {
                return this.children.some(function(e) {
                    return e.isInBigJunction()
                })
            },
            isInRoundabout: function() {
                return this.children.every(function(e) {
                    return e.isInRoundabout()
                })
            },
            isEntireRoundabout: function() {
                var e = this.children[0].getRoundabout();
                if (!e)
                    return !1;
                var t = this.children.every(function(t) {
                        return t.attributes.junctionID === e.attributes.id
                    }),
                    i = e.attributes.segIDs.length === this.children.length;
                return t && i
            },
            canChangeMaxSpeedUnverified: function(e) {
                var t = this;
                return !!this.isDrivable() && this.children.some(function(i) {
                    var n = t._getAttributeByDirection(i, e);
                    return i.canChangeMaxSpeedUnverified(n)
                })
            },
            isDrivable: function() {
                return this.children.every(function(e) {
                    return e.isDrivable()
                })
            },
            hasConsistentDrivability: function() {
                return this.children.some(function(e) {
                    return !e.isDrivable()
                }) ? this.children.every(function(e) {
                    return !e.isDrivable()
                }) : this.children.every(function(e) {
                    return e.isDrivable()
                })
            },
            hasConsistentWalkability: function() {
                return this.children.some(function(e) {
                    return e.isWalkingRoadType()
                }) ? this.children.every(function(e) {
                    return e.isWalkingRoadType()
                }) : this.children.every(function(e) {
                    return !e.isWalkingRoadType()
                })
            },
            _canEditConsistentWalkabilityAttribute: function() {
                return this.hasConsistentWalkability() && this.arePropertiesEditable()
            },
            canEditUnpaved: function() {
                return this._canEditConsistentWalkabilityAttribute()
            },
            canEditTunnel: function() {
                return this._canEditConsistentWalkabilityAttribute()
            },
            canEditNearbyHOV: function() {
                return this._canEditConsistentWalkabilityAttribute()
            },
            canEditHeadlightsReminder: function() {
                return this.hasConsistentWalkability() && f.default.prototype.canEditHeadlightsReminder.apply(this, arguments)
            },
            canEditDirection: function() {
                return this.isDrivable() && !this.isInBigJunction() && this.arePropertiesEditable()
            },
            canEditMaxSpeed: function(e) {
                return !this.isSpeedUnverified(e + "MaxSpeedUnverified") && this.hasConsistentWalkability() && this.arePropertiesEditable()
            },
            canEditAverageSpeedCamera: function() {
                return this.hasConsistentWalkability() && f.default.prototype.canEditAverageSpeedCamera.apply(this, arguments)
            },
            allowRestrictionEditing: function() {
                return this.isDrivable() && f.default.prototype.allowRestrictionEditing.apply(this, arguments)
            },
            supportsPickupRestrictions: function() {
                return this.children.every(function(e) {
                    return e.supportsPickupRestrictions()
                })
            },
            supportsLanes: function() {
                return 1 === this.children.length && this.children[0].supportsLanes()
            },
            canEditHouseNumbers: function() {
                return this.children.every(function(e) {
                    return e.canEditHouseNumbers()
                })
            },
            supportsHouseNumbers: function() {
                return this.children.every(function(e) {
                    return e.supportsHouseNumbers()
                })
            },
            hasSingleNonEmptyStreet: function() {
                return this.getAddress().hasSingleNonEmptyStreet()
            },
            _isReversed: function(e) {
                return Boolean(this.reverseSegments[e.getID()])
            },
            _getChildAttribute: function(e, t) {
                var i = void 0;
                if (i = this.flagAttributeNames.indexOf(t) > -1 ? e.getFlagAttribute(t) : e.attributes[t],
                    this._isReversed(e)) {
                    var n = this.attributeReverses[t],
                        s = this.reversableAttributes[t];
                    n ? i = this[n](e, t) : s && (i = e.attributes[s])
                }
                return i
            },
            _getAttributeByDirection: function(e, t) {
                var i = this.reversableAttributes[t];
                return this._isReversed(e) && i ? i : t
            },
            CLASS_NAME: "Waze.Feature.Vector.CompositeSegment"
        });
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(17),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(4),
        g = n(p),
        m = function(e) {
            function t(e) {
                (0,
                    u.default)(this, t);
                var i = e.observeAttribute || "currentSelection",
                    n = e.model && e.model.get(i) || e.currentSelection || e.optionsList[0];
                _.defaults(e, {
                    model: new Backbone.Model((0,
                        o.default)({}, i, n))
                });
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return s.observeAttribute = i,
                    s.name = i || s._generateRandomName(),
                    s.optionsList = e.optionsList,
                    s.labels = e.labels,
                    s.title = e.title,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "className",
                    value: function() {
                        return "single-selection " + this.options.style
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            input: {
                                observe: this.observeAttribute,
                                onGet: function(t) {
                                    return e._optionToValue(t)
                                },
                                onSet: function(t) {
                                    return e._valueToOption(t)
                                }
                            }
                        }
                    }
                }, {
                    key: "defaults",
                    value: function() {
                        return {
                            optionsList: [],
                            labels: null,
                            name: "",
                            title: ""
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        var e = this.options.observeAttribute || "currentSelection";
                        return (0,
                            o.default)({}, "change:" + e, "_onModelChange")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/single_selection_view"
                    }
                }]),
                (0,
                    f.default)(t, [{
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onModelChange",
                    value: function() {
                        this.trigger("selection:changed", this.getSelected())
                    }
                }, {
                    key: "getSelected",
                    value: function() {
                        return this.model.get(this.observeAttribute)
                    }
                }, {
                    key: "select",
                    value: function(e) {
                        this.model.set(this.observeAttribute, e)
                    }
                }, {
                    key: "_optionToInputId",
                    value: function(e) {
                        var t = (e || "").toString().replace(/[^a-zA-Z0-9]/gi, ""),
                            i = this.optionsList.indexOf(e);
                        return "id_" + this.name + "_" + t + "_" + i
                    }
                }, {
                    key: "_optionToValue",
                    value: function(e) {
                        return this.optionsList.indexOf(e)
                    }
                }, {
                    key: "_valueToOption",
                    value: function(e) {
                        return this.optionsList[e]
                    }
                }, {
                    key: "_getOptionLabel",
                    value: function(e) {
                        if (this.labels && this.labels.length > 0) {
                            var t = this.optionsList.indexOf(e);
                            return this.labels[t]
                        }
                        return e
                    }
                }, {
                    key: "_generateRandomName",
                    value: function() {
                        return Math.random().toString(16).replace(".", "")
                    }
                }, {
                    key: "_isEmptyOption",
                    value: function(e) {
                        return null === e || "" === e
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            model: this.model,
                            optionToId: this._optionToInputId.bind(this),
                            optionToValue: this._optionToValue.bind(this),
                            getOptionLabel: this._getOptionLabel.bind(this),
                            isEmpty: this._isEmptyOption,
                            options: this.optionsList,
                            name: this.name,
                            title: this.title
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(33),
        s = Marionette.View.extend({
            template: "Waze/Modules/Toolbar/templates/toolbar-item",
            control: null,
            enabled: !0,
            parent: null,
            className: function() {
                var e = [],
                    t = this.model.get("control");
                e.push(null != this.parent ? "toolbar-group-item" : "toolbar-button"),
                    this.enabled && t.enabled ? this.isActive() ? e.push("ItemActive") : e.push("ItemInactive") : e.push("ItemDisabled"),
                    t.tooltip && e.push("waze-tooltip");
                var i = this.model.get("iconClass");
                return i && e.push(i),
                    t.displayClass && e.push(t.displayClass),
                    e.join(" ")
            },
            events: {
                click: "_onToolbarButtonClick",
                "click .secondary-control": "_onSecondaryControlClick"
            },
            initialize: function(e) {
                return this.control = this.model.get("control"),
                    this.secondaryControl = this.model.get("secondaryControl"),
                    this.parent = e.parent,
                    this.map = e.map,
                    this.control && this._addControlToMap(this.control),
                    this.secondaryControl && this._addControlToMap(this.secondaryControl),
                    this._addEventListeners()
            },
            onDestroy: function() {
                return this._removeEventListeners(),
                    this.control.deactivate(),
                    this.control.destroy()
            },
            _addControlToMap: function(e) {
                !0 === e.autoActivate ? (e.autoActivate = !1,
                    this.map.addControl(e),
                    e.autoActivate = !0) : (this.map.addControl(e),
                    e.deactivate())
            },
            _addEventListeners: function() {
                return this.control.events.on({
                    activate: this.syncModelAndRender,
                    deactivate: this.syncModelAndRender,
                    visibilitychanged: this.render,
                    enablechanged: this.render,
                    tooltipchanged: this.renderTooltip,
                    scope: this
                })
            },
            _removeEventListeners: function() {
                return this.control.events.un({
                    activate: this.syncModelAndRender,
                    deactivate: this.syncModelAndRender,
                    visibilitychanged: this.render,
                    enablechanged: this.render,
                    tooltipchanged: this.renderTooltip,
                    scope: this
                })
            },
            syncModelAndRender: function() {
                return this.model.set("active", this.isActive()),
                    this.render()
            },
            isActive: function() {
                return this.control && this.control.active || this.secondaryControl && this.secondaryControl.active
            },
            renderTooltip: function() {
                var e = this.model.get("control").tooltip;
                e ? (this.$el.attr("title", ""),
                    this.$el.tooltip({
                        placement: "bottom",
                        html: !0,
                        title: (0,
                            n.getHTML)("Waze/Modules/Toolbar/templates/toolbar-item-tooltip", {
                            text: e,
                            icon: "lock-light"
                        })
                    })) : (this.$el.tooltip("destroy"),
                    this.$el.attr("title", this.model.get("title")))
            },
            onRender: function() {
                if (this.$el.attr({
                        class: _.result(this, "className")
                    }),
                    null == this.parent && this.renderTooltip(),
                    null != this.control.onRender)
                    return this.control.onRender(this.$el)
            },
            _onToolbarButtonClick: function() {
                return this._triggerControl(this.control)
            },
            _onSecondaryControlClick: function(e) {
                return e.stopPropagation(),
                    this._triggerControl(this.secondaryControl)
            },
            _triggerControl: function(e) {
                if (e) {
                    if (!e.enabled)
                        return !1;
                    switch (e.type) {
                        case OL.Control.TYPE_BUTTON:
                            e.trigger();
                            break;
                        case OL.Control.TYPE_TOGGLE:
                            this.model.get("active") ? e.deactivate() : e.activate();
                            break;
                        default:
                            return e.activate(), !1
                    }
                    this.trigger("controlTriggered")
                }
            },
            enable: function() {
                return this.enabled = !0,
                    this.render()
            },
            disable: function() {
                return this.enabled = !1,
                    this.render()
            },
            serializeData: function() {
                return {
                    title: this.model.get("title"),
                    control: this.control,
                    secondaryControl: this.secondaryControl,
                    showDrawingControls: this.model.get("showDrawingControls"),
                    featureName: this.model.get("featureName")
                }
            }
        });
    t.default = s,
        e.exports = t.default
}, , , , , , , , function(e, t, i) {
    var n = i(68),
        s = i(43),
        r = i(87).f;
    e.exports = function(e) {
        return function(t) {
            for (var i, a = s(t), o = n(a), l = o.length, u = 0, d = []; l > u;)
                r.call(a, i = o[u++]) && d.push(e ? [i, a[i]] : a[i]);
            return d
        }
    }
}, , function(e, t, i) {
    var n = i(34);
    e.exports = function(e, t, i, s) {
        try {
            return s ? t(n(i)[0], i[1]) : t(i)
        } catch (t) {
            var r = e.return;
            throw void 0 !== r && n(r.call(e)),
                t
        }
    }
}, function(e, t, i) {
    var n = i(67),
        s = i(28)("iterator"),
        r = Array.prototype;
    e.exports = function(e) {
        return void 0 !== e && (n.Array === e || r[s] === e)
    }
}, function(e, t, i) {
    var n = i(34),
        s = i(55),
        r = i(28)("species");
    e.exports = function(e, t) {
        var i, a = n(e).constructor;
        return void 0 === a || void 0 == (i = n(a)[r]) ? t : s(i)
    }
}, function(e, t, i) {
    var n, s, r, a = i(44),
        o = i(198),
        l = i(190),
        u = i(141),
        d = i(24),
        c = d.process,
        h = d.setImmediate,
        f = d.clearImmediate,
        p = d.MessageChannel,
        g = d.Dispatch,
        m = 0,
        v = {},
        _ = function() {
            var e = +this;
            if (v.hasOwnProperty(e)) {
                var t = v[e];
                delete v[e],
                    t()
            }
        },
        y = function(e) {
            _.call(e.data)
        };
    h && f || (h = function(e) {
                for (var t = [], i = 1; arguments.length > i;)
                    t.push(arguments[i++]);
                return v[++m] = function() {
                        o("function" == typeof e ? e : Function(e), t)
                    },
                    n(m),
                    m
            },
            f = function(e) {
                delete v[e]
            },
            "process" == i(82)(c) ? n = function(e) {
                c.nextTick(a(_, e, 1))
            } :
            g && g.now ? n = function(e) {
                g.now(a(_, e, 1))
            } :
            p ? (s = new p,
                r = s.port2,
                s.port1.onmessage = y,
                n = a(r.postMessage, r, 1)) : d.addEventListener && "function" == typeof postMessage && !d.importScripts ? (n = function(e) {
                    d.postMessage(e + "", "*")
                },
                d.addEventListener("message", y, !1)) : n = "onreadystatechange" in u("script") ? function(e) {
                l.appendChild(u("script")).onreadystatechange = function() {
                    l.removeChild(this),
                        _.call(e)
                }
            } :
            function(e) {
                setTimeout(a(_, e, 1), 0)
            }
        ),
        e.exports = {
            set: h,
            clear: f
        }
}, function(e, t) {
    e.exports = function(e, t, i) {
        var n = void 0 === i;
        switch (t.length) {
            case 0:
                return n ? e() : e.call(i);
            case 1:
                return n ? e(t[0]) : e.call(i, t[0]);
            case 2:
                return n ? e(t[0], t[1]) : e.call(i, t[0], t[1]);
            case 3:
                return n ? e(t[0], t[1], t[2]) : e.call(i, t[0], t[1], t[2]);
            case 4:
                return n ? e(t[0], t[1], t[2], t[3]) : e.call(i, t[0], t[1], t[2], t[3])
        }
        return e.apply(i, t)
    }
}, function(e, t) {
    e.exports = function(e) {
        try {
            return {
                e: !1,
                v: e()
            }
        } catch (e) {
            return {
                e: !0,
                v: e
            }
        }
    }
}, function(e, t, i) {
    var n = i(34),
        s = i(29),
        r = i(153);
    e.exports = function(e, t) {
        if (n(e),
            s(t) && t.constructor === e)
            return t;
        var i = r.f(e);
        return (0,
                i.resolve)(t),
            i.promise
    }
}, function(e, t, i) {
    "use strict";
    var n = i(24),
        s = i(14),
        r = i(38),
        a = i(42),
        o = i(28)("species");
    e.exports = function(e) {
        var t = "function" == typeof s[e] ? s[e] : n[e];
        a && t && !t[o] && r.f(t, o, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }
}, function(e, t, i) {
    var n = i(28)("iterator"),
        s = !1;
    try {
        var r = [7][n]();
        r.return = function() {
                s = !0
            },
            Array.from(r, function() {
                throw 2
            })
    } catch (e) {}
    e.exports = function(e, t) {
        if (!t && !s)
            return !1;
        var i = !1;
        try {
            var r = [7],
                a = r[n]();
            a.next = function() {
                    return {
                        done: i = !0
                    }
                },
                r[n] = function() {
                    return a
                },
                e(r)
        } catch (e) {}
        return i
    }
}, function(e, t, i) {
    "use strict";
    var n = i(38),
        s = i(84);
    e.exports = function(e, t, i) {
        t in e ? n.f(e, t, s(0, i)) : e[t] = i
    }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.RASTER_LAYER_NAME = "cities",
        t.FEATURES_LAYER_NAME = "cities_features",
        t.MARKERS_LAYER_NAME = "cities_markers",
        t.GROUP_DISPLAY = "GROUP_DISPLAY",
        t.GROUP_CITIES = "GROUP_CITIES",
        t.ITEM_CITY_NAMES = "ITEM_CITY_NAMES",
        t.OBJECT_TYPE = "city"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(31),
        r = n(s),
        a = i(15),
        o = n(a),
        l = OL.Class(r.default, {
            defaults: {
                id: null,
                countryID: null,
                stateID: null,
                name: null,
                englishName: null,
                geometry: null,
                isEmpty: !1,
                permissions: o.default.ALL_PERMISSIONS
            },
            nested: {
                geometry: OL.Geometry
            },
            PERMISSIONS: {
                EDIT_PROPERTIES: 1
            },
            isEmpty: function() {
                return !0 === this.attributes.isEmpty
            },
            hasName: function() {
                return "" !== this.attributes.name && null !== this.attributes.name && void 0 !== this.attributes.name
            },
            showMarker: function() {
                return null !== this.attributes.geometry && !this.isEmpty()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0,
        t.default = function(e, t) {
            var i = {};
            for (var n in e)
                t.indexOf(n) >= 0 || Object.prototype.hasOwnProperty.call(e, n) && (i[n] = e[n]);
            return i
        }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            selected: !1
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        OPEN: "open",
        SOLVED: "solved",
        NOT_IDENTIFIED: "not-identified",
        CLOSED_AUTOMATICALLY: "closed-automatically"
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e() {
                (0,
                    o.default)(this, e)
            }
            return (0,
                    u.default)(e, [{
                    key: "getWeekdaysGist",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "*",
                            i = [],
                            n = e.length;
                        if (0 === n)
                            return i;
                        for (var s = 0, r = 0; s < n;) {
                            var a = e[s];
                            if (0 === s)
                                i.push(a);
                            else if (s === n - 1) {
                                var o = e[s - 1];
                                a === o + 1 && r > 0 && i.push(t),
                                    i.push(a)
                            } else {
                                var l = e[s - 1],
                                    u = e[s + 1];
                                a !== l + 1 ? i.push(a) : a === u - 1 ? r++ : (r > 0 && i.push(t),
                                    i.push(a),
                                    r = 0)
                            }
                            s++
                        }
                        return i
                    }
                }, {
                    key: "isValidTime",
                    value: function(e) {
                        if (!_.isString(e))
                            return !1;
                        var t = e.split(":");
                        if (2 !== t.length)
                            return !1;
                        var i = (0,
                                r.default)(t, 2),
                            n = i[0],
                            s = i[1];
                        return !(!/([01]?[0-9]|2[0-3])/.test(n) || !/[0-5]\d/.test(s))
                    }
                }, {
                    key: "_parseTimeStr",
                    value: function(e) {
                        if (this.isValidTime(e)) {
                            var t = e.split(":");
                            return {
                                hour: parseInt(t[0], 10),
                                minute: parseInt(t[1], 10)
                            }
                        }
                        return {}
                    }
                }, {
                    key: "compareTimes",
                    value: function(e, t) {
                        var i = this._parseTimeStr(e),
                            n = this._parseTimeStr(t);
                        return i.hour === n.hour ? i.minute > n.minute ? 1 : i.minute < n.minute ? -1 : 0 : i.hour > n.hour ? 1 : i.hour < n.hour ? -1 : 0
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(541),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";
    var n = i(38).f,
        s = i(85),
        r = i(154),
        a = i(44),
        o = i(152),
        l = i(88),
        u = i(140),
        d = i(186),
        c = i(201),
        h = i(42),
        f = i(106).fastKey,
        p = i(165),
        g = h ? "_s" : "size",
        m = function(e, t) {
            var i, n = f(t);
            if ("F" !== n)
                return e._i[n];
            for (i = e._f; i; i = i.n)
                if (i.k == t)
                    return i
        };
    e.exports = {
        getConstructor: function(e, t, i, u) {
            var d = e(function(e, n) {
                o(e, d, t, "_i"),
                    e._t = t,
                    e._i = s(null),
                    e._f = void 0,
                    e._l = void 0,
                    e[g] = 0,
                    void 0 != n && l(n, i, e[u], e)
            });
            return r(d.prototype, {
                    clear: function() {
                        for (var e = p(this, t), i = e._i, n = e._f; n; n = n.n)
                            n.r = !0,
                            n.p && (n.p = n.p.n = void 0),
                            delete i[n.i];
                        e._f = e._l = void 0,
                            e[g] = 0
                    },
                    delete: function(e) {
                        var i = p(this, t),
                            n = m(i, e);
                        if (n) {
                            var s = n.n,
                                r = n.p;
                            delete i._i[n.i],
                                n.r = !0,
                                r && (r.n = s),
                                s && (s.p = r),
                                i._f == n && (i._f = s),
                                i._l == n && (i._l = r),
                                i[g]--
                        }
                        return !!n
                    },
                    forEach: function(e) {
                        p(this, t);
                        for (var i, n = a(e, arguments.length > 1 ? arguments[1] : void 0, 3); i = i ? i.n : this._f;)
                            for (n(i.v, i.k, this); i && i.r;)
                                i = i.p
                    },
                    has: function(e) {
                        return !!m(p(this, t), e)
                    }
                }),
                h && n(d.prototype, "size", {
                    get: function() {
                        return p(this, t)[g]
                    }
                }),
                d
        },
        def: function(e, t, i) {
            var n, s, r = m(e, t);
            return r ? r.v = i : (e._l = r = {
                        i: s = f(t, !0),
                        k: t,
                        v: i,
                        p: n = e._l,
                        n: void 0,
                        r: !1
                    },
                    e._f || (e._f = r),
                    n && (n.n = r),
                    e[g]++,
                    "F" !== s && (e._i[s] = r)),
                e
        },
        getEntry: m,
        setStrong: function(e, t, i) {
            u(e, t, function(e, i) {
                    this._t = p(e, t),
                        this._k = i,
                        this._l = void 0
                }, function() {
                    for (var e = this, t = e._k, i = e._l; i && i.r;)
                        i = i.p;
                    return e._t && (e._l = i = i ? i.n : e._t._f) ? "keys" == t ? d(0, i.k) : "values" == t ? d(0, i.v) : d(0, [i.k, i.v]) : (e._t = void 0,
                        d(1))
                }, i ? "entries" : "values", !i, !0),
                c(t)
        }
    }
}, function(e, t, i) {
    "use strict";
    var n = i(24),
        s = i(23),
        r = i(106),
        a = i(47),
        o = i(46),
        l = i(154),
        u = i(88),
        d = i(152),
        c = i(29),
        h = i(86),
        f = i(38).f,
        p = i(543)(0),
        g = i(42);
    e.exports = function(e, t, i, m, v, _) {
        var y = n[e],
            b = y,
            w = v ? "set" : "add",
            E = b && b.prototype,
            k = {};
        return g && "function" == typeof b && (_ || E.forEach && !a(function() {
                (new b).entries().next()
            })) ? (b = t(function(t, i) {
                    d(t, b, e, "_c"),
                        t._c = new y,
                        void 0 != i && u(i, v, t[w], t)
                }),
                p("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","), function(e) {
                    var t = "add" == e || "set" == e;
                    e in E && (!_ || "clear" != e) && o(b.prototype, e, function(i, n) {
                        if (d(this, b, e), !t && _ && !c(i))
                            return "get" == e && void 0;
                        var s = this._c[e](0 === i ? 0 : i, n);
                        return t ? this : s
                    })
                }),
                _ || f(b.prototype, "size", {
                    get: function() {
                        return this._c.size
                    }
                })) : (b = m.getConstructor(t, e, v, w),
                l(b.prototype, i),
                r.NEED = !0),
            h(b, e),
            k[e] = b,
            s(s.G + s.W + s.F, k),
            _ || m.setStrong(b, e, v),
            b
    }
}, function(e, t, i) {
    var n = i(103),
        s = i(547);
    e.exports = function(e) {
        return function() {
            if (n(this) != e)
                throw TypeError(e + "#toJSON isn't generic");
            return s(this)
        }
    }
}, function(e, t, i) {
    "use strict";
    var n = i(23);
    e.exports = function(e) {
        n(n.S, e, { of: function() {
                for (var e = arguments.length, t = new Array(e); e--;)
                    t[e] = arguments[e];
                return new this(t)
            }
        })
    }
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(55),
        r = i(44),
        a = i(88);
    e.exports = function(e) {
        n(n.S, e, {
            from: function(e) {
                var t, i, n, o, l = arguments[1];
                return s(this),
                    t = void 0 !== l,
                    t && s(l),
                    void 0 == e ? new this : (i = [],
                        t ? (n = 0,
                            o = r(l, arguments[2], 2),
                            a(e, !1, function(e) {
                                i.push(o(e, n++))
                            })) : a(e, !1, i.push, i),
                        new this(i))
            }
        })
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e.reduce(function(e, t) {
            return !1 === e.some(function(e) {
                return e.equals(t)
            }) ? [].concat((0,
                r.default)(e), [t]) : e
        }, [])
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.dedupRestrictions = void 0;
    var s = i(9),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s);
    t.dedupRestrictions = n
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(208),
        o = n(a),
        l = i(553),
        u = n(l),
        d = i(74),
        c = n(d),
        h = i(75),
        f = c.default.extend({
            MORE_INFO_DEFAULTS: [{
                name: "route",
                visible: !0
            }, {
                name: "drive",
                visible: !0
            }],
            getTitle: function() {
                return this.problem.attributes.typeText
            },
            getReportedString: function() {
                var e = this.problem.attributes.localDriveTime || this.problem.attributes.driveDate;
                return I18n.t("update_requests.panel.reported", {
                    date: I18n.l("time.formats.long", Date.parse(e))
                })
            },
            hasDescription: function() {
                var e = this.problem.attributes.description;
                return null != e && e.length > 0
            },
            getDescription: function() {
                return this.problem.attributes.description
            },
            isConversationAvailable: function() {
                return !0
            },
            allowCommenting: function() {
                return this.problem.model.loginManager.isLoggedIn()
            },
            minRankForEdit: function() {
                return (0,
                    h.getServerConfig)().minRankForEditingUpdateRequest
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? r.default.resolve(this.moreInfo) : this.problem.model.updateRequestSessions.get([this.problem.getID()]).then(function(t) {
                    return e._moreInfoTypeMap.drive.set({
                            available: null != t[0].driveGeometry
                        }),
                        e._moreInfoTypeMap.route.set({
                            available: null != t[0].routeGeometry
                        }),
                        e.moreInfo = t,
                        t
                })
            },
            getConversation: function() {
                return null != this.conversation ? r.default.resolve(this.conversation) : this.getMoreInfo().then(function(e) {
                    return e[0]
                })
            },
            getRepository: function() {
                return this.problem.model.mapUpdateRequests
            },
            createMoreInfoRenderer: function(e, t, i) {
                return new u.default(e, t, i)
            },
            getMarkerLayer: function() {
                return W.map.updateRequestLayer
            },
            getBounds: function() {
                return this.problem.getRequestBounds().getBounds()
            },
            getNextButtonString: function() {
                return this._nextButtonString || I18n.t("update_requests.panel.next")
            },
            reportStateChanged: function() {
                var e = "" + this.problem.attributes.type;
                this.getState() === o.default.SOLVED ? W.Report.updateRequestAction("update_state", e, 1) : this.getState() === o.default.NOT_IDENTIFIED && W.Report.updateRequestAction("update_state", e, -1)
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(13),
        o = n(a),
        l = i(70),
        u = n(l),
        d = i(31),
        c = n(d),
        h = i(22),
        f = n(h),
        p = i(10),
        g = n(p),
        m = i(91),
        v = OpenLayers.Class(c.default, {
            defaults: function() {
                return {
                    segIDs: []
                }
            },
            nested: {
                geometry: OL.Geometry
            },
            eachSegmentPair: function(e, t, i) {
                (0,
                    u.default)(e).forEach(function(e) {
                    var n = (0,
                            o.default)(e, 2),
                        s = n[0],
                        r = n[1],
                        a = s.split(",");
                    t.call(i, parseInt(a[0], 10), parseInt(a[1], 10), r, s)
                })
            },
            allConnectionKeys: function(e) {
                var t = [],
                    i = [];
                return this.attributes.segIDs.forEach(function(n) {
                    var s = this.model.segments.get(n);
                    this.attributes.segIDs.forEach(function(n) {
                        var r = this.model.segments.get(n);
                        s && r && (s !== r || e) && (t.push({
                                from: s,
                                to: r
                            }),
                            this.isTurnAllowedBySegDirections(s, r) && s.isDrivable() && r.isDrivable() && i.push({
                                from: s,
                                to: r
                            }))
                    }, this)
                }, this), {
                    all: t,
                    legal: i
                }
            },
            isTurnAllowedBySegDirections: function(e, t) {
                if (!e || !t)
                    return !1;
                var i = e.attributes.toNodeID === this.getID() ? e.attributes.fwdDirection : e.attributes.revDirection,
                    n = t.attributes.fromNodeID === this.getID() ? t.attributes.fwdDirection : t.attributes.revDirection;
                return i && n
            },
            getSegmentIds: function() {
                return [].concat((0,
                    r.default)(this.attributes.segIDs))
            },
            getAngleToSegment: function(e) {
                var t = void 0,
                    i = void 0,
                    n = e.geometry.getVertices(),
                    s = void 0;
                return e.attributes.fromNodeID === this.getID() ? (t = n[0],
                        i = n[1]) : (t = n[n.length - 1],
                        i = n[n.length - 2]),
                    s = g.default.radToDeg(Math.atan2(i.y - t.y, i.x - t.x)),
                    s < 0 && (s = 360 + s),
                    s
            },
            getDirectionBetweenSegments: function(e, t) {
                var i = e.geometry.components,
                    n = i.length,
                    s = void 0,
                    r = void 0,
                    a = void 0;
                return e.attributes.toNodeID === this.getID() ? (s = i[n - 2],
                        r = i[n - 1]) : (s = i[1],
                        r = i[0]),
                    a = t.attributes.fromNodeID === this.getID() ? t.geometry.components[1] : t.geometry.components[t.geometry.components.length - 2],
                    (r.x - s.x) * (a.y - s.y) - (r.y - s.y) * (a.x - s.x) > 0
            },
            isDisconnected: function() {
                return _.isEmpty(this.attributes.segIDs)
            },
            isVirtual: function() {
                var e = this;
                return this.model.segments.getByIds(this.attributes.segIDs).some(function(t) {
                    return t.isVirtuallyConnectedToNode(e)
                })
            },
            isConnectedToSegment: function(e) {
                return this.attributes.segIDs.includes(e.getID())
            },
            isConnectedToBigJunction: function() {
                return this.model.segments.getByIds(this.attributes.segIDs).some(function(e) {
                    return e.isBigJunctionShort()
                }, this)
            },
            isAllowedToMoveNode: function() {
                return this.attributes.segIDs.every(function(e) {
                    var t = this.model.segments.get(e);
                    return t && t.isAllowed(m.Segments.EDIT_GEOMETRY) && !t.isBigJunctionShort()
                }, this)
            },
            isDeleteable: function(e) {
                var t = this.attributes.segIDs.map(function(t) {
                    return e.segments.get(t)
                });
                return t = t.filter(function(e) {
                        return f.default.defined(e)
                    }),
                    t.length === this.attributes.segIDs.length && (this.areSegmentsBridgable(t) && c.default.prototype.isDeletable.apply(this))
            },
            _areDirectionalAttributeSame: function(e, t, i) {
                var n = i;
                return e.attributes.toNodeID !== t.attributes.fromNodeID && e.attributes.fromNodeID !== t.attributes.toNodeID && (n = i.concat().reverse()),
                    i.every(function(i, s) {
                        return e.attributes[i] === t.attributes[n[s]]
                    })
            },
            areSegmentsBridgable: function(e) {
                if (!e || 2 !== e.length)
                    return !1;
                var t = e[0],
                    i = e[1];
                if (!this.attributes.segIDs.includes(t.getID()) || !this.attributes.segIDs.includes(i.getID()))
                    return !1;
                if (!this.isTurnAllowedBySegDirections(t, i) && !this.isTurnAllowedBySegDirections(i, t))
                    return !1;
                if (t.attributes.primaryStreetID !== i.attributes.primaryStreetID)
                    return !1;
                var n = this._areDirectionalAttributeSame(t, i, ["fwdMaxSpeed", "revMaxSpeed"]),
                    s = this._areDirectionalAttributeSame(t, i, ["fwdToll", "revToll"]),
                    r = t.isDrivable() && i.isDrivable() || t.isWalkingRoadType() && i.isWalkingRoadType();
                return n && r && s
            },
            allSegmentsPresent: function(e) {
                return this.attributes.segIDs.every(function(t) {
                    return e.segments.get(t)
                })
            },
            connectionsExist: function() {
                return !_.isEmpty(this.allConnectionKeys().legal)
            },
            areConnectionsEditable: function() {
                var e = this.model.segments.getByIds(this.attributes.segIDs);
                return e.length === this.attributes.segIDs.length && e.every(function(e) {
                    return e.canEditConnections()
                })
            },
            arePropertiesEditable: function() {
                return this.areConnectionsEditable()
            },
            areAllConnectionsEnabled: function() {
                var e = this.allConnectionKeys().legal,
                    t = this.model.getTurnGraph();
                return !_.isEmpty(e) && e.every(function(e) {
                    return t.getTurnThroughNode(this, e.from, e.to).getTurnData().isAllowed()
                }, this)
            },
            areAllConnectionsDisabled: function() {
                var e = this.allConnectionKeys().legal,
                    t = this.model.getTurnGraph();
                return !_.isEmpty(e) && e.every(function(e) {
                    return !t.getTurnThroughNode(this, e.from, e.to).getTurnData().isAllowed()
                }, this)
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                DELETE: 2,
                EDIT_OPEN_TURNS: 4,
                EDIT_CLOSE_TURNS: 8
            },
            CLASS_NAME: "Waze.Feature.Vector.Node"
        });
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(567),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        SUBJECT: {
            VENUE: "VENUE",
            IMAGE: "IMAGE"
        },
        ACTION: {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        SEVERITY: {
            LOW: "low",
            MEDIUM: "medium",
            HIGH: "high"
        },
        SEVERITY_THRESHOLD: {
            LOW: 3,
            MEDIUM: 7
        },
        defaults: {
            approved: null
        },
        initialize: function() {
            return this.set({
                updateType: this.get("action") + "_" + this.get("subject")
            })
        },
        isVenue: function() {
            return this.get("subject") === this.SUBJECT.VENUE
        },
        isImage: function() {
            return this.get("subject") === this.SUBJECT.IMAGE
        },
        getAddedImage: function() {
            return this._findImage(this.id)
        },
        _findImage: function(e) {
            return _(this.get("place").attributes.images).find(function(t) {
                return t.get("id") === e
            })
        },
        isEditableByUser: function() {
            return this.get("isEditable") && this.get("isInEditArea")
        },
        isPlaceAdLocked: function() {
            return this.get("place").attributes.adLocked && !this.get("isAdLockedEditable")
        },
        getSeverity: function() {
            var e = new TimeSpan(Date.now() - this.get("dateAdded")).days,
                t = this.SEVERITY.HIGH;
            return e <= this.SEVERITY_THRESHOLD.LOW ? t = this.SEVERITY.LOW : e <= this.SEVERITY_THRESHOLD.MEDIUM && (t = this.SEVERITY.MEDIUM),
                t
        },
        getRequiredEditRank: function() {
            return Math.max(this.get("place").attributes.lockRank, n.MIN_EDIT_RANK)
        }
    });
    n.MIN_EDIT_RANK = 1,
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = Backbone.Model.extend({
            GEOMETRY_FIELDS: {
                entryExitPoints: !0,
                geometry: !0
            },
            CHANGE_TYPE: {
                ADDED: "ADDED",
                REMOVED: "REMOVED",
                UNCHANGED: "UNCHANGED"
            },
            EXTERNAL_PROVIDER_FIELD_NAME: "externalProviderIDs",
            initialize: function(e, t) {
                e = {},
                    this.__setSuggestedValue(e);
                var n = i(93),
                    s = new n(e, {
                        parse: !!t && t.parse
                    });
                return s.model = W.model,
                    this.set({
                        suggestedVenue: s
                    })
            },
            __setSuggestedValue: function(e) {
                e[this.get("fieldName")] = this.get("suggestedValue")
            },
            isExternalProvider: function() {
                return this.attributes && this.attributes.fieldName === this.EXTERNAL_PROVIDER_FIELD_NAME
            },
            isGeometry: function() {
                return !0 === this.GEOMETRY_FIELDS[this.get("fieldName")]
            },
            _getChangeList: function(e, t) {
                var i = this,
                    n = _.intersection(e, t),
                    s = _.difference(e, t),
                    r = _.difference(t, e);
                n = n.map(function(e) {
                        return {
                            name: e,
                            changeType: i.CHANGE_TYPE.UNCHANGED
                        }
                    }),
                    s = s.map(function(e) {
                        return {
                            name: e,
                            changeType: i.CHANGE_TYPE.REMOVED
                        }
                    }),
                    r = r.map(function(e) {
                        return {
                            name: e,
                            changeType: i.CHANGE_TYPE.ADDED
                        }
                    });
                var a = n.concat(r, s);
                return _.sortBy(a, "name")
            }
        });
    l.build = function(e, t) {
            var i = [],
                n = !0,
                s = !1,
                a = void 0;
            try {
                for (var u, d = (0,
                        o.default)((0,
                        r.default)(e)); !(n = (u = d.next()).done); n = !0) {
                    var c = u.value,
                        h = e[c];
                    _.isEqual(h, t.attributes[c]) || i.push(new l({
                        fieldName: c,
                        suggestedValue: h,
                        venue: t
                    }, {
                        parse: !0
                    }))
                }
            } catch (e) {
                s = !0,
                    a = e
            } finally {
                try {
                    !n && d.return && d.return()
                } finally {
                    if (s)
                        throw a
                }
            }
            return i
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(221),
        u = n(l),
        d = u.default.extend({
            __setSuggestedValue: function(e) {
                e.categoryAttributes = {
                        PARKING_LOT: {}
                    },
                    e.categoryAttributes.PARKING_LOT[this.get("fieldName")] = this.get("suggestedValue")
            }
        });
    d.build = function(e, t) {
            var i = [],
                n = !0,
                s = !1,
                a = void 0;
            try {
                for (var l, u = (0,
                        o.default)((0,
                        r.default)(e)); !(n = (l = u.next()).done); n = !0) {
                    var c = l.value,
                        h = e[c],
                        f = void 0;
                    t.attributes.categoryAttributes && t.attributes.categoryAttributes.PARKING_LOT && (f = t.attributes.categoryAttributes.PARKING_LOT[c]),
                        _.isEqual(h, f) || i.push(new d({
                            fieldName: c,
                            suggestedValue: h,
                            venue: t
                        }, {
                            parse: !0
                        }))
                }
            } catch (e) {
                s = !0,
                    a = e
            } finally {
                try {
                    !n && u.return && u.return()
                } finally {
                    if (s)
                        throw a
                }
            }
            return i
        },
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(10),
        c = n(d),
        h = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.point,
                    n = void 0 === i ? new OL.Geometry.Point(0, 0) : i,
                    s = t.entry,
                    r = void 0 === s || s,
                    a = t.exit,
                    l = void 0 === a || a,
                    u = t.primary,
                    d = void 0 !== u && u,
                    h = t.name,
                    f = void 0 === h ? "" : h,
                    p = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    g = p.parse,
                    m = void 0 !== g && g;
                (0,
                    o.default)(this, e),
                m && (n = c.default.parse(n)),
                    this._point = n.clone(),
                    this._entry = r,
                    this._exit = l,
                    this._isPrimary = d,
                    this._name = f
            }
            return (0,
                    u.default)(e, [{
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            r.default)(this.toJSON(), e))
                    }
                }, {
                    key: "getPoint",
                    value: function() {
                        return this._point.clone()
                    }
                }, {
                    key: "getEntry",
                    value: function() {
                        return this._entry
                    }
                }, {
                    key: "getExit",
                    value: function() {
                        return this._exit
                    }
                }, {
                    key: "getName",
                    value: function() {
                        return this._name
                    }
                }, {
                    key: "isPrimary",
                    value: function() {
                        return this._isPrimary
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            point: this._point,
                            entry: this._entry,
                            exit: this._exit,
                            primary: this._isPrimary,
                            name: this._name
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return this.with()
                    }
                }]),
                e
        }();
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(31),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            nested: {
                geometry: OL.Geometry,
                bounds: OL.Geometry
            },
            ONE_WEEK_IN_MILLIS: 6048e5,
            SeverityThreshold: {
                low: 4,
                medium: 14
            },
            editable: !0,
            initialize: function(e) {
                s.default.prototype.initialize.apply(this, arguments),
                    this.editable = this.attributes.open,
                    this.attributes.typeText = this.getTypeText(),
                    this.setSeverity()
            },
            merge: function(e) {
                s.default.prototype.merge.apply(this, arguments),
                    this.editable = this.attributes.open
            },
            getRequestBounds: function() {
                return this.requestBounds || (this.requestBounds = this.attributes.bounds),
                    this.requestBounds
            },
            Type: {
                INCORRECT_TURN: 6,
                INCORRECT_ADDRESS: 7,
                INCORRECT_ROUTE: 8,
                INCORRECT_MISSING_ROUNDABOUT: 9,
                INCORRECT_GENERAL_ERROR: 10,
                TURN_NOT_ALLOWED: 11,
                INCORRECT_JUNCTION: 12,
                MISSING_BRIDGE_OVERPASS: 13,
                WRONG_DRIVING_DIRECTIONS: 14,
                MISSING_EXIT: 15,
                MISSING_ROAD: 16
            },
            getTypeText: function() {
                return I18n.t("update_requests.types." + this.attributes.type)
            },
            setSeverity: function() {
                var e = new window.TimeSpan(Date.now() - this.attributes.driveDate),
                    t = e.days,
                    i = "high";
                t <= this.SeverityThreshold.low ? i = "low" : t <= this.SeverityThreshold.medium && (i = "medium"),
                    this.attributes.severity = i
            },
            isRecentlyClosed: function() {
                return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= this.ONE_WEEK_IN_MILLIS
            },
            getLocation: function() {
                return this.attributes.geometry
            },
            canEdit: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT)
            },
            PERMISSIONS: {
                EDIT: 1,
                FORCE_CLOSE: 2
            },
            CLASS_NAME: "Waze.Feature.Vector.UpdateRequest"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                e.isLeft,
                    e.projectionLonLat,
                    e.closestSegment;
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "calculateProjection",
                    value: function(e) {
                        var t = new OL.Geometry.Point(this.geometry.x, this.geometry.y),
                            i = e.distanceTo(t, {
                                details: !0
                            }),
                            n = i.line,
                            s = {
                                x: n.x1,
                                y: n.y1
                            },
                            r = {
                                x: n.x2,
                                y: n.y2
                            };
                        if (r.y > s.y) {
                            var a = [r, s];
                            s = a[0],
                                r = a[1]
                        }
                        this.isLeft = (r.x - s.x) * (t.y - s.y) - (r.y - s.y) * (t.x - s.x) <= 0,
                            this.projectionLonLat = new OL.LonLat(i.x0, i.y0),
                            this.closestSegment = i.model
                    }
                }, {
                    key: "getFractionFromProjection",
                    value: function() {
                        return new OL.Geometry.Point(this.projectionLonLat.lon, this.projectionLonLat.lat)
                    }
                }, {
                    key: "changedSegment",
                    value: function() {
                        return this.parent.id !== this.closestSegment.getID()
                    }
                }, {
                    key: "clone",
                    value: function() {
                        var e = new t({
                            fractionPoint: this.fractionPoint.clone(),
                            projectionLonLat: this.projectionLonLat ? this.projectionLonLat.clone() : null,
                            number: this.number,
                            valid: this.valid,
                            forced: this.forced,
                            id: this.id,
                            side: this.side,
                            version: this.version,
                            geometry: this.geometry.clone()
                        });
                        return e.parent = this.parent,
                            e
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        nested: {
            geometry: OL.Geometry,
            fractionPoint: OL.Geometry
        }
    }),
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(15),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(g.default);
    (0,
        r.default)(m.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(31),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            getAllSegments: function() {
                return this.model.segments.getByIds(this.attributes.segIDs)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(31),
        r = n(s),
        a = i(229),
        o = n(a),
        l = {
            INVALID_ENV: "INVALID_ENV",
            GENERAL: "GENERAL",
            TEMP_FREEZE: "TEMP_FREEZE"
        },
        u = OL.Class(r.default, {
            nested: {
                geometry: OL.Geometry
            },
            parse: function(e) {
                return null != e.env && (e.env = o.default.normalizeCode(e.env)),
                    r.default.prototype.parse.apply(this, arguments)
            }
        });
    u.TYPE = l,
        t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(21),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(22),
        g = n(p),
        m = i(25),
        v = function() {
            function e(t) {
                if ((0,
                        c.default)(this, e),
                    this.events = new OL.Events,
                    t) {
                    var i = !0,
                        n = !1,
                        s = void 0;
                    try {
                        for (var r, a = (0,
                                u.default)((0,
                                o.default)(t)); !(i = (r = a.next()).done); i = !0) {
                            var l = r.value,
                                d = t[l];
                            this[l] = d
                        }
                    } catch (e) {
                        n = !0,
                            s = e
                    } finally {
                        try {
                            !i && a.return && a.return()
                        } finally {
                            if (n)
                                throw s
                        }
                    }
                }
                this.Codes.includes(this.code) || (this.code = null),
                    this.code || (this.code = this.abbrToLocation[this.abbr],
                        this.code || (this.code = "row")),
                    this.locale || (this.locale = W.Config.default_locale),
                    this.Locales[this.locale] && (this.locale = this.Locales[this.locale])
            }
            return (0,
                    f.default)(e, [{
                    key: "persist",
                    value: function() {
                        return g.default.localStorage.set(this.storeKey, {
                            code: this.code,
                            locale: this.locale
                        })
                    }
                }, {
                    key: "change",
                    value: function(e) {
                        if (e !== this.code)
                            return this.code = e,
                                this.persist(),
                                this.events.triggerEvent("change")
                    }
                }, {
                    key: "changeAndRemovePermalink",
                    value: function(e) {
                        this.change(e),
                            window.location = window.location.pathname
                    }
                }, {
                    key: "setLocale",
                    value: function(e) {
                        if (e !== this.locale)
                            return this.locale = e,
                                this.persist()
                    }
                }, {
                    key: "redirectToLocale",
                    value: function() {
                        if (this._shouldRedirectToLocle()) {
                            var e = void 0;
                            e = this.locale === W.Config.default_locale ? "/editor" + window.location.search : "/" + this.locale + "/editor" + window.location.search,
                                window.location = e
                        }
                    }
                }, {
                    key: "_shouldRedirectToLocle",
                    value: function() {
                        return this.locale !== I18n.locale && _.contains(I18n.availableLocales, this.locale)
                    }
                }], [{
                    key: "getFromIP",
                    value: function() {
                        return null != this._promise ? this._promise : (0,
                            m.httpGet)("/WAS/country_by_ip").then(function(t) {
                            var i = new e(t);
                            return i.persist(),
                                i
                        }).catch(function() {
                            var t = new e;
                            return t.persist(),
                                t
                        })
                    }
                }, {
                    key: "getCurrent",
                    value: function() {
                        var e = this.restore();
                        return e ? r.default.resolve(e) : this.getFromIP()
                    }
                }, {
                    key: "restore",
                    value: function() {
                        var t = g.default.localStorage.get(this.prototype.storeKey);
                        return t ? new e(t) : null
                    }
                }, {
                    key: "normalizeCode",
                    value: function(e) {
                        return e = e.toLowerCase(),
                            "na" === e && (e = "usa"),
                            e
                    }
                }]),
                e
        }();
    v.prototype.storeKey = "editorLocation",
        v.prototype.abbrToLocation = {
            US: "usa",
            CA: "usa",
            IL: "il"
        },
        v.prototype.Codes = ["row", "usa", "il"],
        v.prototype.Locales = {
            iw: "he",
            ji: "yi",
            in: "id",
            "en-UK": "en-GB"
        },
        t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(121),
        g = n(p),
        m = function(e) {
            function t(e, i, n) {
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e, n));
                return s._children = i,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getId",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "getChildren",
                    value: function() {
                        return this._children
                    }
                }, {
                    key: "appendChild",
                    value: function(e) {
                        this.getChildren().push(e)
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !1
                    }
                }], [{
                    key: "of",
                    value: function(e, i, n) {
                        return new t(e, i, n)
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            stroke: !1,
            pointRadius: 12,
            fillColor: "white",
            fillOpacity: .6,
            graphicZIndex: 0,
            fontSize: 16,
            labelYOffset: 0,
            fontColor: "#3d3d3d",
            labelOutlineWidth: 0,
            fontFamily: "FontAwesome",
            label: ""
        },
        s = W.rule("dragPoint", !0, n),
        r = W.rule("dragPoint", !0, _.defaults({
            fillColor: "#25d7fd",
            fillOpacity: .3
        }, n));
    t.DragPointRule = s,
        t.DragPointHighlightRule = r
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(588),
        r = n(s),
        a = i(122),
        o = n(a),
        l = i(169),
        u = n(l),
        d = Marionette.CompositeView.extend({
            childView: r.default,
            className: "conversation-view",
            childViewContainer: ".comment-list",
            template: "Waze/Modules/Conversation/templates/list",
            behaviors: {
                charCount: {
                    behaviorClass: u.default,
                    charLimits: [{
                        inputSelector: ".new-comment-text",
                        charCountSelector: ".new-comment-max-length",
                        maxLength: o.default.prototype.MAX_BODY_LENGTH,
                        modelAttribute: "viewModel",
                        observe: "commentText"
                    }]
                }
            },
            bindings: {
                "[name=follow]": {
                    observe: "following",
                    attributes: [{
                        observe: "disableFollowing",
                        name: "disabled"
                    }]
                },
                ".no-comments": {
                    observe: "commentCount",
                    visible: !0,
                    onGet: function(e) {
                        return 0 === e
                    }
                },
                ".new-comment-text": {
                    observe: "commentText",
                    attributes: [{
                        observe: "submitting",
                        name: "disabled"
                    }]
                },
                ".send-button": {
                    attributes: [{
                        observe: "submitting",
                        name: "disabled"
                    }]
                }
            },
            ui: {
                commentList: ".comment-list"
            },
            events: {
                "submit .new-comment-form": "_onSubmit"
            },
            initialize: function() {
                return this.commentable = this.options.commentable,
                    this.collection = this.commentable.getComments(),
                    this.viewModel = new Backbone.Model({
                        following: this.commentable.isFollowing(),
                        commentCount: this.collection.length,
                        commentText: "",
                        disableFollowing: !1,
                        submitting: !1
                    }),
                    this.listenTo(this.viewModel, "change:following", this._onFollowingChanged),
                    this.listenTo(this.collection, "add", this._updateCommentCount)
            },
            _updateCommentCount: function() {
                return this.viewModel.set({
                    commentCount: this.collection.length
                })
            },
            onRender: function() {
                return this.stickit(this.viewModel),
                    this._scrollToLastComment()
            },
            _onFollowingChanged: function(e, t, i) {
                var n = this;
                if (i.stickitChange)
                    return this.viewModel.set({
                            disableFollowing: !0
                        }),
                        this.commentable.setFollowing(t).catch(function() {
                            return n.viewModel.set({
                                following: !t
                            })
                        }).finally(function() {
                            return n.viewModel.set({
                                disableFollowing: !1
                            })
                        })
            },
            _onSubmit: function(e) {
                var t = this;
                e.preventDefault();
                var i = this.viewModel.get("commentText").trim();
                if (!(i.length <= 0))
                    return this.viewModel.set({
                            submitting: !0
                        }),
                        this.commentable.addComment(i).then(function(e) {
                            return t.viewModel.set({
                                    commentText: ""
                                }),
                                t.collection.add(e),
                                t.viewModel.set({
                                    following: t.commentable.isFollowing()
                                }),
                                t._scrollToLastComment()
                        }).catch(function() {
                            window.alert(I18n.t("conversation.send_error"))
                        }).finally(function() {
                            return t.viewModel.set({
                                submitting: !1
                            })
                        })
            },
            _scrollToLastComment: function() {
                var e = this.ui.commentList.get(0);
                e.scrollTop = e.scrollHeight
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(15),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(g.default);
    (0,
        r.default)(m.prototype, {
        TYPE: {
            MANAGED: "managed",
            DRIVE: "drive"
        },
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return !!e && "object" == typeof e
    }

    function s(e) {
        var t = Object.prototype.toString.call(e);
        return "[object RegExp]" === t || "[object Date]" === t || r(e)
    }

    function r(e) {
        return e.$$typeof === f
    }

    function a(e) {
        return Array.isArray(e) ? [] : {}
    }

    function o(e, t) {
        return t && !0 === t.clone && c(e) ? d(a(e), e, t) : e
    }

    function l(e, t, i) {
        var n = e.slice();
        return t.forEach(function(t, s) {
                void 0 === n[s] ? n[s] = o(t, i) : c(t) ? n[s] = d(e[s], t, i) : -1 === e.indexOf(t) && n.push(o(t, i))
            }),
            n
    }

    function u(e, t, i) {
        var n = {};
        return c(e) && Object.keys(e).forEach(function(t) {
                n[t] = o(e[t], i)
            }),
            Object.keys(t).forEach(function(s) {
                c(t[s]) && e[s] ? n[s] = d(e[s], t[s], i) : n[s] = o(t[s], i)
            }),
            n
    }

    function d(e, t, i) {
        var n = Array.isArray(t),
            s = Array.isArray(e),
            r = i || {
                arrayMerge: l
            };
        if (n === s)
            return n ? (r.arrayMerge || l)(e, t, i) : u(e, t, i);
        return o(t, i)
    }
    var c = function(e) {
            return n(e) && !s(e)
        },
        h = "function" == typeof Symbol && Symbol.for,
        f = h ? Symbol.for("react.element") : 60103;
    d.all = function(e, t) {
        if (!Array.isArray(e) || e.length < 2)
            throw new Error("first argument should be an array with at least two elements");
        return e.reduce(function(e, i) {
            return d(e, i, t)
        })
    };
    var p = d;
    e.exports = p
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(20),
        v = n(m),
        _ = i(95),
        y = n(_),
        b = i(123),
        w = n(b),
        E = function(e) {
            function t(e, i, n) {
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n));
                return s.segment = e,
                    s.attributes = i,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this.segment.getAddress();
                        if (null == e.getStreet() || e.isEmptyStreet())
                            return !1;
                        var t = new y.default(e.getState(), e.getCountry(), this.attributes.cityName, this.attributes.emptyCity);
                        this.doSubAction(t);
                        var i = t.city,
                            n = new w.default(this.attributes.streetName, i, this.attributes.emptyStreet);
                        this.doSubAction(n);
                        var s = n.street;
                        if (this.segment.attributes.streetIDs.includes(s.getID()))
                            return !1;
                        this.doSubAction(new v.default(this.segment, {
                            streetIDs: this.segment.attributes.streetIDs.concat(s.getID())
                        }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }]),
                t
        }(g.default);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(30),
        b = n(y),
        w = i(12),
        E = n(w),
        k = i(78),
        M = n(k),
        S = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, n));
                return s.segments = e,
                    s.sourceSplits = i[0].map(function(e) {
                        var t = new b.default({
                            geometry: e
                        });
                        return t.copyAttributes(s.segments[0]),
                            t
                    }),
                    s.targetSplits = _.last(i).map(function(e) {
                        var t = new b.default({
                            geometry: e
                        });
                        return t.copyAttributes(_.last(s.segments)),
                            t
                    }),
                    s
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        var e = this.subActions[0] && this.subActions[0].splitNode;
                        return e ? [e] : []
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.AddIntersection")
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = new M.default(_.last(this.segments), {
                            splits: this.targetSplits
                        });
                        return this.doSubAction(e),
                            this.doSubAction(new M.default(this.segments[0], {
                                splits: this.sourceSplits,
                                splitNode: e.splitNode
                            }))
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [].concat((0,
                            r.default)(this.segments.map(function(e) {
                            return e.getUniqueID()
                        })), (0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(E.default);
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(79),
        w = n(b),
        E = i(78),
        k = n(E),
        M = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    u.default)(this, t);
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, i));
                return n._node = e,
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._node]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = this;
                        if (!this._node.isVirtual())
                            return !1;
                        var t = this._node.attributes.segIDs.map(function(t) {
                            return e.model.segments.get(t)
                        }).find(function(t) {
                            return t.isVirtuallyConnectedToNode(e._node)
                        });
                        return this.doSubAction(new w.default(t, this._node, {
                                deleteNode: !1
                            })),
                            this.doSubAction(new k.default(t, {
                                splitNode: this._node,
                                splitAtPoint: this._node.attributes.geometry
                            })), !0
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.ConvertNodeToRegular")
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this._node.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(y.default);
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(18),
        w = n(b),
        E = i(11),
        k = i(79),
        M = n(k),
        S = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    u.default)(this, t),
                i.dontSerialize = !0;
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, i));
                return n.node = e,
                    n.prevNodeState = null,
                    n.hidNode = !1,
                    n.changedSegAttributes = {},
                    n.changedSegStates = [],
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.node]
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.node.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (this.node.state === OpenLayers.State.DELETE)
                            return !1;
                        this.node.attributes.segIDs.forEach(function(e) {
                                var t = this.model.segments.get(e);
                                this.doSubAction(new M.default(t, this.node))
                            }, this),
                            this.node.getID(),
                            this.node.hidden || (this.hidNode = !0),
                            this.node.hidden = !0,
                            this.prevNodeState = this.node.state,
                            this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                                this.model.nodes.changed(this.node))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.node.getID(),
                            this.hidNode && delete this.node.hidden,
                            this.node.state === OpenLayers.State.INSERT ? this.model.nodes.put(this.node) : (this.node.state = this.prevNodeState,
                                this.model.nodes.changed(this.node)),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.hidNode && (this.node.hidden = !0),
                            this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                                this.model.nodes.changed(this.node)),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: E.NODE,
                            action: w.default.TYPE.DELETE,
                            attributes: {
                                id: this.node.getID()
                            }
                        }
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.DeleteNode")
                    }
                }]),
                t
        }(y.default);
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(78),
        b = n(y),
        w = i(125),
        E = n(w),
        k = i(52),
        M = n(k),
        S = i(79),
        T = n(S),
        C = i(12),
        I = n(C),
        A = i(11),
        D = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    u.default)(this, t);
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, i));
                return n.segment = e,
                    n.options = i,
                    n._analyzeSnappedFeatures(),
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_analyzeSnappedFeatures",
                    value: function() {
                        var e = this;
                        if (this.touching = {},
                            this.snappedFeatures) {
                            this.snappedFeatures instanceof Array || (this.snappedFeatures = [this.snappedFeatures]),
                                this.snappedFeatures = this.snappedFeatures.filter(function(e) {
                                    return e
                                });
                            var t = this.segment.geometry.getVertices(!0),
                                i = t[0],
                                n = _.last(t),
                                s = void 0;
                            this.snappedFeatures.forEach(function(t) {
                                s = null,
                                    t.point.equals(i) ? (e.touching.fromVertex = {},
                                        s = e.touching.fromVertex) : t.point.equals(n) && (e.touching.toVertex = {},
                                        s = e.touching.toVertex),
                                    s && (s.feature = t.feature,
                                        s.point = t.point,
                                        s.distance = t.distance,
                                        t.feature.type === A.SEGMENT ? "edge" === t.type || "vertex" === t.type ? s.segmentEdge = !0 : "node" === t.type && (s.segmentNode = !0) : t.feature.type === A.NODE && (s.node = !0))
                            })
                        }
                    }
                }, {
                    key: "_connectToExistingNode",
                    value: function(e, t) {
                        t !== e.getID() && (t && this.doSubAction(new T.default(this.segment, this.model.nodes.get(t))),
                            this.doSubAction(new M.default(e, this.segment)))
                    }
                }, {
                    key: "updateEndPoint",
                    value: function(e, t, i) {
                        if (t) {
                            if (t.node)
                                this._connectToExistingNode(t.feature, e);
                            else if (t.segmentNode)
                                e && this.doSubAction(new T.default(this.segment, this.model.nodes.get(e))),
                                this.doSubAction(new E.default(t.point, [this.segment, t.feature]));
                            else if (t.segmentEdge)
                                if (e && this.doSubAction(new T.default(this.segment, this.model.nodes.get(e))),
                                    this.segment.isWalkingRoadType() && !t.feature.isWalkingRoadType()) {
                                    var n = new E.default(t.point, [this.segment]);
                                    this.doSubAction(n);
                                    var s = n.node;
                                    this.doSubAction(new M.default(s, t.feature, {
                                        virtual: !0
                                    }))
                                } else
                                    this.doSubAction(new b.default(t.feature, {
                                        splitAtPoint: t.point,
                                        splitWithSegment: this.segment,
                                        splittingPointDistance: t.distance
                                    }))
                        } else if (e && this.doSubAction(new T.default(this.segment, this.model.nodes.get(e))),
                            this.createNodes) {
                            var r = void 0;
                            r = i ? this.segment.geometry.components[0] : this.segment.geometry.components[this.segment.geometry.components.length - 1],
                                this.doSubAction(new E.default(r, [this.segment]))
                        }
                        return !0
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.segment.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }, {
                    key: "_getSplitAction",
                    value: function() {
                        var e = this.flat();
                        return _.find(e, function(e) {
                            return e instanceof b.default
                        })
                    }
                }, {
                    key: "_getDisconnectAction",
                    value: function() {
                        var e = this.flat(),
                            t = _.find(e, function(e) {
                                return e instanceof T.default
                            });
                        if (t) {
                            if (!t.node.isDisconnected())
                                return t
                        }
                    }
                }, {
                    key: "_getConnectAction",
                    value: function() {
                        var e = this.flat(),
                            t = _.find(e, function(e) {
                                return e instanceof M.default
                            });
                        if (t) {
                            if (t.node.attributes.segIDs.length > 1)
                                return t
                        }
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._getSplitAction();
                        if (e)
                            return e.generateDescription(),
                                void(this._description = e.getDescription());
                        var t = this._getConnectAction();
                        if (t)
                            return t.generateDescription(),
                                void(this._description = t.getDescription());
                        var i = this._getDisconnectAction();
                        i && (i.generateDescription(),
                            this._description = i.getDescription())
                    }
                }]),
                t
        }(I.default);
    t.default = D,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(18),
        w = n(b),
        E = i(95),
        k = n(E),
        M = i(123),
        S = n(M),
        T = i(11),
        C = function(e) {
            function t(e, i) {
                (0,
                    u.default)(this, t);
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, i));
                return n.attributes = null,
                    n.initialGeometry = null,
                    n.landmark = e,
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = void 0,
                            t = void 0,
                            i = null,
                            n = void 0,
                            s = this.landmark.attributes.geometry;
                        return !(!this.landmark.isPoint() && !this.landmark.is2D()) && (this.initialGeometry = this.landmark.geometry.clone(),
                            this.landmark.attributes.geometry = null,
                            this.attributes = {},
                            $.extend(!0, this.attributes, this.landmark.attributes),
                            this.landmark.attributes.geometry = s,
                            this.landmark.getID() || this.landmark.setID(this.model.venues.generateUniqueID()),
                            this.landmark.state = OpenLayers.State.INSERT,
                            this.landmark.getID(),
                            this.model.venues.put(this.landmark),
                            this.model.segments.topCityID && (i = this.model.cities.get(this.model.segments.topCityID)),
                            null === i && null !== this.model.countries.top && (t = new k.default(this.model.states.top, this.model.countries.top, "", !0),
                                this.doSubAction(t),
                                i = t.city),
                            null !== i && (e = new S.default("", i, !0),
                                this.doSubAction(e),
                                n = e.street,
                                this.attributes.streetID = n.getID(),
                                this.landmark.attributes.streetID = n.getID()), !0)
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.landmark.getID(),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "undoAction", this).call(this),
                            this.model.venues.remove(this.landmark)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.venues.put(this.landmark),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this.attributes;
                        return e.id = this.landmark.getID(),
                            e.geometry = this.initialGeometry, {
                                _objectType: T.VENUE,
                                action: w.default.TYPE.ADD,
                                attributes: e
                            }
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        return this.initialGeometry.getBounds().clone()
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.landmark.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.AddLandmark")
                    }
                }]),
                t
        }(y.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(124),
        v = n(m),
        y = i(78),
        b = n(y),
        w = i(125),
        E = n(w),
        k = i(96),
        M = n(k),
        S = i(37),
        T = n(S),
        C = i(52),
        I = n(C),
        A = i(64),
        D = n(A),
        R = i(63),
        O = n(R),
        L = i(20),
        x = n(L),
        P = i(30),
        N = n(P),
        V = i(32),
        F = n(V),
        U = i(61),
        j = n(U),
        B = i(227),
        G = n(B),
        W = Math.PI / 180 * 10,
        z = function(e) {
            function t(e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return n.containedSegments = null,
                    n.roundaboutSegments = null,
                    n.isLeftHand = !1,
                    n.ellipse = e,
                    n._intersections = [],
                    n
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return this.roundaboutSegments
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = _.compact(_.flatten(_.flatten(this._intersections).map(function(e) {
                            return e.segments
                        })).map(function(e) {
                            return e.getAddress() ? e.getAddress().getStreetName({
                                emptyString: null
                            }) : null
                        }));
                        e && e.length > 0 ? this._description = I18n.t("save.changes_log.actions.CreateRoundabout.has_street", {
                            streetName: e[0]
                        }) : this._description = I18n.t("save.changes_log.actions.CreateRoundabout.default")
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (this._intersections = this.getIntersections(),
                            _.isEmpty(this._intersections))
                            return !1;
                        this.determineDrivingDirection(this._intersections),
                            this.deleteContainedSegments(),
                            this.modifyIntersectingSegments(this._intersections),
                            this.addRoundaboutSegments(this._intersections),
                            this.addRoundabout()
                    }
                }, {
                    key: "determineDrivingDirection",
                    value: function(e) {
                        var t = e[0][0].segments[0],
                            i = t.getAddress();
                        null == i || null == i.street || null == i.getCountry() ? this.isLeftHand = this.model.isLeftHand : this.isLeftHand = i.getCountry().leftHandTraffic
                    }
                }, {
                    key: "addRoundabout",
                    value: function() {
                        var e = _(this.roundaboutSegments).invoke("getID"),
                            t = new O.default(new G.default({
                                segIDs: e,
                                type: "RA"
                            }), this.model.junctions);
                        this.doSubAction(t);
                        var i = t.object;
                        this.roundaboutSegments.forEach(function(e) {
                            this.doSubAction(new x.default(e, {
                                junctionID: i.getID()
                            }))
                        }, this)
                    }
                }, {
                    key: "deleteContainedSegments",
                    value: function() {
                        this.containedSegments.forEach(function(e) {
                            this.doSubAction(new D.default(e))
                        }, this)
                    }
                }, {
                    key: "addRoundaboutSegments",
                    value: function(e) {
                        var t = void 0,
                            i = void 0,
                            n = void 0,
                            s = void 0,
                            r = void 0,
                            a = void 0,
                            o = void 0,
                            l = void 0;
                        for (this.roundaboutSegments = [],
                            e = e.reduce(function(e, t) {
                                return e.concat(t)
                            }),
                            e.sort(function(e, t) {
                                return e.angle - t.angle
                            }),
                            e.push({
                                angle: e[0].angle,
                                point: e[0].point,
                                segments: []
                            }),
                            t = 0; t < e.length - 1; t++) {
                            for (n = e[t].point,
                                s = e[t + 1].point,
                                o = new OpenLayers.Geometry.LineString,
                                l = new N.default({
                                    geometry: o
                                }),
                                r = e[t].angle,
                                a = e[t + 1].angle,
                                t === e.length - 2 && (a += 2 * Math.PI),
                                o.addPoint(n.clone()),
                                i = r + W; i < a; i += W)
                                o.addPoint(new OpenLayers.Geometry.Point(this.ellipse.center.x + this.ellipse.rx * Math.cos(i), this.ellipse.center.y + this.ellipse.ry * Math.sin(i)));
                            i > a && o.addPoint(s.clone()),
                                this.isLeftHand && (l.attributes.fwdDirection = !1,
                                    l.attributes.revDirection = !0),
                                this.doSubAction(new M.default(l)),
                                this.roundaboutSegments.push(l)
                        }
                        e.pop(),
                            this.addNodes(e, this.roundaboutSegments)
                    }
                }, {
                    key: "addNodes",
                    value: function(e, t) {
                        var i = void 0,
                            n = void 0;
                        e.forEach(function(e, s) {
                            i = e.segments.concat(),
                                i.push(t[s]),
                                i.push(t[(t.length + s - 1) % t.length]),
                                e.node ? i.forEach(function(t) {
                                    t.isConnectedToNode(e.node) || this.doSubAction(new I.default(e.node, t))
                                }, this) : (n = new E.default(e.point, i),
                                    this.doSubAction(n),
                                    e.node = n.node),
                                this.isLeftHand ? (this.openConnection(i[0], e.node, _.last(i)),
                                    this.openConnection(i[1], e.node, i[0]),
                                    this.openConnection(i[1], e.node, _.last(i))) : (this.openConnection(i[0], e.node, i[1]),
                                    this.openConnection(_.last(i), e.node, i[0]),
                                    this.openConnection(_.last(i), e.node, i[1]))
                        }, this)
                    }
                }, {
                    key: "openConnection",
                    value: function(e, t, i) {
                        if (t.isTurnAllowedBySegDirections(e, i)) {
                            var n = F.default.for(e, t),
                                s = F.default.for(i, t).getOpposite(),
                                r = this.model.getTurnGraph(),
                                a = r.getTurn(n, s);
                            a = a.withTurnData(a.getTurnData().withState(j.default.State.ALLOWED));
                            var o = new T.default(r, a);
                            this.doSubAction(o)
                        }
                    }
                }, {
                    key: "modifyIntersectingSegments",
                    value: function(e) {
                        e.forEach(function(e) {
                            1 === e.length ? this.shortenSegment(e[0]) : this.splitSegment(e)
                        }, this)
                    }
                }, {
                    key: "splitSegment",
                    value: function(e) {
                        var t = e[0].segments[0],
                            i = new b.default(t, {
                                splitAtPoint: e[0].point,
                                splittingPointIndex: e[0].index
                            });
                        this.doSubAction(i),
                            e[0].node = i.splitNode,
                            _.last(e).segments = [_.last(i.splits)],
                            _.last(e).index = _.last(e).index - e[0].index,
                            e[0].segments = [i.splits[0]],
                            this.shortenSegment(_.last(e))
                    }
                }, {
                    key: "shortenSegment",
                    value: function(e) {
                        var t = e.segments[0],
                            i = t.geometry.clone();
                        e.goingOut ? (t.geometry.components.splice(0, e.index + 1),
                                t.geometry.addComponent(e.point.clone(), 0)) : (t.geometry.components.splice(e.index + 1),
                                t.geometry.addComponent(e.point.clone())),
                            this.doSubAction(new v.default(t, i, t.geometry))
                    }
                }, {
                    key: "getIntersections",
                    value: function() {
                        var e = void 0,
                            t = this;
                        return this.containedSegments = [],
                            this.model.segments.getObjectArray(function(e) {
                                return e.state !== OpenLayers.State.DELETE && e.geometry.bounds.intersectsBounds(t.ellipse.bounds)
                            }).reduce(function(i, n) {
                                return e = n.intersectionWithEllipse(t.ellipse.center, t.ellipse.rx, t.ellipse.ry),
                                    e instanceof Array ? 1 !== e.length && e[0].goingOut || (e.forEach(function(e) {
                                            e.segments = [n]
                                        }),
                                        i.push(e)) : e && t.containedSegments.push(n),
                                    i
                            }, [])
                    }
                }]),
                t
        }(g.default);
    t.default = z,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.UpdateFractionPoint = t.ReplaceHouseNumberSegment = t.DeleteHouseNumber = t.AddHouseNumber = void 0;
    var s = i(8),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(18),
        v = n(m),
        y = i(12),
        b = n(y),
        w = i(171),
        E = n(w),
        k = i(36),
        M = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, n));
                return s.houseNumberSet = e,
                    s.houseNumber = i,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.houseNumber.id = this.model.houseNumbers.generateUniqueID(),
                            this.houseNumberSet.numbers.push(this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet), !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return this.houseNumberSet.numbers = _.without(this.houseNumberSet.numbers, this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.houseNumberSet.numbers.push(this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {
                            number: this.houseNumber.number,
                            id: this.houseNumber.id,
                            segID: this.houseNumberSet.id,
                            geometry: this.houseNumber.geometry,
                            fractionPoint: this.houseNumber.fractionPoint,
                            forced: this.houseNumber.forced
                        };
                        return {
                            _objectType: this.houseNumberSet.type,
                            action: v.default.TYPE.ADD,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id).getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            k.formatHouseNumberActionDescription)(this.model, this.houseNumberSet.id, this.houseNumber, "AddHouseNumber")
                    }
                }]),
                t
        }(v.default),
        S = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, n));
                return s.houseNumberSet = e,
                    s.houseNumber = i,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.houseNumberSet.numbers = _.without(this.houseNumberSet.numbers, this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet), !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return this.houseNumberSet.numbers.push(this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.houseNumberSet.numbers = _.without(this.houseNumberSet.numbers, this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {
                            id: this.houseNumber.id,
                            segID: this.houseNumberSet.id
                        };
                        return {
                            _objectType: this.houseNumberSet.type,
                            action: v.default.TYPE.DELETE,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id).getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            k.formatHouseNumberActionDescription)(this.model, this.houseNumberSet.id, this.houseNumber, "DeleteHouseNumber")
                    }
                }]),
                t
        }(v.default),
        T = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, n));
                return s.oldParent = null,
                    s.houseNumber = e,
                    s.newSet = i,
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.houseNumber.id,
                            this.houseNumber.parent.id,
                            this.newSet.id,
                            this.newHouseNumber = this.houseNumber.clone(),
                            this.oldParent = this.newHouseNumber.parent,
                            this.newHouseNumber.parent = this.newSet,
                            this.doSubAction(new S(this.houseNumber.parent, this.houseNumber)),
                            this.doSubAction(new M(this.newSet, this.newHouseNumber)), !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        (0,
                            r.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "undoAction", this).call(this),
                            this.houseNumber.parent = this.oldParent
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        (0,
                            r.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "redoAction", this).call(this),
                            this.newHouseNumber.parent = this.newSet
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this.model.segments.get(this.oldParent.id),
                            t = this.model.segments.get(this.newSet.id);
                        return [e.getUniqueID(), t.getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.UpdateFractionPoint", {
                            houseNumber: this.houseNumber,
                            segmentId: this.houseNumberSet.id
                        })
                    }
                }]),
                t
        }(b.default),
        C = function(e) {
            function t(e, i, n, s) {
                (0,
                    u.default)(this, t);
                var r = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, s));
                return r.houseNumber = e,
                    r.houseNumberSet = i,
                    r.fractionPoint = n,
                    r
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this.newHouseNumber = this.houseNumber;
                        var e = new OL.Geometry.Point(this.fractionPoint.lonlat.lon, this.fractionPoint.lonlat.lat);
                        if (this.fractionPoint.closestSegment.getID() !== this.houseNumber.parent.id) {
                            var t = new T(this.houseNumber, this.houseNumberSet, null);
                            this.doSubAction(t),
                                this.doSubAction(new E.default(t.newSet, t.newHouseNumber, {
                                    fractionPoint: e
                                })),
                                this.newHouseNumber = t.newHouseNumber
                        } else
                            this.doSubAction(new E.default(this.houseNumber.parent, this.houseNumber, {
                                fractionPoint: e
                            }));
                        return !0
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id).getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            k.formatHouseNumberActionDescription)(this.model, this.houseNumberSet.id, this.houseNumber, "UpdateFractionPoint")
                    }
                }]),
                t
        }(b.default);
    t.AddHouseNumber = M,
        t.DeleteHouseNumber = S,
        t.ReplaceHouseNumberSegment = T,
        t.UpdateFractionPoint = C
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(12),
        v = n(m),
        _ = i(11),
        y = i(52),
        b = n(y),
        w = i(78),
        E = n(w),
        k = i(77),
        M = n(k),
        S = function(e) {
            function t(e, i, n, s, r) {
                (0,
                    u.default)(this, t);
                var a = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, r));
                return a._node = e,
                    a._oldGeometry = i.clone(),
                    a._newGeometry = n.clone(),
                    a._origSegGeometries = s,
                    a
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_updateSegmentGeometry",
                    value: function(e) {
                        var t = e.geometry.clone();
                        if (this._node.getID() === e.attributes.fromNodeID && (t.components[0] = this._newGeometry.clone()),
                            this._node.getID() === e.attributes.toNodeID) {
                            var i = t.components.length - 1;
                            t.components[i] = this._newGeometry.clone()
                        }
                        this.doSubAction(new M.default(e, this.model.segments, this._origSegGeometries[e.getID()], t))
                    }
                }, {
                    key: "_moveConnectedSegments",
                    value: function() {
                        var e = this;
                        this._node.getSegmentIds().map(function(t) {
                            return e.model.segments.get(t)
                        }).filter(function(e) {
                            return null != e
                        }).forEach(function(t) {
                            return e._updateSegmentGeometry(t)
                        })
                    }
                }, {
                    key: "_moveNode",
                    value: function() {
                        this.doSubAction(new M.default(this._node, this.model.nodes, this._oldGeometry, this._newGeometry))
                    }
                }, {
                    key: "_handleTouchingSegment",
                    value: function(e) {
                        var t = this,
                            i = e.feature,
                            n = this._node.getSegmentIds().map(function(e) {
                                return t.model.segments.get(e)
                            }),
                            s = n.every(function(e) {
                                return e.isWalkingRoadType()
                            });
                        i.isDrivable() && s ? this.doSubAction(new b.default(this._node, i, {
                            virtual: !0
                        })) : this.doSubAction(new E.default(e.feature, {
                            splitNode: this._node,
                            splitAtPoint: e.point,
                            splittingPointDistance: e.distance
                        }))
                    }
                }, {
                    key: "_handleTouchingFeatures",
                    value: function() {
                        var e = void 0;
                        if (!this.snappedFeatures)
                            return !1;
                        e = this.snappedFeatures,
                            e.feature.type === _.SEGMENT && ("edge" === e.type || "vertex" === e.type ? this._handleTouchingSegment(e) : "node" === e.type && this.doSubAction(new b.default(this._node, e.feature)))
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        this._moveNode(),
                            this._moveConnectedSegments(),
                            this._handleTouchingFeatures()
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this,
                            t = this._node.getSegmentIds().map(function(t) {
                                return e.model.segments.get(t).getUniqueID()
                            });
                        return [].concat((0,
                            r.default)(t), [this._node.getUniqueID()])
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._node]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.MoveNode")
                    }
                }]),
                t
        }(v.default);
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = function(e) {
            function t(e, i, n, s) {
                (0,
                    o.default)(this, t);
                var a = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, s));
                return a.houseNumber = e,
                    a.houseNumberSet = a.houseNumber.parent,
                    a.newGeometry = n.clone(),
                    a.oldGeometry = i,
                    a.oldFraction = e.fractionPoint.clone(),
                    a.newFraction = null,
                    a.changedState = !1,
                    a
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "destroy",
                    value: function() {
                        this.houseNumberSet = null,
                            this.houseNumber = null,
                            this.newGeometry = null,
                            this.oldGeometry = null
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        return this.houseNumber.id,
                            this.houseNumberSet.getID(),
                            this.newFraction = this.houseNumber.getFractionFromProjection(),
                            this.houseNumber.geometry = this.newGeometry.clone(),
                            this.houseNumber.fractionPoint = this.newFraction,
                            this.houseNumberSet.state || (this.changedState = !0,
                                this.houseNumberSet.state = OL.State.UPDATE),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return this.houseNumber.geometry = this.oldGeometry,
                            this.houseNumber.fractionPoint = this.oldFraction,
                            this.changedState && (this.houseNumberSet.state = null),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.houseNumber.geometry = this.newGeometry.clone(),
                            this.houseNumber.fractionPoint = this.newFraction,
                            this.changedState && (this.houseNumberSet.state = OL.State.UPDATE),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {
                            segID: this.houseNumberSet.id,
                            id: this.houseNumber.id,
                            geometry: this.newGeometry,
                            fractionPoint: this.newFraction
                        };
                        return {
                            _objectType: this.houseNumberSet.type,
                            action: g.default.TYPE.UPDATE,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return this.model.segments.get(this.houseNumberSet.id).getEntireStreet().map(function(e) {
                            return e.getUniqueID()
                        })
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this.model.segments.get(this.houseNumberSet.id),
                            t = e.getAddress().getStreetName({
                                emptyString: ""
                            });
                        this._description = I18n.t("save.changes_log.actions.UpdateHouseNumberGeometry", {
                            houseNumber: this.houseNumber,
                            streetName: t
                        })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(226),
        o = n(a),
        l = i(53),
        u = n(l),
        d = i(752),
        c = n(d),
        h = i(753),
        f = n(h),
        p = i(754),
        g = n(p),
        m = i(65),
        v = n(m),
        y = {
            nextClosureID: -101,
            add: function(e) {
                for (var t = [], i = e.get("segments"), n = 0; n < i.length; n++)
                    for (var s = i[n], r = e.calculateForwardValuesForSegment(s.getID()), a = 0; a < r.length; a++) {
                        var o = r[a],
                            l = this._createRoadClosure(e, s.getID(), s.geometry);
                        l.forward = o,
                            t.push(new c.default(l, s))
                    }
                return this._wrapInMultiAction(t)
            },
            _createRoadClosure: function(e, t, i) {
                var n = new o.default({
                    id: this._getNewClosureID(),
                    geometry: i.clone(),
                    segID: t,
                    active: !0
                });
                return e.saveSimpleFieldsToClosure(n),
                    n
            },
            delete: function(e) {
                var t = _.map(e.get("closures"), function(t) {
                    var i = e.findSegmentByID(t.segID);
                    return new g.default(t, i)
                });
                return this._wrapInMultiAction(t)
            },
            update: function(e) {
                for (var t = [], i = e.get("closures"), n = e.isOppositeToOriginal(), s = this._changedToOneWay(e), r = this._shouldUpdate(e), a = this._shouldCreateOpposite(e), o = 0; o < i.length; o++) {
                    var l = i[o],
                        u = void 0;
                    n ? (t.push(this._createAddOppositeAction(e, l)),
                        u = e.findSegmentByID(l.segID),
                        t.push(new g.default(l, u))) : s && this._hasObsoleteDirection(e, l) ? (u = e.findSegmentByID(l.segID),
                        t.push(new g.default(l, u))) : (r && t.push(this._createUpdateAction(e, l)),
                        a && t.push(this._createAddOppositeAction(e, l)))
                }
                return this._wrapInMultiAction(t)
            },
            _shouldUpdate: function(e) {
                return e.hasChanged()
            },
            _createUpdateAction: function(e, t) {
                var i = new o.default(t);
                return e.saveSimpleFieldsToClosure(i),
                    e.isOppositeToOriginal() && (i.forward = !i.forward),
                    new f.default(i)
            },
            _shouldCreateOpposite: function(e) {
                return e.differsFromOriginal("direction") && e.get("direction") === m.DIRECTION.TWO_WAY
            },
            _createAddOppositeAction: function(e, t) {
                var i = this._createRoadClosure(e, t.segID, t.geometry);
                i.forward = !t.forward;
                var n = e.findSegmentByID(t.segID);
                return new c.default(i, n)
            },
            _getNewClosureID: function() {
                return this.nextClosureID--
            },
            _changedToOneWay: function(e) {
                return e.differsFromOriginal("direction") && e.original("direction") === m.DIRECTION.TWO_WAY
            },
            _hasObsoleteDirection: function(e, t) {
                var i = e.calculateForwardValuesForSegment(t.segID);
                return !_.contains(i, t.forward)
            },
            applyToAllSegments: function(e, t) {
                for (var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, n = this._findMissingSegments(e, t), s = [], r = new v.default({
                        segments: n,
                        reverseSegments: i,
                        direction: e.get("direction")
                    }), a = 0; a < n.length; a++)
                    for (var o = n[a], l = r.calculateForwardValuesForSegment(o.getID()), u = 0; u < l.length; u++) {
                        var d = l[u],
                            h = this._createRoadClosure(e, o.getID(), o.geometry);
                        h.forward = d,
                            s.push(new c.default(h, o))
                    }
                return this._wrapInMultiAction(s)
            },
            _findMissingSegments: function(e, t) {
                return _.reject(t, function(t) {
                    return null != e.findSegmentByID(t.getID())
                })
            },
            _wrapInMultiAction: function(e) {
                return new u.default([].concat((0,
                    r.default)(e)))
            }
        };
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.InvalidLoginError = void 0;
    var s = i(110),
        r = n(s),
        a = i(109),
        o = n(a),
        l = i(72),
        u = n(l),
        d = i(155),
        c = n(d),
        h = i(6),
        f = n(h),
        p = i(19),
        g = n(p),
        m = i(1),
        v = n(m),
        _ = i(2),
        y = n(_),
        b = i(0),
        w = n(b),
        E = i(3),
        k = n(E),
        M = i(4),
        S = n(M),
        T = i(75),
        C = i(767),
        I = n(C),
        A = i(71),
        D = n(A),
        R = i(25),
        O = "_csrf_token",
        L = /^(post|delete)$/,
        x = function(e) {
            function t() {
                (0,
                    w.default)(this, t);
                var e = (0,
                    k.default)(this, (t.__proto__ || (0,
                    y.default)(t)).call(this, "Invalid Login Error"));
                return Error.captureStackTrace && Error.captureStackTrace(e, R.FetchError),
                    e
            }
            return (0,
                    S.default)(t, e),
                t
        }(function(e) {
            function t() {
                var t = (0,
                    c.default)(e, (0,
                    u.default)(arguments));
                return (0,
                        o.default)(t, (0,
                        y.default)(this)),
                    t
            }
            return t.prototype = (0,
                    r.default)(e.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                o.default ? (0,
                    o.default)(t, e) : t.__proto__ = e,
                t
        }(Error)),
        P = function() {
            function e() {
                (0,
                    w.default)(this, e),
                this.expired = !1,
                    this.returningUser = !1,
                    this.user = null,
                    this.events = new OpenLayers.Events(this),
                    (0,
                        R.addHttpResponseMiddleware)(this._onServerResponse.bind(this)),
                    (0,
                        R.addHttpRequestMiddleware)(function(e) {
                        var t = e.method;
                        L.test(t.toLowerCase()) && e.headers.append("X-CSRF-Token", $.cookie(O))
                    })
            }
            return (0,
                    v.default)(e, [{
                    key: "getLoggedInUser",
                    value: function() {
                        var e = this;
                        return null !== this.user ? g.default.resolve(this.user) : (0,
                            R.httpGet)(W.Config.paths.auth, {
                            language: I18n.locale
                        }).then(function(t) {
                            e.user = new I.default(t, {
                                parse: !0
                            })
                        }).finally(function() {
                            e.events.triggerEvent("loginStatus", {
                                user: e.user,
                                automatic: !0
                            })
                        })
                    }
                }, {
                    key: "_onServerResponse",
                    value: function(e) {
                        if (!e.ok) {
                            if (!this._hasUser() || this.expired)
                                return;
                            if (403 === e.status) {
                                var t = e.parsedJSON;
                                if (t) {
                                    var i = t.errorList;
                                    if (null != i && i.length > 0) {
                                        var n = i[0];
                                        103 !== n.code && 100 !== n.code || (this.expired = !0,
                                            this.returningUser = !1,
                                            this.events.triggerEvent("sessionExpired"))
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "_hasUser",
                    value: function() {
                        return null !== this.user
                    }
                }, {
                    key: "isAuthenticated",
                    value: function() {
                        return !this.expired && this._hasUser()
                    }
                }, {
                    key: "isLoggedIn",
                    value: function() {
                        return (0,
                            T.getServerConfig)().enforceEmailVerification ? this.isAuthenticated() && this.isVerifiedEmail() : this.isAuthenticated()
                    }
                }, {
                    key: "isFirstLogin",
                    value: function() {
                        return this._hasUser() && this.user.isFirstLogin
                    }
                }, {
                    key: "isVerifiedEmail",
                    value: function() {
                        return this._hasUser() && this.user.isVerifiedEmail()
                    }
                }, {
                    key: "isUserEmailAddressMissing",
                    value: function() {
                        return this._hasUser() && this.user.isEmailAddressMissing()
                    }
                }, {
                    key: "getUserVerificationEmailAddress",
                    value: function() {
                        return this._hasUser() ? this.user.getUnverifiedEmail() : null
                    }
                }, {
                    key: "getUserRank",
                    value: function() {
                        return this.isLoggedIn() ? this.user.rank : D.default.prototype.MaxLevel
                    }
                }, {
                    key: "_isAdOperator",
                    value: function() {
                        return !!this.isLoggedIn() && this.user.adOperator
                    }
                }, {
                    key: "canEditAdLockedPlaceUpdates",
                    value: function() {
                        return this.getUserRank() >= D.default.prototype.StaffRank || this._isAdOperator()
                    }
                }, {
                    key: "canEditBigJunctions",
                    value: function() {
                        return this.getUserRank() >= W.Config.big_junctions.minRank
                    }
                }, {
                    key: "login",
                    value: function(e, t) {
                        var i = this,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                        return this.expired && e !== this.user.userName && !1 === this.events.triggerEvent("beforeloginchanged") ? g.default.resolve() : this._doLogin(e, t, n).then(function(e) {
                            var t = new I.default(e, {
                                parse: !0
                            });
                            i.returningUser = i._hasUser() && i.user.userName === t.userName,
                                i.user = t,
                                i.expired = !1,
                                i.events.triggerEvent("login", {
                                    user: i.user
                                })
                        }).catch(function(e) {
                            if (!(e instanceof R.FetchError))
                                throw e;
                            self.events.triggerEvent("loginfailed", e.response)
                        })
                    }
                }, {
                    key: "_getCsrfToken",
                    value: function() {
                        var e = $.cookie(O);
                        return null !== e && void 0 !== e ? g.default.resolve(e) : (0,
                            R.httpGet)(W.Config.login.paths.get)
                    }
                }, {
                    key: "_doLogin",
                    value: function(e, t) {
                        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                        return this._getCsrfToken().then(function() {
                            return (0,
                                R.httpPost)(W.Config.login.paths.create, {
                                user_id: e,
                                password: t,
                                recaptcha_response: i
                            })
                        }).then(function(e) {
                            if (!e.reply || !e.reply.login)
                                throw W.Report.loginAction("login_invalid"),
                                    new x;
                            W.Report.loginAction("login_success")
                        }).then(function() {
                            return (0,
                                R.httpGet)(W.Config.paths.auth)
                        })
                    }
                }, {
                    key: "logout",
                    value: function() {
                        null !== this.user && !1 !== this.events.triggerEvent("beforeloginchanged") && (this.user = null,
                            this.expired = !1,
                            this.returningUser = !1,
                            $.cookie("_web_session", null, {
                                path: "/"
                            }),
                            $.cookie(O, null, {
                                path: "/"
                            }),
                            this.events.triggerEvent("logout", {
                                user: null,
                                logout: !0
                            }))
                    }
                }, {
                    key: "getAuthCookieName",
                    value: function() {
                        return "_web_session"
                    }
                }, {
                    key: "resetUserLimits",
                    value: function(e) {
                        this._hasUser() && this.user.resetUserLimits(e)
                    }
                }, {
                    key: "canChangeStreetName",
                    value: function() {
                        return !this._hasUser() || this.user.canChangeStreetName()
                    }
                }]),
                e
        }();
    (0,
        f.default)(P.prototype, {
        CLASS_NAME: "Waze.LoginManager"
    }),
    t.default = P,
        t.InvalidLoginError = x
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        DEFAULT: 0,
        MTE: 1
    };
    n.isValid = function(e) {
            return _.values(n).indexOf(e) >= 0
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(156),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Model.extend({
            defaults: {
                ignorable: !1,
                code: 700,
                description: null,
                geometry: null
            },
            nested: {
                geometry: OL.Geometry
            }
        });
    _.extend(r.prototype, s.default),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(21),
        r = n(s),
        a = i(45),
        o = n(a),
        l = i(7),
        u = n(l),
        d = i(6),
        c = n(d),
        h = i(0),
        f = n(h),
        p = i(1),
        g = n(p),
        m = i(73),
        v = n(m),
        y = i(778),
        b = n(y),
        w = i(779),
        E = n(w),
        k = i(780),
        M = n(k),
        S = i(782),
        T = n(S),
        C = i(783),
        I = n(C),
        A = i(784),
        D = n(A),
        R = i(11),
        O = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(R),
        L = i(64),
        x = n(L),
        P = i(126),
        N = n(P),
        V = i(172),
        F = n(V),
        U = i(35),
        j = n(U),
        B = i(98),
        G = n(B),
        z = i(785),
        H = n(z),
        $ = i(786),
        q = n($),
        Y = void 0,
        K = function() {
            function e(t) {
                var i = this;
                (0,
                    f.default)(this, e),
                this.segments = null,
                    this.nodes = null,
                    this.users = null,
                    this.streets = null,
                    this.cities = null,
                    this.states = null,
                    this.countries = null,
                    this.problems = null,
                    this.mapUpdateRequests = null,
                    this.venues = null,
                    this.junctions = null,
                    this.bigJunctions = null,
                    this.crossroads = null,
                    this.isLeftHand = !1,
                    this._restrictionSubscriptions = {},
                    this.lastTransactionID = null;
                var n = new OpenLayers.Projection("EPSG:900913");
                (0,
                    c.default)(this, t),
                this.events = new OpenLayers.Events(this),
                    this.actionManager = new D.default(this),
                    this.distanceCache = new Y(new OpenLayers.Projection("EPSG:900913")),
                    this.repos = {},
                    this.reposByObjectType = {},
                    this.addRepository("segments", O.SEGMENT, {}, M.default),
                    this.addRepository("nodes", O.NODE, {
                        onDemand: !1
                    }),
                    this.addRepository("users", O.USER, {
                        onDemand: !1,
                        useVersions: !1
                    }),
                    this.addRepository("streets", O.STREET, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("countries", O.COUNTRY, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("states", O.STATE, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("junctions", O.JUNCTION, {
                        onDemand: !1
                    }),
                    this.addRepository("bigJunctions", O.BIG_JUNCTION, {
                        onDemand: !1
                    }),
                    this.addRepository("problems", O.MAP_PROBLEM, {
                        filter: new b.default("problemFilter", ["ALL", "PARKING"], {
                            OPEN: 0,
                            CLOSED: 1
                        })
                    }),
                    this.addRepository("mapUpdateRequests", O.UPDATE_REQUEST, {
                        filter: new b.default("mapUpdateRequestFilter", ["ALL", "PARKING"], {
                            OPEN: 0,
                            CLOSED: 1
                        })
                    }),
                    this.addRepository("roadClosures", O.ROAD_CLOSURE, {
                        minZoom: W.Config.closures.minDisplayZoom,
                        active: W.Config.closures.shownByDefault
                    }),
                    this.addRepository("venues", O.VENUE, {
                        filter: new b.default("venueFilter", ["ALL", "RESIDENTIAL", "PARKING"], {
                            SHOW: 0,
                            UPDATE_REQUEST: 1
                        })
                    }, T.default),
                    this.addRepository("cameras", O.SPEED_CAMERA, {
                        minZoom: W.Config.cameras.minDisplayZoom,
                        active: W.Config.cameras.shownByDefault
                    }),
                    this.addRepository("userAreas", O.USER_AREA, {
                        minZoom: W.Config.editable_areas.minDisplayZoom
                    }),
                    this.addRepository("problemDetails", O.PROBLEM_DETAILS, {
                        url: W.Config.paths.problemDetails,
                        localProjection: n,
                        onDemand: !1
                    }, E.default),
                    this.addRepository("houseNumbers", O.HOUSE_NUMBER, {
                        url: W.Config.paths.houseNumbers,
                        localProjection: n,
                        onDemand: !1
                    }, E.default),
                    this.addRepository("updateRequestSessions", O.UPDATE_REQUEST_SESSION, {
                        url: W.Config.paths.updateRequestSessions,
                        localProjection: n,
                        onDemand: !1
                    }, E.default),
                    this.addRepository("archives", O.ARCHIVE_SESSION, {
                        url: W.Config.paths.archive,
                        onDemand: !1
                    }, E.default),
                    this.addRepository("archiveSessions", O.ARCHIVE_SESSION_DATA, {
                        url: W.Config.paths.archiveSessions,
                        onDemand: !1,
                        localProjection: n
                    }, E.default),
                    this.addRepository("managedAreas", "managedArea"),
                    this.addRepository("majorTrafficEvents", O.MTE),
                    this.addRepository("restrictedAreas", O.RESTRICTED_AREA, {}, I.default),
                    j.default.getRepositories().forEach(function(e) {
                        i.addRepository(e.repositoryName, e.featureType, e.repositoryConfig, e.repositoryClass)
                    }),
                    this._roadGraph = new H.default(this.nodes, this.segments),
                    this._turnGraph = new G.default(this._roadGraph),
                    W.prefs.on("change:isImperial", function(e, t) {
                        null !== t && (this.isImperial = t)
                    }, this),
                    this.isImperial = W.prefs.get("isImperial")
            }
            return (0,
                    g.default)(e, [{
                    key: "isRepository",
                    value: function(e) {
                        return null != this.repos[e]
                    }
                }, {
                    key: "addRepository",
                    value: function(e, t, i, n) {
                        if (this.isRepository(e))
                            throw new Error("Cannot add repository " + e + " to DataModel, the provided repository name already exists.");
                        n || (n = v.default),
                            i = i || {},
                            i.model = this,
                            i.name = e;
                        var s = new n(t, i);
                        this.repos[e] = this[e] = this.reposByObjectType[t] = s
                    }
                }, {
                    key: "getTurnGraph",
                    value: function() {
                        return this._turnGraph
                    }
                }, {
                    key: "getRoadGraph",
                    value: function() {
                        return this._roadGraph
                    }
                }, {
                    key: "clear",
                    value: function(e) {
                        for (var t in this)
                            this[t] instanceof v.default && this[t].clear(e);
                        this._turnGraph.clear()
                    }
                }, {
                    key: "getRepository",
                    value: function(e) {
                        return e && this.reposByObjectType[e] || null
                    }
                }, {
                    key: "mergeObjects",
                    value: function(e, t, i) {
                        var n = this,
                            s = t.segments,
                            r = t.connections;
                        s || (i = !0),
                            this.events.triggerEvent("mergestart"),
                            _.without((0,
                                u.default)(t), "segments", "connections").forEach(function(s) {
                                var r = n[s],
                                    a = t[s];
                                r && (i && !r.onDemand || r.clear({
                                        keepUnsaved: !0,
                                        keepSelected: !0
                                    }),
                                    r.mergeObjects(a, null, e, n.scale, t))
                            }),
                            s && (this.segments.clear({
                                    keepUnsaved: !0,
                                    keepSelected: !0
                                }),
                                this.segments.mergeObjects(s, null, e, this.scale, t),
                                r && (this._turnGraph.clear(),
                                    this._turnGraph.fromDescartes(r))),
                            this.setMeasurementSystem(),
                            this.setDrivingDirection(),
                            this.setRestrictionSubscriptions(),
                            this.setTopCountry(t),
                            this.events.triggerEvent("mergeend")
                    }
                }, {
                    key: "putPersistent",
                    value: function(e) {
                        var t = this;
                        (0,
                            u.default)(e).forEach(function(i) {
                            var n = t[i];
                            void 0 !== n && e[i].objects.forEach(function(e) {
                                e.setPersistent(!0),
                                    n.put(e)
                            })
                        })
                    }
                }, {
                    key: "setTopCountry",
                    value: function(e) {
                        var t = e.countries,
                            i = e.states;
                        t && t.mainObjectID ? (this.countries.top = this.countries.objects[t.mainObjectID],
                            i && (this.states.top = this.states.objects[i.mainObjectID])) : (this.countries.top = null,
                            this.states.top = null)
                    }
                }, {
                    key: "setMeasurementSystem",
                    value: function() {
                        var e = W.prefs.get("isImperial");
                        if (null !== e)
                            this.isImperial = e;
                        else {
                            var t = (0,
                                    o.default)(this.countries.objects),
                                i = null;
                            _.isEmpty(t) || (i = t[0],
                                W.prefs.set("isImperial", 234 === i.id || 235 === i.id))
                        }
                    }
                }, {
                    key: "setDrivingDirection",
                    value: function() {
                        var e = (0,
                            o.default)(this.countries.objects);
                        this.isLeftHand = !1,
                            _.isEmpty(e) || (this.isLeftHand = Boolean(e[0].leftHandTraffic))
                    }
                }, {
                    key: "setRestrictionSubscriptions",
                    value: function() {
                        this._restrictionSubscriptions = {};
                        var e = (0,
                                o.default)(this.countries.objects),
                            t = e[0];
                        null != t && null != t.restrictionSubscriptions && (this._restrictionSubscriptions = t.restrictionSubscriptions)
                    }
                }, {
                    key: "getRestrictionSubscriptions",
                    value: function() {
                        return this._restrictionSubscriptions
                    }
                }, {
                    key: "deleteSegments",
                    value: function(e) {
                        if (1 === e.length)
                            this.actionManager.add(new x.default(e[0], {
                                userInitiated: !0
                            }));
                        else if (e.length > 1) {
                            for (var t = [], i = 0, n = e.length; i < n; i++)
                                t.push(new x.default(e[i], {
                                    userInitiated: !0
                                }));
                            this.actionManager.add(new q.default(t))
                        }
                    }
                }, {
                    key: "deleteObjects",
                    value: function(e) {
                        1 === e.length && this.actionManager.add(new N.default(e[0]))
                    }
                }, {
                    key: "deleteNodes",
                    value: function(e) {
                        1 === e.length && this.actionManager.add(new F.default(null, e[0]))
                    }
                }, {
                    key: "_getModifiedObjects",
                    value: function() {
                        var e = {
                            segments: this.segments.getModifiedObjects(),
                            nodes: this.nodes.getModifiedObjects(),
                            cities: this.cities.getModifiedObjects(),
                            streets: this.streets.getModifiedObjects(),
                            venues: this.venues.getModifiedObjects(),
                            bigJunctions: this.bigJunctions.getModifiedObjects(),
                            majorTrafficEvents: this.majorTrafficEvents.getModifiedObjects()
                        };
                        return this.mapComments && (e.mapComments = this.mapComments.getModifiedObjects()),
                            e
                    }
                }, {
                    key: "removeModifiedDeletedObjects",
                    value: function() {
                        var e = this._getModifiedObjects(),
                            t = !0,
                            i = !1,
                            n = void 0;
                        try {
                            for (var s, a = (0,
                                    r.default)((0,
                                    u.default)(e)); !(t = (s = a.next()).done); t = !0)
                                for (var o = s.value, l = this.repos[o], d = e[o], c = 0; c < d[OL.State.DELETE].length; c++) {
                                    var h = d[OL.State.DELETE][c];
                                    l.remove(h)
                                }
                        } catch (e) {
                            i = !0,
                                n = e
                        } finally {
                            try {
                                !t && a.return && a.return()
                            } finally {
                                if (i)
                                    throw n
                            }
                        }
                    }
                }, {
                    key: "hasModifiedObjects",
                    value: function() {
                        return (0,
                            o.default)(this.repos).some(function(e) {
                            return e.hasModifiedObjects()
                        })
                    }
                }, {
                    key: "getChangesExtent",
                    value: function() {
                        var e = new OpenLayers.Bounds;
                        return [this.segments, this.nodes].forEach(function(t) {
                                (0,
                                    o.default)(t.getModifiedObjects()).forEach(function(t) {
                                    t.forEach(function(t) {
                                        e.extend(t.geometry.bounds)
                                    })
                                })
                            }),
                            e
                    }
                }, {
                    key: "hasStates",
                    value: function() {
                        var e = this.states.getObjectArray();
                        return 1 !== e.length || !e[0].isDefault
                    }
                }, {
                    key: "setLastTransactionID",
                    value: function(e) {
                        this.lastTransactionID = e,
                            this.events.triggerEvent("change:lastTransactionID", {
                                id: this.lastTransactionID
                            })
                    }
                }]),
                e
        }();
    (0,
        c.default)(K.prototype, {
        CLASS_NAME: "Waze.DataModel"
    }),
    Y = function() {
            function e(t, i) {
                (0,
                    f.default)(this, e),
                this.precision = 1,
                    this.distanceInMeters = 1,
                    this.currentDistance = null,
                    this.currentLat = null,
                    (0,
                        c.default)(this, i),
                    this.projection = new OpenLayers.Projection("EPSG:4326"),
                    this.inputProjection = t
            }
            return (0,
                    g.default)(e, [{
                    key: "getValue",
                    value: function(e, t) {
                        var i = e.clone();
                        return i.transform(this.inputProjection, this.projection), !t && this.isPointInCacheRange(i) || this.calculateLat(e, i),
                            this.currentDistance
                    }
                }, {
                    key: "isPointInCacheRange",
                    value: function(e) {
                        return null !== this.currentDistance && Math.abs(e.y - this.currentLat) < this.precision
                    }
                }, {
                    key: "calculateLat",
                    value: function(e, t) {
                        this.currentLat = t.y;
                        var i = OpenLayers.Util.destinationVincenty({
                                lon: t.x,
                                lat: t.y
                            }, 90, this.distanceInMeters),
                            n = new OpenLayers.Geometry.Point(i.lon, i.lat);
                        n.transform(this.projection, this.inputProjection),
                            this.currentDistance = Math.abs(n.x - e.x)
                    }
                }]),
                e
        }(),
        (0,
            c.default)(Y.prototype, {
            CLASS_NAME: "Waze.DataModel.DistanceCache"
        }),
        t.default = K,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(126),
        w = n(b),
        E = i(20),
        k = n(E),
        M = i(18),
        S = n(M),
        T = function(e) {
            function t(e, i, n) {
                var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                (0,
                    u.default)(this, t);
                var r = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, s));
                return r._fromVenues = e,
                    r._toVenue = i,
                    r.newAttributes = n,
                    r
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this;
                        this._fromVenues.map(function(e) {
                                return e.getID()
                            }).join(" "),
                            this._toVenue.getID(),
                            this._toVenue.setPendingMerge(!0),
                            this._fromVenues.forEach(function(t) {
                                e.doSubAction(new w.default(t, {
                                    dontSerialize: !0
                                }))
                            }),
                            this.doSubAction(new k.default(this._toVenue, this.newAttributes, {
                                dontSerialize: !0
                            }))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "undoAction", this).call(this),
                            this._triggerMainChanged()
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this._toVenue.setPendingMerge(!0),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "redoAction", this).call(this),
                            this._triggerMainChanged()
                    }
                }, {
                    key: "_triggerMainChanged",
                    value: function() {
                        this.model.getRepository(this._toVenue.type).changed(this._toVenue)
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this._fromVenues.map(function(e) {
                            return e.getUniqueID()
                        });
                        return [].concat((0,
                            r.default)(e), [this._toVenue.getUniqueID()])
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._toVenue].concat((0,
                            r.default)(this._fromVenues))
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._toVenue.name;
                        this._description = e ? I18n.t("save.changes_log.actions.MergeLandmarks.has_name", {
                            count: this._fromVenues.length,
                            mainVenueName: e
                        }) : I18n.t("save.changes_log.actions.MergeLandmarks.default", {
                            count: this._fromVenues.length,
                            placeId: this._toVenue.getID()
                        })
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: this._toVenue.type,
                            action: S.default.TYPE.MERGE,
                            attributes: {
                                mergedFromVenueIds: this._fromVenues.map(function(e) {
                                    return e.getID()
                                }),
                                mainVenue: this.newAttributes
                            }
                        }
                    }
                }]),
                t
        }(y.default);
    t.default = T,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control, {
            DEFAULTS: {
                tolerance: 15,
                node: !0,
                edge: !0,
                vertex: !0
            },
            greedy: !0,
            precedence: ["node", "vertex", "edge"],
            resolution: null,
            geoToleranceCache: null,
            layer: null,
            feature: null,
            snappedFeature: null,
            point: null,
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    this.options = e || {},
                    this.options.layer && this.setLayer(this.options.layer),
                    this.defaults = (0,
                        s.default)({}, this.DEFAULTS, this.options.defaults),
                    this.setTargets(this.options.targets),
                    0 === this.targets.length && this.layer && this.addTargetLayer(this.layer),
                    this.geoToleranceCache = {}
            },
            setLayer: function(e) {
                this.active ? (this.deactivate(),
                    this.layer = e,
                    this.activate()) : this.layer = e
            },
            setTargets: function(e) {
                if (this.targets = [],
                    e && e.length)
                    for (var t = void 0, i = 0, n = e.length; i < n; ++i)
                        t = e[i],
                        t instanceof OpenLayers.Layer.Vector ? this.addTargetLayer(t) : this.addTarget(t)
            },
            addTargetLayer: function(e) {
                this.addTarget({
                    layer: e
                })
            },
            addTarget: function(e) {
                e = (0,
                        s.default)(e, this.defaults, e),
                    e.nodeTolerance = e.nodeTolerance || e.tolerance,
                    e.vertexTolerance = e.vertexTolerance || e.tolerance,
                    e.edgeTolerance = e.edgeTolerance || e.tolerance,
                    this.targets.push(e)
            },
            removeTargetLayer: function(e) {
                for (var t = void 0, i = this.targets.length - 1; i >= 0; --i)
                    t = this.targets[i],
                    t.layer === e && this.removeTarget(t)
            },
            removeTarget: function(e) {
                return OpenLayers.Util.removeItem(this.targets, e)
            },
            activate: function() {
                var e = OpenLayers.Control.prototype.activate.call(this);
                return e && this.layer && this.layer.events && this.layer.events.on({
                        sketchstarted: this.onSketchModified,
                        sketchmodified: this.onSketchModified,
                        vertexmodified: this.onVertexModified,
                        scope: this
                    }),
                    e
            },
            deactivate: function() {
                var e = OpenLayers.Control.prototype.deactivate.call(this);
                return e && this.layer && this.layer.events && this.layer.events.un({
                        sketchstarted: this.onSketchModified,
                        sketchmodified: this.onSketchModified,
                        vertexmodified: this.onVertexModified,
                        scope: this
                    }),
                    this.feature = null,
                    this.snappedFeature = null,
                    this.point = null,
                    e
            },
            onSketchModified: function(e) {
                this.feature = e.feature,
                    this.considerSnapping(e.vertex, e.vertex)
            },
            onVertexModified: function(e) {
                this.feature = e.feature;
                var t = this.layer.map.getLonLatFromViewPortPx(e.pixel);
                this.considerSnapping(e.vertex, new OpenLayers.Geometry.Point(t.lon, t.lat))
            },
            considerSnapping: function(e, t) {
                for (var i = {
                        rank: Number.POSITIVE_INFINITY,
                        dist: Number.POSITIVE_INFINITY,
                        x: null,
                        y: null
                    }, n = !1, s = void 0, r = void 0, a = 0, o = this.targets.length; a < o; ++a)
                    if (r = this.targets[a],
                        s = this.testTarget(r, t)) {
                        if (this.greedy) {
                            i = s,
                                i.target = r,
                                n = !0;
                            break
                        }
                        (s.rank < i.rank || s.rank === i.rank && s.dist < i.dist) && (i = s,
                            i.target = r,
                            n = !0)
                    }
                if (n) {
                    !1 !== this.events.triggerEvent("beforesnap", {
                        point: e,
                        x: i.x,
                        y: i.y,
                        distance: i.dist,
                        layer: i.target.layer,
                        snapType: this.precedence[i.rank]
                    }) ? (this.snappedFeature = {
                            feature: i.feature,
                            distance: i.dist,
                            type: this.precedence[i.rank],
                            point: new OpenLayers.Geometry.Point(i.x, i.y)
                        },
                        e.x = i.x,
                        e.y = i.y,
                        this.point = e,
                        this.events.triggerEvent("snap", {
                            point: e,
                            feature: i.feature,
                            snapType: this.precedence[i.rank],
                            layer: i.target.layer,
                            distance: i.dist
                        })) : n = !1
                }
                this.point && !n && (e.x = t.x,
                    e.y = t.y,
                    this.point = null,
                    this.snappedFeature = null,
                    this.events.triggerEvent("unsnap", {
                        point: e
                    }))
            },
            testTarget: function(e, t) {
                for (var i = {
                        node: this.getGeoTolerance(e.nodeTolerance),
                        vertex: this.getGeoTolerance(e.vertexTolerance),
                        edge: this.getGeoTolerance(e.edgeTolerance)
                    }, n = Math.max(i.node, i.vertex, i.edge), s = {
                        rank: Number.POSITIVE_INFINITY,
                        dist: Number.POSITIVE_INFINITY
                    }, r = !1, a = e.layer.features, o = void 0, l = void 0, u = void 0, d = void 0, c = void 0, h = void 0, f = void 0, p = this.precedence.length, g = new OpenLayers.LonLat(t.x, t.y), m = 0, v = a.length; m < v; ++m)
                    if ((o = a[m]) !== this.feature && !o._sketch && o.state !== OpenLayers.State.DELETE && o.model && !o.model.isDeleted() && (!e.filter || e.filter.evaluate(o)) && o.atPoint(g, n, n))
                        for (var _ = 0, y = Math.min(s.rank + 1, p); _ < y; ++_)
                            if (l = this.precedence[_],
                                e[l])
                                if ("edge" === l) {
                                    if (c = o.geometry.distanceTo(t, {
                                            details: !0
                                        }),
                                        (h = c.distance) <= i[l] && h < s.dist) {
                                        s = {
                                                feature: o,
                                                rank: _,
                                                dist: h,
                                                x: c.x0,
                                                y: c.y0
                                            },
                                            r = !0;
                                        break
                                    }
                                } else {
                                    u = o.geometry.getVertices("node" === l),
                                        f = !1;
                                    for (var b = 0, w = u.length; b < w; ++b)
                                        d = u[b],
                                        (h = d.distanceTo(t)) <= i[l] && (_ < s.rank || _ === s.rank && h < s.dist) && (s = {
                                                feature: o,
                                                rank: _,
                                                dist: h,
                                                x: d.x,
                                                y: d.y
                                            },
                                            r = !0,
                                            f = !0);
                                    if (f)
                                        break
                                }
                return r ? s : null
            },
            getGeoTolerance: function(e) {
                var t = this.layer.map.getResolution();
                t !== this.resolution && (this.resolution = t,
                    this.geoToleranceCache = {});
                var i = this.geoToleranceCache[e];
                return void 0 === i && (i = e * t,
                        this.geoToleranceCache[e] = i),
                    i
            },
            destroy: function() {
                this.active && this.deactivate(),
                    delete this.layer,
                    delete this.targets,
                    OpenLayers.Control.prototype.destroy.call(this)
            },
            CLASS_NAME: "Waze.Control.Snapping"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(792),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OL.Feature.Vector, {
            initialize: function(e, t, i) {
                OL.Feature.Vector.prototype.initialize.apply(this, [new s.default(e), t, i])
            },
            getID: function() {
                return this.id
            },
            clone: function() {
                return new r(this.geometry ? this.geometry.clone() : null, this.attributes, this.style)
            },
            CLASS_NAME: "Waze.Feature.AggregatePointVector"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(254),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {
            virtualVertices: {
                strokeWidth: 2,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 4,
                fillColor: "#ffffff",
                fillOpacity: .6
            },
            permalinkMarker: new OL.StyleMap({
                default: new OL.Style({
                    externalGraphic: s.default,
                    graphicYOffset: -53,
                    graphicWidth: 37,
                    graphicHeight: 53
                })
            })
        };
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/location-pin9ec58e180e175fd30652e4c15b957a95.png"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(45),
        r = n(s),
        a = i(111),
        o = n(a),
        l = i(13),
        u = n(l),
        d = i(70),
        c = n(d),
        h = i(6),
        f = n(h),
        p = i(0),
        g = n(p),
        m = i(1),
        v = n(m),
        y = void 0,
        b = function() {
            function e(t) {
                var i = this;
                (0,
                    g.default)(this, e),
                this._futureShortcutsByAction = {},
                    this.$element = null,
                    this.shortcutToAction = {},
                    this.Actions = {},
                    this.$element = t || $(window),
                    this.events = new OpenLayers.Events(this),
                    this.registerActions(),
                    W.app.on("change:loggedIn", function() {
                        i._enableShortcutsByRank(W.app.get("user"))
                    })
            }
            return (0,
                    v.default)(e, [{
                    key: "_enableShortcutsByRank",
                    value: function(e) {
                        var t = null != e;
                        if (W.Config.big_junctions.enable)
                            return this.setActionEnabled("drawBigJunction", t && W.loginManager.canEditBigJunctions())
                    }
                }, {
                    key: "activate",
                    value: function() {
                        return this.$element.bind("keydown.shortcuts", this.onKeyDown.bind(this))
                    }
                }, {
                    key: "addAction",
                    value: function(e, t) {
                        return t = t || {},
                            t = (0,
                                f.default)({}, {
                                changeable: !0,
                                group: "default"
                            }, t),
                            t.name = e,
                            this.Groups[t.group].members.push(t),
                            t.id = e,
                            t.enabled = !0,
                            this.Actions[e] = t,
                            this.events.addEventType(e)
                    }
                }, {
                    key: "setActionEnabled",
                    value: function(e, t) {
                        this.Actions[e].enabled = t
                    }
                }, {
                    key: "registerShortcut",
                    value: function(e, t, i) {
                        null != this._futureShortcutsByAction[t] && (e = this._futureShortcutsByAction[t],
                            i = !0,
                            delete this._futureShortcutsByAction[t]);
                        var n = void 0;
                        if (n = i ? y.prototype.fromString(e) : y.prototype.fromEmacsNotation(e),
                            t = this.Actions[t]) {
                            var s = this.shortcutToAction[n];
                            s && (delete this.shortcutToAction[s.shortcut],
                                    delete s.shortcut),
                                t.shortcut && delete this.shortcutToAction[t.shortcut],
                                this.shortcutToAction[n] = t,
                                t.shortcut = n
                        }
                    }
                }, {
                    key: "_registerShortcuts",
                    value: function(e) {
                        var t = this;
                        return (0,
                            c.default)(e).forEach(function(e) {
                            var i = (0,
                                    u.default)(e, 2),
                                n = i[0],
                                s = i[1];
                            return t.registerShortcut(n, s)
                        })
                    }
                }, {
                    key: "registerDefaultShortcuts",
                    value: function() {
                        this._registerShortcuts({
                                "S+191": "showShortcutsDialog",
                                "C+z": "undo",
                                "CS+z": "redo",
                                "C+s": "save",
                                "AS+r": "reloadData",
                                i: "drawSegment",
                                o: "drawRoundabout",
                                j: "drawBigJunction",
                                l: "displayLayerSwitcher",
                                s: "spreadArrows",
                                a: "hideArrows",
                                "S+d": "colorEmptyStreets",
                                "S+w": "closeStreetView",
                                q: "disallowAllConnections",
                                w: "allowAllConnections",
                                m: "toggleMultipleSelection",
                                r: "toggleSegmentDirection",
                                e: "editSegmentAddress",
                                h: "editHouseNumbers",
                                c: "editClosures",
                                t: "editRestrictions",
                                "C+a": "selectEntireStreet",
                                "C+38": "increaseSegmentLevel",
                                "C+40": "decreaseSegmentLevel",
                                38: "panUp",
                                39: "panRight",
                                40: "panDown",
                                37: "panLeft",
                                "S+38": "zoomIn",
                                "S+40": "zoomOut",
                                f: "search",
                                221: "nextFeedItem",
                                219: "prevFeedItem",
                                "S+i": "toggleSatelliteImagery",
                                "S+g": "toggleGPSpoints",
                                "S+r": "toggleRoads",
                                "S+m": "toggleMapcomments",
                                "S+a": "toggleAreaManagers",
                                "S+b": "toggleJunctionboxes",
                                "S+s": "toggleSpeedcameras",
                                "S+p": "toggleMapProblems",
                                "S+u": "toggleUpdateRequests",
                                "S+e": "toggleEditableAreas",
                                "S+c": "toggleRoadClosures",
                                "S+v": "toggleLiveUsers",
                                "S+l": "togglePlaces",
                                "S+z": "toggleShowAllArrows"
                            }),
                            W.Config.chat.enable && this.registerShortcut("A+c", "toggleChat")
                    }
                }, {
                    key: "onKeyDown",
                    value: function(e) {
                        var t = $(e.target);
                        if (!t.is(":input") || t.is("input[type=radio],input[type=checkbox]")) {
                            var i = new y(e),
                                n = this.shortcutToAction[i];
                            return n && !0 === n.enabled ? (this.events.triggerEvent(n.id, {
                                action: n
                            }), !1) : void 0
                        }
                    }
                }, {
                    key: "registerActions",
                    value: function() {
                        this.addAction("undo"),
                            this.addAction("redo"),
                            this.addAction("save"),
                            this.addAction("delete", {
                                changeable: !1
                            }),
                            this.addAction("search"),
                            this.addAction("reloadData"),
                            this.addAction("drawSegment", {
                                group: "drawing"
                            }),
                            this.addAction("drawRoundabout", {
                                group: "drawing"
                            }),
                            W.Config.big_junctions.enable && this.addAction("drawBigJunction", {
                                group: "drawing",
                                enabled: !1
                            }),
                            this.addAction("displayLayerSwitcher", {
                                group: "layers"
                            }),
                            this.addAction("spreadArrows", {
                                group: "layers"
                            }),
                            this.addAction("hideArrows", {
                                group: "layers"
                            }),
                            this.addAction("colorEmptyStreets", {
                                group: "layers"
                            }),
                            this.addAction("closeStreetView", {
                                group: "layers"
                            }),
                            W.Config.chat.enable && this.addAction("toggleChat", {
                                group: "layers"
                            }),
                            this.addAction("toggleMultipleSelection", {
                                group: "editing"
                            }),
                            this.addAction("allowAllConnections", {
                                group: "editing"
                            }),
                            this.addAction("disallowAllConnections", {
                                group: "editing"
                            }),
                            this.addAction("toggleSegmentDirection", {
                                group: "editing"
                            }),
                            this.addAction("editSegmentAddress", {
                                group: "editing"
                            }),
                            this.addAction("editHouseNumbers", {
                                group: "editing"
                            }),
                            this.addAction("editClosures", {
                                group: "editing"
                            }),
                            this.addAction("editRestrictions", {
                                group: "editing"
                            }),
                            this.addAction("selectEntireStreet", {
                                group: "editing"
                            }),
                            this.addAction("increaseSegmentLevel", {
                                group: "editing"
                            }),
                            this.addAction("decreaseSegmentLevel", {
                                group: "editing"
                            }),
                            this.addAction("showShortcutsDialog", {
                                changeable: !1
                            }),
                            this.addAction("panUp", {
                                group: "navigation"
                            }),
                            this.addAction("panDown", {
                                group: "navigation"
                            }),
                            this.addAction("panLeft", {
                                group: "navigation"
                            }),
                            this.addAction("panRight", {
                                group: "navigation"
                            }),
                            this.addAction("zoomIn", {
                                group: "navigation"
                            }),
                            this.addAction("zoomOut", {
                                group: "navigation"
                            }),
                            this.addAction("nextFeedItem"),
                            this.addAction("prevFeedItem"),
                            this.addAction("toggleSatelliteImagery", {
                                group: "layers",
                                toggler: "ITEM_SATELLITE_IMAGERY"
                            }),
                            this.addAction("toggleGPSpoints", {
                                group: "layers",
                                toggler: "ITEM_GPS_POINTS"
                            }),
                            this.addAction("toggleRoads", {
                                group: "layers",
                                toggler: "ITEM_ROAD"
                            }),
                            this.addAction("toggleMapcomments", {
                                group: "layers",
                                toggler: "ITEM_MAP_COMMENTS"
                            }),
                            this.addAction("toggleAreaManagers", {
                                group: "layers",
                                toggler: "ITEM_AREA_MANAGERS"
                            }),
                            this.addAction("toggleJunctionboxes", {
                                group: "layers",
                                toggler: "ITEM_JUNCTION_BOXES"
                            }),
                            this.addAction("toggleSpeedcameras", {
                                group: "layers",
                                toggler: "ITEM_SPEED_CAMERAS"
                            }),
                            this.addAction("toggleMapProblems", {
                                group: "layers",
                                toggler: "ITEM_MAP_PROBLEMS"
                            }),
                            this.addAction("toggleUpdateRequests", {
                                group: "layers",
                                toggler: "ITEM_UPDATE_REQUESTS"
                            }),
                            this.addAction("toggleEditableAreas", {
                                group: "layers",
                                toggler: "ITEM_EDITABLE_AREAS"
                            }),
                            this.addAction("toggleRoadClosures", {
                                group: "layers",
                                toggler: "ITEM_CLOSURES"
                            }),
                            this.addAction("toggleLiveUsers", {
                                group: "layers",
                                toggler: "ITEM_LIVE_USERS"
                            }),
                            this.addAction("toggleShowAllArrows", {
                                group: "layers",
                                toggler: "ITEM_DISALLOWED_TURNS"
                            }),
                            this.addAction("togglePlaces", {
                                group: "layers",
                                toggler: "GROUP_PLACES"
                            })
                    }
                }, {
                    key: "persist",
                    value: function() {
                        return window.localStorage.setItem(this.LocalStorageKey, (0,
                            o.default)(this.serialize()))
                    }
                }, {
                    key: "restore",
                    value: function() {
                        var e = this,
                            t = window.localStorage.getItem(this.LocalStorageKey);
                        if (!t)
                            return !1;
                        try {
                            t = JSON.parse(t)
                        } catch (e) {
                            return !1
                        }
                        return (0,
                            c.default)(t).forEach(function(t) {
                            var i = (0,
                                    u.default)(t, 2),
                                n = i[0],
                                s = i[1];
                            null != e.Actions[n] ? e.registerShortcut(s, n, !0) : e._futureShortcutsByAction[n] = s
                        }), !0
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return (0,
                                r.default)(this.Actions).forEach(function(t) {
                                var i = t.shortcut || y.getEmpty();
                                e[t.id] = i.toString()
                            }),
                            e
                    }
                }]),
                e
        }();
    (0,
        f.default)(b.prototype, {
        LocalStorageKey: "keyboardShortcuts",
        SpecialKeys: {
            32: "Space",
            38: "↑",
            39: "→",
            40: "↓",
            37: "←",
            9: "Tab",
            46: "Del",
            187: "=",
            189: "-"
        },
        Modifiers: {
            C: 1,
            S: 2,
            A: 4
        },
        BitToModifier: null,
        ModifierToBrowserEvent: null,
        BrowserEventToModifier: {
            altKey: "A",
            metaKey: "C",
            ctrlKey: "C",
            shiftKey: "S"
        },
        Groups: {
            default: {
                members: []
            },
            navigation: {
                members: []
            },
            editing: {
                members: []
            },
            drawing: {
                members: []
            },
            layers: {
                members: []
            }
        },
        Actions: null,
        CLASS_NAME: "Waze.Control.KeyboardShortcuts"
    }),
    y = function() {
            function e(t) {
                (0,
                    g.default)(this, e),
                this.ctrlKey = !1,
                    this.metaKey = !1,
                    this.altKey = !1,
                    this.shiftKey = !1,
                    this.keyCode = null,
                    t && (this.ctrlKey = t.ctrlKey,
                        this.altKey = t.altKey,
                        this.shiftKey = t.shiftKey,
                        this.metaKey = t.metaKey,
                        this.keyCode = t.which)
            }
            return (0,
                    v.default)(e, [{
                    key: "toString",
                    value: function() {
                        var e = this,
                            t = 0;
                        return (0,
                                c.default)(b.prototype.BrowserEventToModifier).forEach(function(i) {
                                var n = (0,
                                        u.default)(i, 2),
                                    s = n[0],
                                    r = n[1];
                                e[s] && (t |= b.prototype.Modifiers[r])
                            }),
                            t + "," + this.keyCode
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return -1 === this.keyCode || "-1" === this.keyCode
                    }
                }, {
                    key: "fromString",
                    value: function(e) {
                        var t = e.split(","),
                            i = t[0],
                            n = _.last(t),
                            s = new y;
                        return (0,
                                c.default)(b.prototype.BrowserEventToModifier).forEach(function(e) {
                                var t = (0,
                                        u.default)(e, 2),
                                    n = t[0],
                                    r = t[1];
                                b.prototype.Modifiers[r] & i && (s[n] = !0)
                            }),
                            s.keyCode = n,
                            s
                    }
                }, {
                    key: "fromEmacsNotation",
                    value: function(e) {
                        var t = e.split("+"),
                            i = t[0],
                            n = _.last(t),
                            s = new y;
                        return 1 === t.length && (i = ""),
                            1 === n.length && (n = n.toUpperCase().charCodeAt()),
                            s.keyCode = n,
                            i.split("").forEach(function(e) {
                                var t = b.prototype.ModifierToBrowserEvent[e];
                                s[t] = !0
                            }),
                            s
                    }
                }]),
                e
        }(),
        y.getEmpty = function() {
            var e = new y;
            return e.keyCode = -1,
                e
        },
        b.prototype.BitToModifier = {},
        (0,
            c.default)(b.prototype.Modifiers).forEach(function(e) {
            var t = (0,
                    u.default)(e, 2),
                i = t[0],
                n = t[1];
            b.prototype.BitToModifier[n] = i
        }),
        b.prototype.ModifierToBrowserEvent = {},
        (0,
            c.default)(b.prototype.BrowserEventToModifier).forEach(function(e) {
            var t = (0,
                    u.default)(e, 2),
                i = t[0],
                n = t[1];
            b.prototype.ModifierToBrowserEvent[n] = i
        }),
        b.KeyStroke = y,
        t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = new OpenLayers.Style({
            strokeOpacity: 1,
            strokeDashstyle: "dash",
            strokeColor: "#ff8383",
            strokeWidth: 2
        }),
        s = {
            strokeWidth: 6,
            strokeOpacity: 1
        },
        r = new OpenLayers.Rule({
            getContext: function(e) {
                return e
            },
            filter: new OpenLayers.Filter({
                evaluate: function(e) {
                    return e.model && e.layer.colorEmptyStreetSegments && e.model.getAddress().isEmptyStreet()
                }
            }),
            symbolizer: {
                strokeWidth: 9,
                strokeOpacity: .55,
                strokeColor: "red",
                strokeLinecap: "butt"
            }
        }),
        a = function(e) {
            var t = W.defaultRule({
                Line: s
            });
            return new OL.Style(null, {
                rules: [t].concat(e)
            })
        };
    t.default = new OpenLayers.StyleMap({
            default: a([W.rule("isUnchanged", !0, {
                strokeOpacity: 0
            }), r, W.rule("isUnchanged", !1, {
                strokeColor: "#ff8383"
            })]),
            highlight: a([W.defaultRule({
                strokeColor: "#00ece3"
            }), W.rule("isUnchanged", !1, {
                strokeColor: "#eb7171"
            })]),
            select: a(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            highlightselected: a(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            delete: n,
            highlightdeleted: n,
            drag: a(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            flash: a(W.defaultRule({
                strokeColor: "#000010",
                strokeOpacity: .8
            }))
        }),
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-standard36b7901c37f65cd4308d73998cb62a94.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                fillOpacity: .3,
                strokeOpacity: .7,
                strokeWidth: 2,
                strokeColor: "#333",
                label: "${getLabel}",
                fontColor: "#333",
                labelOutlineColor: "white",
                labelOutlineWidth: 2,
                fontSize: 14,
                fontWeight: "bold",
                fillColor: "${getFillColor}"
            }, {
                context: {
                    getLabel: function(e) {
                        return e.model.getUserName()
                    },
                    getFillColor: function(e) {
                        return "#" + (e.model.userID % 16777216).toString(16)
                    }
                }
            }),
            highlight: new OpenLayers.Style({
                strokeOpacity: 1,
                strokeWidth: 3,
                fontSize: 18
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(26),
        r = n(s),
        a = i(162),
        o = n(a),
        l = {
            open: "open",
            solved: "solved",
            rejected: "rejected"
        },
        u = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new r.default("map-problem"),
                    i = this.model.getLocation(),
                    n = new OL.LonLat(i.x, i.y);
                OL.Marker.prototype.initialize.call(this, n, t),
                    this.render(),
                    this.icon.$div.data("model", this.model)
            },
            render: function() {
                var e = this.icon.$div;
                e.attr("data-id", this.model.getID());
                var t = e.hasClass("selected");
                return e.removeClass(),
                    e.addClass("map-problem"),
                    e.toggleClass("selected", t),
                    e.toggleClass("uneditable", !this.model.editable),
                    e.toggleClass("recently-closed", this.model.isRecentlyClosed()),
                    e.addClass(this.model.attributes.severity),
                    e.addClass(this._getState())
            },
            _getState: function() {
                return this.model.attributes.open ? l.open : this.model.attributes.resolution === o.default.FIXED ? l.solved : l.rejected
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t) {
                return (0,
                        r.default)(this, e),
                    this.copied = null,
                    this.clipboardActive = !1,
                    this.$clipboardEl = null,
                    this.$clipboardContainer = null,
                    this.$el = t,
                    this.events = new OL.Events(this),
                    this
            }
            return (0,
                    o.default)(e, [{
                    key: "setEl",
                    value: function(e) {
                        return this.$el = e,
                            this.$el.on({
                                mouseover: this._onMouseOver.bind(this),
                                mouseout: this._onMouseOut.bind(this),
                                scope: this
                            })
                    }
                }, {
                    key: "_onMouseOver",
                    value: function() {
                        return $(document).on({
                            keydown: this._onKeyDown.bind(this),
                            keyup: this._onKeyUp.bind(this)
                        })
                    }
                }, {
                    key: "_onMouseOut",
                    value: function() {
                        return $(document).off({
                                keydown: this._onKeyDown.bind(this),
                                keyup: this._onKeyUp.bind(this)
                            }),
                            this._detachClipboard()
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        var t = this;
                        if (this.copied = !1,
                            this.value && (e.ctrlKey || e.metaKey) && (67 === e.keyCode && (this.copied = !0), !$(e.target).is("input:visible,textarea:visible")))
                            return _.defer(function() {
                                null == t.$clipboardContainer && (t.$clipboardContainer = $("<div class='clipboard-container'></div>")),
                                    t.$clipboardContainer.appendTo($(document.body)),
                                    t.$clipboardContainer.empty().show(),
                                    t.$clipboardEl = $("<textarea />").val(t.value).appendTo(t.$clipboardContainer).focus().select(),
                                    t.clipboardActive = !0
                            })
                    }
                }, {
                    key: "_onKeyUp",
                    value: function(e) {
                        $(e.target).is(this.$clipboardEl) && (this.copied && this.events.triggerEvent("copied", this.$clipboardEl.val()),
                                this._detachClipboard()),
                            this.copied = !1
                    }
                }, {
                    key: "_detachClipboard",
                    value: function() {
                        this.clipboardActive && (this.$clipboardContainer.empty().detach(),
                            this.clipboardActive = !1)
                    }
                }, {
                    key: "set",
                    value: function(e) {
                        this.value = e
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(874),
        r = n(s),
        a = i(878),
        o = n(a),
        l = i(264),
        u = n(l),
        d = i(16),
        c = n(d),
        h = Marionette.View.extend({
            APPROVE_ACTION_NAMES: {
                default: I18n.t("venues.update_requests.panel.action.approve"),
                ADD_VENUE: I18n.t("venues.update_requests.panel.action.add_to_map")
            },
            HIDE_PLACE_DETAILS: {
                ADD_VENUE: !0
            },
            template: "templates/place_updates/item",
            events: {
                "change [name=approved]": "_onApproveChanged",
                "click .image-preview": "_onImagePreviewClicked",
                "click .focus": "_onFocusClicked",
                "click .street-view-btn": "_onStreetViewClicked"
            },
            bindings: {
                ".street-view-btn": {
                    observe: "streetViewAvailable",
                    visible: !0
                },
                ".street-view-tooltip": {
                    observe: "streetViewAvailable",
                    visible: !0,
                    onGet: _.negate(Boolean)
                }
            },
            ui: {
                approvedDropdown: "[name=approved]",
                header: ".header",
                scrollable: ".scrollable",
                actions: ".actions",
                tooltips: ".tooltip"
            },
            fieldChangeView: null,
            imageDialogView: null,
            bodyScrollPosition: null,
            rendered: !1,
            maxHeight: null,
            initialize: function() {
                this.streetViewController = this.options.streetViewController,
                    this.viewModel = new Backbone.Model({
                        streetViewAvailable: !1
                    }),
                    this.listenTo(this.model, "change:approved", this._onModelChanged),
                    this._checkStreetViewAvailability()
            },
            _checkStreetViewAvailability: function() {
                var e = this;
                this.streetViewController && this.streetViewController.hasPlacePanaorama(this.options.venue).then(function(t) {
                    e.viewModel.set({
                        streetViewAvailable: t
                    })
                })
            },
            serializeData: function() {
                return {
                    model: this.model,
                    venue: this.options.venue,
                    hidePlaceDetails: Boolean(this.HIDE_PLACE_DETAILS[this.model.get("updateType")]),
                    showDebug: this.options.showDebug
                }
            },
            _onModelChanged: function() {
                return this.render()
            },
            _onApproveChanged: function() {
                var e = this.ui.approvedDropdown.filter(":checked").booleanVal(),
                    t = new o.default(this.options.venue, this.model, e);
                this.options.venue.model.actionManager.add(t);
                var i = "" + this.model.get("updateType"),
                    n = null != e ? e ? 1 : -1 : null;
                null != n && W.Report.placeUpdateRequestAction("update_state", i, n)
            },
            _onImagePreviewClicked: function(e) {
                var t = $(e.target).data("image-id"),
                    i = new u.default({
                        venue: this.options.venue,
                        imageId: t
                    });
                return W.app.layout.getRegion("dialogRegion").show(i),
                    e.preventDefault()
            },
            _onFocusClicked: function() {
                this.trigger("focusClicked")
            },
            _onStreetViewClicked: function() {
                this.trigger("streetViewClicked")
            },
            onRender: function() {
                this.rendered = !0,
                    "UPDATE_VENUE" === this.model.get("updateType") && (this.fieldChangeView && this.fieldChangeView.destroy(),
                        this.fieldChangeView = new r.default({
                            collection: new Backbone.Collection(this.model.get("changedFields"), {
                                sort: !1
                            }),
                            el: this.$(".changed-fields")
                        }),
                        this.fieldChangeView.render()),
                    this._setBodyHeight(),
                    this.ui.scrollable.scrollTop(this.bodyScrollPosition),
                    this.stickit(this.viewModel),
                    this.ui.tooltips.tooltip()
            },
            onDestroy: function() {
                if (this.fieldChangeView)
                    return this.fieldChangeView.destroy()
            },
            render: function() {
                return this.rendered && (this.bodyScrollPosition = this.ui.scrollable.scrollTop()),
                    Marionette.View.prototype.render.apply(this, arguments)
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setBodyHeight()
            },
            _setBodyHeight: function() {
                var e = this.ui.header.outerHeight(),
                    t = this.ui.actions.outerHeight();
                return this.ui.scrollable.css({
                    maxHeight: this.maxHeight - e - t
                })
            },
            templateContext: {
                getTitle: function() {
                    var e = this.model.get("updateType");
                    return I18n.t("venues.update_requests.panel.title." + e)
                },
                getApproveActionName: function() {
                    var e = this.model.get("updateType"),
                        t = h.prototype.APPROVE_ACTION_NAMES;
                    return t[e] || t.default
                },
                getChangesTemplate: function() {
                    return "templates/place_updates/" + this.model.get("updateType").toLowerCase()
                },
                getApproveActionIntent: function() {
                    return "default"
                },
                getRejectActionName: function() {
                    return I18n.t("venues.update_requests.panel.action.reject")
                },
                getRejectedLabel: function() {
                    return I18n.t("venues.update_requests.panel.rejected")
                },
                getApprovedLabel: function() {
                    return I18n.t("venues.update_requests.panel.approved")
                },
                getNoPermissionsMessage: function() {
                    if (this.model.get("isInEditArea")) {
                        var e = this.model.getRequiredEditRank(),
                            t = c.default.formatRank(e);
                        return I18n.t("venues.update_requests.panel.uneditable", {
                            level: t
                        })
                    }
                    return I18n.t("venues.update_requests.panel.out_of_edit_area")
                },
                getNewPlaceImages: function() {
                    return this.model.get("place").getImagesByUserId(this.model.get("createdBy"))
                },
                shouldShowCarousel: function() {
                    return this.getNewPlaceImages().length > 1
                },
                shouldShowName: function() {
                    return !this.model.get("place").attributes.residential
                },
                getCarouselUniqueId: function() {
                    return "place-update-carousel-" + this.model.get("id").replace(/[^\d\w]/g, "")
                },
                isOpened: function() {
                    return null === this.model.get("approved")
                },
                isApproved: function() {
                    return !0 === this.model.get("approved")
                },
                isRejected: function() {
                    return !1 === this.model.get("approved")
                }
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(16),
        r = n(s),
        a = i(875),
        o = n(a),
        l = i(263),
        u = n(l),
        d = Marionette.View.extend({
            tagName: "li",
            template: "templates/place_updates/changed_field",
            events: {
                "mouseover .location-button.current": "_onCurrentOver",
                "mouseover .location-button.suggested": "_onSuggestedOver",
                "mouseout .location-button.current": "_onLocationOut",
                "mouseout .location-button.suggested": "_onLocationOut"
            },
            behaviors: {
                ToolTip: {
                    behaviorClass: u.default,
                    layerClassName: "suggested-geometry-layer"
                }
            },
            regions: {
                externalProvidersRegion: ".external-providers-view"
            },
            onRender: function() {
                this.model.isExternalProvider() && this._showExternalProvidersView()
            },
            _showExternalProvidersView: function() {
                var e = new o.default({
                    venue: this.model.attributes.suggestedVenue
                });
                this.showChildView("externalProvidersRegion", e)
            },
            _onCurrentOver: function() {
                var e = this._getValue(this.model.get("venue")).getBounds().getCenterLonLat();
                this.triggerMethod("show:tooltip", e, I18n.t("venues.update_requests.panel.change.current_location"), "")
            },
            _onSuggestedOver: function() {
                var e = this._getValue(this.model.get("suggestedVenue")),
                    t = new OL.Feature.Vector(e),
                    i = e.getBounds().getCenterLonLat();
                this.triggerMethod("show:tooltip", i, I18n.t("venues.update_requests.panel.change.suggested_location"), "suggested", t)
            },
            _onLocationOut: function() {
                this.triggerMethod("hide:tooltip")
            },
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : e.attributes[t]
            },
            serializeData: function() {
                var e = this._getValue(this.model.get("venue")),
                    t = this._getValue(this.model.get("suggestedVenue")),
                    i = _.isArray(e) || _.isArray(t);
                return {
                    showChangeList: i,
                    changeList: i ? this.getChangeList() : null,
                    currentValue: e,
                    suggestedValue: t,
                    fieldName: this.model.get("fieldName"),
                    removing: !t,
                    isGeometry: this.model.isGeometry(),
                    isExternalProvider: this.model.isExternalProvider(),
                    model: this.model
                }
            },
            templateContext: {
                getRemovedImages: function() {
                    var e = this.model.get("venue"),
                        t = _(e.attributes.images),
                        i = _(this.model.get("suggestedVenue").attributes.images);
                    return _.difference(t.pluck("id"), i.pluck("id")).map(function(e) {
                        return t.find(function(t) {
                            return t.get("id") === e
                        })
                    })
                }
            },
            valueGetters: {
                streetID: function(e) {
                    return r.default.formatAddress(e.getAddress())
                },
                entryExitPoints: function(e) {
                    var t = e.getNavigationPoints()[0];
                    return null != t ? t.getPoint() : e.attributes.geometry.getCentroid()
                },
                openingHours: function(e) {
                    return e.getOpeningHours().map(r.default.formatOpeningHour).join(", ")
                },
                services: function(e) {
                    return e.attributes.services.map(function(e) {
                        return I18n.t("venues.services." + e)
                    })
                },
                categories: function(e) {
                    return e.attributes.categories.map(function(e) {
                        return I18n.t("venues.categories." + e)
                    })
                },
                externalProviderIDs: function(e) {
                    return e.attributes.externalProviderIDs.map(function(e) {
                        return e.get("uuid")
                    })
                }
            },
            getChangeList: function() {
                var e = this._getValue(this.model.get("venue")),
                    t = this._getValue(this.model.get("suggestedVenue"));
                return this.model._getChangeList(e, t)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(176),
        r = n(s),
        a = i(26),
        o = n(a),
        l = Marionette.Behavior.extend({
            defaults: {
                layerClassName: ""
            },
            _markerLayer: null,
            _vectorLayer: null,
            _currentLocationDrawn: !1,
            initialize: function() {
                this._vectorLayer = new OL.Layer.Vector("", {
                        styleMap: r.default
                    }),
                    this._markerLayer = new OL.Layer.Markers(""),
                    W.map.addLayers([this._vectorLayer, this._markerLayer]),
                    $(this._vectorLayer.div).addClass(this.options.layerClassName)
            },
            _createTooltip: function(e, t, i) {
                var n = new OL.Marker(e, new o.default("location-tooltip " + i));
                return n.icon.$div.text(t),
                    this._markerLayer.addMarker(n)
            },
            _createFeature: function(e) {
                this._vectorLayer.addFeatures(e)
            },
            onShowTooltip: function(e, t, i, n) {
                this._currentLocationDrawn || (this._createTooltip(e, t, i),
                    n && this._createFeature(n),
                    this._currentLocationDrawn = !0)
            },
            onHideTooltip: function() {
                this._vectorLayer.removeAllFeatures(),
                    this._markerLayer.clearMarkers(),
                    this._currentLocationDrawn = !1
            },
            _destroyLayers: function() {
                this._vectorLayer && this._vectorLayer.destroy(),
                    this._markerLayer && this._markerLayer.destroy()
            },
            onDestroy: function() {
                this._destroyLayers()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(76),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "templates/place_updates/image_dialog",
            image: null,
            events: function() {
                return {
                    "click .prev-button": "onPrevClicked",
                    "click .next-button": "onNextClicked",
                    "click .delete-button": "onDeleteClicked"
                }
            },
            initialize: function() {
                this.venue = this.options.venue,
                    this.image = this.venue.getImageById(this.options.imageId),
                    this.currentImageIndex = this._getCurrentImageIndex()
            },
            serializeData: function() {
                return {
                    imageUrl: this.image.getUrl(s.default.SIZE.BIG),
                    dateAdded: this.image.get("date"),
                    addingUserId: this.image.get("creatorUserId"),
                    venueName: this.venue.attributes.name,
                    hasNext: this.hasNext(),
                    hasPrev: this.hasPrev()
                }
            },
            _getCurrentImageIndex: function() {
                return this.venue.attributes.images.indexOf(this.image)
            },
            hasNext: function() {
                return this.venue.attributes.images.length - 1 > this.currentImageIndex
            },
            hasPrev: function() {
                return this.currentImageIndex > 0
            },
            onPrevClicked: function() {
                var e = this.venue.attributes.images;
                this.currentImageIndex > 0 && (this.currentImageIndex--,
                    this.image = e[this.currentImageIndex],
                    this.render())
            },
            onNextClicked: function() {
                var e = this.venue.attributes.images,
                    t = e.length;
                this.currentImageIndex < t - 1 && (this.currentImageIndex++,
                    this.image = e[this.currentImageIndex],
                    this.render())
            },
            onDeleteClicked: function() {
                this.trigger("deleteImageClicked", this.image.id);
                var e = this.venue.attributes.images;
                this.currentImageIndex > e.length - 1 && (this.currentImageIndex = e.length - 1),
                    this.image = e[this.currentImageIndex],
                    this.render()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "next",
                    value: function() {
                        return this.trigger("next")
                    }
                }]),
                t
        }(Marionette.Object);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(267),
        u = n(l),
        d = i(898),
        c = n(d),
        h = i(899),
        f = n(h),
        p = i(901),
        g = n(p),
        m = Marionette.Object.extend({
            ignoredErrors: {
                100: !0
            },
            errorCollection: null,
            _editingLock: null,
            initialize: function() {
                this.mediator = this.options.mediator,
                    this._lockEditing(),
                    this.overlayRenderer = new u.default(this.options.map),
                    this.overlayRenderer.drawOverlay()
            },
            onDestroy: function() {
                return this._releaseEditing(),
                    this.overlayRenderer && this.overlayRenderer.destroy(),
                    this.errorListView && this.errorListView.destroy(),
                    this.successView && this.successView.destroy(),
                    W.accelerators.events.unregister("save", this, this._onSaveClicked)
            },
            success: function(e) {
                var t = this;
                return this._releaseEditing(),
                    this.overlayRenderer.destroy(),
                    this.trigger("saveSuccess"),
                    this.trigger("done"),
                    this._showSuccessMessage(e),
                    this.listenTo(this.successView, "destroy", function() {
                        return t.destroy()
                    })
            },
            fail: function(e) {
                var t = this;
                return this.ignoredErrors[e[0].get("code")] ? void this.overlayRenderer.destroy() : (1 === e.length && this._showErrorPoint(e[0]),
                    this._reportErrors(e),
                    e = this._collateErrors(e),
                    this.errorCollection = new c.default(e),
                    this.errorListView = new f.default({
                        collection: this.errorCollection
                    }),
                    this.listenTo(this.errorListView, "click:save", this._onSaveClicked),
                    this.listenTo(this.errorListView, "destroy", function() {
                        return t.trigger("done"),
                            t.destroy()
                    }),
                    this.listenTo(this.errorListView, "click:focus", this._showErrorPoint),
                    W.accelerators.events.register("save", this, this._onSaveClicked),
                    this.options.popoverRegion.show(this.errorListView))
            },
            _reportErrors: function() {
                (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).forEach(function(e) {
                    var t = e.get("code");
                    W.Report.saveError(t)
                })
            },
            _collateErrors: function(e) {
                var t = [],
                    i = _.groupBy(e, function(e) {
                        return e.get("code")
                    }),
                    n = !0,
                    s = !1,
                    a = void 0;
                try {
                    for (var l, u = (0,
                            o.default)((0,
                            r.default)(i)); !(n = (l = u.next()).done); n = !0) {
                        e = i[l.value];
                        var d = e[0];
                        e.length > 1 && d.set({
                                geometry: null,
                                collatedCount: e.length,
                                ignorable: _.every(e, function(e) {
                                    return e.get("ignorable")
                                })
                            }),
                            t.push(d)
                    }
                } catch (e) {
                    s = !0,
                        a = e
                } finally {
                    try {
                        !n && u.return && u.return()
                    } finally {
                        if (s)
                            throw a
                    }
                }
                return t
            },
            _releaseEditing: function() {
                this.mediator.set({
                        navigation: !0,
                        saving: !1
                    }),
                    this.mediator.releaseEditing(this._editingLock),
                    this._editingLock = null
            },
            _lockEditing: function() {
                this.mediator.set({
                        navigation: !1,
                        saving: !0
                    }),
                    this._editingLock = this.mediator.lockEditing()
            },
            _showErrorPoint: function(e) {
                var t = e.get("geometry");
                if (null !== t)
                    return this.overlayRenderer.drawAndFocusSpotlightAtPoint(t)
            },
            _onSaveClicked: function() {
                if (this.errorCollection.isIgnorable())
                    return this.trigger("resave")
            },
            _showSuccessMessage: function(e) {
                return this.successView = new g.default({
                        model: e
                    }),
                    this.options.popoverRegion.show(this.successView)
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(54),
        u = n(l),
        d = i(896),
        c = n(d),
        h = {
            fillColor: "black",
            strokeWidth: 0,
            fillOpacity: .65,
            mask: "url(#spotlightMask)"
        },
        f = {
            maskID: "spotlightMask",
            filter: "url(#spotlightBlur)",
            pointRadius: 70,
            fillColor: "black",
            fillOpacity: 1,
            animation: {
                id: "spotlightAnimation",
                attributeName: "r",
                dur: "0.3s",
                from: 100,
                to: 70,
                fill: "disable",
                begin: "indefinite"
            }
        },
        p = {
            id: "homeSpotlightAnimation",
            attributeName: "r",
            dur: "0.7s",
            from: 400,
            to: 200,
            fill: "freeze",
            begin: "indefinite",
            calcMode: "spline",
            keyTimes: "0;1",
            keySplines: ".4 0 .4 1.3"
        },
        g = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this.layer = null,
                    this.overlay = null,
                    this.disableTimeout = 0,
                    this.removeTimeout = 0,
                    this.fadeDuration = 400,
                    this.spotLightDuration = 3e3,
                    this.homeSpotLightRadius = 450,
                    this.homeAnimationZoom = 4,
                    this.map = t
            }
            return (0,
                    o.default)(e, [{
                    key: "_ensureLayer",
                    value: function() {
                        if (null == this.layer)
                            return this.layer = new OL.Layer.Vector("spotlight", {
                                    renderers: [u.default],
                                    styleMap: c.default
                                }),
                                this.removeTimeout && window.clearTimeout(this.removeTimeout),
                                this.fadeIn(this.fadeDuration),
                                this.map.addLayer(this.layer)
                    }
                }, {
                    key: "drawOverlay",
                    value: function() {
                        this._ensureLayer();
                        var e = this.map.getExtent().scale(2).toGeometry(),
                            t = new OL.Feature.Vector(e, null, h);
                        return this.layer.addFeatures(t)
                    }
                }, {
                    key: "drawAndFocusSpotlightAtPoint",
                    value: function(e, t, i) {
                        this._isSpotlightInBounds(e) || this.map.setCenter(new OL.LonLat(e.x, e.y)),
                            this._destroyLayer(),
                            this._ensureLayer(),
                            this.drawOverlay(),
                            t || (t = f);
                        var n = new OL.Feature.Vector(e.clone(), null, t);
                        this.layer.addFeatures(n);
                        var s = t.animation,
                            r = document.getElementById(s.id);
                        r && r.beginElement(),
                            i && this._disableMapNavigation(i)
                    }
                }, {
                    key: "_disableMapNavigation",
                    value: function(e) {
                        var t = this;
                        this.disableTimeout && window.clearTimeout(this.disableTimeout),
                            W.map.showOverlay(),
                            this.disableTimeout = window.setTimeout(function() {
                                W.map.hideOverlay(),
                                    t.fadeOut(t.fadeDuration),
                                    t.disableTimeout = 0
                            }, e)
                    }
                }, {
                    key: "fadeIn",
                    value: function(e) {
                        $(this.layer.div).fadeIn({
                            duration: e,
                            easing: "swing"
                        })
                    }
                }, {
                    key: "fadeOut",
                    value: function(e) {
                        var t = this;
                        $(this.layer.div).fadeOut({
                                duration: e,
                                easing: "swing"
                            }),
                            this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                                this.removeTimeout = 0),
                            this.removeTimeout = window.setTimeout(function() {
                                t._destroyLayer(),
                                    t.removeTimeout = 0
                            }, e)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e, t) {
                        this.layer.addFeatures(e, t)
                    }
                }, {
                    key: "removeFeatures",
                    value: function(e, t) {
                        this.layer.removeFeatures(e, t)
                    }
                }, {
                    key: "animateHome",
                    value: function(e) {
                        W.map.getPannable().panTo(e, this.homeAnimationZoom);
                        var t = W.map.getResolution(),
                            i = this.homeSpotLightRadius / t,
                            n = 2 * i,
                            s = _.extend({}, p, {
                                from: n,
                                to: i
                            }),
                            r = new OL.Geometry.Point(e.lon, e.lat);
                        this.drawAndFocusSpotlightAtPoint(r, {
                                maskID: "spotlightMask",
                                filter: "url(#spotlightBlur)",
                                pointRadius: i,
                                fillColor: "black",
                                fillOpacity: 1,
                                animation: s
                            }, this.spotLightDuration),
                            this.addHomePin(r)
                    }
                }, {
                    key: "addHomePin",
                    value: function(e) {
                        var t = new OpenLayers.Feature.Vector(e.clone(), {
                            type: "homePin"
                        });
                        return this.addFeatures(t),
                            t
                    }
                }, {
                    key: "_isSpotlightInBounds",
                    value: function(e) {
                        var t = 70 * this.map.getResolution(),
                            i = new OL.Bounds(e.x - t, e.y + t, e.x + t, e.y - t);
                        return this.map.getExtent().containsBounds(i)
                    }
                }, {
                    key: "_destroyLayer",
                    value: function() {
                        null != this.layer && (this.layer.removeAllFeatures(),
                            this.map.removeLayer(this.layer),
                            this.layer.destroy(),
                            this.layer = null)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        return this.disableTimeout && (window.clearTimeout(this.disableTimeout),
                                this.disableTimeout = 0),
                            this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                                this.removeTimeout = 0),
                            this._destroyLayer()
                    }
                }]),
                e
        }();
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(248),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend();
    r.prototype.deafults = _.extend({
            collatedCount: null
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.Region.extend({
        constructor: function() {
            this.el || this._createContainer(),
                Marionette.Region.prototype.constructor.apply(this, arguments)
        },
        initialize: function() {
            var e = this,
                t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.saveButtonSelector = t.saveButtonSelector, !this.saveButtonSelector)
                throw new Error("Popover region initialized without the saveButtonSelector options");
            return this.$container.on("click", ".close-popover", function() {
                return e.empty()
            })
        },
        show: function(e) {
            return e.$el.addClass("save-popover"),
                this.$container.addClass("shrunk"),
                Marionette.Region.prototype.show.apply(this, arguments)
        },
        onShow: function() {
            return this._positionContainer(),
                this.$container.removeClass("shrunk")
        },
        _createContainer: function() {
            this.$container = this.el = $("<div />").attr({
                class: "save-popover-container"
            }).appendTo("body")
        },
        _positionContainer: function() {
            var e = $(this.saveButtonSelector),
                t = e[0].getBoundingClientRect(),
                i = this.$container[0];
            return this.$container.css({
                top: t.top + t.height,
                left: t.left - i.offsetWidth + t.width
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(26),
        c = n(d),
        h = i(32),
        f = n(h),
        p = i(916),
        g = n(p),
        m = i(928),
        v = n(m),
        _ = i(275),
        y = n(_),
        b = i(929),
        w = n(b),
        E = function() {
            function e(t, i, n) {
                var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                    r = s.includeJunctionTurns,
                    a = void 0 !== r && r,
                    l = s.includeUturns,
                    u = void 0 === l || l,
                    d = s.includeOnlyDisallowedTurns,
                    c = void 0 !== d && d;
                (0,
                    o.default)(this, e),
                this._drawingContext = t,
                    this._dataModel = i,
                    this._appPreferences = n,
                    this._includeJunctionTurns = a,
                    this._includeUturns = u,
                    this._includeOnlyDisallowedTurns = c,
                    this._offsetCalculator = new w.default
            }
            return (0,
                    u.default)(e, [{
                    key: "generate",
                    value: function(t) {
                        return this._drawingContext.getMapZoom() < e.MIN_UTURN_DISPLAY_ZOOM ? [] : [].concat((0,
                            r.default)(this._createTurnArrowsForVertex(f.default.forwardOf(t.getID()))), (0,
                            r.default)(this._createTurnArrowsForVertex(f.default.reverseOf(t.getID()))))
                    }
                }, {
                    key: "_createTurnArrowsForVertex",
                    value: function(e) {
                        var t = this,
                            i = this._dataModel.segments.getDirectedSegment(e);
                        if (!i.getNode())
                            return [];
                        var n = [];
                        i.hasBigJunction() ? this._includeJunctionTurns && (n = this._getJunctionTurnArrows(i)) : n = this._getValidTurnsArrows(i),
                            this._includeOnlyDisallowedTurns && (n = n.filter(function(e) {
                                return !e.getTurn().getTurnData().isAllowed()
                            }));
                        var s = n.filter(function(e) {
                            return t._shouldDrawArrow(e)
                        }).map(function(e) {
                            return new g.default({
                                turnArrow: e,
                                isLeftHand: t._dataModel.isLeftHand,
                                drawingContext: t._drawingContext,
                                dataModel: t._dataModel,
                                transparent: t._appPreferences.get("showTransparentTurnArrows")
                            })
                        });
                        return i.hasBigJunction() || this._offsetCalculator.calculate(s, {
                                isLeftHand: this._dataModel.isLeftHand,
                                offsetRegularTurns: this._appPreferences.get("spreadTurnArrows")
                            }),
                            s.length > 0 && this._drawLockedBadge(i),
                            s
                    }
                }, {
                    key: "_getValidTurnsArrows",
                    value: function(e) {
                        var t = this,
                            i = e.getNode(),
                            n = e.getSegment();
                        return this._dataModel.getTurnGraph().getLegalTrivialTurnsFrom(e.getVertex()).map(function(e) {
                            var s = t._dataModel.segments.get(e.getToVertex().getSegmentID());
                            return new v.default(n, s, i, e)
                        })
                    }
                }, {
                    key: "_getJunctionTurnArrows",
                    value: function(e) {
                        var t = this,
                            i = e.getBigJunction();
                        return i.getTurnsFrom(e.getVertex()).map(function(n) {
                            var s = t._dataModel.segments.get(n.getToVertex().getSegmentID()),
                                r = t._dataModel.nodes.get(t._dataModel.getRoadGraph().getVertexNodeID(n.getToVertex().getOpposite()));
                            return new y.default(e.getSegment(), s, r, n, i)
                        })
                    }
                }, {
                    key: "_shouldDrawArrow",
                    value: function(e) {
                        return !e.getTurn().isUturn() || this._shouldDrawUturn(e)
                    }
                }, {
                    key: "_shouldDrawUturn",
                    value: function(t) {
                        if (!this._includeUturns || this._isDeadEndUturn(t))
                            return !1;
                        var i = this._drawingContext.mapUnitsToPixel(t.getFromSegment().geometry.getLength());
                        return this._drawingContext.getMapZoom() >= e.MIN_UTURN_DISPLAY_ZOOM && i >= e.MIN_SEGMENT_LENGTH_FOR_UTURN
                    }
                }, {
                    key: "_isDeadEndUturn",
                    value: function(e) {
                        return 1 === this._dataModel.getRoadGraph().getConnectedVertices(e.getTurn().getFromVertex()).length
                    }
                }, {
                    key: "_drawLockedBadge",
                    value: function(e) {
                        var t = e.getNode();
                        if (!e.areTurnsLocked()) {
                            var i = new OpenLayers.Marker(new OL.LonLat(t.geometry.x, t.geometry.y), new c.default("unlocked-badge"));
                            this._drawingContext.addMarkers([i])
                        }
                    }
                }]),
                e
        }();
    E.MIN_UTURN_DISPLAY_ZOOM = 5,
        E.MIN_ARROW_DISPLAY_ZOOM = 4,
        E.MIN_SEGMENT_LENGTH_FOR_UTURN = 75,
        t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(37),
        v = n(m),
        y = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this));
                return i._turn = e,
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        if (this.model.segments.getDirectedSegment(this._turn.getFromVertex()).areTurnsLocked()) {
                            var e = this._turn,
                                t = this._turn.getTurnData();
                            t = t.withToggledState(!t.isAllowed()),
                                e = e.withTurnData(t);
                            var i = this.model.getTurnGraph(),
                                n = new v.default(i, e);
                            this.doSubAction(n)
                        } else {
                            var s = this.model.segments.get(this._turn.getFromVertex().getSegmentID()),
                                r = this.model.nodes.get(this.model.getRoadGraph().getVertexNodeID(this._turn.getFromVertex()));
                            this.doSubAction(s.lockTurns(r, !0))
                        }
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        var e = _.flatten(this.subActions.map(function(e) {
                            return e.getFocusFeatures()
                        }));
                        return _.uniq(e)
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._turn.getTurnData(),
                            t = e.isAllowed();
                        this._description = t ? I18n.t("save.changes_log.actions.SetTurn.disallow") : I18n.t("save.changes_log.actions.SetTurn.allow")
                    }
                }]),
                t
        }(g.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(49),
        y = i(920),
        b = n(y),
        w = i(921),
        E = n(w),
        k = i(922),
        M = n(k),
        S = i(923),
        T = n(S),
        C = i(924),
        I = n(C),
        A = i(925),
        D = n(A),
        R = i(39),
        O = n(R),
        L = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            description: "",
                            drivingModality: null,
                            helpMessage: ""
                        }
                    }
                }]),
                t
        }(Backbone.Model),
        x = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            validationRegion: ".restriction-validation-region",
                            segmentEditingRegion: ".segment-editing-region",
                            timeframeEditingRegion: ".timeframe-editing-region",
                            driveProfileEditingRegion: ".drive-profile-editing-region"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-cancel": "restriction:edit:cancel"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-create": "_createRestriction",
                            "click .do-update": "_updateRestriction",
                            "change .do-change-driving-modality": "_changeDrivingModality"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            "change:helpMessage": "_updateHelpMessage"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=description]": "description",
                            ".driving-modality-select": {
                                observe: "drivingModality",
                                selectOptions: {
                                    collection: "this._drivingModalityOptions"
                                }
                            },
                            ".drive-profile-editing-region": {
                                classes: {
                                    "drive-profile-toll-free": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE
                                        }
                                    },
                                    "drive-profile-allowed": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === _.RESTRICTION_MODALITY.DRIVING_ALLOWED
                                        }
                                    }
                                }
                            },
                            ".help-message": {
                                observe: ["helpMessage"]
                            },
                            ".help-message-region": {
                                classes: {
                                    hidden: {
                                        observe: "helpMessage",
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }
                                }
                            },
                            "select, textarea, .do-update, .do-create": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restriction: null,
                            isNewRestriction: !0,
                            editingTitle: "",
                            canEditRestrictions: !1,
                            canAddTollRestriction: !1,
                            subscriptions: {}
                        };
                        this._restriction = e.restriction,
                            this._isNewRestriction = e.isNewRestriction,
                            this._editingTitle = e.editingTitle,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._canAddTollRestriction = e.canAddTollRestriction,
                            this._subscriptions = e.subscriptions,
                            this._timeframe = this._restriction.getTimeFrame(),
                            this.model = new L({
                                restrictionEditable: this._isRestrictionEditable(),
                                description: this._restriction.getDescription(),
                                drivingModality: null
                            }),
                            this._drivingModalityOptions = this._getDriveProfileTypeOptions()
                    }
                }, {
                    key: "_updateHelpMessage",
                    value: function() {
                        var e = this.getChildView("driveProfileEditingRegion");
                        this.model.set({
                            helpMessage: e.getHelpMessage(this.model.attributes.drivingModality)
                        })
                    }
                }, {
                    key: "_getDriveProfileTypeOptions",
                    value: function() {
                        var e = this,
                            t = [_.RESTRICTION_MODALITY.DRIVING_ALLOWED];
                        return this._restriction.supportsTollDriveProfileEntries() && t.push(_.RESTRICTION_MODALITY.DRIVING_TOLL_FREE),
                            t.push(_.RESTRICTION_MODALITY.DRIVING_BLOCKED),
                            t.map(function(t) {
                                return {
                                    value: t,
                                    label: I18n.t("restrictions.editing.driving.types." + t),
                                    disabled: t === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE && !e._canAddTollRestriction
                                }
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.$(".waze-tooltip").tooltip();
                        var e = this._isRestrictionEditable();
                        this._isSegmentRestriction() && this.showChildView("segmentEditingRegion", E.default.for(this._restriction, {
                                restrictionEditable: e
                            })),
                            this.showChildView("timeframeEditingRegion", D.default.for(this._timeframe, {
                                restrictionEditable: e
                            })),
                            this._showDriveProfileEdit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            isNewRestriction: this._isNewRestriction,
                            editingTitle: this._editingTitle,
                            showEditDriveProfile: this._restriction.supportsDriveProfiles(),
                            showTollDisabledTooltip: !this._canAddTollRestriction && this._restriction.supportsTollDriveProfileEntries()
                        }
                    }
                }, {
                    key: "_isRestrictionEditable",
                    value: function() {
                        return this._restriction.isEditable() && this._canEditRestrictions
                    }
                }, {
                    key: "_isSegmentRestriction",
                    value: function() {
                        return this._restriction instanceof O.default
                    }
                }, {
                    key: "_getDrivingModality",
                    value: function() {
                        return this._isNewRestriction ? _.RESTRICTION_MODALITY.DRIVING_ALLOWED : this._restriction.getDrivingModality()
                    }
                }, {
                    key: "_showDriveProfileEdit",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.drivingModality,
                            i = void 0 === t ? this._getDrivingModality() : t,
                            n = this._isRestrictionEditable(),
                            s = void 0;
                        s = this._restriction.supportsDriveProfiles() ? i === _.RESTRICTION_MODALITY.DRIVING_BLOCKED ? M.default.for(this._restriction, {
                                restrictionEditable: n
                            }) : T.default.for(this._restriction, {
                                restrictionEditable: n,
                                subscriptions: this._subscriptions
                            }) : new I.default,
                            this.model.set({
                                drivingModality: i
                            }),
                            this.showChildView("driveProfileEditingRegion", s),
                            this._updateHelpMessage()
                    }
                }, {
                    key: "_getEditedRestriction",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.description,
                            i = e.drivingModality,
                            n = this.getChildView("timeframeEditingRegion"),
                            s = this.getChildView("driveProfileEditingRegion"),
                            r = this._restriction.getDefaultType();
                        this._restriction.supportsDriveProfiles() && (i === _.RESTRICTION_MODALITY.DRIVING_ALLOWED ? r = _.RESTRICTION_TYPE.BLOCKED : i === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? r = _.RESTRICTION_TYPE.TOLL : i === _.RESTRICTION_MODALITY.DRIVING_BLOCKED && (r = s.getRestrictionData().defaultType));
                        var a = {
                            defaultType: r,
                            description: t
                        };
                        if ((0,
                                o.default)(a, n.getRestrictionData()),
                            (0,
                                o.default)(a, s.getRestrictionData()),
                            this._isSegmentRestriction()) {
                            var l = this.getChildView("segmentEditingRegion");
                            (0,
                                o.default)(a, l.getRestrictionData())
                        }
                        return this._restriction.with(a)
                    }
                }, {
                    key: "_validate",
                    value: function() {
                        var e = [];
                        return this.model.attributes.description.length > _.RESTRICTION_DESCRIPTION_CHAR_LIMIT && e.push(I18n.t("restrictions.editing.validation.description_char_limit", {
                                char_limit: _.RESTRICTION_DESCRIPTION_CHAR_LIMIT
                            })),
                            e
                    }
                }, {
                    key: "_isValid",
                    value: function() {
                        var e, t = this,
                            i = ["timeframeEditingRegion", "driveProfileEditingRegion"],
                            n = (e = this._validate()).concat.apply(e, (0,
                                r.default)(i.map(function(e) {
                                return t.getChildView(e).validate()
                            }))),
                            s = new b.default({
                                errorMessages: n
                            });
                        return this.showChildView("validationRegion", s),
                            s.isValid()
                    }
                }, {
                    key: "_createRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:create", this._getEditedRestriction())
                    }
                }, {
                    key: "_updateRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:update", this._restriction, this._getEditedRestriction())
                    }
                }, {
                    key: "_changeDrivingModality",
                    value: function(e) {
                        var t = e.target.value;
                        this._showDriveProfileEdit({
                            drivingModality: t
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restriction_edit"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = x,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(90),
        g = i(49),
        m = i(112),
        v = i(39),
        y = n(v),
        b = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getRestriction",
                    value: function() {
                        return this._restriction
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = new t({
                            isDifficult: e.isDifficult(),
                            isAllowed: e.isAllowedModality(),
                            isBlocked: e.isBlockedModality(),
                            isTollFree: e.isTollFreeModality()
                        });
                        return i._restriction = e,
                            i
                    }
                }]),
                t
        }(Backbone.Model),
        w = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "tr"
                    }
                }, {
                    key: "className",
                    value: function() {
                        var e = ["restriction-list-item"];
                        return this.model.attributes.isDifficult && e.push("restriction-list-item-difficult"),
                            this.model.attributes.isAllowed && e.push("restriction-list-item-allowed"),
                            this.model.attributes.isBlocked && e.push("restriction-list-item-blocked"),
                            e.join(" ")
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click ": "item:edit",
                            "click .do-edit": "item:edit",
                            "click .do-delete": "item:delete",
                            "click .do-applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {}
                        };
                        this._subscriptions = e.subscriptions
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$(".badge-tooltip, .apply-to-all-tooltip").tooltip()
                    }
                }, {
                    key: "_formatWeekdays",
                    value: function() {
                        return new p.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatWeekdays()
                    }
                }, {
                    key: "_formatTime",
                    value: function() {
                        return new p.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatHours()
                    }
                }, {
                    key: "_formatDriveProfile",
                    value: function(e) {
                        var t = "",
                            i = e.isAllVehicles() ? I18n.t("restrictions.editing.driving.all_vehicles") : this._formatVehicleTypes(e.getVehicleTypes()),
                            n = e.getNumPassengers();
                        if (t = n > 0 ? i + " (+" + n + ")" : i,
                            e.hasSubscriptions()) {
                            var s = e.getSubscriptions().map(this._formatSubscription, this);
                            t = t + " " + I18n.t("restrictions.editing.driving.prepositions.with") + " " + s
                        }
                        return t
                    }
                }, {
                    key: "_formatSubscription",
                    value: function(e) {
                        return this._subscriptions.hasOwnProperty(e) ? this._subscriptions[e] : e
                    }
                }, {
                    key: "_formatSummary",
                    value: function() {
                        var e = this,
                            t = this.getRestriction(),
                            i = void 0;
                        return t.isDifficult() ? new p.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatDateRange() : (i = t.isBlockedModality() ? t.getDriveProfileList(g.RESTRICTION_TYPE.BLOCKED) : t.getDriveProfileList(g.RESTRICTION_TYPE.FREE),
                            _.isEmpty(i) ? I18n.t("restrictions.editing.driving.all_vehicles") : i.getDriveProfiles().map(function(t) {
                                return e._formatDriveProfile(t)
                            }).join(", "))
                    }
                }, {
                    key: "_formatVehicleTypes",
                    value: function(e) {
                        var t = _.invert(m.VEHICLE_TYPES);
                        return e.map(function(e) {
                            return I18n.t("restrictions.vehicle_types." + t[e])
                        }).join(", ")
                    }
                }, {
                    key: "_formatLane",
                    value: function() {
                        var e = this.getRestriction();
                        if (e instanceof y.default) {
                            var t = e.getDisposition(),
                                i = _.invert(v.RESTRICTION_SEGMENT_DISPOSITION)[t];
                            return I18n.t("restrictions.summary.disposition." + i)
                        }
                        return ""
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.options.canEditRestrictions && this.getRestriction().isEditable(),
                            t = e && this.options.canApplyToAll;
                        return {
                            laneStr: this._formatLane(),
                            daysStr: this._formatWeekdays(),
                            timeStr: this._formatTime(),
                            summaryStr: this._formatSummary(),
                            canModifyRestriction: e,
                            canApplyToAll: t
                        }
                    }
                }, {
                    key: "getRestriction",
                    value: function() {
                        return this.model.getRestriction()
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this.model.getRestriction().getTimeFrame()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function() {
                        return this.model.getRestriction().getDriveProfileList()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_list_item"
                    }
                }]),
                t
        }(Marionette.View),
        E = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "tbody"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return w
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "item:edit": "item:edit",
                            "item:delete": "item:delete",
                            "item:applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            canApplyToAll: this._canApplyToAll,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._subscriptions
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restrictions: [],
                            canApplyToAll: !1,
                            canEditRestrictions: !1,
                            subscriptions: {}
                        };
                        this._canEditRestrictions = e.canEditRestrictions,
                            this._canApplyToAll = e.canApplyToAll,
                            this._subscriptions = e.subscriptions,
                            this.collection = new Backbone.Collection(e.restrictions.map(function(e) {
                                return b.for(e)
                            }))
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.BIG_TOOLTIP_VERT_PLACEMENTS = t.BIG_TOOLTIP_HORIZ_PLACEMENTS = void 0;
    var s = i(45),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = t.BIG_TOOLTIP_HORIZ_PLACEMENTS = {
            LEFT: "left",
            RIGHT: "right",
            MIDDLE: "middle"
        },
        y = t.BIG_TOOLTIP_VERT_PLACEMENTS = {
            TOP: "top",
            BOTTOM: "bottom"
        },
        b = function(e) {
            function t(e) {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).call(this, (0,
                        o.default)({}, e, {
                        parentEl: null,
                        el: "#big-tooltip-region"
                    })))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "onShow",
                    value: function(e, t, i) {
                        var n = this,
                            s = i.screenPosition,
                            a = i.placements;
                        this.$el.css({
                                display: "block",
                                top: s.top,
                                left: s.left
                            }),
                            t.$el.removeClass((0,
                                r.default)(_).join(" ")),
                            t.$el.removeClass((0,
                                r.default)(y).join(" ")),
                            t.$el.addClass("big-tooltip"),
                            t.$el.addClass(a.join(" ")),
                            t.$el.on("mouseenter", function() {
                                return n.trigger("tooltip:mouseenter")
                            }),
                            t.$el.on("mouseleave", function(e) {
                                0 === t.$el.has(e.target).length ? n.trigger("tooltip:mouseleave") : e.stopPropagation()
                            })
                    }
                }, {
                    key: "onEmpty",
                    value: function(e, t) {
                        t.$el.off("mouseenter"),
                            t.$el.off("mouseleave"),
                            this.$el.css({
                                display: "none"
                            })
                    }
                }]),
                t
        }(Marionette.Region);
    t.default = b
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(32),
        u = n(l),
        d = i(10),
        c = n(d),
        h = function() {
            function e(t, i, n, s, a) {
                (0,
                    r.default)(this, e),
                this._fromSegment = t,
                    this._toSegment = i,
                    this._node = n,
                    this._turn = s,
                    this._bigJunction = a,
                    this._dataModel = this._fromSegment.model
            }
            return (0,
                    o.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._turn.getFromVertex().equals(e._turn.getFromVertex()) && this._turn.getToVertex().equals(e._turn.getToVertex())
                    }
                }, {
                    key: "getAngle",
                    value: function() {
                        return this._bigJunction.getAngleAtIntersection(this._toSegment.geometry)
                    }
                }, {
                    key: "getNode",
                    value: function() {
                        return this._node
                    }
                }, {
                    key: "getFromSegment",
                    value: function() {
                        return this._fromSegment
                    }
                }, {
                    key: "getToSegment",
                    value: function() {
                        return this._toSegment
                    }
                }, {
                    key: "getTurn",
                    value: function() {
                        return this._turn
                    }
                }, {
                    key: "getPoint",
                    value: function() {
                        return this._bigJunction.getIntersectionPoint(this._toSegment.geometry)
                    }
                }, {
                    key: "getDistanceFromPoint",
                    value: function() {
                        return 10
                    }
                }, {
                    key: "hasMultiplePaths",
                    value: function() {
                        return this._bigJunction.getPossibleTurnsBetween(this._turn.getFromVertex(), this._turn.getToVertex()).length > 1
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._bigJunction.canEditTurns()
                    }
                }, {
                    key: "getSegmentPathGeometry",
                    value: function() {
                        var e = this._getLineStrings(),
                            t = new OL.Geometry.LineString(_.last(e)),
                            i = c.default.splitLineStringWithPolygon(t, this._bigJunction.geometry);
                        return null != i && (e[e.length - 1] = i[0].components),
                            new OL.Geometry.LineString(Array.prototype.concat.apply([], e))
                    }
                }, {
                    key: "_getLineStrings",
                    value: function() {
                        var e = this;
                        return this._getVertices().map(function(t) {
                            var i = e._dataModel.segments.get(t.getSegmentID()),
                                n = i.geometry.clone().components;
                            return t.isForward() || n.reverse(),
                                n
                        })
                    }
                }, {
                    key: "_getVertices",
                    value: function() {
                        var e = this,
                            t = this._dataModel.getRoadGraph(),
                            i = this._turn.getFromVertex();
                        return this._turn.getTurnData().getSegmentPath().map(function(n) {
                            var s = t.getVertexNodeID(i),
                                r = e._dataModel.nodes.get(s),
                                a = e._dataModel.segments.get(n),
                                o = u.default.for(a, r).getOpposite();
                            return i = o,
                                o
                        }).concat([this._turn.getToVertex()])
                    }
                }, {
                    key: "_getPossibleTurns",
                    value: function() {
                        return this._bigJunction.getPossibleTurnsBetween(this._turn.getFromVertex(), this._turn.getToVertex())
                    }
                }, {
                    key: "isLockedByHigherRank",
                    value: function() {
                        var e = this;
                        return this._turn.getTurnData().getSegmentPath().map(function(t) {
                            return e._dataModel.segments.get(t)
                        }).some(function(e) {
                            return e.isLockedByHigherRank()
                        })
                    }
                }, {
                    key: "getPossibleTurnAtOffset",
                    value: function(e) {
                        var t = this._getPossibleTurns(),
                            i = this.getCurrentPossibleTurnIndex();
                        return i += e,
                            i < 0 && (i += t.length),
                            t[i % t.length]
                    }
                }, {
                    key: "getPossibleTurnCount",
                    value: function() {
                        return this._getPossibleTurns().length
                    }
                }, {
                    key: "getCurrentPossibleTurnIndex",
                    value: function() {
                        var e = this,
                            t = this._getPossibleTurns();
                        return _.findIndex(t, function(t) {
                            return _.isEqual(t.getTurnData().getSegmentPath(), e._turn.getTurnData().getSegmentPath())
                        })
                    }
                }, {
                    key: "getNextPossibleTurn",
                    value: function() {
                        return this.getPossibleTurnAtOffset(1)
                    }
                }, {
                    key: "getPrevPossibleTurn",
                    value: function() {
                        return this.getPossibleTurnAtOffset(-1)
                    }
                }]),
                e
        }();
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OpenLayers.Class(OpenLayers.Handler.Keyboard, {
        initialize: function(e, t, i) {
            OpenLayers.Handler.Keyboard.prototype.initialize.apply(this, arguments)
        },
        destroy: function() {
            OpenLayers.Handler.Keyboard.prototype.destroy.apply(this, arguments)
        },
        handleKeyEvent: function(e) {
            $(e.target).is(":input") || OpenLayers.Handler.Keyboard.prototype.handleKeyEvent.apply(this, arguments)
        },
        CLASS_NAME: "Waze.Handler.KeyboardShortcut"
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(131),
        r = n(s),
        a = i(117),
        o = i(16),
        l = n(o),
        u = i(943),
        d = n(u),
        c = i(944),
        h = n(c),
        f = i(945),
        p = n(f),
        g = i(946),
        m = n(g),
        v = i(947),
        y = n(v),
        b = I18n.t("internal.wiki_best_practices_link"),
        w = I18n.t("internal.wiki_area_manager"),
        E = I18n.t("internal.wiki_country_manager"),
        k = I18n.t("internal.wiki_mentoring"),
        M = I18n.t("internal.wiki_rank_link"),
        S = I18n.t("internal.editing_local_forum_link"),
        T = I18n.t("internal.mentoring_feedback_url"),
        C = {
            FLAGGED_USER: b,
            BLOCKED_USER: b,
            ACTIVATED_USER: b,
            WELCOME_NEW_EDITOR: S,
            WELCOME_TO_WME: b,
            SOON_TO_BE_UPGRADED: M,
            LEVEL_UPGRADE: M,
            LEVEL_UPGRADE_3: M,
            LEVEL_UPGRADE_4: M,
            LEVEL_UPGRADE_5: M
        },
        I = {
            MEET_FELLOW_EDITORS: S,
            LEVEL_UPGRADE_2: M,
            LEVEL_UPGRADE_3: w,
            LEVEL_UPGRADE_4: k,
            LEVEL_UPGRADE_5: E,
            MENTOR_FEEDBACK_REQUEST: T,
            USER_FIRST_EDIT: b
        },
        A = {
            USER_FIRST_EDIT: S
        },
        D = {
            LEVEL_UPGRADE_2: d.default,
            LEVEL_UPGRADE_3: h.default,
            LEVEL_UPGRADE_4: p.default,
            LEVEL_UPGRADE_5: m.default,
            LEVEL_UPGRADE_6: y.default
        },
        R = r.default.extend({
            tagName: "div",
            template: "Waze/Modules/Feed/templates/notification_detail",
            className: "notification-detail",
            triggers: {
                "click .next": "nextClicked"
            },
            initialize: function() {
                return this.model.on("destroy", this.destroy, this)
            },
            _onClickDelete: function() {
                return this.$el.addClass("deleting"),
                    this.model.trigger("delegate:delete")
            },
            serializeData: function() {
                return _.extend(r.default.prototype.serializeData.apply(this, arguments), {
                    hasNext: this.options.hasNext,
                    subject: this._getValueOrTemplate("subject"),
                    message: this._getValueOrTemplate("message"),
                    linkText: this._getValueOrTemplate("linkText"),
                    buttonText: this._getValueOrTemplate("buttonText"),
                    secondButtonText: this._getValueOrTemplate("secondButtonText"),
                    linkURL: this._getLinkURL(),
                    buttonURL: this._getButtonURL(),
                    secondButtonURL: this._getSecondButtonURL(),
                    imageURL: this._getImageURL()
                })
            },
            setMaxHeight: function(e) {
                return this.$el.css({
                    maxHeight: e
                })
            },
            _getLinkURL: function() {
                return this._getParamByTypeAndMap("linkURL", C)
            },
            _getButtonURL: function() {
                return this._getButtonUrlByButtonNameAndMap("buttonURL", I)
            },
            _getSecondButtonURL: function() {
                return this._getButtonUrlByButtonNameAndMap("secondButtonURL", A)
            },
            _getButtonUrlByButtonNameAndMap: function(e, t) {
                switch (this.model.get("type")) {
                    case a.NOTIFICATION_TYPES.MENTEE_CLICKED_LINK:
                    case a.NOTIFICATION_TYPES.MENTEE_RETURNED_TO_WME:
                        return this._buildProfileLink();
                    case a.NOTIFICATION_TYPES.MENTOR_ENCOURAGMENT:
                        return this._getStartMentoringLink();
                    default:
                        return this._getParamByTypeAndMap(e, t)
                }
            },
            _buildProfileLink: function() {
                return l.default.userProfileLink({
                    userName: this.model.attributes.parameters.username
                })
            },
            _getStartMentoringLink: function() {
                return l.default.userProfileLink({
                    userName: this.options.user.userName
                }) + "#startMentoring"
            },
            _getImageURL: function() {
                return this._getParamByTypeAndMap("imageURL", D)
            },
            _getParamByTypeAndMap: function(e, t) {
                var i = this.model.getParameter(e);
                return i || t[this.model.get("type")]
            }
        });
    t.default = R,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(131),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            className: "feed-group",
            template: "Waze/Modules/Feed/templates/feed_group",
            childView: s.default,
            childViewContainer: ".feed-list",
            childViewEventPrefix: "notifications",
            collapseItemsMessage: "feed.notifications.collapsed_message",
            events: {
                "click .toggle": "toggleGrouping"
            },
            bindings: {
                ":el": {
                    classes: {
                        grouped: "grouped",
                        groupable: {
                            observe: "length",
                            onGet: function(e) {
                                return e > 3
                            }
                        }
                    }
                },
                ".toggle": {
                    observe: "length",
                    visible: function(e) {
                        return e > 3
                    }
                },
                ".counter": {
                    observe: "length",
                    onGet: function(e) {
                        return I18n.t(this.collapseItemsMessage, {
                            count: e - 1
                        })
                    }
                }
            },
            initialize: function() {
                var e = this;
                return this.model = new Backbone.Model({
                        length: 0,
                        grouped: !1
                    }),
                    this.collection.on("reset sync", function() {
                        var t = e.collection.length;
                        return e.model.set({
                            length: t,
                            grouped: t > 3
                        })
                    }),
                    this.collection.on("reset add remove", function() {
                        return e.model.set({
                            length: e.collection.length
                        })
                    }),
                    this.collection.on("remove", function() {
                        if (e.collection.length <= 3)
                            return e.model.set({
                                grouped: !1
                            })
                    })
            },
            onRender: function() {
                return this.stickit()
            },
            toggleGrouping: function() {
                return this.model.set({
                    grouped: !this.model.get("grouped")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(16),
        v = n(m),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "className",
                    value: function() {
                        return "lock-edit-view"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".lock-level-displayer": {
                                observe: this.propertiesEditableAttribute,
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            ".lock-level-displayer label": {
                                observe: [this.lockRankAttribute, this.rankAttribute],
                                onGet: function(e) {
                                    var t = (0,
                                            r.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return null != i ? v.default.formatRank(i) : I18n.t("edit.segment.lock_levels.automatic", {
                                        rank: v.default.formatRank(n)
                                    })
                                }
                            },
                            ".lock-level-selector": {
                                observe: this.propertiesEditableAttribute,
                                visible: !0
                            },
                            ".lock-level-selector input[name='lockRank']": {
                                observe: [this.lockRankAttribute, this.lockRankMixedAttribute],
                                onGet: function(e) {
                                    var t = (0,
                                            r.default)(e, 2),
                                        i = t[0];
                                    return t[1] ? "MIXED" : null != i ? i : "AUTO"
                                },
                                onSet: function(e) {
                                    return "AUTO" === e ? [null, !1] : "MIXED" === e ? [null, !0] : [e, !1]
                                }
                            },
                            ".lock-level-selector input[name=lockRank][value='MIXED'] + label": {
                                observe: this.lockRankMixedAttribute,
                                visible: !0
                            },
                            ".lock-level-selector input[name=lockRank][value='AUTO']": {
                                attributes: [{
                                    name: "disabled",
                                    observe: this.allowDefaultRankAttribute,
                                    onGet: _.negate(_.identity)
                                }]
                            },
                            ".lock-level-selector label[for|='lockRank'].automatic": {
                                observe: this.rankAttribute,
                                onGet: function(e) {
                                    return I18n.t("edit.segment.lock_levels.automatic", {
                                        rank: v.default.formatRank(e)
                                    })
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.rankAttribute = e.rankAttribute || "rank",
                            this.lockRankAttribute = e.lockRankAttribute || "lockRank",
                            this.lockRankMixedAttribute = e.lockRankMixedAttribute || "lockRankMixed",
                            this.allowDefaultRankAttribute = e.allowDefaultRankAttribute || "allowDefaultRank",
                            this.propertiesEditableAttribute = e.propertiesEditableAttribute || "propertiesEditable"
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/lock/edit"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend(),
        s = Backbone.Collection.extend({
            model: n,
            removeEmpty: function() {
                return this.remove(this.where({
                        name: ""
                    }), {
                        silent: !0
                    }),
                    this
            }
        });
    t.Item = n,
        t.Collection = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.Behavior.extend({
        _lastTabId: null,
        events: {
            "show.bs.tab a[data-toggle=tab]": "_onTabShown"
        },
        _onTabShown: function(e) {
            this._lastTabId = $(e.target).attr("href")
        },
        _restoreLastTab: function() {
            if (null !== this._lastTabId) {
                return this.$("a[href='" + this._lastTabId + "']").tab("show")
            }
        },
        onRender: function() {
            return this._restoreLastTab()
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/venue/venue-edit-more-info",
        serializeData: function() {
            return {
                landmark: this.model,
                serviceTypes: this.options.serviceTypes,
                serviceSet: this.options.serviceSet
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(990),
        v = n(m),
        y = i(157),
        b = n(y),
        w = i(249),
        E = n(w),
        k = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "defaults",
                    get: function() {
                        return {
                            loading: !1,
                            showHistory: !1,
                            hasMore: !1,
                            isEmpty: !0,
                            hasError: !1
                        }
                    }
                }]),
                t
        }(Backbone.Model),
        M = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            txRegion: ".transactions"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .toggleHistory": "_toggleHistory",
                            "click .loadMoreHistory": "_loadMoreHistory"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".showHistory": {
                                observe: "showHistory",
                                visible: _.negate(_.identity)
                            },
                            ".hideHistory": {
                                observe: "showHistory",
                                visible: !0
                            },
                            ".historyContent": {
                                observe: "showHistory",
                                visible: !0
                            },
                            ".loadingHistory": {
                                observe: "loading",
                                visible: !0
                            },
                            ".transactions": {
                                observe: "isEmpty",
                                visible: _.negate(_.identity)
                            },
                            ".historyEmpty": {
                                observe: ["isEmpty", "hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            r.default)(e, 3),
                                        i = t[0],
                                        n = t[1],
                                        s = t[2];
                                    return i && !n & !s
                                }
                            },
                            ".historyError": {
                                observe: ["hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            r.default)(e, 2),
                                        i = t[0];
                                    return !t[1] && i
                                }
                            },
                            ".loadMoreContainer": {
                                observe: ["hasMore", "hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            r.default)(e, 3),
                                        i = t[0],
                                        n = t[1];
                                    return !t[2] && i && !n
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e.model;
                        this._map = e.map,
                            this._objectType = t.type,
                            this._objectID = t.getID(),
                            this._descartes = new b.default,
                            this._historyDataModel = new E.default,
                            this._nextTransaction = null,
                            this._historyLoaded = !1,
                            this._viewModel = new k,
                            this._transactionsView = new v.default({
                                map: this._map,
                                historyDataModel: this._historyDataModel,
                                objectType: this._objectType,
                                objectID: this._objectID
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.getRegion("txRegion").show(this._transactionsView),
                            this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onHistorySuccess",
                    value: function(e) {
                        this._historyDataModel.mergeObjects(new OL.Bounds, e, !0),
                            this._nextTransaction = e.transactions.nextTransaction,
                            this._transactionsView.collection.add(e.transactions.objects),
                            this._viewModel.set({
                                hasMore: null != this._nextTransaction,
                                isEmpty: 0 === this._transactionsView.collection.length
                            })
                    }
                }, {
                    key: "_onHistoryFail",
                    value: function() {
                        this._viewModel.set("hasError", !0)
                    }
                }, {
                    key: "_toggleLoading",
                    value: function(e) {
                        this._viewModel.set("loading", e)
                    }
                }, {
                    key: "_toggleHistory",
                    value: function() {
                        var e = this,
                            t = this._viewModel.attributes.showHistory;
                        t = !t,
                            this._viewModel.set("showHistory", t),
                            t && !this._historyLoaded && (W.Report.elementHistoryAction("show", this._objectType),
                                this._fetchHistory().then(function() {
                                    return e._historyLoaded = !0
                                }))
                    }
                }, {
                    key: "_fetchHistory",
                    value: function(e) {
                        var t = this;
                        return this._toggleLoading(!0),
                            this._viewModel.set("hasError", !1),
                            this._descartes.getElementHistory(this._objectType, this._objectID, e).then(this._onHistorySuccess.bind(this), this._onHistoryFail.bind(this)).then(function() {
                                t._toggleLoading(!1)
                            })
                    }
                }, {
                    key: "_loadMoreHistory",
                    value: function() {
                        var e = this;
                        W.Report.elementHistoryAction("load_more", this._objectType),
                            this._fetchHistory(this._nextTransaction).then(function() {
                                null == e._nextTransaction && W.Report.elementHistoryAction("load_all", e._objectType)
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/history_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(10),
        g = n(p),
        m = i(256),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mouseenter .ca-geometry .ca-value-old": this._showOldGeometry,
                            "mouseenter .ca-geometry .ca-value-new": this._showNewGeometry,
                            "mouseleave .ca-visual .ca-value": this._destroyDrawingContext
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._map = this.options.map,
                            this._historyChangesBuilder = this.options.historyChangesBuilder,
                            this._drawingContext = null,
                            this._changedAttributes = this._buildChanges()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "getChangedAttributesNames",
                    value: function() {
                        return this._changedAttributes.map(function(e) {
                            return e.displayName
                        })
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            changedAttributes: this._changedAttributes
                        }
                    }
                }, {
                    key: "_buildChanges",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.objectType,
                            i = e.newValue,
                            n = e.oldValue;
                        return this._historyChangesBuilder.buildChanges(t, i, n)
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        null != this._drawingContext && (this._drawingContext.destroy(),
                            this._drawingContext = null)
                    }
                }, {
                    key: "_drawGeometry",
                    value: function(e) {
                        var t = g.default.parse(e);
                        this._getDrawingContext().addFeatures([new OL.Feature.Vector(t.clone())])
                    }
                }, {
                    key: "_showOldGeometry",
                    value: function() {
                        this._drawGeometry(this.model.attributes.oldValue.geometry)
                    }
                }, {
                    key: "_showNewGeometry",
                    value: function() {
                        this._drawGeometry(this.model.attributes.newValue.geometry)
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this._drawingContext && (this._drawingContext = this._map.getDrawingContext(),
                                this._drawingContext.setStyleMap(v.default),
                                this._drawingContext.moveLayerToTop()),
                            this._drawingContext
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "ul"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/tx_object_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.NAVIGATION_POINT_TYPE = t.Decorator = void 0;
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = {
            ENTRY: "entry",
            EXIT: "exit",
            BOTH: "both"
        },
        u = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._navigationPoint = t,
                    this._landmark = i,
                    this._index = n,
                    this._landmarkCentroid = null
            }
            return (0,
                    o.default)(e, [{
                    key: "getNavigationPoint",
                    value: function() {
                        return this._navigationPoint
                    }
                }, {
                    key: "getType",
                    value: function() {
                        var e = this._navigationPoint.getEntry(),
                            t = this._navigationPoint.getExit();
                        return e && t ? l.BOTH : e ? l.ENTRY : l.EXIT
                    }
                }, {
                    key: "isLocatedAtCentroid",
                    value: function() {
                        return this._navigationPoint.getPoint().equals(this.getLandmarkCentroid())
                    }
                }, {
                    key: "getIndex",
                    value: function() {
                        return this._index
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._landmark.arePropertiesEditable()
                    }
                }, {
                    key: "getArrowIconClass",
                    value: function() {
                        var e = this.getType();
                        return e === l.BOTH ? "waze-icon-full-arrow-two-sided" : e === l.ENTRY ? "waze-icon-full-arrow-right" : "waze-icon-full-arrow-left"
                    }
                }, {
                    key: "getLandmarkCentroid",
                    value: function() {
                        return null === this._landmarkCentroid && (this._landmarkCentroid = this._landmark.attributes.geometry.getCentroid()),
                            this._landmarkCentroid
                    }
                }, {
                    key: "getName",
                    value: function() {
                        return this._navigationPoint.getName().length > 0 ? this._navigationPoint.getName() : I18n.t("edit.landmark.navigation_point.no_name")
                    }
                }, {
                    key: "getLandmarkGeometry",
                    value: function() {
                        return this._landmark.attributes.geometry
                    }
                }]),
                e
        }();
    t.Decorator = u,
        t.NAVIGATION_POINT_TYPE = l
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(45),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(65),
        u = n(l),
        d = i(1004),
        c = n(d),
        h = i(245),
        f = n(h),
        p = i(1006),
        g = n(p),
        m = i(1008),
        v = n(m),
        y = i(99),
        b = Marionette.Object.extend({
            compositeSegment: null,
            initialize: function(e) {
                this.region = e.region,
                    this.pannable = e.pannable,
                    this.listViewConfig = e.listViewConfig,
                    this.editViewConfig = e.editViewConfig,
                    this.allClosures = e.allClosures,
                    this.compositeSegment = e.compositeSegment,
                    this.segments = this.compositeSegment.children.concat(),
                    this.dataModel = e.dataModel,
                    this._reverseSegments = _.clone(this.compositeSegment.reverseSegments)
            },
            showClosures: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = c.default.getSharedClosures(this.segments, this._reverseSegments, this.allClosures),
                    n = (0,
                        o.default)({
                        dataModel: this.dataModel,
                        collection: i,
                        showActivateRepoMessage: !this.options.repoActive,
                        showSaveMessage: !this.options.canSaveClosures,
                        lockLevel: this._getClosureLockLevel(),
                        canEdit: this._areClosuresEditable(),
                        canAdd: this.options.canAdd
                    }, this.listViewConfig, t),
                    s = new g.default(n);
                s.on("add", function() {
                        return e.newClosure()
                    }),
                    s.on("edit", function(t) {
                        return e.editClosure(t)
                    }),
                    s.on("delete", function(t) {
                        return e.deleteClosure(t)
                    }),
                    s.on("applyToAll", function(t) {
                        return e.applyClosureToAllSegments(t)
                    }),
                    s.on("locate", function(t) {
                        var i = _.first(t.attributes.segments),
                            n = i.geometry.getBounds().getCenterLonLat();
                        return e.pannable.panTo(n)
                    }),
                    this._show(s)
            },
            _areClosuresEditable: function() {
                return this.compositeSegment.canEditClosures() && this.options.repoActive && this.options.canSaveClosures
            },
            _getClosureLockLevel: function() {
                var e = 0;
                return this.compositeSegment.children.forEach(function(t) {
                        var i = t.getAddress();
                        i && i.getCountry() && (e = Math.max(e, t.attributes.lockRank, i.getCountry().allowRoadClosureRank))
                    }),
                    e
            },
            newClosure: function() {
                var e = this,
                    t = this.createSharedClosure();
                this._createEditView(t, {
                    newClosure: !0
                }).on("save", function() {
                    e.saveClosure(t, !0)
                })
            },
            editClosure: function(e) {
                var t = this;
                this._createEditView(e).on("save", function() {
                    t.saveClosure(e, !1)
                })
            },
            _createEditView: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                _.defaults(i, {
                        newClosure: !1
                    }),
                    _.extend(i, this.editViewConfig),
                    i.model = e,
                    i.availableEvents = this.dataModel.majorTrafficEvents.getObjectArray();
                var n = new v.default(i);
                return n.on("editCancelled", function() {
                        return t.showClosures()
                    }),
                    this._show(n),
                    n
            },
            applyClosureToAllSegments: function(e) {
                var t = f.default.applyToAllSegments(e, this.segments, this._reverseSegments);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.apply_to_all"),
                    successMessage: I18n.t("closures.success.apply_to_all")
                })
            },
            _show: function(e) {
                this.view = e,
                    this.region && this.region.show(this.view)
            },
            deleteClosure: function(e) {
                var t = void 0;
                if (t = e.isPresent("reason") ? I18n.t("closures.delete_confirm", {
                        info: e.get("reason")
                    }) : I18n.t("closures.delete_confirm_no_reason"),
                    window.confirm(t)) {
                    var i = f.default.delete(e);
                    return this._runAction(i, {
                        loadingMessage: I18n.t("closures.loading.delete"),
                        successMessage: I18n.t("closures.success.delete")
                    })
                }
            },
            saveNewClosure: function(e) {
                var t = f.default.add(e);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.add"),
                    successMessage: I18n.t("closures.success.add")
                })
            },
            saveExistingClosure: function(e) {
                var t = f.default.update(e);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.update"),
                    successMessage: I18n.t("closures.success.update")
                })
            },
            saveClosure: function(e, t) {
                this._confirmPermanent(e) && (t ? this.saveNewClosure(e) : this.saveExistingClosure(e))
            },
            _confirmPermanent: function(e) {
                if (e.attributes.permanent) {
                    var t = I18n.t("closures.permanent_confirm");
                    return window.confirm(t)
                }
                return !0
            },
            _runAction: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.view.message.showLoading(i.loadingMessage),
                    this._disableControls(),
                    e.doAction(),
                    i.actions = [e],
                    W.controller.save(i).then(function(n) {
                        var s = !1;
                        return n.unsavedFeatures && (s = !_.isEmpty(n.unsavedFeatures.roadClosures)),
                            s ? t._handlePartialSuccess(n.unsavedFeatures.roadClosures, e) : t.showClosures({
                                successMessage: i.successMessage
                            })
                    }).catch(function(i) {
                        if (i instanceof y.SaveError)
                            return t._onError(i.errors, e);
                        throw i
                    }).finally(function() {
                        return t._enableControls()
                    })
            },
            _enableControls: function() {
                return this._toggleControls(!1)
            },
            _disableControls: function() {
                return this._toggleControls(!0)
            },
            _toggleControls: function(e) {
                this.region && this.region.$el.find("a, .btn, button, input, textarea, select").toggleClass("disabled", e)
            },
            _handlePartialSuccess: function(e, t) {
                this._undoFailedActions(e, t);
                var i = (0,
                        r.default)(e).map(function(e) {
                        return e.errorList
                    }),
                    n = _.flatten(i.map(function(e) {
                        return e.map(function(e) {
                            return e.details
                        })
                    })),
                    s = I18n.t("closures.partial_error") + ": " + n.join(",\n");
                return this.showClosures({
                    errorMessage: s
                })
            },
            _undoFailedActions: function(e, t) {
                if (null != t.subActions)
                    for (var i = 0; i < t.subActions.length; i++) {
                        var n = t.subActions[i];
                        if (null != n.subActions)
                            this._undoFailedActions(e, n);
                        else if (null != n.closure) {
                            var s = n.closure.getID();
                            e[s] && n.undoAction()
                        }
                    }
            },
            _onError: function(e, t) {
                var i = e[0];
                t.undoAction();
                var n = I18n.t("save.error_types"),
                    s = Number(i.get("code")),
                    r = n[s] && n[s].title || i.get("details");
                return this.view.message.showError(r)
            },
            createSharedClosure: function() {
                var e = this.segments.concat(),
                    t = this.compositeSegment.getAddress(),
                    i = void 0;
                i = null == t || t.isEmpty() ? "" : t.getStreetName() + ", " + t.getCityName();
                var n = {
                    location: i,
                    segments: e,
                    reverseSegments: this._reverseSegments
                };
                return this.compositeSegment.mixed.direction || (n.direction = this.compositeSegment.attributes.direction),
                    new u.default(n)
            }
        });
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = {
            ERROR: "error",
            SUCCESS: "success",
            LOADING: "loading"
        },
        f = {
            CONTAINER: "closures-status-message",
            ICON: "closures-status-message-icon",
            ICON_BY_TYPE: {
                error: "fa fa-exclamation-circle icon-exclamation-sign",
                success: "fa fa-check icon-ok",
                loading: "icon-spinner icon-spin fa fa-spinner fa-spin"
            }
        },
        p = function() {
            function e(t, i) {
                (0,
                    u.default)(this, e),
                null == i && (i = {}),
                    this.options = i,
                    this.$el = $(t).addClass(f.CONTAINER),
                    null == this.options.showIcon && (this.options.showIcon = !0),
                    this.ui = {
                        text: $("<span>").appendTo(this.$el),
                        icon: null
                    }
            }
            return (0,
                    c.default)(e, [{
                    key: "showError",
                    value: function(e) {
                        this.show(e, h.ERROR)
                    }
                }, {
                    key: "showSuccess",
                    value: function(e) {
                        this.show(e, h.SUCCESS)
                    }
                }, {
                    key: "showLoading",
                    value: function(e) {
                        this.show(e, h.LOADING)
                    }
                }, {
                    key: "show",
                    value: function(e, t) {
                        this._setText(e),
                            this._setClass(t),
                            this.options.showIcon && this._setIcon(t),
                            this.$el.show()
                    }
                }, {
                    key: "_setText",
                    value: function(e) {
                        null == e && (e = ""),
                            e.htmlSafe ? this.ui.text.html(e) : this.ui.text.text(e)
                    }
                }, {
                    key: "_setClass",
                    value: function(e) {
                        var t = !0,
                            i = !1,
                            n = void 0;
                        try {
                            for (var s, a = (0,
                                    o.default)((0,
                                    r.default)(h)); !(t = (s = a.next()).done); t = !0) {
                                var l = s.value,
                                    u = h[l];
                                this.$el.toggleClass(u, u === e)
                            }
                        } catch (e) {
                            i = !0,
                                n = e
                        } finally {
                            try {
                                !t && a.return && a.return()
                            } finally {
                                if (i)
                                    throw n
                            }
                        }
                    }
                }, {
                    key: "_setIcon",
                    value: function(e) {
                        var t = f.ICON_BY_TYPE[e];
                        null != t ? this._showIcon(t) : null != this.ui.icon && this.ui.icon.hide()
                    }
                }, {
                    key: "_showIcon",
                    value: function(e) {
                        var t = f.ICON + " " + e;
                        null != this.ui.icon ? this.ui.icon.attr({
                            class: t
                        }) : this.ui.icon = $("<span>").addClass(t).prependTo(this.$el)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.$el.hide()
                    }
                }]),
                e
        }();
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        SEGMENT: {
            canEditMTE: !0
        },
        MTE: {
            canEditMTE: !1
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        SEGMENT: {
            showPartialClosuresHeader: !0,
            extendedChildViewOptions: {
                allowApplyToAll: !0,
                showLocateButton: !1,
                showEventName: !0,
                getDescription: function(e) {
                    return null
                }
            }
        },
        MTE: {
            showPartialClosuresHeader: !1,
            extendedChildViewOptions: {
                allowApplyToAll: !1,
                showLocateButton: !0,
                showEventName: !1,
                getDescription: function(e) {
                    return e.get("location")
                }
            }
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(17),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(136),
        v = n(m),
        y = function(e) {
            function t(e) {
                (0,
                    u.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i.mainAttribute = e.mainAttribute,
                    i
            }
            return (0,
                    g.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            "input[type=checkbox]": {
                                observe: this.observeAttribute,
                                updateModel: "_confirmUpdate",
                                update: function(e, t, i, n) {
                                    e.val(t)
                                },
                                onGet: function(t) {
                                    return t.map(e._optionToValue.bind(e))
                                },
                                onSet: function(t) {
                                    return Array.isArray(t) || (t = null === t ? [] : [t]),
                                        t.map(e._valueToOption.bind(e))
                                }
                            },
                            "input[type=radio]": {
                                observe: this.mainAttribute,
                                onGet: function(t) {
                                    return e.optionsList.indexOf(t)
                                },
                                onSet: function(t) {
                                    return e.optionsList[t]
                                }
                            }
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        var e, t = this.options.observeAttribute || "currentSelection",
                            i = this.options.mainAttribute;
                        return e = {},
                            (0,
                                o.default)(e, "change:" + t, "_onModelChange"),
                            (0,
                                o.default)(e, "change:" + i, "_onMainChange"),
                            e
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click button": "_onButtonClick"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/main_selection_view"
                    }
                }]),
                (0,
                    f.default)(t, [{
                    key: "getMainOption",
                    value: function() {
                        return this.model.get(this.mainAttribute)
                    }
                }, {
                    key: "_onMainChange",
                    value: function(e, t) {
                        var i = this.getSelected(); -
                        1 === i.indexOf(t) && (i.push(t),
                            this.setSelection(i))
                    }
                }, {
                    key: "_onModelChange",
                    value: function(e, t) {
                        var i = this.getMainOption();
                        if (-1 === t.indexOf(i))
                            t.length > 0 ? this.model.set(this.mainAttribute, t[0]) : (this.model.set(this.observeAttribute, [""]),
                                this.model.set(this.mainAttribute, ""));
                        else if ("" === i && t.length > 1) {
                            var n = _.compact(t);
                            this.model.set(this.observeAttribute, n),
                                this.model.set(this.mainAttribute, n[0])
                        } else
                            "" !== i && t.indexOf("") > -1 && (t = _.without(t, ""),
                                this.model.set(this.observeAttribute, t));
                        this.trigger("selection:changed", this.getSelected())
                    }
                }]),
                t
        }(v.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.LandmarkMerger = t.MAIN_CATEGORY = t.CUSTOM_DESCRIPTION = t.PARKING_FIELDS = t.VENUE_FIELDS = void 0;
    var s = i(58),
        r = n(s),
        a = i(9),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(45),
        f = n(h),
        p = i(16),
        g = n(p),
        m = i(114),
        v = i(115),
        y = n(v),
        b = i(62),
        w = {
            NAME: "name",
            ALIASES: "aliases",
            DESCRIPTION: "description",
            STREET_ID: "streetID",
            LOCK_RANK: "lockRank",
            BRAND: "brand",
            CATEGORIES: "categories",
            EXTERNAL_PROVIDER_IDS: "externalProviderIDs",
            OPENING_HOURS: "openingHours",
            URL: "url",
            PHONE: "phone",
            SERVICES: "services",
            IMAGES: "images"
        },
        E = {
            PARKING_TYPE: "parkingType",
            HAS_TBR: "hasTBR",
            CAN_EXIT_WHILE_CLOSED: "canExitWhileClosed",
            COST_TYPE: "costType",
            PAYMENT_TYPE: "paymentType",
            EXTIMATED_NUMBER_OF_SPOTS: "estimatedNumberOfSpots",
            LOT_TYPE: "lotType"
        },
        k = (0,
            f.default)(w),
        M = (0,
            f.default)(E),
        S = function() {
            function e(t) {
                (0,
                    u.default)(this, e);
                var i = new y.default;
                this._defaultParkingAttributes = i.attributes,
                    this.venues = t.venues,
                    this.mainVenue = t.mainVenue,
                    this.dataModel = t.dataModel,
                    this.model = this._createModel(),
                    this.startModel = this._createModel()
            }
            return (0,
                    c.default)(e, [{
                    key: "_createModel",
                    value: function() {
                        var e = this,
                            t = {};
                        return ["CUSTOM_DESCRIPTION", "mainCategory"].concat((0,
                                o.default)(k), (0,
                                o.default)(M)).forEach(function(i) {
                                t[i] = e.getPropertySuggestedValue(i)
                            }),
                            new Backbone.Model(t)
                    }
                }, {
                    key: "getModel",
                    value: function() {
                        return this.model
                    }
                }, {
                    key: "getPropertySuggestedValue",
                    value: function(e) {
                        switch (e) {
                            case "CUSTOM_DESCRIPTION":
                                return "";
                            case "mainCategory":
                                return this._getSuggestedProperties(w.CATEGORIES)[0];
                            case w.ALIASES:
                                return this._getSuggestedNames();
                            case w.CATEGORIES:
                            case w.SERVICES:
                                return this._getSuggestedProperties(e);
                            case w.EXTERNAL_PROVIDER_IDS:
                                return this._getSuggestedExternalProviderIds();
                            case w.OPENING_HOURS:
                                return this._getSuggestedOpeningHours();
                            case w.IMAGES:
                                return this._getSuggestedImages();
                            case E.HAS_TBR:
                            case E.CAN_EXIT_WHILE_CLOSED:
                            case E.PARKING_TYPE:
                            case E.COST_TYPE:
                            case E.PAYMENT_TYPE:
                            case E.EXTIMATED_NUMBER_OF_SPOTS:
                            case E.LOT_TYPE:
                                return this._getSuggestedParkingProperty(e);
                            default:
                                return this._getSuggestedProperty(e)
                        }
                    }
                }, {
                    key: "_getSuggestedProperty",
                    value: function(e) {
                        return this.mainVenue.attributes[e]
                    }
                }, {
                    key: "_getSuggestedNames",
                    value: function() {
                        var e = this.mainVenue,
                            t = e.attributes.name,
                            i = e.attributes.aliases;
                        return _.uniq([t].concat((0,
                            o.default)(i)))
                    }
                }, {
                    key: "_getSuggestedParkingProperty",
                    value: function(e) {
                        var t = this.mainVenue,
                            i = t && t.attributes.categoryAttributes;
                        return i && i.PARKING_LOT && i.PARKING_LOT[e] || this._defaultParkingAttributes[e]
                    }
                }, {
                    key: "_getSuggestedProperties",
                    value: function(e) {
                        return Array.isArray(this.mainVenue.attributes[e]) ? _.compact(this.mainVenue.attributes[e]) : []
                    }
                }, {
                    key: "_getSuggestedExternalProviderIds",
                    value: function() {
                        return this._getSuggestedProperties("externalProviderIDs").map(function(e) {
                            return "object" === (void 0 === e ? "undefined" : (0,
                                r.default)(e)) ? e.id || e.attributes.uuid : e
                        })
                    }
                }, {
                    key: "_getSuggestedImages",
                    value: function() {
                        return _.compact(this.mainVenue.attributes.images.filter(function(e) {
                            return e.attributes.approved
                        }).map(function(e) {
                            return e.attributes.id
                        }))
                    }
                }, {
                    key: "getPropertyOptions",
                    value: function(e, t) {
                        switch (e) {
                            case w.NAME:
                                return this._getNameList();
                            case "mainCategory":
                                return this._createPropertyList(w.CATEGORIES, !1)[0];
                            case w.LOCK_RANK:
                                return this._getLockRankRange();
                            case w.EXTERNAL_PROVIDER_IDS:
                                return this._createProviderIdList();
                            case w.OPENING_HOURS:
                                return this._getOpeningHours();
                            case w.IMAGES:
                                return this._createImagesIdsList();
                            default:
                                return this._createPropertyList(e, t)
                        }
                    }
                }, {
                    key: "getParkingPropertyOptions",
                    value: function(e, t) {
                        return this._createParkingPropertyList(e, t)
                    }
                }, {
                    key: "_createPropertyList",
                    value: function(e, t) {
                        var i = [];
                        return this.venues.forEach(function(t) {
                                i.push(t.attributes[e])
                            }),
                            i = _.flatten(i),
                            i = _.uniq(i),
                            t || (i = _.compact(i)),
                            i
                    }
                }, {
                    key: "_createParkingPropertyList",
                    value: function(e, t) {
                        var i = this,
                            n = [];
                        return this.venues.forEach(function(t) {
                                var s = t.attributes.categoryAttributes;
                                s && s.PARKING_LOT ? n.push(s.PARKING_LOT[e] || i._defaultParkingAttributes[e]) : t === i.mainVenue && n.push(i._defaultParkingAttributes[e])
                            }),
                            n = _.flatten(n),
                            n = _.uniq(n),
                            t || (n = _.compact(n)),
                            n
                    }
                }, {
                    key: "createImagesList",
                    value: function() {
                        var e = [];
                        return this.venues.forEach(function(t) {
                                e.push(t.attributes.images)
                            }),
                            e = _.flatten(e),
                            _.compact(_.uniq(e))
                    }
                }, {
                    key: "_createImagesIdsList",
                    value: function() {
                        var e = this.createImagesList(w.IMAGES).filter(function(e) {
                            return e.attributes.approved
                        });
                        return _.compact(e.map(function(e) {
                            return e.attributes.id
                        }))
                    }
                }, {
                    key: "_getOpeningHours",
                    value: function() {
                        var e = this.venues.map(function(e) {
                            return e.getOpeningHours().map(g.default.formatOpeningHour)
                        });
                        return _.uniq(_.flatten(e))
                    }
                }, {
                    key: "_getSuggestedOpeningHours",
                    value: function() {
                        var e = this.mainVenue.getOpeningHours().map(g.default.formatOpeningHour);
                        return _.uniq(_.flatten(e))
                    }
                }, {
                    key: "_createProviderIdList",
                    value: function() {
                        var e = this.venues.map(function(e) {
                            return e.attributes.externalProviderIDs.map(function(e) {
                                return "object" === (void 0 === e ? "undefined" : (0,
                                    r.default)(e)) ? e.id || e.attributes.uuid : e
                            })
                        });
                        return _.compact(_.uniq(_.flatten(e)))
                    }
                }, {
                    key: "_getNameList",
                    value: function() {
                        var e = [];
                        return this.venues.forEach(function(t) {
                                e.push(t.attributes.name),
                                    e.push(t.attributes.aliases)
                            }),
                            e = _.flatten(e),
                            _.uniq(e)
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank();
                        return _.range(0, e + 1)
                    }
                }, {
                    key: "_getVenueAttribute",
                    value: function(e) {
                        var t = this.model;
                        switch (e) {
                            case w.CATEGORIES:
                                return [t.get("mainCategory")].concat(_.without(t.get(w.CATEGORIES), t.get("mainCategory")));
                            case w.ALIASES:
                                return _.without(t.get(w.ALIASES), t.get(w.NAME));
                            case w.DESCRIPTION:
                                return "CUSTOM_DESCRIPTION" === t.get(w.DESCRIPTION) ? t.get("CUSTOM_DESCRIPTION") : t.get(w.DESCRIPTION);
                            case w.EXTERNAL_PROVIDER_IDS:
                                return this._idsListToObjects(w.EXTERNAL_PROVIDER_IDS, t.get(w.EXTERNAL_PROVIDER_IDS));
                            case w.OPENING_HOURS:
                                return this._openingHoursToObjects(w.OPENING_HOURS);
                            case w.IMAGES:
                                return this._idsListToObjects(w.IMAGES, t.get(w.IMAGES));
                            default:
                                return t.get(e)
                        }
                    }
                }, {
                    key: "_getParkingAttribute",
                    value: function(e) {
                        return this.model.get(e)
                    }
                }, {
                    key: "getAttributeValue",
                    value: function(e) {
                        return k.indexOf(e) > -1 ? this._getVenueAttribute(e) : M.indexOf(e) > -1 ? this._getParkingAttribute(e) : void 0
                    }
                }, {
                    key: "_isAttributeChanged",
                    value: function(e) {
                        var t = this.model.get(e),
                            i = this.startModel.get(e);
                        switch (e) {
                            case w.CATEGORIES:
                                return !_.isEqual(i, t) || this.model.get("mainCategory") !== this.startModel.get("mainCategory");
                            default:
                                return !_.isEqual(i, t)
                        }
                    }
                }, {
                    key: "_idsListToObjects",
                    value: function(e, t) {
                        var i = this.venues.map(function(i) {
                            return i.attributes[e].map(function(e) {
                                if ("object" === (void 0 === e ? "undefined" : (0,
                                        r.default)(e))) {
                                    var i = e.id || e.attributes.uuid;
                                    if (t.indexOf(i) > -1)
                                        return e
                                }
                                return null
                            })
                        });
                        return _.uniq(_.compact(_.flatten(i)))
                    }
                }, {
                    key: "_openingHoursToObjects",
                    value: function(e) {
                        var t = [];
                        return this.venues.forEach(function(i) {
                                i.attributes.openingHours.length > 0 && i.getOpeningHours().models.forEach(function(i) {
                                    e.indexOf(g.default.formatOpeningHour(i)) > -1 && t.push(i)
                                })
                            }),
                            t = _.flatten(t),
                            t = _.uniq(t, !1, function(e) {
                                return g.default.formatOpeningHour(e)
                            }),
                            new m.Collection(t)
                    }
                }, {
                    key: "getNewAttributes",
                    value: function() {
                        var e = this,
                            t = {};
                        k.forEach(function(i) {
                            e._isAttributeChanged(i) && (t[i] = e.getAttributeValue(i))
                        });
                        var i = this.getAttributeValue(w.CATEGORIES);
                        if (i[0] === b.PARKING_LOT) {
                            t.categoryAttributes = {
                                PARKING_LOT: {}
                            };
                            var n = t.categoryAttributes.PARKING_LOT;
                            M.forEach(function(t) {
                                e._isAttributeChanged(t) && (n[t] = e.getAttributeValue(t))
                            })
                        }
                        return t.brand && -1 === i.indexOf(b.GAS_STATION) && delete t.brand,
                            t.id = this.mainVenue.attributes.id,
                            t
                    }
                }, {
                    key: "getSourceVenues",
                    value: function() {
                        return _.without(this.venues, this.mainVenue)
                    }
                }, {
                    key: "getTargetVenue",
                    value: function() {
                        return this.mainVenue
                    }
                }]),
                e
        }();
    t.default = S,
        t.VENUE_FIELDS = w,
        t.PARKING_FIELDS = E,
        t.CUSTOM_DESCRIPTION = "CUSTOM_DESCRIPTION",
        t.MAIN_CATEGORY = "mainCategory",
        t.LandmarkMerger = S
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Toolbar/templates/toolbar",
        className: "toolbar",
        events: {
            "click .mode-item": "_onModeItemClick"
        },
        bindings: {
            ":el": {
                observe: "mode",
                update: function(e, t) {
                    return e.find(".mode-item").removeClass("active").filter("[data-mode='" + t + "']").addClass("active")
                }
            }
        },
        regions: {
            search: "#search",
            layerSwitcher: ".layer-switcher-container",
            toolbar: "#edit-buttons"
        },
        ui: {
            modeSwitcher: "#mode-switcher"
        },
        onRender: function() {
            this.stickit()
        },
        _onModeItemClick: function(e) {
            var t = $(e.target).data("mode");
            this.model.requestModeChange(t).catch(function(e) {
                alert(e)
            })
        },
        setHouseNumbersState: function(e) {
            this.ui.modeSwitcher.toggle(!e)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(10),
        g = n(p),
        m = i(25),
        v = i(1044),
        _ = n(v),
        y = i(1045),
        b = n(y),
        w = new RegExp(/^\s?(-?\d+(?:\.\d+)?)\s*[,\s]{1}\s*(-?\d+(?:\.\d+)?)\s*$/),
        E = [{
            test: function(e) {
                return null !== w.exec(e)
            },
            search: function(e) {
                var t = w.exec(e);
                this._goToResult(new Backbone.Model({
                        venue: {
                            location: {
                                x: t[1],
                                y: t[2]
                            }
                        }
                    })),
                    W.Report.searchAction("search", "custom_lonlat")
            }
        }],
        k = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            searchField: "input",
                            searchForm: "form"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            results: ".search-result-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".search-query": "searchQuery",
                            ".search-result-region": {
                                observe: "showResults",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "keydown .search-query": "_onKeyDown",
                            "blur .search-query": "_hideResultsList"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.map = e.map,
                            this.model = new Backbone.Model({
                                showResults: !1,
                                showRetrieveError: !1,
                                showNoResultsError: !1,
                                searchQuery: ""
                            }),
                            this.collection = new Backbone.Collection([]),
                            this._registerEvents()
                    }
                }, {
                    key: "_getCurrentSelectionIndex",
                    value: function() {
                        return this.collection && this.collection.length > 0 ? this.collection.findIndex(function(e) {
                            return e.get("selected")
                        }) : -1
                    }
                }, {
                    key: "_registerEvents",
                    value: function() {
                        var e = this;
                        this._getSearchLayer().events.on({
                                moveend: this._onMapMove,
                                scope: this
                            }),
                            W.accelerators.events.register("search", this, function() {
                                return e.ui.searchField.focus()
                            })
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        var t = !1;
                        switch (e.which) {
                            case 38:
                                this._moveUp(),
                                    t = !0;
                                break;
                            case 40:
                                this._moveDown(),
                                    t = !0;
                                break;
                            case 27:
                                this._hideResultsList();
                                break;
                            case 13:
                                e.preventDefault(),
                                    e.stopPropagation(), -1 === this._getCurrentSelectionIndex() ? this._doSearch(this.model.get("searchQuery")) : this._goToSelection()
                        }
                        this.model.get("showResults") && t && e.preventDefault()
                    }
                }, {
                    key: "_moveUp",
                    value: function() {
                        var e = this._getCurrentSelectionIndex();
                        e--,
                        e < 0 && (e = this.collection.length - 1),
                            this._select(e)
                    }
                }, {
                    key: "_moveDown",
                    value: function() {
                        var e = this._getCurrentSelectionIndex();
                        e++,
                        e >= this.collection.length && (e = 0),
                            this._select(e)
                    }
                }, {
                    key: "_hideResultsList",
                    value: function() {
                        this.model.set("showResults", !1),
                            this._unselectAll()
                    }
                }, {
                    key: "_showResultsList",
                    value: function() {
                        var e = this;
                        this.showChildView("results", new Marionette.CollectionView({
                                collection: this.collection,
                                childView: _.default,
                                emptyView: b.default,
                                emptyViewOptions: function() {
                                    return {
                                        model: e.model
                                    }
                                },
                                onChildviewSelected: this._onChildViewSelected.bind(this)
                            })),
                            this.model.set("showResults", !0)
                    }
                }, {
                    key: "_unselectAll",
                    value: function() {
                        this.collection.forEach(function(e) {
                            e.set("selected", !1)
                        })
                    }
                }, {
                    key: "_select",
                    value: function(e) {
                        this._unselectAll(),
                            e >= 0 && e < this.collection.length && this.collection.at(e).set("selected", !0)
                    }
                }, {
                    key: "_unRegisterEvents",
                    value: function() {
                        this._getSearchLayer().events.un({
                            moveend: this._onMapMove,
                            scope: this
                        })
                    }
                }, {
                    key: "_getSearchLayer",
                    value: function() {
                        return this.map.getLayerByUniqueName(this.map.LAYER_UNIQUE_NAMES.SEARCH)
                    }
                }, {
                    key: "_doSearch",
                    value: function(e) {
                        this._parseCustomSearch(e) || this._serverRequest(e)
                    }
                }, {
                    key: "_parseCustomSearch",
                    value: function(e) {
                        for (var t = E, i = 0; i < t.length; i++) {
                            var n = t[i];
                            if (n.test.call(this, e))
                                return n.search.call(this, e), !0
                        }
                        return !1
                    }
                }, {
                    key: "_serverRequest",
                    value: function(e) {
                        var t = this,
                            i = this.map.getCenter().clone();
                        i = g.default.unproject(i);
                        var n = {
                            q: e,
                            max_distance_kms: W.Config.search.maxDistance,
                            lon: i.lon,
                            lat: i.lat,
                            format: "PROTO_JSON_FULL"
                        };
                        (0,
                            m.httpGet)(W.Config.search.server, n, {
                            dataType: "json"
                        }).then(function(e) {
                                t.collection.reset(e),
                                    t._showResultsList()
                            }).catch(function(e) {
                                t.collection.reset([]);
                                var i = 404 === e.status,
                                    n = !i;
                                t.model.set({
                                        showNoResultsError: i,
                                        showRetrieveError: n
                                    }),
                                    t._showResultsList()
                            }),
                            W.Report.searchAction("search", "server_request")
                    }
                }, {
                    key: "_onChildViewSelected",
                    value: function(e) {
                        this._goToResult(e),
                            W.Report.searchAction("result_click")
                    }
                }, {
                    key: "_goToSelection",
                    value: function() {
                        var e = this.collection.at(this._getCurrentSelectionIndex());
                        e && (this._goToResult(e),
                            W.Report.searchAction("result_enter"))
                    }
                }, {
                    key: "_onResultSelect",
                    value: function(e, t, i, n) {
                        this._goToResult(e)
                    }
                }, {
                    key: "_goToResult",
                    value: function(e) {
                        var t = e.get("venue"),
                            i = g.default.project(new OL.LonLat(t.location.x, t.location.y)),
                            n = new OL.Geometry.Point(i.lon, i.lat),
                            s = new OL.Feature.Vector(n),
                            r = this._getSearchLayer();
                        r.removeAllFeatures(),
                            this.map.setCenter(i, W.Config.search.resultZoom),
                            this.map.focus(),
                            r.addFeatures(s)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.map.setLayerVisibility(this.map.LAYER_UNIQUE_NAMES.SEARCH, !0),
                            this.stickit()
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.ui.searchField.removeAttr("disabled")
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.ui.searchField.attr("disabled", "disabled")
                    }
                }, {
                    key: "_onMapMove",
                    value: function(e) {
                        if (!e.zoomChanged) {
                            this._getSearchLayer().removeAllFeatures()
                        }
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._unRegisterEvents(),
                            this.map.setLayerVisibility(this.map.LAYER_UNIQUE_NAMES.SEARCH, !1)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Toolbar/templates/search"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = k,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(17),
        r = n(s),
        a = i(1046),
        o = n(a),
        l = i(1047),
        u = n(l),
        d = Marionette.Object.extend({
            initialize: function(e) {
                this.map = e.map,
                    this.actionManager = e.actionManager,
                    this.togglers = e.togglerTree,
                    this.controller = e.controller,
                    this.layerSwitcherLayout = new o.default,
                    this.state = new Backbone.Model,
                    this.treeState = new Backbone.Model,
                    this._readState(),
                    this.listenTo(this.state, "change", this._onChange),
                    this.listenTo(this.layerSwitcherLayout, "render", this._onRender)
            },
            _readState: function() {
                this.state.set(this.togglers.getState()),
                    this.treeState.set(this.togglers.getTreeState())
            },
            _onRender: function() {
                this._initAccelerators(),
                    this._renderLayerSwitcher()
            },
            destroy: function() {
                this._destroyAccelerators()
            },
            getLayout: function() {
                return this.layerSwitcherLayout
            },
            _renderLayerSwitcher: function() {
                this.layerSwitcherListView = new u.default({
                        state: this.state,
                        treeState: this.treeState,
                        map: this.map
                    }),
                    this.layerSwitcherLayout.showChildView("layersList", this.layerSwitcherListView)
            },
            _onChange: function() {
                this.togglers.setState(this.layerSwitcherListView.state.toJSON()),
                    this.togglers.writeToLocalStorage(),
                    this._updateApp()
            },
            _updateApp: function() {
                this.togglers.writeStateToApp({
                        map: this.map,
                        dataModel: W.model
                    }),
                    this.controller.updateModel(!0),
                    this._readState()
            },
            _getLayerSwitcherAccelerators: function() {
                return _.values(W.accelerators.Actions).filter(function(e) {
                    return null != e.toggler
                })
            },
            _initAccelerators: function() {
                var e = this;
                this._getLayerSwitcherAccelerators().forEach(function(t) {
                    e._registerLayerAccelerator(t.name, t.toggler)
                })
            },
            _destroyAccelerators: function() {
                var e = this;
                this._getLayerSwitcherAccelerators().forEach(function(t) {
                    e._unregisterLayerAccelerator(t.name, t.toggler)
                })
            },
            _registerLayerAccelerator: function(e, t) {
                W.accelerators.events.register(e, this, this._setLayerVisibility)
            },
            _unregisterLayerAccelerator: function(e, t) {
                W.accelerators.events.unregister(e, this, this._setLayerVisibility)
            },
            _setLayerVisibility: function(e) {
                var t = this.togglers.getState(),
                    i = e.action.toggler;
                this.togglers.setState((0,
                        r.default)({}, i, !t[i])),
                    this._updateApp()
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(40),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            actionManager: null,
            $unsavedActionsCounter: null,
            CounterAlertThreshold: 10,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("save", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("save", this, this.trigger),
                    this.actionManager = null,
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                var e = this.actionManager.unsavedActionsNum();
                this.$unsavedActionsCounter || (this.$unsavedActionsCounter = $("<div />").addClass("counter")),
                    this.$unsavedActionsCounter && (this.$unsavedActionsCounter.toggle(e > 0 && this.actionManager.isAllowedToSave()),
                        this.$unsavedActionsCounter.toggleClass("warning", e >= this.CounterAlertThreshold),
                        this.$unsavedActionsCounter.text(e)),
                    this.actionManager.canSave() ? this.enable() : this.disable()
            },
            onRender: function(e) {
                this.$unsavedActionsCounter && this.$unsavedActionsCounter.appendTo(e)
            },
            trigger: function() {
                this.enabled && this.editingMediator.get("editingEnabled") && W.commands.execute("save:start")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(20),
        v = n(m),
        y = function(e) {
            function t(e, i, n, s) {
                (0,
                    o.default)(this, t);
                var a = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, s));
                return a.bigJunctionID = e,
                    a.segments = i,
                    a.action = n,
                    a.connectedSegments = null,
                    a
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._updateConnectedSegments(this.segments, "from"),
                            t = this._updateConnectedSegments(this.segments, "to");
                        this.connectedSegments = e.concat(t)
                    }
                }, {
                    key: "_updateConnectedSegments",
                    value: function(e, i) {
                        for (var n = [], s = 0; s < e.length; s++) {
                            var r = e[s],
                                a = r.attributes[i + "NodeID"],
                                o = r.getConnectedSegmentsByDirection(i);
                            n.concat(o);
                            for (var l = 0; l < o.length; l++) {
                                var u = o[l];
                                if (u.isDrivable()) {
                                    var d = void 0;
                                    d = u.attributes.fromNodeID === a ? "from" : "to";
                                    var c = {},
                                        h = d + "Crossroads",
                                        f = _.clone(u.attributes[h]);
                                    t.ADD_JUNCTION_TO_SEGMENT === this.action ? _.contains(f, this.bigJunctionID) || f.push(this.bigJunctionID) : f = _.without(f, this.bigJunctionID),
                                        c[h] = f,
                                        this.doSubAction(new v.default(u, c, {
                                            dontSerialize: !0
                                        }))
                                }
                            }
                        }
                        return n
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.bigJunctions.get(this.bigJunctionID)]
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this.model.bigJunctions.get(this.bigJunctionID),
                            t = this.segments.map(function(e) {
                                return e.getUniqueID()
                            });
                        return e && t.push(e.getUniqueID()),
                            t
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.UpdateBigJunctionConnectedSegments")
                    }
                }]),
                t
        }(g.default);
    _.extend(y, {
            ADD_JUNCTION_TO_SEGMENT: "add",
            REMOVE_JUNCTION_FROM_SEGMENT: "remove"
        }),
        t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(1064),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Topbar/templates/loading-indicator",
        className: "loading-indicator",
        initialize: function() {
            return this.globalVent = this.options.globalVent,
                this.operations = [],
                this.globalVent.on("operationPending", this._onOperationPending, this),
                this.globalVent.on("operationDone", this._onOperationDone, this)
        },
        onDestroy: function() {
            return this.globalVent.off("operationPending", this._onOperationPending, this),
                this.globalVent.off("operationDone", this._onOperationDone, this)
        },
        _onOperationPending: function(e) {
            return this.operations.push(e.operation),
                this.render()
        },
        _onOperationDone: function(e) {
            return this.operations = _.without(this.operations, e.operation),
                this.render()
        },
        _hasOperations: function() {
            return this.operations.length > 0
        },
        serializeData: function() {
            var e = void 0;
            if (this._hasOperations()) {
                var t = _.last(this.operations);
                e = t.text || I18n.t(t.id)
            } else
                e = "";
            return {
                operationText: e
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(50),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            className: "location-info",
            template: "Waze/Modules/Topbar/templates/location-info",
            bindings: {
                ".full-address": "fullAddress"
            },
            initialize: function() {
                this._dataModel = this.options.dataModel,
                    this._map = this.options.map,
                    this.model = new Backbone.Model({
                        fullAddress: ""
                    }),
                    this._dataModel.events.register("mergeend", this, this._update),
                    this._dataModel.events.register("zoomend", this, this._update)
            },
            onDestroy: function() {
                this._dataModel.events.unregister("mergeend", this, this._update),
                    this._dataModel.events.unregister("zoomend", this, this._update)
            },
            _update: function() {
                var e = this._getAddressFromTopCity() || this._getAddressFromMainCountry() || "";
                this.model.set({
                    fullAddress: e
                })
            },
            _getAddressFromTopCity: function() {
                if (this._shouldShowTopCity()) {
                    return s.default.fromCityID(this._dataModel.segments.topCityID, this._dataModel).format({
                        formatStreet: !1
                    })
                }
                return null
            },
            _getAddressFromMainCountry: function() {
                var e = this._dataModel.countries.top;
                return null === e ? null : e.name
            },
            _shouldShowTopCity: function() {
                return this._map.getZoom() >= W.Config.segments.minDisplayZoom && null !== this._dataModel.segments.topCityID
            },
            onRender: function() {
                this.stickit()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        HOVER_DELAY_MS: 200,
        tagName: "li",
        template: "Waze/Modules/Topbar/templates/area-managers/item",
        events: {
            "mouseenter .area-manager-item": "_onAreaMouseEnter",
            "mouseleave .area-manager-item": "_onAreaMouseLeave"
        },
        triggers: {
            "click .area-manager-item": "onAreaClicked"
        },
        _hoverTimeoutId: null,
        _hovered: !1,
        _onAreaMouseEnter: function() {
            null == this._hoverTimeoutId && (this._hoverTimeoutId = window.setTimeout(this._onHoverTimeout.bind(this), this.HOVER_DELAY_MS))
        },
        _onAreaMouseLeave: function() {
            return this._clearHoverTimeout(),
                this._hovered = !1,
                this.trigger("onAreaMouseLeave", {
                    model: this.model
                })
        },
        _onHoverTimeout: function() {
            return this._hovered = !0,
                this.trigger("onAreaMouseEnter", {
                    model: this.model
                }),
                this._clearHoverTimeout()
        },
        _clearHoverTimeout: function() {
            this._hoverTimeoutId && window.clearTimeout(this._hoverTimeoutId),
                this._hoverTimeoutId = null
        },
        onBeforeDestroy: function() {
            return this._hovered && (this._hovered = !1,
                    this.trigger("onAreaMouseLeave", {
                        model: this.model
                    })),
                this._clearHoverTimeout()
        }
    });
    t.default = n,
        e.exports = t.default
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
    i(432),
        e.exports = i(1093)
}, function(e, t, i) {
    "use strict";
    i(433),
        i(33),
        i(745),
        i(748),
        i(755),
        i(756),
        i(757),
        i(758),
        i(759);
    var n = i(760),
        s = i(1091);
    i(16),
        i(1092),
        $(document).ready(function() {
            W.app = new n,
                W.prefs = new s,
                W.prefs.fetch(),
                W.app.start()
        })
}, function(e, t, i) {
    "use strict";
    OL.Map.prototype.Z_INDEX_BASE.MarkerOverlay = 850,
        OL.Map.prototype.Z_INDEX_BASE.TopLayer = 9999,
        OL.Geometry.LineString.prototype.distanceTo = function(e, t) {
            var i = !(t && !1 === t.edge),
                n = i && t && t.details,
                s = void 0,
                r = {},
                a = void 0,
                o = Number.POSITIVE_INFINITY,
                l = void 0,
                u = void 0;
            if (e instanceof OpenLayers.Geometry.Point) {
                var d = this.getSortedSegments(),
                    c = e.x,
                    h = e.y,
                    f = void 0;
                for (l = 0,
                    u = d.length; l < u; ++l)
                    if (f = d[l],
                        s = OpenLayers.Geometry.distanceToSegment(e, f),
                        s.distance < o) {
                        if (o = s.distance,
                            r = s,
                            a = f,
                            0 === o)
                            break
                    } else if (f.x2 > c && (h > f.y1 && h < f.y2 || h < f.y1 && h > f.y2))
                    break;
                r = n ? {
                    distance: r.distance,
                    x0: r.x,
                    y0: r.y,
                    x1: c,
                    y1: h,
                    line: a
                } : r.distance
            } else if (e instanceof OpenLayers.Geometry.LineString) {
                var p = this.getSortedSegments(),
                    g = e.getSortedSegments(),
                    m = void 0,
                    v = void 0,
                    _ = void 0,
                    y = void 0,
                    b = void 0,
                    w = g.length,
                    E = {
                        point: !0
                    };
                e: for (l = 0,
                    u = p.length; l < u; ++l) {
                    m = p[l],
                        y = m.x1,
                        b = m.y1;
                    for (var k = 0; k < w; ++k) {
                        if (v = g[k],
                            _ = OpenLayers.Geometry.segmentsIntersect(m, v, E)) {
                            o = 0,
                                r = {
                                    distance: 0,
                                    x0: _.x,
                                    y0: _.y,
                                    x1: _.x,
                                    y1: _.y
                                };
                            break e
                        }
                        s = OpenLayers.Geometry.distanceToSegment({
                                x: y,
                                y: b
                            }, v),
                            s.distance < o && (o = s.distance,
                                r = {
                                    distance: o,
                                    x0: y,
                                    y0: b,
                                    x1: s.x,
                                    y1: s.y
                                })
                    }
                }
                if (n || (r = r.distance),
                    0 !== o && m) {
                    s = e.distanceTo(new OpenLayers.Geometry.Point(m.x2, m.y2), t);
                    var M = n ? s.distance : s;
                    M < o && (r = n ? {
                        distance: o,
                        x0: s.x1,
                        y0: s.y1,
                        x1: s.x0,
                        y1: s.y0
                    } : M)
                }
            } else
                r = e.distanceTo(this, t),
                n && (r = {
                    distance: r.distance,
                    x0: r.x1,
                    y0: r.y1,
                    x1: r.x0,
                    y1: r.y0
                });
            return r
        },
        OL.Geometry.Collection.prototype.distanceTo = function(e, t) {
            for (var i = !(t && !1 === t.edge), n = i && t && t.details, s = void 0, r = void 0, a = void 0, o = Number.POSITIVE_INFINITY, l = 0, u = this.components.length; l < u && (s = this.components[l].distanceTo(e, t), !((a = n ? s.distance : s) < o && (o = a,
                    r = s,
                    n && (r.model = this.components[l].model),
                    0 === o))); ++l)
            ;
            return r
        },
        OL.Geometry.Point.prototype.toLonLat = function() {
            return new OL.LonLat(this.x, this.y)
        },
        OL.LonLat.prototype.toPoint = function() {
            return new OL.Geometry.Point(this.lon, this.lat)
        },
        OL.Geometry.LinearRing.prototype.getCentroid = function() {
            if (this.components) {
                var e = this.components.length;
                if (e > 0 && e <= 2)
                    return this.components[0].clone();
                if (e > 2) {
                    var t = 0,
                        i = 0,
                        n = this.components[0].x,
                        s = this.components[0].y,
                        r = -1 * this.getArea(),
                        a = void 0,
                        o = void 0,
                        l = void 0;
                    if (0 !== r) {
                        for (a = 0; a < e - 1; a++) {
                            var u = this.components[a],
                                d = this.components[a + 1];
                            t += (u.x + d.x - 2 * n) * ((u.x - n) * (d.y - s) - (d.x - n) * (u.y - s)),
                                i += (u.y + d.y - 2 * s) * ((u.x - n) * (d.y - s) - (d.x - n) * (u.y - s))
                        }
                        o = n + t / (6 * r),
                            l = s + i / (6 * r)
                    } else {
                        for (a = 0; a < e - 1; a++)
                            t += this.components[a].x,
                            i += this.components[a].y;
                        o = t / (e - 1),
                            l = i / (e - 1)
                    }
                    return new OpenLayers.Geometry.Point(o, l)
                }
                return null
            }
        },
        OL.Handler.Drag.prototype.checkModifiers = function(e) {
            return null === this.keyMask || ((e.shiftKey ? OpenLayers.Handler.MOD_SHIFT : 0) | (e.ctrlKey ? OpenLayers.Handler.MOD_CTRL : 0) | (e.metaKey ? OpenLayers.Handler.MOD_CTRL : 0) | (e.altKey ? OpenLayers.Handler.MOD_ALT : 0)) === this.keyMask
        }
}, function(e, t, i) {
    e.exports = {
        default: i(435),
        __esModule: !0
    }
}, function(e, t, i) {
    i(66),
        i(57),
        e.exports = i(443)
}, , , , , , , , function(e, t, i) {
    var n = i(103),
        s = i(28)("iterator"),
        r = i(67);
    e.exports = i(14).isIterable = function(e) {
        var t = Object(e);
        return void 0 !== t[s] || "@@iterator" in t || r.hasOwnProperty(n(t))
    }
}, function(e, t, i) {
    i(66),
        i(57),
        e.exports = i(445)
}, function(e, t, i) {
    var n = i(34),
        s = i(147);
    e.exports = i(14).getIterator = function(e) {
        var t = s(e);
        if ("function" != typeof t)
            throw TypeError(e + " is not iterable!");
        return n(t.call(e))
    }
}, function(e, t, i) {
    i(447),
        e.exports = i(14).Object.entries
}, function(e, t, i) {
    var n = i(23),
        s = i(192)(!0);
    n(n.S, "Object", {
        entries: function(e) {
            return s(e)
        }
    })
}, function(e, t, i) {
    e.exports = {
        default: i(449),
        __esModule: !0
    }
}, function(e, t, i) {
    i(450),
        e.exports = i(14).Object.assign
}, function(e, t, i) {
    var n = i(23);
    n(n.S + n.F, "Object", {
        assign: i(451)
    })
}, function(e, t, i) {
    "use strict";
    var n = i(68),
        s = i(104),
        r = i(87),
        a = i(69),
        o = i(138),
        l = Object.assign;
    e.exports = !l || i(47)(function() {
            var e = {},
                t = {},
                i = Symbol(),
                n = "abcdefghijklmnopqrst";
            return e[i] = 7,
                n.split("").forEach(function(e) {
                    t[e] = e
                }),
                7 != l({}, e)[i] || Object.keys(l({}, t)).join("") != n
        }) ? function(e, t) {
            for (var i = a(e), l = arguments.length, u = 1, d = s.f, c = r.f; l > u;)
                for (var h, f = o(arguments[u++]), p = d ? n(f).concat(d(f)) : n(f), g = p.length, m = 0; g > m;)
                    c.call(f, h = p[m++]) && (i[h] = f[h]);
            return i
        } :
        l
}, function(e, t, i) {
    i(453),
        e.exports = i(14).Object.getPrototypeOf
}, function(e, t, i) {
    var n = i(69),
        s = i(191);
    i(105)("getPrototypeOf", function() {
        return function(e) {
            return s(n(e))
        }
    })
}, function(e, t, i) {
    i(455);
    var n = i(14).Object;
    e.exports = function(e, t, i) {
        return n.defineProperty(e, t, i)
    }
}, function(e, t, i) {
    var n = i(23);
    n(n.S + n.F * !i(42), "Object", {
        defineProperty: i(38).f
    })
}, , , , , , , , , , function(e, t, i) {
    i(466),
        e.exports = i(14).Object.setPrototypeOf
}, function(e, t, i) {
    var n = i(23);
    n(n.S, "Object", {
        setPrototypeOf: i(467).set
    })
}, function(e, t, i) {
    var n = i(29),
        s = i(34),
        r = function(e, t) {
            if (s(e), !n(t) && null !== t)
                throw TypeError(t + ": can't set as prototype!")
        };
    e.exports = {
        set: Object.setPrototypeOf || ("__proto__" in {} ? function(e, t, n) {
            try {
                n = i(44)(Function.call, i(107).f(Object.prototype, "__proto__").set, 2),
                    n(e, []),
                    t = !(e instanceof Array)
            } catch (e) {
                t = !0
            }
            return function(e, i) {
                return r(e, i),
                    t ? e.__proto__ = i : n(e, i),
                    e
            }
        }({}, !1) : void 0),
        check: r
    }
}, function(e, t, i) {
    i(469);
    var n = i(14).Object;
    e.exports = function(e, t) {
        return n.create(e, t)
    }
}, function(e, t, i) {
    var n = i(23);
    n(n.S, "Object", {
        create: i(85)
    })
}, function(e, t, i) {
    i(108),
        i(57),
        i(66),
        i(471),
        i(474),
        i(475),
        e.exports = i(14).Promise
}, function(e, t, i) {
    "use strict";
    var n, s, r, a, o = i(83),
        l = i(24),
        u = i(44),
        d = i(103),
        c = i(23),
        h = i(29),
        f = i(55),
        p = i(152),
        g = i(88),
        m = i(196),
        v = i(197).set,
        _ = i(472)(),
        y = i(153),
        b = i(199),
        w = i(473),
        E = i(200),
        k = l.TypeError,
        M = l.process,
        S = M && M.versions,
        T = S && S.v8 || "",
        C = l.Promise,
        I = "process" == d(M),
        A = function() {},
        D = s = y.f,
        R = !! function() {
            try {
                var e = C.resolve(1),
                    t = (e.constructor = {})[i(28)("species")] = function(e) {
                        e(A, A)
                    };
                return (I || "function" == typeof PromiseRejectionEvent) && e.then(A) instanceof t && 0 !== T.indexOf("6.6") && -1 === w.indexOf("Chrome/66")
            } catch (e) {}
        }(),
        O = function(e) {
            var t;
            return !(!h(e) || "function" != typeof(t = e.then)) && t
        },
        L = function(e, t) {
            if (!e._n) {
                e._n = !0;
                var i = e._c;
                _(function() {
                    for (var n = e._v, s = 1 == e._s, r = 0; i.length > r;)
                        ! function(t) {
                            var i, r, a, o = s ? t.ok : t.fail,
                                l = t.resolve,
                                u = t.reject,
                                d = t.domain;
                            try {
                                o ? (s || (2 == e._h && N(e),
                                        e._h = 1), !0 === o ? i = n : (d && d.enter(),
                                        i = o(n),
                                        d && (d.exit(),
                                            a = !0)),
                                    i === t.promise ? u(k("Promise-chain cycle")) : (r = O(i)) ? r.call(i, l, u) : l(i)) : u(n)
                            } catch (e) {
                                d && !a && d.exit(),
                                    u(e)
                            }
                        }(i[r++]);
                    e._c = [],
                        e._n = !1,
                        t && !e._h && x(e)
                })
            }
        },
        x = function(e) {
            v.call(l, function() {
                var t, i, n, s = e._v,
                    r = P(e);
                if (r && (t = b(function() {
                            I ? M.emit("unhandledRejection", s, e) : (i = l.onunhandledrejection) ? i({
                                promise: e,
                                reason: s
                            }) : (n = l.console) && n.error && n.error("Unhandled promise rejection", s)
                        }),
                        e._h = I || P(e) ? 2 : 1),
                    e._a = void 0,
                    r && t.e)
                    throw t.v
            })
        },
        P = function(e) {
            return 1 !== e._h && 0 === (e._a || e._c).length
        },
        N = function(e) {
            v.call(l, function() {
                var t;
                I ? M.emit("rejectionHandled", e) : (t = l.onrejectionhandled) && t({
                    promise: e,
                    reason: e._v
                })
            })
        },
        V = function(e) {
            var t = this;
            t._d || (t._d = !0,
                t = t._w || t,
                t._v = e,
                t._s = 2,
                t._a || (t._a = t._c.slice()),
                L(t, !0))
        },
        F = function(e) {
            var t, i = this;
            if (!i._d) {
                i._d = !0,
                    i = i._w || i;
                try {
                    if (i === e)
                        throw k("Promise can't be resolved itself");
                    (t = O(e)) ? _(function() {
                        var n = {
                            _w: i,
                            _d: !1
                        };
                        try {
                            t.call(e, u(F, n, 1), u(V, n, 1))
                        } catch (e) {
                            V.call(n, e)
                        }
                    }): (i._v = e,
                        i._s = 1,
                        L(i, !1))
                } catch (e) {
                    V.call({
                        _w: i,
                        _d: !1
                    }, e)
                }
            }
        };
    R || (C = function(e) {
                p(this, C, "Promise", "_h"),
                    f(e),
                    n.call(this);
                try {
                    e(u(F, this, 1), u(V, this, 1))
                } catch (e) {
                    V.call(this, e)
                }
            },
            n = function(e) {
                this._c = [],
                    this._a = void 0,
                    this._s = 0,
                    this._d = !1,
                    this._v = void 0,
                    this._h = 0,
                    this._n = !1
            },
            n.prototype = i(154)(C.prototype, {
                then: function(e, t) {
                    var i = D(m(this, C));
                    return i.ok = "function" != typeof e || e,
                        i.fail = "function" == typeof t && t,
                        i.domain = I ? M.domain : void 0,
                        this._c.push(i),
                        this._a && this._a.push(i),
                        this._s && L(this, !1),
                        i.promise
                },
                catch: function(e) {
                    return this.then(void 0, e)
                }
            }),
            r = function() {
                var e = new n;
                this.promise = e,
                    this.resolve = u(F, e, 1),
                    this.reject = u(V, e, 1)
            },
            y.f = D = function(e) {
                return e === C || e === a ? new r(e) : s(e)
            }
        ),
        c(c.G + c.W + c.F * !R, {
            Promise: C
        }),
        i(86)(C, "Promise"),
        i(201)("Promise"),
        a = i(14).Promise,
        c(c.S + c.F * !R, "Promise", {
            reject: function(e) {
                var t = D(this);
                return (0,
                        t.reject)(e),
                    t.promise
            }
        }),
        c(c.S + c.F * (o || !R), "Promise", {
            resolve: function(e) {
                return E(o && this === a ? C : this, e)
            }
        }),
        c(c.S + c.F * !(R && i(202)(function(e) {
            C.all(e).catch(A)
        })), "Promise", {
            all: function(e) {
                var t = this,
                    i = D(t),
                    n = i.resolve,
                    s = i.reject,
                    r = b(function() {
                        var i = [],
                            r = 0,
                            a = 1;
                        g(e, !1, function(e) {
                                var o = r++,
                                    l = !1;
                                i.push(void 0),
                                    a++,
                                    t.resolve(e).then(function(e) {
                                        l || (l = !0,
                                            i[o] = e,
                                            --a || n(i))
                                    }, s)
                            }),
                            --a || n(i)
                    });
                return r.e && s(r.v),
                    i.promise
            },
            race: function(e) {
                var t = this,
                    i = D(t),
                    n = i.reject,
                    s = b(function() {
                        g(e, !1, function(e) {
                            t.resolve(e).then(i.resolve, n)
                        })
                    });
                return s.e && n(s.v),
                    i.promise
            }
        })
}, function(e, t, i) {
    var n = i(24),
        s = i(197).set,
        r = n.MutationObserver || n.WebKitMutationObserver,
        a = n.process,
        o = n.Promise,
        l = "process" == i(82)(a);
    e.exports = function() {
        var e, t, i, u = function() {
            var n, s;
            for (l && (n = a.domain) && n.exit(); e;) {
                s = e.fn,
                    e = e.next;
                try {
                    s()
                } catch (n) {
                    throw e ? i() : t = void 0,
                        n
                }
            }
            t = void 0,
                n && n.enter()
        };
        if (l)
            i = function() {
                a.nextTick(u)
            };
        else if (!r || n.navigator && n.navigator.standalone)
            if (o && o.resolve) {
                var d = o.resolve(void 0);
                i = function() {
                    d.then(u)
                }
            } else
                i = function() {
                    s.call(n, u)
                };
        else {
            var c = !0,
                h = document.createTextNode("");
            new r(u).observe(h, {
                    characterData: !0
                }),
                i = function() {
                    h.data = c = !c
                }
        }
        return function(n) {
            var s = {
                fn: n,
                next: void 0
            };
            t && (t.next = s),
                e || (e = s,
                    i()),
                t = s
        }
    }
}, function(e, t, i) {
    var n = i(24),
        s = n.navigator;
    e.exports = s && s.userAgent || ""
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(14),
        r = i(24),
        a = i(196),
        o = i(200);
    n(n.P + n.R, "Promise", {
        finally: function(e) {
            var t = a(this, s.Promise || r.Promise),
                i = "function" == typeof e;
            return this.then(i ? function(i) {
                    return o(t, e()).then(function() {
                        return i
                    })
                } :
                e, i ? function(i) {
                    return o(t, e()).then(function() {
                        throw i
                    })
                } :
                e)
        }
    })
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(153),
        r = i(199);
    n(n.S, "Promise", {
        try: function(e) {
            var t = s.f(this),
                i = r(e);
            return (i.e ? t.reject : t.resolve)(i.v),
                t.promise
        }
    })
}, function(e, t, i) {
    var n = i(14),
        s = n.JSON || (n.JSON = {
            stringify: JSON.stringify
        });
    e.exports = function(e) {
        return s.stringify.apply(s, arguments)
    }
}, function(e, t, i) {
    i(57),
        i(478),
        e.exports = i(14).Array.from
}, function(e, t, i) {
    "use strict";
    var n = i(44),
        s = i(23),
        r = i(69),
        a = i(194),
        o = i(195),
        l = i(101),
        u = i(203),
        d = i(147);
    s(s.S + s.F * !i(202)(function(e) {
        Array.from(e)
    }), "Array", {
        from: function(e) {
            var t, i, s, c, h = r(e),
                f = "function" == typeof this ? this : Array,
                p = arguments.length,
                g = p > 1 ? arguments[1] : void 0,
                m = void 0 !== g,
                v = 0,
                _ = d(h);
            if (m && (g = n(g, p > 2 ? arguments[2] : void 0, 2)),
                void 0 == _ || f == Array && o(_))
                for (t = l(h.length),
                    i = new f(t); t > v; v++)
                    u(i, v, m ? g(h[v], v) : h[v]);
            else
                for (c = _.call(h),
                    i = new f; !(s = c.next()).done; v++)
                    u(i, v, m ? a(c, g, [s.value, v], !0) : s.value);
            return i.length = v,
                i
        }
    })
}, function(e, t, i) {
    i(480),
        e.exports = i(14).Reflect.construct
}, function(e, t, i) {
    var n = i(23),
        s = i(85),
        r = i(55),
        a = i(34),
        o = i(29),
        l = i(47),
        u = i(481),
        d = (i(24).Reflect || {}).construct,
        c = l(function() {
            function e() {}
            return !(d(function() {}, [], e) instanceof e)
        }),
        h = !l(function() {
            d(function() {})
        });
    n(n.S + n.F * (c || h), "Reflect", {
        construct: function(e, t) {
            r(e),
                a(t);
            var i = arguments.length < 3 ? e : r(arguments[2]);
            if (h && !c)
                return d(e, t, i);
            if (e == i) {
                switch (t.length) {
                    case 0:
                        return new e;
                    case 1:
                        return new e(t[0]);
                    case 2:
                        return new e(t[0], t[1]);
                    case 3:
                        return new e(t[0], t[1], t[2]);
                    case 4:
                        return new e(t[0], t[1], t[2], t[3])
                }
                var n = [null];
                return n.push.apply(n, t),
                    new(u.apply(e, n))
            }
            var l = i.prototype,
                f = s(o(l) ? l : Object.prototype),
                p = Function.apply.call(e, f, t);
            return o(p) ? p : f
        }
    })
}, function(e, t, i) {
    "use strict";
    var n = i(55),
        s = i(29),
        r = i(198),
        a = [].slice,
        o = {},
        l = function(e, t, i) {
            if (!(t in o)) {
                for (var n = [], s = 0; s < t; s++)
                    n[s] = "a[" + s + "]";
                o[t] = Function("F,a", "return new F(" + n.join(",") + ")")
            }
            return o[t](e, i)
        };
    e.exports = Function.bind || function(e) {
        var t = n(this),
            i = a.call(arguments, 1),
            o = function() {
                var n = i.concat(a.call(arguments));
                return this instanceof o ? l(t, n.length, n) : r(t, n, e)
            };
        return s(t.prototype) && (o.prototype = t.prototype),
            o
    }
}, function(e, t, i) {
    i(483),
        e.exports = i(14).Object.keys
}, function(e, t, i) {
    var n = i(69),
        s = i(68);
    i(105)("keys", function() {
        return function(e) {
            return s(n(e))
        }
    })
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./Waze/Modules/BigJunction/templates/junction-entry-item.hamlc": 485,
        "./Waze/Modules/BigJunction/templates/junction-entry-layout.hamlc": 486,
        "./Waze/Modules/Chat/View/chat.hamlc": 487,
        "./Waze/Modules/Chat/View/chat_message.hamlc": 488,
        "./Waze/Modules/Chat/View/chat_user.hamlc": 489,
        "./Waze/Modules/Cities/templates/feature_editor.hamlc": 490,
        "./Waze/Modules/Cities/templates/layer_switcher.hamlc": 491,
        "./Waze/Modules/Closures/templates/edit.hamlc": 492,
        "./Waze/Modules/Closures/templates/item.hamlc": 493,
        "./Waze/Modules/Closures/templates/layout.hamlc": 494,
        "./Waze/Modules/Closures/templates/list.hamlc": 495,
        "./Waze/Modules/Comments/templates/feature_editor.hamlc": 496,
        "./Waze/Modules/Comments/templates/name_editor.hamlc": 497,
        "./Waze/Modules/Conversation/templates/item.hamlc": 498,
        "./Waze/Modules/Conversation/templates/list.hamlc": 499,
        "./Waze/Modules/Conversation/templates/text.hamlc": 500,
        "./Waze/Modules/ElementHistory/templates/history_main.hamlc": 501,
        "./Waze/Modules/ElementHistory/templates/tx_item.hamlc": 502,
        "./Waze/Modules/ElementHistory/templates/tx_object_main.hamlc": 503,
        "./Waze/Modules/ElementHistory/templates/tx_object_related.hamlc": 504,
        "./Waze/Modules/Feed/templates/feed.hamlc": 505,
        "./Waze/Modules/Feed/templates/feed_group.hamlc": 506,
        "./Waze/Modules/Feed/templates/issue_item.hamlc": 507,
        "./Waze/Modules/Feed/templates/message_item.hamlc": 508,
        "./Waze/Modules/Feed/templates/notification_detail.hamlc": 509,
        "./Waze/Modules/Feed/templates/notification_item.hamlc": 510,
        "./Waze/Modules/GeoLocation/templates/pan_button.hamlc": 511,
        "./Waze/Modules/Lanes/templates/direction_lanes.hamlc": 512,
        "./Waze/Modules/Lanes/templates/segment_lanes.hamlc": 513,
        "./Waze/Modules/LayerSwitcher/templates/checkbox.hamlc": 514,
        "./Waze/Modules/LayerSwitcher/templates/layer-switcher.hamlc": 515,
        "./Waze/Modules/LayerSwitcher/templates/layout.hamlc": 516,
        "./Waze/Modules/LayerSwitcher/templates/module-togglers.hamlc": 517,
        "./Waze/Modules/LayerSwitcher/templates/text-checkboxes.hamlc": 589,
        "./Waze/Modules/LayerSwitcher/templates/togglers-tree.hamlc": 590,
        "./Waze/Modules/Login/templates/email_verification.hamlc": 591,
        "./Waze/Modules/Login/templates/login_main.hamlc": 592,
        "./Waze/Modules/Login/templates/login_view.hamlc": 593,
        "./Waze/Modules/MTE/templates/contributors/item.hamlc": 594,
        "./Waze/Modules/MTE/templates/contributors/list.hamlc": 595,
        "./Waze/Modules/MTE/templates/item_edit/closures.hamlc": 596,
        "./Waze/Modules/MTE/templates/item_edit/loading.hamlc": 597,
        "./Waze/Modules/MTE/templates/item_edit/names.hamlc": 598,
        "./Waze/Modules/MTE/templates/item_edit/twitter_urls.hamlc": 599,
        "./Waze/Modules/MTE/templates/mte_edit_view.hamlc": 600,
        "./Waze/Modules/MTE/templates/mte_item_view.hamlc": 601,
        "./Waze/Modules/MTE/templates/mte_list.hamlc": 602,
        "./Waze/Modules/MTE/templates/sidebar.hamlc": 603,
        "./Waze/Modules/MTE/templates/toolbar_buttons.hamlc": 604,
        "./Waze/Modules/MTE/templates/topbar.hamlc": 605,
        "./Waze/Modules/MapControls/templates/mouse_position.hamlc": 606,
        "./Waze/Modules/MapControls/templates/overlay-buttons.hamlc": 607,
        "./Waze/Modules/MapControls/templates/permalink.hamlc": 608,
        "./Waze/Modules/MapControls/templates/zoombar.hamlc": 609,
        "./Waze/Modules/MergeLandmark/templates/description_selection_view.hamlc": 610,
        "./Waze/Modules/MergeLandmark/templates/external_providers_view.hamlc": 611,
        "./Waze/Modules/MergeLandmark/templates/image_item_view.hamlc": 612,
        "./Waze/Modules/MergeLandmark/templates/images_selection_view.hamlc": 613,
        "./Waze/Modules/MergeLandmark/templates/layout.hamlc": 614,
        "./Waze/Modules/MergeLandmark/templates/main_selection_view.hamlc": 615,
        "./Waze/Modules/MergeLandmark/templates/multi_selection_view.hamlc": 616,
        "./Waze/Modules/MergeLandmark/templates/single_selection_view.hamlc": 617,
        "./Waze/Modules/NavigationPoint/FeatureEditor/edit.hamlc": 618,
        "./Waze/Modules/NavigationPoint/FeatureEditor/item.hamlc": 619,
        "./Waze/Modules/NavigationPoint/FeatureEditor/layout.hamlc": 620,
        "./Waze/Modules/Problems/templates/_navigation.hamlc": 621,
        "./Waze/Modules/Problems/templates/closure_description.hamlc": 622,
        "./Waze/Modules/Problems/templates/edit.hamlc": 623,
        "./Waze/Modules/Restrictions/templates/drive_profile_blocked_edit.hamlc": 624,
        "./Waze/Modules/Restrictions/templates/drive_profile_free_edit.hamlc": 625,
        "./Waze/Modules/Restrictions/templates/drive_profile_free_item.hamlc": 626,
        "./Waze/Modules/Restrictions/templates/restriction_edit.hamlc": 627,
        "./Waze/Modules/Restrictions/templates/restriction_edit_segment.hamlc": 628,
        "./Waze/Modules/Restrictions/templates/restriction_edit_validation.hamlc": 629,
        "./Waze/Modules/Restrictions/templates/restrictions_driving_segments.hamlc": 630,
        "./Waze/Modules/Restrictions/templates/restrictions_list_item.hamlc": 631,
        "./Waze/Modules/Restrictions/templates/restrictions_main.hamlc": 632,
        "./Waze/Modules/Restrictions/templates/restrictions_pickup.hamlc": 633,
        "./Waze/Modules/Restrictions/templates/restrictions_summary_segments.hamlc": 634,
        "./Waze/Modules/Restrictions/templates/restrictions_summary_table.hamlc": 635,
        "./Waze/Modules/Restrictions/templates/restrictions_summary_turn.hamlc": 636,
        "./Waze/Modules/Restrictions/templates/timeframe_edit.hamlc": 637,
        "./Waze/Modules/Save/templates/error_item.hamlc": 638,
        "./Waze/Modules/Save/templates/error_list.hamlc": 639,
        "./Waze/Modules/Save/templates/success.hamlc": 640,
        "./Waze/Modules/StreetView/templates/street-view-button.hamlc": 641,
        "./Waze/Modules/StreetView/templates/street-view.hamlc": 642,
        "./Waze/Modules/Toolbar/templates/search-empty-view.hamlc": 643,
        "./Waze/Modules/Toolbar/templates/search-result-item.hamlc": 644,
        "./Waze/Modules/Toolbar/templates/search.hamlc": 645,
        "./Waze/Modules/Toolbar/templates/toolbar-item-group.hamlc": 646,
        "./Waze/Modules/Toolbar/templates/toolbar-item-tooltip.hamlc": 647,
        "./Waze/Modules/Toolbar/templates/toolbar-item.hamlc": 648,
        "./Waze/Modules/Toolbar/templates/toolbar.hamlc": 649,
        "./Waze/Modules/Topbar/templates/area-managers/item.hamlc": 650,
        "./Waze/Modules/Topbar/templates/area-managers/layout.hamlc": 651,
        "./Waze/Modules/Topbar/templates/area-managers/main-list.hamlc": 652,
        "./Waze/Modules/Topbar/templates/area-managers/rest-list.hamlc": 653,
        "./Waze/Modules/Topbar/templates/layout.hamlc": 654,
        "./Waze/Modules/Topbar/templates/loading-indicator.hamlc": 655,
        "./Waze/Modules/Topbar/templates/location-info.hamlc": 656,
        "./templates/add_update_details.hamlc": 657,
        "./templates/additional_details.hamlc": 658,
        "./templates/address/alt-street.hamlc": 659,
        "./templates/address/edit-alt-street.hamlc": 660,
        "./templates/address/edit.hamlc": 661,
        "./templates/archive-panel.hamlc": 662,
        "./templates/archive-sessions.hamlc": 663,
        "./templates/big-junction-edit.hamlc": 664,
        "./templates/camera-edit.hamlc": 665,
        "./templates/chrome_autofill_off.hamlc": 666,
        "./templates/editable-areas.hamlc": 667,
        "./templates/focus-buttons.hamlc": 668,
        "./templates/house-number.hamlc": 669,
        "./templates/house-numbers-lightbox.hamlc": 670,
        "./templates/instruction-override.hamlc": 671,
        "./templates/keyboard_shortcuts/list.hamlc": 672,
        "./templates/keyboard_shortcuts/modal.hamlc": 673,
        "./templates/location-message.hamlc": 674,
        "./templates/location-switcher.hamlc": 675,
        "./templates/lock/edit.hamlc": 676,
        "./templates/login/sandbox-message.hamlc": 677,
        "./templates/map.hamlc": 678,
        "./templates/merge_venues/feature_editor/landmark-item-view.hamlc": 679,
        "./templates/merge_venues/feature_editor/merge-venues.hamlc": 680,
        "./templates/node-edit.hamlc": 681,
        "./templates/opening_hours/add.hamlc": 682,
        "./templates/opening_hours/item.hamlc": 683,
        "./templates/opening_hours/layout.hamlc": 684,
        "./templates/place_updates/actions.hamlc": 685,
        "./templates/place_updates/add_details.hamlc": 686,
        "./templates/place_updates/add_image.hamlc": 687,
        "./templates/place_updates/add_venue.hamlc": 688,
        "./templates/place_updates/changed_field.hamlc": 689,
        "./templates/place_updates/changed_field_item.hamlc": 690,
        "./templates/place_updates/changed_field_parking_lot.hamlc": 691,
        "./templates/place_updates/delete_venue.hamlc": 692,
        "./templates/place_updates/external_provider/item.hamlc": 693,
        "./templates/place_updates/external_provider/list.hamlc": 694,
        "./templates/place_updates/flag.hamlc": 695,
        "./templates/place_updates/image.hamlc": 696,
        "./templates/place_updates/image_dialog.hamlc": 697,
        "./templates/place_updates/item.hamlc": 698,
        "./templates/place_updates/layout.hamlc": 699,
        "./templates/place_updates/panel_header.hamlc": 700,
        "./templates/place_updates/place_details.hamlc": 701,
        "./templates/place_updates/update_venue.hamlc": 702,
        "./templates/prefs-panel.hamlc": 703,
        "./templates/segment/average-speed-camera.hamlc": 704,
        "./templates/segment/edit-panel-attributes-form.hamlc": 705,
        "./templates/segment/edit-panel.hamlc": 706,
        "./templates/segment/flag-attribute.hamlc": 707,
        "./templates/segment/junction-exit-layout.hamlc": 708,
        "./templates/segment/junction-exit.hamlc": 709,
        "./templates/segment/routing.hamlc": 710,
        "./templates/segment/speed-limit.hamlc": 711,
        "./templates/segment/tts-playback-popover.hamlc": 712,
        "./templates/segment/tts-playback.hamlc": 713,
        "./templates/sidebar/advanced-tools.hamlc": 714,
        "./templates/sidebar/links.hamlc": 715,
        "./templates/sidebar/sidebar.hamlc": 716,
        "./templates/sidebar/user-details.hamlc": 717,
        "./templates/sidebar/user-info.hamlc": 718,
        "./templates/sidebar/user-permissions-tooltip.hamlc": 719,
        "./templates/sidebar/user-sandbox.hamlc": 720,
        "./templates/snapshot-message.hamlc": 721,
        "./templates/snapshot-toggler.hamlc": 722,
        "./templates/tips/watch-tutorial.hamlc": 723,
        "./templates/turn-arrow-tooltip-timeframes.hamlc": 725,
        "./templates/turn-arrow-tooltip.hamlc": 726,
        "./templates/turn-arrow.hamlc": 727,
        "./templates/tutorial-lightbox.hamlc": 728,
        "./templates/user-greeting.hamlc": 729,
        "./templates/util/day-checkboxes.hamlc": 730,
        "./templates/util/toggle-checkboxes.hamlc": 731,
        "./templates/venue/alias.hamlc": 732,
        "./templates/venue/aliases-layout.hamlc": 733,
        "./templates/venue/category-tag.hamlc": 734,
        "./templates/venue/external-provider/item.hamlc": 735,
        "./templates/venue/external-provider/list.hamlc": 736,
        "./templates/venue/suggested-categories.hamlc": 737,
        "./templates/venue/venue-categories.hamlc": 738,
        "./templates/venue/venue-edit-general.hamlc": 739,
        "./templates/venue/venue-edit-more-info-contact.hamlc": 740,
        "./templates/venue/venue-edit-more-info-parking-lot.hamlc": 741,
        "./templates/venue/venue-edit-more-info-services.hamlc": 742,
        "./templates/venue/venue-edit-more-info.hamlc": 743,
        "./templates/venue/venue-edit.hamlc": 744
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 484
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='entry'>\n<i class='arrow fa fa-arrow-circle-right'></i>\n<span class='street-name'>" + t(e(this.streetName)) + "</span>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + t(e(this.t("edit.big_junction.entries") + ":"))),
                            i.push("<div class='list'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='chat-toggle'>\n<button class='toggle'></button>\n</div>\n<div id='chat'>\n<div class='header'>\n<span class='room-name single-room-label'></span>\n<div class='dropdown room-selector'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='room-name'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu rooms'></ul>\n</div>\n<div class='dropdown visibilty-menu'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='status'>" + t(e(this.status)) + "</span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu visibility'>\n<li class='visibility-visible'>\n<a href='#'>" + t(e(this.t("chat.visible"))) + "</a>\n</li>\n<li class='visibility-invisible'>\n<a href='#'>" + t(e(this.t("chat.invisible"))) + "</a>\n</li>\n</ul>\n</div>\n<button class='minimize' aria-hidden='true' type='button'>_</button>\n</div>\n<div class='not-connected-message'>Not Connected</div>\n<div class='chat-body'>\n<div class='messages'>\n<div class='message-list'></div>\n<a class='unread-messages-notification' href='#'></a>\n<div class='new-message'>\n<input class='message-input' placeholder='" + t(e(this.t("chat.placeholder"))) + "' data-auto-rtl>\n</div>\n</div>\n<div class='users'>\n<ul class='list-unstyled user-list'></ul>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='from'>" + t(e(this.from.name)) + "</div>\n<div class='body'>"),
                            a = this.body.split("\n"),
                            n = 0,
                            s = a.length; n < s; n++)
                            r = a[n],
                            i.push("<div>" + t(e(r)) + "</div>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<a class='" + ["user", "" + t(e(this.className))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#' data-id='" + t(e(this.id)) + "'>\n<div class='rank'>"),
                            this.rank < 6 ? i.push("" + t(e(this.rank + 1))) : i.push("&nbsp;"),
                            i.push("</div>\n<i class='crosshair fa fa-crosshairs'></i>\n<div class='username'>" + t(e(this.name)) + "</div>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='city-feature-editor'>\n<div class='feature-editor-header'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.city.title"))) + "</span>\n</div>\n<div class='preview'>\n<span class='city-name'>"),
                            i.push("" + t(e(this.city.attributes.name))),
                            i.push("</span>"),
                            this.canEdit && i.push("<a class='edit-button'>\n<i class='waze-icon-edit'></i>\n</a>"),
                            i.push("</div>\n</div>\n<form class='attributes-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("edit.address.city")))),
                            i.push("</label>\n<div class='controls'>\n<input class='city-name form-control' type='text' autocomplete='off'>\n</div>\n</div>\n<div class='action-buttons'>\n<button class='save-button waze-btn waze-btn-blue waze-btn-smaller' type='button'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n<div class='loading waze-loader-sm'></div>\n</form>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return e = this.__cleanValue,
                            t = [],
                            i = "Waze/Modules/LayerSwitcher/templates/checkbox",
                            n = "Waze/Modules/LayerSwitcher/templates/text-checkboxes",
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_CITIES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_CITY_NAMES"),
                                items: [{
                                    id: "ITEM_CITY_NAMES",
                                    iconName: "visible"
                                }]
                            }))),
                            t.push("</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["edit-closure", "" + t(e(this.newClosure ? "new" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<form class='form' action='#' method='post'>\n<div class='form-group'>\n<label class='control-label' for='closure_reason'>" + t(e(this.t("closures.fields.reason"))) + "</label>\n<div class='controls'>\n<input class='form-control' type='text' name='closure_reason'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_direction'>" + t(e(this.t("closures.fields.direction"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='closure_direction'></select>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_startDate'>" + t(e(this.t("closures.fields.startDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='form-control start-date' type='text' name='closure_startDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text' name='closure_startTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_endDate'>" + t(e(this.t("closures.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='end-date form-control' type='text' name='closure_endDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' name='closure_endTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>"),
                            this.canEditMTE && (i.push("<div class='form-group'>\n<label class='control-label control-label-inline' for='closure_eventId'>" + t(e(this.t("closures.fields.event"))) + "</label>\n<i class='mte-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.mte"))) + "'></i>\n<div class='controls'>\n<div class='mte-message mte-message-empty'>"),
                                i.push("" + t(e(this.t("closures.no_events_empty_dates")))),
                                i.push("</div>\n<select class='form-control' name='closure_eventId' required='" + t(e(this.newClosure)) + "'></select>\n</div>\n</div>")),
                            i.push("<div class='checkbox controls-container'>\n<input id='closure-permanent-checkbox' type='checkbox' name='closure_permanent'>\n<label class='control-label-inline' for='closure-permanent-checkbox'>" + t(e(this.t("closures.fields.permanent"))) + "</label>\n<i class='permanent-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.permanent"))) + "'></i>\n</div>\n<input type='submit' style='display: none;'>\n<ul class='additional-attributes list-unstyled'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.closures[0]))),
                            null != this.getProvider() && i.push("<li>" + t(e(this.t("closures.fields.provider", {
                                provider: this.getProvider()
                            }))) + "</li>"),
                            i.push("</ul>\n<div class='message' style='display: none'></div>\n<div class='action-buttons'>\n<div class='save-button waze-btn waze-btn-blue waze-btn-smaller'>"),
                            this.newClosure ? i.push("" + t(e(this.t("edit.add")))) : i.push("" + t(e(this.t("toolbar.save.title")))),
                            i.push("</div>\n<div class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent'>" + t(e(this.t("edit.cancel"))) + "</div>\n</div>\n</form>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='details section'>"),
                            this.canEdit && (i.push("<div class='buttons'>"),
                                this.showLocateButton && i.push("<a class='locate'>\n<i class='waze-icon-crosshair'></i>\n</a>"),
                                i.push("<a class='delete'>\n<i class='waze-icon-trash'></i>\n</a>\n<a class='edit'>\n<i class='waze-icon-edit'></i>\n</a>\n</div>"),
                                this.showApplyToAll && i.push("<a class='apply-to-all' href='#'>" + t(e(this.t("closures.apply_to_all"))) + "</a>")),
                            i.push("<div class='direction'>"),
                            this.direction === this.DIRECTION.A_TO_B ? i.push("<div class='dir-icon dir-icon-a'>A</div>\n<div class='dir-sep'></div>\n<div class='dir-icon dir-icon-b'>B</div>") : this.direction === this.DIRECTION.B_TO_A ? i.push("<div class='dir-icon dir-icon-b'>B</div>\n<div class='dir-sep'></div>\n<div class='dir-icon dir-icon-a'>A</div>") : (i.push("<div class='dir-label span'>"),
                                i.push("" + t(e(this.t("segment.direction.label." + this.direction)))),
                                i.push("</div>")),
                            i.push("</div>\n<div class='dates row section'>\n<div class='col-xs-6 start-date'>\n<div class='date-label'>" + t(e(this.t("closures.headers.start"))) + "</div>"),
                            this.isStartDateSet ? i.push("<div class='date'>" + t(e(this.formatDate(this.startDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.startDate))) + "</div>") : i.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            i.push("</div>\n<div class='col-xs-6 end-date'>\n<div class='date-label'>" + t(e(this.t("closures.headers.end"))) + "</div>"),
                            this.isEndDateSet ? i.push("<div class='date'>" + t(e(this.formatDate(this.endDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.endDate))) + "</div>") : i.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            i.push("</div>\n</div>\n</div>"),
                            (this.eventName || this.description) && (i.push("<div class='bottom'>"),
                                this.eventName && (i.push("<div class='event-name'>\n<i class='waze-icon-event'></i>"),
                                    i.push("" + e(this.eventName)),
                                    i.push("</div>")),
                                this.description && i.push("<div class='description'>" + t(e(this.description)) + "</div>"),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='main'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.canEdit && this.canAdd || !this.showSaveMessage ? this.showActivateRepoMessage ? i.push("<div class='alert alert-danger'>" + t(e(this.t("closures.enable_layer"))) + "</div>") : !this.canEdit && this.canAdd && i.push("<div class='alert alert-danger'>" + t(e(this.t("closures.lock_message", {
                                lockLevel: this.h.formatRank(this.lockLevel)
                            }))) + "</div>") : i.push("<div class='alert alert-gray'>" + t(e(this.t("closures.save_your_changes"))) + "</div>"),
                            i.push("<ul class='full-closures list-unstyled'></ul>"),
                            this.showPartialClosuresHeader && i.push("<div class='partial-closures-header' style='display: none;'>" + t(e(this.t("closures.partial_header"))) + "</div>"),
                            i.push("<ul class='list-unstyled partial-closures'></ul>\n<div class='message' style='display: none'></div>"),
                            this.canEdit && this.canAdd && (i.push("<div class='add-closure-button waze-btn waze-btn-white'>"),
                                i.push("" + t(e(this.t("closures.add")))),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = function(e) {
                                return e.replace(/\n/g, "&#x000A;")
                            },
                            i = [],
                            i.push("<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.map_comment.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane'></div>\n<div class='name-editor-region'></div>\n<div class='conversation-region'></div>\n<form class='attributes-form side-panel-section'>"),
                            this.comment.isNew() && i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control new-subject-input' type='text' name='subject' value='" + t(e(this.comment.attributes.subject)) + "'>\n<div class='input-max-length new-subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='form-control new-body-input' name='body'>" + n(t(e(this.comment.attributes.body))) + "</textarea>\n<div class='input-max-length new-body-max-length'></div>\n</div>\n</div>"),
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control waze-radio-container'>"),
                            this.editable)
                            for (r = s = 0,
                                a = this.userRank; 0 <= a ? s <= a : s >= a; r = 0 <= a ? ++s : --s)
                                i.push("" + e(this.h.radio({
                                    label: this.h.formatRank(r),
                                    name: "lockRank",
                                    dataType: "numeric",
                                    value: r,
                                    currentValue: this.comment.attributes.lockRank,
                                    enable: this.editable
                                })));
                        else
                            i.push("<div class='rank-value'>" + t(e(this.h.formatRank(this.comment.attributes.lockRank))) + "</div>");
                        return i.push("</div>\n</div>\n</div>\n<div class='end-date-form-group form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<span class='input-group-addon'>\n<input class='no-end-date' type='checkbox'>\n</span>\n<input class='end-date form-control' type='text' placeholder='" + t(e(this.t("edit.placeholder.date"))) + "'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' placeholder='" + t(e(this.t("edit.placeholder.time"))) + "'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='clear-btn'>" + t(e(this.t("edit.map_comment.clear"))) + "</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.type"))) + "</label>\n<div class='controls'>\n<div class='btn-group' data-toggle='buttons'>\n<label class='" + ["btn", "btn-default", "point-btn", "" + t(e(this.comment.isPoint() ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.comment.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(this.comment.isPoint())) + "' value='true'>"),
                            i.push("" + t(e(this.t("edit.map_comment.type.point")))),
                            i.push("</label>\n<label class='" + ["btn", "btn-default", "area-btn", "" + t(e(this.comment.isPoint() ? void 0 : "active"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.comment.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(!this.comment.isPoint())) + "' value='false'>"),
                            i.push("" + t(e(this.t("edit.map_comment.type.area")))),
                            i.push("</label>\n</div>\n</div>\n</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.comment.attributes))),
                            i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.comment.getID()
                            }))) + "</li>\n</ul>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='preview'>\n<div class='subject-preview'></div>\n<div class='reported-date'>"),
                            i.push("" + t(e(this.createdDate))),
                            i.push("</div>\n<div class='body-preview'></div>\n</div>\n<form class='edit'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control subject-input' type='text'>\n<div class='input-max-length subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='body-textarea form-control'></textarea>\n<div class='body-max-length input-max-length'></div>\n</div>\n</div>\n<button class='apply-button waze-btn waze-btn-blue waze-btn-smaller' type='submit'>"),
                            i.push("" + t(e(this.t("edit.map_comment.name_edit.apply")))),
                            i.push("</button>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["comment-content", "" + t(e(this.isByReporter() ? "reporter" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='comment-title'>\n<span class='username'>" + t(e(this.getUserName())) + "</span>\n<span class='date'>" + t(e(I18n.l("date.formats.long", this.createdOn))) + "</span>\n</div>\n<div class='text'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='no-comments'>"),
                            i.push("" + t(e(this.t("conversation.no_comments")))),
                            i.push("<br>"),
                            i.push("" + t(e(this.t("conversation.ask")))),
                            i.push("</div>\n<ul class='comment-list list-unstyled'></ul>\n<form class='clearfix new-comment-form'>\n<div class='controls-container'>\n<textarea class='form-control new-comment-text' placeholder='" + t(e(this.t("conversation.enter"))) + "' required></textarea>\n<div class='input-max-length new-comment-max-length'></div>\n<button class='send-button waze-btn waze-btn-blue' type='submit'>" + t(e(this.t("conversation.send"))) + "</button>"),
                            i.push("" + e(this.h.checkbox(this.t("conversation.follow"), "follow", "on"))),
                            i.push("</div>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.isHref)
                            i.push("<a href='" + t(e(this.text)) + "' target='_blank'>" + t(e(this.text)) + "</a>");
                        else
                            for (o = this.getCommentLines(),
                                s = n = 0,
                                r = o.length; n < r; s = ++n)
                                a = o[s],
                                i.push("" + t(e(a))),
                                s < this.getCommentNumber() - 1 && i.push("<br>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='elementHistoryContainer'>\n<div class='toggleHistory'>\n<div class='showHistory'>"),
                            i.push("" + t(e(this.t("element_history.show")))),
                            i.push("</div>\n<div class='hideHistory'>"),
                            i.push("" + t(e(this.t("element_history.hide")))),
                            i.push("</div>\n</div>\n<div class='historyContent'>\n<div class='history-message historyEmpty'>"),
                            i.push("" + t(e(this.t("element_history.no_history")))),
                            i.push("</div>\n<div class='transactions'></div>\n<div class='loadingHistory'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='loadMoreContainer'>\n<div class='btn btn-block btn-default loadMoreHistory'>"),
                            i.push("" + t(e(this.t("element_history.load_more")))),
                            i.push("</div>\n</div>\n<div class='history-message historyError'>"),
                            i.push("" + t(e(this.t("element_history.history_error")))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='tx-header'>\n<div class='tx-summary'>\n<div class='tx-author-date'>"),
                            i.push("" + t(e(this.h.dateOnlyString(this.date)))),
                            i.push("" + t(e(this.t("element_history.changed_by")))),
                            i.push("" + e(this.userProfile)),
                            i.push("</div>\n<div class='tx-preview'>"),
                            this.mainObjectAction && (i.push("<div>"),
                                i.push("" + t(e(this.mainObjectAction))),
                                i.push("</div>")),
                            this.previewItems && (i.push("<div>"),
                                i.push("" + t(e(this.previewItems))),
                                i.push("</div>")),
                            i.push("</div>\n</div>\n<div class='flex-noshrink tx-toggle-closed'></div>\n</div>\n<div class='tx-content'>\n<div class='main-object-region tx-changes'></div>\n<div class='related-objects-region tx-changes'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            a = this.changedAttributes,
                            s = 0,
                            r = a.length; s < r; s++)
                            n = a[s],
                            i.push("<li class='" + ["tx-changed-attribute", "" + t(e(n.isVisual ? "ca-visual" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='ca-name'>"),
                            i.push("" + t(e(n.displayName))),
                            i.push("</div>\n<div class='" + ["ca-preview", "ca-" + t(e(n.name))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            n.oldValue && n.newValue ? (i.push("" + t(e(this.t("element_history.changed_from")))),
                                i.push("<span class='ca-value ca-value-old'>"),
                                n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : i.push("" + t(e(n.oldValue))),
                                i.push("</span>\n<span>"),
                                i.push("" + t(e(this.t("element_history.changed_to")))),
                                i.push("</span>\n<span class='ca-value ca-value-new'>"),
                                n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : i.push("" + t(e(n.newValue))),
                                i.push("</span>")) : (n.oldValue && (i.push("<span class='ca-value ca-value-old'>"),
                                    n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : i.push("" + t(e(n.oldValue))),
                                    i.push("</span>\n<span>"),
                                    i.push("" + t(e(this.t("element_history.actions.default.DELETE")))),
                                    i.push("</span>")),
                                n.newValue && (i.push("<span class='ca-value ca-value-new'>"),
                                    n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : i.push("" + t(e(n.newValue))),
                                    i.push("</span>\n<span>"),
                                    i.push("" + t(e(this.t("element_history.actions.default.ADD")))),
                                    i.push("</span>"))),
                            i.push("</div>\n</li>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<span class='ro-name'>"),
                            i.push("" + t(e(this.displayName))),
                            i.push("</span>\n<span class='ro-value'>"),
                            i.push("" + t(e(this.displayValue))),
                            i.push("</span>\n<span class='ro-action'>"),
                            i.push("" + t(e(this.actionText))),
                            i.push("</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='feed-content'>\n<div class='feed-first-time-messages'></div>\n<div class='feed-mentoring'></div>\n<div class='feed-notifications'></div>\n<div class='feed-messages'></div>\n<div class='feed-issues'></div>\n</div>\n<div class='feed-load-section'>\n<div class='feed-loading sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='feed-empty'>\n<div class='feed-empty-message'>"),
                            i.push("" + t(e(this.t("feed.empty")))),
                            i.push("</div>\n<div class='feed-empty-image'></div>\n</div>\n<div class='feed-more'>\n<div class='feed-load-more waze-btn waze-btn-small waze-btn-white'>"),
                            i.push("" + t(e(this.t("feed.load_more")))),
                            i.push("</div>\n<div class='feed-loading-more sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n</div>\n<div class='feed-first-time-load'>\n<div class='feed-loading-text-container'>\n<div class='feed-loading-first-time-text'>" + t(e(this.t("feed.load_first_time"))) + "</div>\n<div class='dots-animation'></div>\n</div>\n<div class='feed-loading-first sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='toggle'>\n<a class='counter' href='#'></a>\n<span class='icon-toggle'></span>\n</div>\n<ul class='feed-list'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='inner'>\n<div class='delete'></div>\n<div class='icon_container'>\n<div class='icon'></div>\n</div>\n<div class='save-alert'></div>\n<div class='content'>\n<div class='title'>\n<span class='type'>" + t(e(this.type)) + "</span>\n<span class='timestamp'>"),
                            i.push("      " + t(e(this.timestamp))),
                            i.push("</span>\n</div>\n<div class='subtext'>"),
                            this.place && i.push("<span class='place'>" + t(e("" + this.place)) + "</span>"),
                            this.street && (this.place && i.push("<span>" + t(e(", ")) + "</span>"),
                                i.push("<span class='street'>" + t(e("" + this.street)) + "</span>")),
                            this.city && i.push("<span class='city'>" + t(e(", " + this.city)) + "</span>"),
                            this.state && i.push("<span class='state'>" + t(e(", " + this.state)) + "</span>"),
                            this.country && i.push("<span class='country'>" + t(e(", " + this.country)) + "</span>"),
                            i.push("</div>"),
                            this.motivation && (i.push("<div class='motivation'>"),
                                i.push("" + t(e(this.motivation))),
                                i.push("</div>")),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='inner'>\n<div class='delete'></div>\n<div class='image'></div>\n<div class='content'>\n<div class='title'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>\n<div class='from'>"),
                            i.push("" + t(e(this.t("feed.messages.from")))),
                            i.push("<div class='sender'>"),
                            i.push("" + t(e(this.sender))),
                            i.push("</div>\n</div>\n<div class='timestamp'>"),
                            i.push("    " + t(e(this.timestamp))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='header'>\n<div class='buttons'>\n<div class='close-panel'></div>\n<div class='delete'></div>\n</div>\n<div class='title'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>\n<div class='timestamp'>"),
                            i.push("" + t(e(this.timestamp))),
                            i.push("</div>\n</div>\n<div class='body'>"),
                            this.imageURL && i.push("<section class='image'>\n<img src='" + t(e(this.imageURL)) + "'>\n</section>"),
                            this.subject && i.push("<section class='heading'>\n<h2>" + t(e(this.subject)) + "</h2>\n</section>"),
                            this.sender && (i.push("<section class='sender'>"),
                                i.push("" + t(e(this.t("feed.messages.from")))),
                                i.push("<a href='" + t(e(this.senderURL)) + "' target='_blank'>" + t(e(this.sender)) + "</a>\n</section>")),
                            i.push("<section class='content'>"),
                            i.push("" + t(e(this.message))),
                            i.push("</section>"),
                            this.linkText && i.push("<section class='link'>\n<a href='" + t(e(this.linkURL)) + "' target='_blank'>" + t(e(this.linkText)) + "</a>\n</section>"),
                            i.push("</div>\n<div class='footer'>\n<section class='buttons'>"),
                            this.buttonText && (i.push("<a class='waze-plain-btn' href='" + t(e(this.buttonURL)) + "' target='_blank'>"),
                                i.push("" + t(e(this.buttonText))),
                                i.push("</a>")),
                            this.secondButtonText && (i.push("<a class='waze-plain-btn' href='" + t(e(this.secondButtonURL)) + "' target='_blank'>"),
                                i.push("" + t(e(this.secondButtonText))),
                                i.push("</a>")),
                            this.hasNext ? (i.push("<div class='next waze-plain-btn'>"),
                                i.push("" + t(e(this.t("feed.details.next")))),
                                i.push("</div>")) : (i.push("<div class='done waze-plain-btn'>"),
                                i.push("" + t(e(this.t("feed.details.done")))),
                                i.push("</div>")),
                            i.push("</section>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='inner'>\n<div class='delete'></div>\n<div class='image_container'>\n<div class='image'></div>\n</div>\n<div class='content'>\n<div class='title'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>\n<div class='subtext'>"),
                            i.push("" + t(e(this.shortMessage))),
                            i.push("</div>\n<div class='timestamp'>"),
                            i.push("    " + t(e(this.timestamp))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='geolocation-control-container'>\n<button class='pan-button'>\n<span></span>\n</button>\n<button class='btn btn-default loading' disabled='" + t(e(!0)) + "'>\n<span class='fa-spin'></span>\n</button>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='direction-lanes'>\n<div class='lane-instruction lane-instruction-from'>\n<div class='drawing'>\n<div class='line'></div>\n<div class='letter-circle'></div>\n</div>\n<div class='instruction'>\n<span class='heading'></span>\n<span class='street-name'></span>\n</div>\n</div>\n<div class='lane-instruction lane-instruction-to'>\n<div class='drawing'>\n<div class='line'></div>\n<div class='letter-circle'></div>\n</div>\n<div class='instruction'>"),
                            i.push("" + t(e(this.t("lanes.reach_intersection")))),
                            i.push("<div class='lane-arrows'></div>\n<div>\n<a class='edit-lane-guidance' href='javascript:;'></a>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<label class='control-label'>" + t(e(this.t("lanes.title"))) + "</label>\n<div class='fwd-lanes'></div>\n<div class='rev-lanes'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            n = "layer-switcher-" + this.id.toLowerCase(),
                            i.push("<div class='" + ["toggler", "controls-container", "" + t(e(this.classes))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='" + ["toggle", "" + t(e(n))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' id='" + t(e(n)) + "' type='checkbox'>\n<label for='" + t(e(n)) + "'>\n<span class='label-text'>" + t(e(this.t("layer_switcher.togglers." + this.id))) + "</span>\n</label>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='layer-switcher-container'>\n<div class='toolbar-button waze-btn waze-btn-white waze-icon-layers'></div>\n<div class='menu not-visible'>\n<div class='more-options-toggle'>\n<label>\n<div class='title'></div>\n<input type='checkbox' name='show-more-options'>\n</label>\n<div class='pinned text-checkbox'>\n<input id='layer-switcher-pinned-input' type='checkbox' name='pinned'>\n<label for='layer-switcher-pinned-input' title='" + t(e(this.t("Pin layer switcher"))) + "'>\n<i class='waze-icon-pin'></i>\n</label>\n</div>\n</div>\n<div class='scrollable'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/LayerSwitcher/templates/togglers-tree"))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='layer-switcher-container'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, a, o, l, u, d, c, h;
                        for (e = this.__cleanValue,
                            t = [],
                            s = "Waze/Modules/LayerSwitcher/templates/checkbox",
                            n = i(35),
                            a = n.getLayerSwitcherConfig(),
                            o = 0,
                            u = a.length; o < u; o++)
                            for (r = a[o],
                                c = r.togglers,
                                l = 0,
                                d = c.length; l < d; l++)
                                h = c[l],
                                h.parent === this.id && (t.push("<li>"),
                                    h.template ? t.push("" + e(this.renderPartial(h.template))) : t.push("" + e(this.renderPartial(s, {
                                        id: h.id
                                    }))),
                                    t.push("</li>"));
                        return t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./Cities/Manifest": 519,
        "./Comments/Manifest": 584
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 518
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r, a = i(17),
        o = n(a),
        l = i(204),
        u = i(520),
        d = n(u),
        c = i(205),
        h = n(c),
        f = i(521),
        p = n(f),
        g = i(582),
        m = n(g),
        v = i(35),
        _ = n(v),
        y = i(583),
        b = n(y),
        w = i(230),
        E = n(w),
        k = i(121),
        M = n(k),
        S = i(168),
        T = n(S),
        C = _.default.LAYER_TYPE,
        I = {
            entryPoint: {
                callback: "init",
                class: b.default
            },
            feature: {
                repositoryName: "cities",
                repositoryClass: p.default,
                featureType: l.OBJECT_TYPE,
                modelClass: h.default,
                featureEditorClass: m.default,
                repositoryConfig: {
                    onDemand: !1,
                    storePersistentSeparately: !0
                }
            },
            layers: [{
                type: C.FEATURE,
                uniqueName: l.FEATURES_LAYER_NAME,
                options: {
                    objectType: l.OBJECT_TYPE,
                    selectable: !0,
                    visibleByDefault: !1
                }
            }, {
                type: C.MARKER,
                uniqueName: l.MARKERS_LAYER_NAME,
                options: {
                    name: I18n.t("layers.name.city_names"),
                    objectType: l.OBJECT_TYPE,
                    visibleByDefault: !1,
                    markerClass: d.default,
                    filter: function(e) {
                        return e.showMarker()
                    }
                }
            }, {
                type: C.RASTER,
                uniqueName: l.RASTER_LAYER_NAME,
                options: {
                    uniqueName: "cities",
                    visible: !1,
                    type: "mapnik",
                    options: {
                        alpha: !1,
                        opacity: 1,
                        transitionEffect: null,
                        isBaseLayer: !1,
                        zoomOffset: 12,
                        draggable: !0,
                        gutter: 0
                    },
                    params: {
                        clientLayer: "cities"
                    }
                }
            }],
            layerSwitcher: {
                togglers: [{
                    parent: l.GROUP_DISPLAY,
                    toggler: E.default.of(l.GROUP_CITIES, [M.default.of(l.ITEM_CITY_NAMES, new T.default(l.MARKERS_LAYER_NAME))], new T.default(l.RASTER_LAYER_NAME)),
                    template: "Waze/Modules/Cities/templates/layer_switcher"
                }],
                defaultVisibility: (s = {},
                    (0,
                        o.default)(s, l.GROUP_CITIES, !1),
                    (0,
                        o.default)(s, l.ITEM_CITY_NAMES, !1),
                    s),
                bitNumbers: (r = {},
                    (0,
                        o.default)(r, l.GROUP_CITIES, 27),
                    (0,
                        o.default)(r, l.ITEM_CITY_NAMES, 28),
                    r)
            }
        };
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(26),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = OL.Class(OL.Marker, {
            initialize: function(e) {
                return this.model = e,
                    this.icon = new s.default("city-name-marker"),
                    this.lonlat = e.attributes.geometry.toLonLat(),
                    OL.Marker.prototype.initialize.call(this, this.lonlat, this.icon),
                    this.render(),
                    this
            },
            render: function() {
                this.icon.div.textContent = this.model.attributes.name,
                    this.icon.div.attributes.cityId = this.model.getID()
            },
            highlight: function() {
                this.icon.div.classList.add("selected")
            },
            unhighlight: function() {
                this.icon.div.classList.remove("selected")
            }
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(73),
        y = n(_),
        b = i(157),
        w = n(b),
        E = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "initialize",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "initialize", this).apply(this, arguments),
                            this.descartes = new w.default(W.map)
                    }
                }, {
                    key: "getByAttributes",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = (0,
                                r.default)(e);
                        return 0 === t.length ? [] : this.getObjectArray().filter(function(i) {
                            return t.every(function(t) {
                                return i.attributes[t] === e[t]
                            })
                        })
                    }
                }, {
                    key: "getValidCities",
                    value: function() {
                        return this.getObjectArray().filter(function(e) {
                            return e.hasName() && !e.isEmpty()
                        })
                    }
                }, {
                    key: "getCityExists",
                    value: function(e, t, i) {
                        var n;
                        return (n = this.descartes).getCityExists.apply(n, Array.prototype.slice.call(arguments).concat([this.currentDataBounds]))
                    }
                }]),
                t
        }(y.default);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(523),
        __esModule: !0
    }
}, function(e, t, i) {
    i(524);
    var n = i(14).Object;
    e.exports = function(e, t) {
        return n.getOwnPropertyDescriptor(e, t)
    }
}, function(e, t, i) {
    var n = i(43),
        s = i(107).f;
    i(105)("getOwnPropertyDescriptor", function() {
        return function(e, t) {
            return s(n(e), t)
        }
    })
}, function(e, t, i) {
    i(526),
        e.exports = i(14).Object.values
}, function(e, t, i) {
    var n = i(23),
        s = i(192)(!1);
    n(n.S, "Object", {
        values: function(e) {
            return s(e)
        }
    })
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e(t, i) {
                (0,
                    o.default)(this, e);
                var n = isNaN(t) ? 0 : t;
                this.step = isNaN(i) || 0 === i ? 1 : i,
                    this.lastValue = n - this.step
            }
            return (0,
                    u.default)(e, [{
                    key: "last",
                    value: function() {
                        return this.lastValue
                    }
                }, {
                    key: "next",
                    value: function() {
                        return this.lastValue += this.step,
                            this.lastValue
                    }
                }, {
                    key: "peek",
                    value: function() {
                        return this.lastValue + this.step
                    }
                }]),
                e
        }();
    (0,
        r.default)(d.prototype, {
        CLASS_NAME: "Waze.Model.IDGenerator"
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.TYPE_TO_CLASS = t.TYPE_TO_FACTORY = void 0;
    var s = i(158),
        r = i(535),
        a = n(r),
        o = i(554),
        l = n(o),
        u = i(557),
        d = n(u),
        c = i(30),
        h = n(c),
        f = i(218),
        p = n(f),
        g = i(563),
        m = n(g),
        v = i(564),
        _ = n(v),
        y = i(565),
        b = n(y),
        w = i(93),
        E = n(w),
        k = i(71),
        M = n(k),
        S = i(167),
        T = n(S),
        C = i(224),
        I = n(C),
        A = i(574),
        D = n(A),
        R = i(226),
        O = n(R),
        L = i(227),
        x = n(L),
        P = i(575),
        N = n(P),
        V = i(576),
        F = n(V),
        U = i(117),
        j = n(U),
        B = i(118),
        G = n(B),
        W = i(228),
        z = n(W),
        H = i(119),
        $ = n(H);
    t.TYPE_TO_FACTORY = {
            issues: a.default,
            problems: l.default,
            problemDetails: d.default
        },
        t.TYPE_TO_CLASS = {
            segments: h.default,
            nodes: p.default,
            bigJunctions: s.BigJunction,
            updateRequestSessions: m.default,
            archives: _.default,
            archiveSessions: b.default,
            venues: E.default,
            users: M.default,
            cameras: T.default,
            mapUpdateRequests: I.default,
            houseNumbers: D.default,
            roadClosures: O.default,
            junctions: x.default,
            managedAreas: N.default,
            userAreas: F.default,
            notifications: j.default,
            majorTrafficEvents: G.default,
            restrictedAreas: z.default,
            transactions: $.default
        }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(530),
        c = n(d),
        h = i(32),
        f = n(h),
        p = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this._bigJunction = t,
                    this._dataModel = this._bigJunction.model
            }
            return (0,
                    u.default)(e, [{
                    key: "getAllTurns",
                    value: function() {
                        var e = this,
                            t = [];
                        return this._getEntryVertices().forEach(function(i) {
                                var n = new c.default(e._dataModel),
                                    s = {};
                                e._findAllTurns(i, n, s, t)
                            }),
                            t
                    }
                }, {
                    key: "_findAllTurns",
                    value: function(e, t, i, n) {
                        var s = this;
                        n.length >= this.MAX_TURNS || (i[e] = !0,
                            t.appendVertex(e),
                            this._getConnectedVertices(e).forEach(function(e) {
                                var r = s._dataModel.segments.get(e.getSegmentID());
                                s._isSegmentOutOfBigJunction(r) ? (t.appendVertex(e),
                                    t.isPathLegal() && n.push(t.build()),
                                    t.removeLastVertex()) : i[e] || s._findAllTurns(e, t, i, n)
                            }),
                            t.removeLastVertex(),
                            i[e] = !1)
                    }
                }, {
                    key: "_getConnectedVertices",
                    value: function(e) {
                        var t = this._dataModel.getRoadGraph();
                        return t.getConnectedVertices(e).filter(function(i) {
                            return t.isTurnLegal(e, i)
                        })
                    }
                }, {
                    key: "_getEntryVertices",
                    value: function() {
                        var e = [],
                            t = this._bigJunction.getID();
                        return this._getAccessSegments().forEach(function(i) {
                                var n = null;
                                if (i.hasFromBigJunction(t) && i.attributes.revDirection ? n = !1 : i.hasToBigJunction(t) && i.attributes.fwdDirection && (n = !0),
                                    null !== n) {
                                    var s = f.default.forwardOf(i.getID());
                                    !1 === n && (s = s.getOpposite()),
                                        e.push(s)
                                }
                            }),
                            e
                    }
                }, {
                    key: "_getAccessSegments",
                    value: function() {
                        var e = [];
                        return this._bigJunction.getShortSegments().forEach(function(t) {
                                e = e.concat(t.getConnectedSegmentsByDirection("from")),
                                    e = e.concat(t.getConnectedSegmentsByDirection("to"))
                            }),
                            e = e.filter(this._isSegmentOutOfBigJunction.bind(this)),
                            _.uniq(e, function(e) {
                                return e.getID()
                            })
                    }
                }, {
                    key: "_isSegmentOutOfBigJunction",
                    value: function(e) {
                        return !e.isBigJunctionShort() && e.isDrivable()
                    }
                }]),
                e
        }();
    (0,
        r.default)(p.prototype, {
        MAX_PATHS: 100
    }),
    p.for = function(e) {
            return new p(e)
        },
        t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(61),
        c = n(d),
        h = i(161),
        f = n(h),
        p = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this._dataModel = t,
                    this._vertices = []
            }
            return (0,
                    u.default)(e, [{
                    key: "appendVertex",
                    value: function(e) {
                        return this._vertices.push(e)
                    }
                }, {
                    key: "removeLastVertex",
                    value: function() {
                        return this._vertices.pop()
                    }
                }, {
                    key: "isPathLegal",
                    value: function() {
                        return this._vertices.length >= 2 && !this._trivialConnectionExists()
                    }
                }, {
                    key: "_trivialConnectionExists",
                    value: function() {
                        var e = _.first(this._vertices),
                            t = _.last(this._vertices),
                            i = this._dataModel.getTurnGraph().getTurn(e, t);
                        return this._dataModel.getRoadGraph().isTurnLegal(e, t) && this._dataModel.getRoadGraph().areVerticesConnected(e, t) && i.getTurnData().isAllowed()
                    }
                }, {
                    key: "build",
                    value: function() {
                        var e = _.first(this._vertices),
                            t = _.last(this._vertices),
                            i = this._getShortSegmentIDs(),
                            n = this._dataModel.getTurnGraph().getTurn(e, t);
                        if (_.isEqual(n.getTurnData().getSegmentPath(), i) && !n.getTurnData().isUnknown())
                            return n;
                        var s = this._isPathAllowed() ? c.default.State.ALLOWED : c.default.State.DISALLOWED,
                            r = c.default.create(s, this._getRestrictions(), null, i);
                        return new f.default(e, t, r)
                    }
                }, {
                    key: "_isPathAllowed",
                    value: function() {
                        var e = this,
                            t = this._dataModel.getTurnGraph();
                        return this._vertices.slice(0, -1).every(function(i, n, s) {
                            return t.getTurn(i, e._vertices[n + 1]).getTurnData().isAllowed()
                        })
                    }
                }, {
                    key: "_getShortSegmentIDs",
                    value: function() {
                        return this._vertices.slice(1, -1).map(function(e) {
                            return e.getSegmentID()
                        })
                    }
                }, {
                    key: "_getRestrictions",
                    value: function() {
                        var e = this,
                            t = this._dataModel.getTurnGraph(),
                            i = [];
                        return this._vertices.forEach(function(t) {
                                var n, s = e._dataModel.segments.getDirectedSegment(t);
                                (n = i).push.apply(n, (0,
                                    r.default)(s.getDrivingRestrictions()))
                            }),
                            i = i.map(function(e) {
                                return e.withoutDirection()
                            }),
                            this._vertices.slice(0, -1).forEach(function(n, s) {
                                var a, o = e._vertices[s + 1],
                                    l = t.getTurn(n, o);
                                (a = i).push.apply(a, (0,
                                    r.default)(l.getTurnData().getRestrictions()))
                            }),
                            i.filter(function(e, t) {
                                return _.findIndex(i, function(t) {
                                    return t.equals(e)
                                }) === t
                            })
                    }
                }]),
                e
        }();
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    i(532),
        e.exports = i(14).Object.freeze
}, function(e, t, i) {
    var n = i(29),
        s = i(106).onFreeze;
    i(105)("freeze", function(e) {
        return function(t) {
            return e && n(t) ? e(s(t)) : t
        }
    })
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.RestrictionDriveProfileList = void 0;
    var s = i(48),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(112),
        c = n(d);
    t.RestrictionDriveProfileList = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                i = (t.restrictionType,
                    t.driveProfiles),
                n = void 0 === i ? [] : i;
            (0,
                o.default)(this, e),
            this._driveProfiles = n.map(function(e) {
                    return new c.default(e)
                }),
                (0,
                    r.default)(this)
        }
        return (0,
                u.default)(e, [{
                key: "equals",
                value: function(e) {
                    return this._driveProfiles.every(function(t) {
                        return e._driveProfiles.some(function(e) {
                            return e.equals(t)
                        })
                    })
                }
            }, {
                key: "toJSON",
                value: function() {
                    return this._driveProfiles.map(function(e) {
                        return e.toJSON()
                    })
                }
            }, {
                key: "isAllVehicles",
                value: function() {
                    return 0 === this._driveProfiles.length || this._driveProfiles.some(function(e) {
                        return e.isAllVehicles()
                    })
                }
            }, {
                key: "getDriveProfiles",
                value: function() {
                    return this._driveProfiles.slice()
                }
            }, {
                key: "isEmpty",
                value: function() {
                    return 0 === this._driveProfiles.length
                }
            }]),
            e
    }()
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(48),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Model.extend({
            constructor: function() {
                Backbone.Model.prototype.constructor.apply(this, arguments),
                    (0,
                        s.default)(this.attributes),
                    this.set = this._error
            },
            _error: function() {
                throw new TypeError("Cannot change attributes of an immutable object")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(51),
        l = n(o),
        u = i(536),
        d = n(u),
        c = i(551),
        h = n(c),
        f = i(552),
        p = n(f),
        g = l.default.prototype.TYPE,
        m = {
            TYPE_TO_CLASS: (s = {},
                (0,
                    a.default)(s, g.MAP_PROBLEM, d.default),
                (0,
                    a.default)(s, g.VENUE_UPDATE_REQUEST, h.default),
                (0,
                    a.default)(s, g.UPDATE_REQUEST, p.default),
                s),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.type])(e)
            }
        };
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(51),
        r = n(s),
        a = i(74),
        o = n(a),
        l = r.default.extend({
            _isModified: function() {
                return this.attributes.problem.isUpdated()
            },
            _isResolved: function() {
                return !this.attributes.problem.attributes.open
            },
            getSeverity: function() {
                return this.attributes.problem.attributes.severity
            },
            getFeedIssueState: function() {
                return this.attributes.problem ? new o.default(this.attributes.problem).getState() : "open"
            }
        });
    l.prototype.defaults = _.extend({
            problem: null
        }, r.default.prototype.defaults),
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this.info = t,
                    this.layer = i,
                    this.displayOptions = n
            }
            return (0,
                    o.default)(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawSessions()
                    }
                }, {
                    key: "_drawSessions",
                    value: function() {
                        return this._drawMatchingSegments(),
                            this.displayOptions.allSessions && this._drawAllSessions(),
                            this.displayOptions.averageSession && this._drawAverageSession(),
                            this._drawPins()
                    }
                }, {
                    key: "_drawMatchingSegments",
                    value: function() {
                        if (this.info.average.nextSegGeom && this.layer.driveRenderer.drawMatchedSegment(this.info.average.nextSegGeom),
                            this.info.average.prevSegGeom)
                            return this.layer.driveRenderer.drawMatchedSegment(this.info.average.prevSegGeom)
                    }
                }, {
                    key: "_drawAllSessions",
                    value: function() {
                        var e = this;
                        return this.info.sessions.map(function(t) {
                            return t.geometry.components.map(function(t) {
                                return e.layer.driveRenderer.drawSession(t)
                            })
                        })
                    }
                }, {
                    key: "_drawAverageSession",
                    value: function() {
                        if (this.info.average.geometry)
                            return this.layer.driveRenderer.drawDisconnect(this.info.average.geometry.components[1]),
                                this.layer.driveRenderer.drawUserDrive(this.info.average.geometry.components[0]),
                                this.layer.driveRenderer.drawUserDrive(this.info.average.geometry.components[2])
                    }
                }, {
                    key: "_drawPins",
                    value: function() {
                        var e = _.last(this.info.average.prevSegGeom.getVertices(!0)),
                            t = this.info.average.nextSegGeom.getVertices(!0)[0];
                        if (!e.equals(t))
                            return this.layer.driveRenderer.drawPin(e, "A"),
                                this.layer.driveRenderer.drawPin(t, "B")
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            available: !0,
            visible: !0
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(20),
        g = n(p),
        m = i(162),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "generateDescription",
                    value: function() {
                        this.object.attributes.open ? this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.open") : this.object.attributes.resolution === v.default.FIXED ? this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.solved") : this.object.attributes.resolution === v.default.NOT_A_PROBLEM && (this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.not_identified"))
                    }
                }]),
                t
        }(g.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            SPEED_CAMERA: 1
        },
        s = {
            TUNNEL: 1,
            BRIDGE: 2,
            PRIVATE: 4,
            FERRY: 8,
            UNPAVED: 16,
            HEADLIGHTS: 32,
            NEARBY_HOV: 128
        };
    t.FLAGS = s,
        t.FWD = n,
        t.REV = n
}, function(e, t, i) {
    i(108),
        i(57),
        i(66),
        i(542),
        i(546),
        i(548),
        i(549),
        e.exports = i(14).Set
}, function(e, t, i) {
    "use strict";
    var n = i(211),
        s = i(165);
    e.exports = i(212)("Set", function(e) {
        return function() {
            return e(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        add: function(e) {
            return n.def(s(this, "Set"), e = 0 === e ? 0 : e, e)
        }
    }, n)
}, function(e, t, i) {
    var n = i(44),
        s = i(138),
        r = i(69),
        a = i(101),
        o = i(544);
    e.exports = function(e, t) {
        var i = 1 == e,
            l = 2 == e,
            u = 3 == e,
            d = 4 == e,
            c = 6 == e,
            h = 5 == e || c,
            f = t || o;
        return function(t, o, p) {
            for (var g, m, v = r(t), _ = s(v), y = n(o, p, 3), b = a(_.length), w = 0, E = i ? f(t, b) : l ? f(t, 0) : void 0; b > w; w++)
                if ((h || w in _) && (g = _[w],
                        m = y(g, w, v),
                        e))
                    if (i)
                        E[w] = m;
                    else if (m)
                switch (e) {
                    case 3:
                        return !0;
                    case 5:
                        return g;
                    case 6:
                        return w;
                    case 2:
                        E.push(g)
                }
            else if (d)
                return !1;
            return c ? -1 : u || d ? d : E
        }
    }
}, function(e, t, i) {
    var n = i(545);
    e.exports = function(e, t) {
        return new(n(e))(t)
    }
}, function(e, t, i) {
    var n = i(29),
        s = i(193),
        r = i(28)("species");
    e.exports = function(e) {
        var t;
        return s(e) && (t = e.constructor,
                "function" != typeof t || t !== Array && !s(t.prototype) || (t = void 0),
                n(t) && null === (t = t[r]) && (t = void 0)),
            void 0 === t ? Array : t
    }
}, function(e, t, i) {
    var n = i(23);
    n(n.P + n.R, "Set", {
        toJSON: i(213)("Set")
    })
}, function(e, t, i) {
    var n = i(88);
    e.exports = function(e, t) {
        var i = [];
        return n(e, !1, i.push, i, t),
            i
    }
}, function(e, t, i) {
    i(214)("Set")
}, function(e, t, i) {
    i(215)("Set")
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e(t, i, n) {
                (0,
                    o.default)(this, e),
                this._dataModel = t,
                    this._angles = [].concat((0,
                        r.default)(i)),
                    this._toSegmentIDs = [].concat((0,
                        r.default)(n))
            }
            return (0,
                    u.default)(e, [{
                    key: "getToSegmentIDs",
                    value: function() {
                        return this._toSegmentIDs
                    }
                }, {
                    key: "getAngles",
                    value: function() {
                        return this._angles
                    }
                }, {
                    key: "isValid",
                    value: function() {
                        return this._angles.length > 0 && this._toSegmentIDs.length > 0
                    }
                }, {
                    key: "getToSegments",
                    value: function() {
                        var e = this;
                        return this.toSegmentIDs.map(function(t) {
                            return e.dataModel.segments.get(t)
                        })
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(51),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            _isModified: function() {
                return this.attributes.initialApproved !== this.attributes.updateRequest.get("approved")
            },
            _isResolved: function() {
                return null !== this.attributes.updateRequest.get("approved")
            },
            getSeverity: function() {
                return this.attributes.updateRequest.getSeverity()
            },
            getFeedIssueState: function() {
                if (!this.attributes.updateRequest)
                    return "open";
                var e = this.attributes.updateRequest.attributes.approved;
                return e ? "approved" : !1 === e ? "rejected" : "open"
            }
        });
    r.prototype.defaults = _.extend({
            venue: null,
            updateRequest: null,
            initialApproved: null
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(51),
        r = n(s),
        a = i(217),
        o = n(a),
        l = r.default.extend({
            initialized: function() {
                this.set("state", this.getState())
            },
            _isModified: function() {
                return this.attributes.updateRequest.isUpdated()
            },
            _isResolved: function() {
                return !this.attributes.updateRequest.attributes.open
            },
            getSeverity: function() {
                return this.attributes.updateRequest.attributes.severity
            },
            getFeedIssueState: function() {
                return this.attributes.updateRequest ? new o.default(this.attributes.updateRequest).getState() : "open"
            }
        });
    l.prototype.defaults = _.extend({
            updateRequest: null
        }, r.default.prototype.defaults),
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this.info = t,
                    this.layer = i,
                    this.displayOptions = n
            }
            return (0,
                    o.default)(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        if (this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this.displayOptions.drive && this._drawUserDrive(),
                            this.displayOptions.route)
                            return this._drawRoute()
                    }
                }, {
                    key: "_drawUserDrive",
                    value: function() {
                        if (this.info.driveGeometry)
                            for (var e = 0; e < this.info.driveGeometry.components.length; e++) {
                                var t = this.info.driveGeometry.components[e];
                                this.layer.driveRenderer.drawUserDrive(t)
                            }
                    }
                }, {
                    key: "_drawRoute",
                    value: function() {
                        var e = this;
                        if (this.info.routeGeometry)
                            return this.info.routeGeometry.components.map(function(t) {
                                return e.layer.driveRenderer.drawSuggestedRoute(t),
                                    e.layer.driveRenderer.drawRouteInstructions(t, e.info.getRouteInstructions())
                            })
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(92),
        l = n(o),
        u = i(555),
        d = n(u),
        c = i(556),
        h = n(c),
        f = l.default.prototype.TYPE,
        p = {
            TYPE_TO_CLASS: (s = {},
                (0,
                    a.default)(s, f.DISCONNECTION, l.default),
                (0,
                    a.default)(s, f.TURN, d.default),
                (0,
                    a.default)(s, f.DATA, l.default),
                (0,
                    a.default)(s, f.ROAD_CLOSURE, h.default),
                s),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.problemType])(e, {
                    parse: !0
                })
            }
        };
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(92),
        r = n(s),
        a = i(31),
        o = n(a),
        l = OpenLayers.Class(r.default, {
            initialize: function(e, t) {
                o.default.prototype.initialize.apply(this, arguments),
                    this.editable = this.attributes.open,
                    this.attributes.reroutePercent = this.reroutePercent(),
                    this.setSeverity(this.attributes.priority)
            },
            reroutePercent: function() {
                return (this.attributes.reroutesCounter / (this.attributes.reroutesCounter + this.attributes.routesCounter) * 100).toFixed(0)
            },
            setSeverity: function(e) {
                var t = "high";
                t = -1 === e ? "low" : this.attributes.reroutePercent >= 90 ? "high" : "medium",
                    this.attributes.severity = t
            },
            CLASS_NAME: "Waze.Feature.Vector.TurnProblem"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(92),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            _location: null,
            nested: {
                geometry: OL.Geometry,
                bounds: OL.Geometry,
                endPoint: OL.Geometry
            },
            initialize: function() {
                s.default.prototype.initialize.apply(this, arguments),
                    this._calcLocation()
            },
            _calcLocation: function() {
                this.hasEndPoint() ? this._location = this._getMiddlePoint() : this._location = this.attributes.geometry
            },
            _getMiddlePoint: function() {
                return this.attributes.geometry.clone().resize(.5, this.attributes.endPoint)
            },
            hasEndPoint: function() {
                return null != this.attributes.endPoint
            },
            getLocation: function() {
                return this._location
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(558),
        l = n(o),
        u = i(560),
        d = n(u),
        c = i(562),
        h = n(c),
        f = i(92),
        p = n(f),
        g = p.default.prototype.TYPE,
        m = {
            TYPE_TO_CLASS: (s = {},
                (0,
                    a.default)(s, g.DISCONNECTION, l.default),
                (0,
                    a.default)(s, g.TURN, d.default),
                (0,
                    a.default)(s, g.DATA, h.default),
                s),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.problemType])(e, {
                    parse: !0
                })
            }
        };
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(559),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        nested: {
            sessions: g.default,
            average: g.default
        }
    }),
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(15),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(g.default);
    (0,
        r.default)(m.prototype, {
        nested: {
            geometry: OL.Geometry,
            nextSegGeom: OL.Geometry,
            prevSegGeom: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(561),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        nested: {
            routeNextSeg: OL.Geometry,
            routePrevSeg: OL.Geometry,
            alternatives: g.default
        }
    }),
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(15),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(g.default);
    (0,
        r.default)(m.prototype, {
        nested: {
            averageGeom: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(15),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(g.default);
    (0,
        r.default)(m.prototype, {
        nested: {
            segmentGeom: OL.Geometry,
            secondarySegmentGeom: OL.Geometry,
            venueGeom: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = i(25),
        y = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                e.instructions;
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getRouteInstructions",
                    value: function() {
                        return null === this.instructions && (this.routeInstructions ? this.instructions = this.routeInstructions.split(",").map(function(e, t) {
                                return {
                                    code: e,
                                    point: this.routeGeometry.components[t].components[0]
                                }
                            }, this) : this.instructions = []),
                            this.instructions
                    }
                }, {
                    key: "_updateCommentFlag",
                    value: function() {
                        if (1 === this.comments.length) {
                            var e = this.model.mapUpdateRequests.get(this.getID());
                            e && (e.attributes.hasComments = !0,
                                this.model.mapUpdateRequests.changed(e))
                        }
                    }
                }, {
                    key: "hasPendingComments",
                    value: function() {
                        var e = this.comments || [],
                            t = Number(Date.today().setTimeToNow().add(-2).weeks()),
                            i = e.filter(function(e) {
                                return e.createdOn > t
                            });
                        return 0 !== i.length && !i.some(function(e) {
                            return -1 === e.userID
                        })
                    }
                }, {
                    key: "getComments",
                    value: function() {
                        return new Backbone.Collection(this.comments)
                    }
                }, {
                    key: "getIsFollowing",
                    value: function() {
                        return this.isFollowing
                    }
                }, {
                    key: "setFollowing",
                    value: function(e) {
                        var t = this;
                        return (0,
                            _.httpPost)(W.Config.paths.updateRequestFollow, {
                            mapUpdateRequestID: this.getID(),
                            follow: e
                        }).then(function() {
                            t.isFollowing = e
                        })
                    }
                }, {
                    key: "addComment",
                    value: function(e) {
                        var t = this;
                        return (0,
                            _.httpPost)(W.Config.paths.updateRequestComments, {
                            mapUpdateRequestID: this.getID(),
                            text: e
                        }).then(function(e) {
                            return e.isAutoFollowed && (t.isFollowing = !0),
                                t.comments.push(e.comment),
                                t._updateCommentFlag(),
                                e
                        }).then(function(e) {
                            return new Backbone.Model(e.comment)
                        })
                    }
                }, {
                    key: "getCommentable",
                    value: function() {
                        return {
                            getComments: this.getComments.bind(this),
                            isFollowing: this.getIsFollowing.bind(this),
                            setFollowing: this.setFollowing.bind(this),
                            addComment: this.addComment.bind(this)
                        }
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(y.prototype, {
        CLASS_NAME: "Waze.Feature.UpdateRequestSession"
    }),
    (0,
        r.default)(y.prototype, {
        nested: {
            driveGeometry: OL.Geometry,
            routeGeometry: OL.Geometry
        }
    }),
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getAverageSpeed",
                    value: function() {
                        return this.totalRoadMeters / (this.endTime - this.startTime) * 3600
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.Archive"
    }),
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = i(566),
        y = n(_),
        b = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                e.bounds;
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getDriveBounds",
                    value: function() {
                        return null !== this.bounds ? this.bounds : (this.bounds = this.driveParts.reduce(function(e, t) {
                                return t.geometry.calculateBounds(),
                                    e.extend(t.geometry.bounds),
                                    e
                            }, new OpenLayers.Bounds),
                            this.bounds)
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(b.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.ArchiveSession",
        nested: {
            driveParts: y.default
        }
    }),
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "isMatched",
                    value: function() {
                        return this.matchType === this.MATCH_TYPE.MATCHED
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        MATCH_TYPE: {
            UNMATCHED: "UNMATCHED",
            MATCHED: "MATCHED",
            PAVED: "PAVED"
        },
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    i(108),
        i(57),
        i(66),
        i(568),
        i(569),
        i(570),
        i(571),
        e.exports = i(14).Map
}, function(e, t, i) {
    "use strict";
    var n = i(211),
        s = i(165);
    e.exports = i(212)("Map", function(e) {
        return function() {
            return e(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        get: function(e) {
            var t = n.getEntry(s(this, "Map"), e);
            return t && t.v
        },
        set: function(e, t) {
            return n.def(s(this, "Map"), 0 === e ? 0 : e, t)
        }
    }, n, !0)
}, function(e, t, i) {
    var n = i(23);
    n(n.P + n.R, "Map", {
        toJSON: i(213)("Map")
    })
}, function(e, t, i) {
    i(214)("Map")
}, function(e, t, i) {
    i(215)("Map")
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(220),
        c = n(d),
        h = i(573),
        f = n(h),
        p = i(221),
        g = n(p),
        m = i(222),
        v = n(m),
        y = function() {
            function e(t) {
                return (0,
                        o.default)(this, e),
                    _.extend(this, t)
            }
            return (0,
                    u.default)(e, [{
                    key: "build",
                    value: function(e) {
                        return this._isFlag(e) ? this._buildFlag(e) : this._buildRegularUpdate(e)
                    }
                }, {
                    key: "_isFlag",
                    value: function(e) {
                        return e.type === this.TYPE.REQUEST && e.subType === this.SUB_TYPE.FLAG
                    }
                }, {
                    key: "_buildFlag",
                    value: function(e) {
                        return new f.default({
                            subject: e.flagSubjectType,
                            type: e.flagType,
                            comment: e.flagComment,
                            place: e.place,
                            dateAdded: e.dateAdded,
                            createdBy: e.createdBy,
                            entityId: e.flagEntityID,
                            id: e.id,
                            isInEditArea: this.isInEditArea,
                            isEditable: this.isEditable,
                            isAdLockedEditable: this.isAdLockedEditable
                        })
                    }
                }, {
                    key: "_buildRegularUpdate",
                    value: function(e) {
                        var t = c.default.prototype.SUBJECT.VENUE,
                            i = c.default.prototype.ACTION.ADD;
                        e.type === this.TYPE.REQUEST ? i = e.subType === this.SUB_TYPE.UPDATE ? c.default.prototype.ACTION.UPDATE : c.default.prototype.ACTION.DELETE : e.type === this.TYPE.IMAGE && (t = c.default.prototype.SUBJECT.IMAGE);
                        var n = this._parseChangedFields(e.place, e.changedVenue);
                        return new c.default({
                            action: i,
                            subject: t,
                            changedFields: n,
                            place: e.place,
                            dateAdded: e.dateAdded,
                            createdBy: e.createdBy,
                            id: e.id,
                            isInEditArea: this.isInEditArea,
                            isEditable: this.isEditable,
                            isAdLockedEditable: this.isAdLockedEditable
                        })
                    }
                }, {
                    key: "_parseChangedFields",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = ["permissions", "categoryAttributes"],
                            n = _.omit(t, i),
                            s = t.categoryAttributes || {},
                            r = s.PARKING_LOT || {};
                        return [].concat(g.default.build(n, e)).concat(v.default.build(r, e))
                    }
                }]),
                e
        }();
    (0,
        r.default)(y.prototype, {
        TYPE: {
            VENUE: "VENUE",
            REQUEST: "REQUEST",
            IMAGE: "IMAGE"
        },
        SUB_TYPE: {
            UPDATE: "UPDATE",
            DELETE: "DELETE",
            FLAG: "FLAG"
        }
    }),
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(220),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            TYPE: {
                CLOSED: "CLOSED",
                MOVED: "MOVED",
                RESIDENTIAL: "RESIDENTIAL",
                DUPLICATE: "DUPLICATE",
                INAPPROPRIATE: "INAPPROPRIATE",
                WRONG_DETAILS: "WRONG_DETAILS",
                LOW_QUALITY: "LOW_QUALITY",
                UNRELATED: "UNRELATED",
                OTHER: "OTHER"
            },
            initialize: function() {
                if (this.set("updateType", "flag"),
                    this.isImage() && this.set("imageId", this.get("entityId")),
                    this.isVenue() && this.get("type") === this.TYPE.DUPLICATE)
                    return this.set("duplicateVenueId", this.get("entityId"))
            },
            getDuplicateVenue: function() {
                var e = this.get("duplicateVenueId");
                return this.get("place").model.venues.get(e)
            },
            getImage: function() {
                return this._findImage(this.getImageId())
            },
            getImageId: function() {
                return this.get("imageId")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(225),
        y = n(_),
        b = i(15),
        w = n(b),
        E = function(e) {
            function t() {
                (0,
                    u.default)(this, t);
                var e = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments));
                return e.createNumbers(),
                    e
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "createNumbers",
                    value: function() {
                        for (var e = 0; e < this.numbers.length; e++)
                            this.numbers[e].parent = this
                    }
                }, {
                    key: "merge",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "merge", this).apply(this, arguments),
                            this.createNumbers()
                    }
                }, {
                    key: "getNumber",
                    value: function(e) {
                        for (var t = 0; t < this.numbers.length; t++) {
                            var i = this.numbers[t];
                            if (i.id === e)
                                return i
                        }
                        return null
                    }
                }, {
                    key: "getSegment",
                    value: function() {
                        return this.segment || (this.segment = this.model.segments.get(this.id))
                    }
                }]),
                t
        }(w.default);
    (0,
        r.default)(E.prototype, {
        nested: {
            numbers: y.default,
            editArea: OL.Geometry
        }
    }),
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        _ = function(e) {
            function t(e, i) {
                return (0,
                        u.default)(this, t),
                    e.id = e.id + "ma",
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, e, i))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getUserName",
                    value: function() {
                        var e = this.model.users.get(this.userID);
                        return e ? e.userName : ""
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(_.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(15),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                t
        }(g.default);
    (0,
        r.default)(m.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(578),
        __esModule: !0
    }
}, function(e, t, i) {
    i(579),
        e.exports = i(14).Object.getOwnPropertyDescriptors
}, function(e, t, i) {
    var n = i(23),
        s = i(580),
        r = i(43),
        a = i(107),
        o = i(203);
    n(n.S, "Object", {
        getOwnPropertyDescriptors: function(e) {
            for (var t, i, n = r(e), l = a.f, u = s(n), d = {}, c = 0; u.length > c;)
                void 0 !== (i = l(n, t = u[c++])) && o(d, t, i);
            return d
        }
    })
}, function(e, t, i) {
    var n = i(151),
        s = i(104),
        r = i(34),
        a = i(24).Reflect;
    e.exports = a && a.ownKeys || function(e) {
        var t = n.f(r(e)),
            i = s.f;
        return i ? t.concat(i(e)) : t
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(11),
        g = i(119),
        m = n(g),
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            objectID: null,
                            objectType: null,
                            actionType: null,
                            newValue: null,
                            oldValue: null
                        }
                    }
                }, {
                    key: "isSegmentSplit",
                    value: function() {
                        return this._isSegmentSplitMerge()[0]
                    }
                }, {
                    key: "isSegmentMerge",
                    value: function() {
                        return this._isSegmentSplitMerge()[1]
                    }
                }, {
                    key: "_isSegmentSplitMerge",
                    value: function() {
                        var e = !1,
                            t = !1;
                        if (this.attributes.objectType === p.SEGMENT) {
                            var i = this.attributes.newValue || {},
                                n = i.origIDs || [];
                            this.attributes.actionType === m.default.ACTIONS.ADD && (e = 1 === n.length,
                                t = 2 === n.length)
                        }
                        return [e, t]
                    }
                }, {
                    key: "isVenueMerge",
                    value: function() {
                        return this.attributes.objectType === p.VENUE && this.attributes.newValue && this.attributes.newValue.origIDs && this.attributes.newValue.origIDs.length > 0
                    }
                }]),
                t
        }(Backbone.Model);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(1),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(120),
        b = n(y),
        w = i(20),
        E = n(w),
        k = function(e) {
            function t() {
                (0,
                    u.default)(this, t);
                var e = (0,
                    c.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments));
                return e.editedModel = e._createEditableModel(),
                    e.formModel = new Backbone.Model({
                        defaults: {
                            editing: !1,
                            submitting: !1
                        }
                    }),
                    e
            }
            return (0,
                    v.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .edit-button": function() {
                                this._toggleEditing(!0)
                            },
                            "click .cancel-button": "_cancelChanges",
                            "click .save-button": "_applyChanges",
                            "submit form": function() {
                                return !1
                            }
                        }
                    }
                }, {
                    key: "editedModelBindings",
                    value: function() {
                        return {
                            "form .city-name": "name"
                        }
                    }
                }, {
                    key: "formBindings",
                    value: function() {
                        return {
                            ".preview": {
                                observe: "editing",
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            "form.attributes-form": {
                                observe: "editing",
                                visible: !0
                            },
                            "form.attributes-form input": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "submitting"
                                }]
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            cityNameInput: ".attributes-form .city-name"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Cities/templates/feature_editor"
                    }
                }]),
                (0,
                    g.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        return {
                            canEdit: this.model.arePropertiesEditable(),
                            city: this.model
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.editedModel, this.editedModelBindings()),
                            this.stickit(this.formModel, this.formBindings()),
                            (0,
                                f.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "onRender", this).apply(this, arguments)
                    }
                }, {
                    key: "_createEditableModel",
                    value: function() {
                        var e = $.extend(!0, {}, this.model.attributes);
                        return new Backbone.Model(e)
                    }
                }, {
                    key: "_toggleEditing",
                    value: function(e) {
                        this.formModel.set("editing", e),
                            e && this.ui.cityNameInput.focus()
                    }
                }, {
                    key: "_toggleSubmitting",
                    value: function(e) {
                        this.formModel.set("submitting", e)
                    }
                }, {
                    key: "_cancelChanges",
                    value: function() {
                        this.editedModel.set(this._createEditableModel().attributes),
                            this._toggleEditing(!1)
                    }
                }, {
                    key: "_applyChanges",
                    value: function() {
                        this.editedModel.attributes.name !== this.model.attributes.name ? this._checkExistance().then(this._commitChanges.bind(this), alert) : this._toggleEditing(!1)
                    }
                }, {
                    key: "_checkExistance",
                    value: function() {
                        var e = this,
                            t = arguments,
                            i = this.editedModel.attributes.name,
                            n = this.model.attributes,
                            s = n.countryID,
                            a = n.stateID;
                        return this._toggleSubmitting(!0),
                            new r.default(function(n, r) {
                                e.dataModel.cities.getCityExists(i, s, a).then(function(t) {
                                    var i = t.existingCity;
                                    if (i && i.id !== e.model.getID()) {
                                        var s = I18n.t("edit.city.name_exists", {
                                            name: t.existingCity.name
                                        });
                                        r(s)
                                    } else
                                        e._toggleEditing(!1),
                                        n()
                                }).catch(function() {
                                    return r(t)
                                }).finally(function() {
                                    return e._toggleSubmitting(!1)
                                })
                            })
                    }
                }, {
                    key: "_commitChanges",
                    value: function() {
                        var e = new E.default(this.model, this.editedModel.attributes);
                        this.dataModel.actionManager.add(e)
                    }
                }]),
                t
        }(b.default);
    t.default = k,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(204),
        s = {
            init: function(e) {
                var t = e.map;
                this.selectionManager = e.selectionManager,
                    this.markersLayer = t.getLayerByUniqueName(n.MARKERS_LAYER_NAME),
                    this.featuresLayer = t.getLayerByUniqueName(n.FEATURES_LAYER_NAME),
                    this.markersLayer.events.register("markerclick", this, this._onMarkerClick),
                    this.selectionManager.events.register("app:selection:featureunselected", this, this._onFeatureUnselected)
            },
            destroy: function() {
                this.markersLayer.events.unregister("markerclick", this, this._onMarkerClick),
                    this.selectionManager.events.unregister("app:selection:featureunselected", this, this._onFeatureUnselected)
            },
            _onFeatureUnselected: function(e) {
                var t = this;
                (e.features || [e.feature]).forEach(function(e) {
                    var i = e.model;
                    if (i && i.type === n.OBJECT_TYPE) {
                        var s = e.model.getID(),
                            r = t.markersLayer.getMarker(s);
                        r && r.unhighlight()
                    }
                })
            },
            _onMarkerClick: function(e) {
                var t = e.target.attributes.cityId,
                    i = this.featuresLayer.features.filter(function(e) {
                        return e.model.getID() === t
                    })[0];
                void 0 !== i && (this.selectionManager.setSelectedModels([i.model]),
                    this.markersLayer.getMarker(t).highlight())
            }
        };
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(122),
        r = n(s),
        a = i(585),
        o = n(a),
        l = i(586),
        u = n(l),
        d = i(63),
        c = n(d),
        h = i(35),
        f = n(h),
        p = i(121),
        g = n(p),
        m = i(168),
        v = n(m),
        _ = f.default.LAYER_TYPE,
        y = {
            feature: {
                repositoryName: "mapComments",
                featureType: "mapComment",
                modelClass: r.default,
                featureEditorClass: u.default
            },
            layers: [{
                type: _.FEATURE,
                uniqueName: "mapComments",
                options: {
                    name: I18n.t("layers.name.comments"),
                    objectType: "mapComment",
                    selectable: !0,
                    visibleByDefault: !0,
                    styleMap: o.default,
                    enableZIndexing: !0,
                    geometryEditing: {
                        enable: !0,
                        options: {
                            mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.RESHAPE
                        }
                    }
                }
            }],
            layerSwitcher: {
                togglers: [{
                    id: "ITEM_MAP_COMMENTS",
                    parent: "GROUP_DISPLAY",
                    toggler: g.default.of("ITEM_MAP_COMMENTS", new v.default("mapComments"))
                }],
                defaultVisibility: {
                    ITEM_MAP_COMMENTS: !0
                },
                bitNumbers: {
                    ITEM_MAP_COMMENTS: 26
                }
            },
            menu: {
                name: "map-comments",
                items: [{
                    title: I18n.t("drawing.map_comment_point"),
                    featureName: I18n.t("drawing.map_comment"),
                    primaryShape: "point",
                    secondaryShape: "",
                    layerUniqueName: "mapComments",
                    createFeature: function(e, t) {
                        var i = new r.default({
                                geometry: e
                            }),
                            n = new c.default(i, t.mapComments);
                        return t.actionManager.add(n),
                            n.object
                    }
                }, {
                    title: I18n.t("drawing.map_comment_area"),
                    featureName: I18n.t("drawing.map_comment"),
                    primaryShape: "polygon",
                    secondaryShape: "",
                    layerUniqueName: "mapComments",
                    createFeature: function(e, t) {
                        var i = new r.default({
                                geometry: e
                            }),
                            n = new c.default(i, t.mapComments);
                        return t.actionManager.add(n),
                            n.object
                    }
                }]
            }
        };
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(231),
        s = "#ffffff",
        r = {
            strokeColor: s,
            fillColor: s,
            strokeDashstyle: "dash",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        a = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: s,
            fillColor: s,
            graphicZIndex: 0,
            fillOpacity: 1
        },
        o = function(e) {
            var t = W.defaultRule({
                Point: a,
                Polygon: r
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        l = W.defaultRule({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fontFamily: "FontAwesome",
                label: "",
                labelOutlineWidth: 0,
                fontColor: "white",
                fontSize: 11,
                labelYOffset: 0,
                pointRadius: 12,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        u = W.defaultRule({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        d = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        c = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        h = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        });
    t.default = new OL.StyleMap({
            default: o([h, d, n.DragPointRule]),
            highlight: o([W.defaultRule({
                Point: {
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: s,
                    fillOpacity: .6,
                    strokeOpacity: 1
                },
                Polygon: {
                    fillOpacity: .6,
                    strokeColor: s,
                    fillColor: s
                }
            }), h, c, n.DragPointHighlightRule]),
            select: o([l]),
            highlightselected: o([l]),
            delete: o([u]),
            highlightdeleted: o([u])
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(8),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(120),
        v = n(m),
        _ = i(587),
        y = n(_),
        b = i(232),
        w = n(b),
        E = i(94),
        k = n(E),
        M = i(169),
        S = n(M),
        T = i(77),
        C = n(T),
        I = i(122),
        A = n(I),
        D = function(e) {
            function t() {
                (0,
                    o.default)(this, t);
                var e = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments));
                return e.endDateModel = new Backbone.Model({
                        endDate: e.model.attributes.endDate
                    }),
                    e.endDateModel.on("change:endDate", function(t, i, n) {
                        e.changed({
                            endDate: i
                        })
                    }),
                    e.newFormModel = new Backbone.Model({
                        body: e.model.attributes.body,
                        subject: e.model.attributes.subject
                    }),
                    e
            }
            return (0,
                    g.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "className",
                    value: function() {
                        return "map-comment-feature-editor separator-line"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            nameEditorRegion: ".name-editor-region",
                            conversationRegion: ".conversation-region"
                        }
                    }
                }, {
                    key: "behaviors",
                    value: function() {
                        return {
                            dateTimePickers: {
                                behaviorClass: k.default,
                                modelAttribute: "endDateModel"
                            },
                            charCount: {
                                behaviorClass: S.default,
                                charLimits: [{
                                    inputSelector: ".new-subject-input",
                                    charCountSelector: ".new-subject-max-length",
                                    maxLength: A.default.prototype.MAX_SUBJECT_LENGTH,
                                    modelAttribute: "newFormModel",
                                    observe: "subject"
                                }, {
                                    inputSelector: ".new-body-input",
                                    charCountSelector: ".new-body-max-length",
                                    maxLength: A.default.prototype.MAX_BODY_LENGTH,
                                    modelAttribute: "newFormModel",
                                    observe: "body"
                                }]
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Comments/templates/feature_editor"
                    }
                }]),
                (0,
                    f.default)(t, [{
                    key: "onRender",
                    value: function() {
                        this.model.isNew() ? this.newFormModel.set({
                                body: this.model.attributes.body,
                                subject: this.model.attributes.subject
                            }) : (this._renderNameEditor(),
                                this._renderConversationRegion()),
                            (0,
                                c.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "onRender", this).apply(this, arguments)
                    }
                }, {
                    key: "_renderNameEditor",
                    value: function() {
                        var e = this,
                            t = new y.default({
                                createdDate: this._getCreateDisplayDate(),
                                subject: this.model.attributes.subject,
                                body: this.model.attributes.body,
                                editable: this.model.arePropertiesEditable()
                            });
                        return t.on("changed", function(t) {
                                return e.changed(t)
                            }),
                            this.showChildView("nameEditorRegion", t)
                    }
                }, {
                    key: "_getCreateDisplayDate",
                    value: function() {
                        return this.model.attributes.createdOn ? I18n.l("time.formats.long", new Date(this.model.attributes.createdOn)) : ""
                    }
                }, {
                    key: "_renderConversationRegion",
                    value: function() {
                        var e = new w.default({
                            commentable: this.model
                        });
                        return this.showChildView("conversationRegion", e)
                    }
                }, {
                    key: "onFeaturesChanged",
                    value: function(e) {
                        if (v.default.prototype.onFeaturesChanged.apply(this, arguments),
                            this.hasEditedModelChanged(e))
                            return this.endDateModel.set({
                                endDate: this.model.attributes.endDate
                            })
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            userRank: this.dataModel.loginManager.getUserRank(),
                            editable: this.model.arePropertiesEditable(),
                            comment: this.model
                        }
                    }
                }, {
                    key: "isPointChanged",
                    value: function(e) {
                        var t = void 0;
                        t = "true" === e ? this.model.getPointGeometry() : this.model.getPolygonGeometry();
                        var i = new C.default(this.model, this.dataModel.mapComments, this.model.geometry, t);
                        this.dataModel.actionManager.add(i)
                    }
                }]),
                t
        }(v.default);
    t.default = D,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(169),
        r = n(s),
        a = i(122),
        o = n(a),
        l = Marionette.View.extend({
            template: "Waze/Modules/Comments/templates/name_editor",
            className: "map-comment-name-editor",
            ui: {
                editButton: ".edit-button",
                applyButton: ".apply-button"
            },
            events: {
                "click @ui.editButton": "_onEditButtonClicked",
                "submit form": "_onApplyButtonClicked"
            },
            bindings: {
                ".preview": {
                    visible: !0,
                    observe: "showingPreview"
                },
                ".edit": {
                    visible: !0,
                    observe: "showingPreview",
                    onGet: _.negate(_.identity)
                },
                ".subject-preview": "subject",
                ".body-preview": {
                    observe: "body",
                    classes: {
                        "edit-button": "editable"
                    }
                },
                ".subject-input": "subject",
                ".body-textarea": "body"
            },
            behaviors: {
                charCount: {
                    behaviorClass: r.default,
                    charLimits: [{
                        inputSelector: ".subject-input",
                        charCountSelector: ".subject-max-length",
                        maxLength: o.default.prototype.MAX_SUBJECT_LENGTH,
                        modelAttribute: "model",
                        observe: "subject"
                    }, {
                        inputSelector: ".body-textarea",
                        charCountSelector: ".body-max-length",
                        maxLength: o.default.prototype.MAX_BODY_LENGTH,
                        modelAttribute: "model",
                        observe: "body"
                    }]
                }
            },
            initialize: function() {
                this.model = new Backbone.Model({
                    showingPreview: !0,
                    createdDate: this.options.createdDate,
                    editable: this.options.editable,
                    subject: this.options.subject,
                    body: this.options.body
                })
            },
            onRender: function() {
                this.stickit()
            },
            _onEditButtonClicked: function() {
                this.model.set({
                    showingPreview: !1
                })
            },
            _onApplyButtonClicked: function(e) {
                return e.preventDefault(),
                    this.model.set({
                        showingPreview: !0
                    }),
                    this.trigger("changed", {
                        subject: this.model.get("subject"),
                        body: this.model.get("body")
                    }), !1
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(16),
        g = n(p),
        m = /(https?:\/\/(?:-\.)?(?:[^\s\/?.#-]+\.?)+(?:\/[^\s]*)?)/i,
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "span"
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getCommentLines: function() {
                                return this.text.split("\n")
                            },
                            getCommentNumber: function() {
                                return this.getCommentLines().length
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Conversation/templates/text"
                    }
                }]),
                t
        }(Marionette.View),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            textItems: ".text"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.model.get("text").split(m).map(function(e) {
                                return new Backbone.Model({
                                    text: e,
                                    isHref: e.match(m)
                                })
                            }),
                            t = new Backbone.Collection(e);
                        this.showChildView("textItems", new Marionette.CollectionView({
                            collection: t,
                            childView: v
                        }))
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getUserName: function() {
                                return this.isByReporter() ? I18n.t("conversation.reporter") : g.default.formatUserName(this.userID)
                            },
                            isByReporter: function() {
                                return -1 === this.userID
                            }
                        }
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "comment"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Conversation/templates/item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = _,
        e.exports = t.default
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='text-checkboxes'>\n<span class='title'>" + t(e(this.title)) + "</span>\n<div class='checkboxes'>"),
                            o = this.items,
                            n = 0,
                            r = o.length; n < r; n++)
                            s = o[n],
                            a = "layer-switcher-" + s.id.toLowerCase(),
                            i.push("<div class='text-checkbox'>\n<input class='" + t(e(a)) + "' id='" + t(e(a)) + "' type='checkbox'>\n<label for='" + t(e(a)) + "' title='" + t(e(this.t("layer_switcher.togglers." + s.id))) + "'>\n<i class='waze-icon-" + s.iconName + "'></i>\n</label>\n</div>");
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return e = this.__cleanValue,
                            t = [],
                            i = "Waze/Modules/LayerSwitcher/templates/checkbox",
                            n = "Waze/Modules/LayerSwitcher/templates/text-checkboxes",
                            t.push("<ul class='list-unstyled togglers'>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_ISSUES",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_MAP_ISSUES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_MAP_PROBLEMS"),
                                items: [{
                                    id: "ITEM_MAP_PROBLEMS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_CLOSED_MAP_PROBLEMS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_UPDATE_REQUESTS"),
                                items: [{
                                    id: "ITEM_UPDATE_REQUESTS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_CLOSED_UPDATE_REQUESTS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_PARKING_ISSUES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_PARKING_MAP_PROBLEMS"),
                                items: [{
                                    id: "ITEM_PARKING_MAP_PROBLEMS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_PARKING_PLACE_UPDATE_REQUESTS"),
                                items: [{
                                    id: "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
                                    iconName: "visible"
                                }]
                            }))),
                            t.push("</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_PLACES",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_VENUES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_RESIDENTIAL_PLACES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_PARKING_PLACES"
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_ROAD",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_ROAD"
                            }))),
                            t.push("</li>"),
                            W.Config.big_junctions.enable && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(i, {
                                    id: "ITEM_JUNCTION_BOXES"
                                }))),
                                t.push("</li>")),
                            t.push("<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_CLOSURES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_SPEED_CAMERAS"
                            }))),
                            t.push("</li>"),
                            t.push("" + e(this.renderPartial("Waze/Modules/LayerSwitcher/templates/module-togglers", {
                                id: "GROUP_ROAD"
                            }))),
                            t.push("</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_DISPLAY",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_SATELLITE_IMAGERY"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_AREA_MANAGERS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_GPS_POINTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_EDITABLE_AREAS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_LIVE_USERS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_DISALLOWED_TURNS"
                            }))),
                            t.push("</li>"),
                            t.push("" + e(this.renderPartial("Waze/Modules/LayerSwitcher/templates/module-togglers", {
                                id: "GROUP_DISPLAY"
                            }))),
                            t.push("</ul>\n</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='login-verification-view'>\n<div class='step-email-missing'>\n<div class='verification-image verification-image-verify'></div>\n<div class='login-title verification-title'>"),
                            i.push("" + t(e(this.t("login.email_verification.missing.title")))),
                            i.push("</div>\n<div class='verification-messages'>"),
                            i.push("" + t(e(this.t("login.email_verification.missing.message")))),
                            i.push("</div>\n<div class='verification-actions'>\n<div class='btn-wrapper'>\n<a class='waze-btn waze-btn-blue waze-btn-small' href='" + t(e(this.dashboardURL)) + "' target='_blank'>"),
                            i.push("" + t(e(this.t("login.email_verification.missing.add_email")))),
                            i.push("</a>\n</div>\n</div>\n</div>\n<div class='step-verification'>\n<div class='verification-image verification-image-verify'></div>\n<div class='login-title verification-title'>"),
                            i.push("" + t(e(this.t("login.email_verification.verify.title")))),
                            i.push("</div>\n<div class='alert-danger verification-alert'>"),
                            i.push("" + t(e(this.t("login.email_verification.verify.error")))),
                            i.push("</div>\n<div class='verification-messages'>"),
                            i.push("" + t(e(this.t("login.email_verification.verify.message", {
                                recipient: this.recipient
                            })))),
                            i.push("</div>\n<div class='verification-actions'>\n<div class='btn-wrapper'>\n<button class='do-send-verification-email waze-btn waze-btn-blue waze-btn-small'>\n<span class='emailSending'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            i.push("" + t(e(this.t("login.email_verification.verify.send_email")))),
                            i.push("</button>\n</div>\n<div class='btn-wrapper'>\n<a class='waze-btn waze-btn-small waze-btn-white' href='" + t(e(this.dashboardURL)) + "' target='_blank'>"),
                            i.push("" + t(e(this.t("login.email_verification.verify.change_email")))),
                            i.push("</a>\n</div>\n</div>\n</div>\n<div class='step-verification-done'>\n<div class='verification-image verification-image-sent'></div>\n<div class='login-title verification-title'>"),
                            i.push("" + t(e(this.t("login.email_verification.sent.title")))),
                            i.push("</div>\n<div class='alert-success verification-alert'>"),
                            i.push("" + t(e(this.t("login.email_verification.sent.alert", {
                                recipient: this.recipient
                            })))),
                            i.push("</div>\n<div class='verification-messages'>"),
                            i.push("" + t(e(this.t("login.email_verification.sent.message")))),
                            i.push("</div>\n</div>\n<div class='login-verification-footer'>\n<a class='do-back-to-login waze-link'>\n&lt;"),
                            i.push("" + t(e(this.t("login.email_verification.back_to_login")))),
                            i.push("</a>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='modal-content'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='login-popup'>\n<div class='language-select'>\n<a class='dropdown-toggle waze-gray-link' data-toggle='dropdown' href='#'>"),
                            i.push("" + t(e(I18n.t("language_name")))),
                            i.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            a = I18n.availableLocales,
                            n = 0,
                            r = a.length; n < r; n++)
                            s = a[n],
                            i.push("<li>\n<a class='change-language' href='" + t(e(s !== W.Config.default_locale ? "/" + s : void 0)) + "/editor' data-locale='" + t(e(s)) + "'>"),
                            i.push("" + t(e(I18n.languageNames[s]))),
                            i.push("</a>\n</li>");
                        return i.push("</ul>\n</div>\n<div class='welcome-message'>\n<h2 class='login-title'>"),
                            i.push("" + t(e(this.t("welcome.title")))),
                            i.push("</h2>\n<p>"),
                            i.push("" + t(e(this.t("welcome.content")))),
                            i.push("</p>\n</div>\n<div class='login-popup-content'>\n<div class='login-form'>\n<div class='login-title'>"),
                            i.push("" + t(e(this.t("login.title")))),
                            i.push("</div>\n<div class='form-title'>\n<div class='expired-warning text-warning'>" + t(e(this.t("session.expired.title"))) + "</div>\n<span class='title-text'></span>\n</div>\n<form action='#' method='post'>\n<input class='form-control input-border username' autofocus='true' name='username' required='" + t(e(!0)) + "' type='text' placeholder='" + t(e(this.t("login.form.username"))) + "'>\n<input class='form-control input-border password' name='password' required='" + t(e(!0)) + "' type='password' placeholder='" + t(e(this.t("login.form.password"))) + "'>\n<div class='recaptcha-container'>\n<div class='g-recaptcha' data-size='invisible' data-badge='inline'></div>\n</div>\n<div class='error-message text-danger'></div>\n<div class='form-action'>\n<button class='submit waze-btn waze-btn-blue' type='submit'>\n<span class='loading'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            i.push("" + t(e(this.t("login.form.action")))),
                            i.push("</button>\n</div>\n<a class='forgot-password waze-gray-link' href='/forgot_password'>" + t(e(this.t("login.forgot_password"))) + "</a>\n</form>\n</div>\n<div class='login-popup-links'>\n<a class='btn btn-default tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.tutorial.description"))) + "</div>\n</a>\n<a class='btn btn-default wiki' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.wiki.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.wiki.description"))) + "</div>\n</a>\n<a class='btn btn-default forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.forum.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.forum.description"))) + "</div>\n</a>\n<a class='btn btn-default playmode' href='#'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.play_mode.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.play_mode.description"))) + "</div>\n</a>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='name'>" + t(e(this.h.formatUserName(this.userID))) + "</div>"),
                            this.isPartner && (i.push("<div class='partner'>" + t(e(this.t("mte.edit.contributors.partner"))) + "</div>"),
                                this.editable && i.push("<div class='remove-button'>\n<i class='fa fa-remove'></i>\n</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='add-partner-section'>\n<button class='add-partner-button btn btn-block btn-positive btn-primary'>\n<i class='fa fa-plus'></i>"),
                            i.push("" + t(e(this.t("mte.edit.contributors.add_partner")))),
                            i.push("</button>\n<form class='add-partner-form'>\n<div class='header'>\n<a class='cancel-button pull-right'>" + t(e(this.t("mte.edit.contributors.cancel"))) + "</a>\n<h4 class='title'>" + t(e(this.t("mte.edit.contributors.add_partner"))) + "</h4>\n</div>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control partner-select' required></select>\n</div>\n<button class='add-button btn btn-block btn-primary' type='submit'>"),
                            i.push("" + t(e(this.t("mte.edit.contributors.add")))),
                            i.push("</button>\n</div>\n</form>\n</div>\n<div class='list'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='closures'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='loading'>"),
                            i.push("" + t(e(this.loadingMessage))),
                            i.push("</div>\n<div class='error'>"),
                            i.push("" + t(e(this.errorMessage))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='preview'>\n<h3 class='english-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview'>"),
                            i.push("" + t(e(this.ENGLISH_LOCALE))),
                            i.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n<h3 class='local-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview local-language-preview'>"),
                            i.push("" + t(e(this.ENGLISH_LOCALE))),
                            i.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n</div>\n<form class='edit-form inner-form side-panel-section'>\n<div class='english-name form-group'>\n<div class='controls'>\n<input class='english-name form-control' required autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select' disabled>\n<option>English</option>\n</select>\n</div>\n</div>\n<div class='form-group local-name'>\n<div class='controls'>\n<button class='btn-link remove-local-name-button' type='button'>\n<i class='fa fa-remove'></i>\n</button>\n<input class='form-control local-name' autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select locale'></select>\n</div>\n</div>\n<button class='add-local-name-button btn-link' type='button'>\n<i class='fa fa-plus'></i>"),
                            i.push("" + t(e(this.t("mte.edit.name_list.add_language")))),
                            i.push("</button>\n<button class='apply-button btn waze-btn waze-btn-blue'>Apply</button>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group twitter-accounts-urls'>\n<label class='control-label'>" + t(e(this.t("mte.edit.twitter_accounts_urls"))) + "</label>\n<ul>"),
                            r = this.twitterAccountsUrls,
                            n = 0,
                            s = r.length; n < s; n++)
                            a = r[n],
                            i.push("<li>\n<a href='" + t(e(a)) + "' target='_blank'>" + t(e(a)) + "</a>\n</li>");
                        return i.push("</ul>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='edit-panel flex-parent mte-edit-view'>\n<div class='flex-noshrink navigation'>\n<button class='back-button btn-link' type='button'>\n&#60;"),
                            i.push("" + t(e(this.t("mte.edit.back_to_search")))),
                            i.push("</button>\n</div>\n<div class='contents'>\n<div class='no-outer-padding panel-header'>\n<div class='title'>\n<label class='control-label'>"),
                            this.newModel ? i.push("" + t(e(this.t("mte.edit.add_event_title")))) : i.push("" + t(e(this.t("mte.edit.edit_event_title")))),
                            i.push("</label>"),
                            this.newModel || i.push("<div class='submit-buttons'>\n<button class='btn btn-defaults submit-button'>" + t(e(this.t("mte.edit.submit"))) + "</button>\n<div class='submitted-indication'>" + t(e(this.t("mte.edit.submitted"))) + "</div>\n</div>\n<div class='publish-buttons'>\n<button class='btn btn-default publish-button'>" + t(e(this.t("mte.edit.publish"))) + "</button>\n<div class='published-indication'>" + t(e(this.t("mte.edit.published"))) + "</div>\n</div>"),
                            i.push("</div>\n<div class='names-container'>\n<div class='names-region'></div>\n<div class='validation-error' for='names'></div>\n</div>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#mte-edit-general'>"),
                            i.push("" + t(e(this.t("mte.edit.tabs.general")))),
                            i.push("</a>\n</li>\n<li class='closures-tab'>"),
                            this.newModel ? (i.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.closures_disabled"))) + "'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                i.push("</a>")) : (i.push("<a data-toggle='tab' href='#mte-edit-closures'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                i.push("</a>")),
                            i.push("</li>\n<li class='contributors-tab'>"),
                            this.newModel ? (i.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.partners_disabled"))) + "'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                i.push("</a>")) : (i.push("<a data-toggle='tab' href='#mte-edit-contributors'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                i.push("</a>")),
                            i.push("</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='mte-edit-general'>\n<form class='attributes-form'>"),
                            i.push("<button class='form-submit-button hidden'></button>\n<div class='form-group side-panel-section'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.category"))) + "</label>\n<div class='controls'>\n<select class='category form-control' required></select>\n</div>\n</div>\n<div class='side-panel-section'>\n<label class='control-label control-label-inline required-field'>" + t(e(this.t("mte.edit.fields.location"))) + "</label>\n<i class='location-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("mte.edit.location_tooltip"))) + "'></i>\n<div class='address-edit-region'></div>\n<div class='validation-error' for='cityID'></div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group start-date-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.start_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date form-control start-date' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='startDate'></div>\n</div>\n<div class='end-date-group form-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.end_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date end-date form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='endDate'></div>\n</div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("mte.edit.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control url' type='text'>\n</div>\n</div>"),
                            this.canEditTweetText && i.push("<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("mte.edit.tweet_text"))) + "</label>\n<textarea class='form-control' name='tweetText' maxlength='" + t(e(140)) + "'></textarea>\n</div>\n</div>"),
                            i.push("<div class='twitter-urls-region'></div>\n<div class='event-page form-group side-panel-section'>\n<a class='btn btn-block btn-primary' target='_blank'>"),
                            i.push("" + t(e(this.t("mte.edit.waze_event_page")))),
                            i.push("</a>\n</div>\n<div class='side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/additional_details", this.modelAttributes))),
                            i.push("</div>\n</form>\n</div>\n<div class='tab-pane' id='mte-edit-closures'></div>\n<div class='tab-pane' id='mte-edit-contributors'>\n<div class='contributors-region'></div>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='icon'>\n<i class='mte-icon waze-icon-event'></i>"),
                            this.published && i.push("<i class='published-indication waze-icon-check'></i>"),
                            i.push("</div>\n<div class='name'>"),
                            i.push("" + t(e(this.name))),
                            i.push("</div>\n<div class='date'>"),
                            i.push("" + t(e(this.date))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, i, n, s, r, a;
                        i = this.__htmlEscape,
                            t = this.__cleanValue,
                            n = [],
                            n.push("<div class='flex-noshrink mte-search'>\n<div class='search-header'>\n<div class='title'>" + i(t(this.t("mte.search.title"))) + "</div>\n<div class='action date-switcher dropdown'>\n<a class='dropdown-toggle waze-dropdown' data-toggle='dropdown'>\n<span class='current-date-filter'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            a = this.dateFilters;
                        for (r in a)
                            e.call(a, r) && (s = a[r],
                                n.push("<li class='waze-dropdown-item'>\n<a class='date-filter-item' data-filter='" + i(t(r)) + "'>" + i(t("" + s.name)) + "</a>\n</li>"));
                        return n.push("</ul>\n</div>\n</div>\n<input class='form-control search-input' type='text' placeholder='" + i(t(this.t("mte.search.placeholder"))) + "'>\n</div>\n<ul class='list-unstyled mte-list'></ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='loaderRegion'>\n<div class='sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n<div class='mainRegion'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<button class='add-button btn-link toolbar-button waze-icon-event' title='" + t(e(this.t("mte.edit.toolbar.add"))) + "'>"),
                            i.push("" + t(e(this.t("mte.edit.toolbar.add")))),
                            i.push("</button>\n<button class='btn-link save-button toolbar-button waze-icon-save' title='" + t(e(this.t("mte.edit.toolbar.save"))) + "'>"),
                            i.push("" + t(e(this.t("mte.edit.toolbar.save")))),
                            i.push("</button>\n<button class='btn-link delete-button toolbar-button waze-icon-trash' title='" + t(e(this.t("mte.edit.toolbar.delete"))) + "'>"),
                            i.push("" + t(e(this.t("mte.edit.toolbar.delete")))),
                            i.push("</button>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='topbar topbar-mte'>\n<div class='mode-name'>"),
                            i.push("" + t(e(this.t("modes.name.mte")))),
                            i.push("</div>\n<div class='location-info-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<span class='mouse-position' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>00.00000 00.00000</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='overlay-buttons-container'>\n<div class='street-view-region'></div>\n<div class='geo-location-region'></div>\n<div class='zoom-bar-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<a class='livemap-link' href='/livemap/' target='_blank'>\n<div class='icon'></div>\n</a>\n<a class='permalink' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>\n<div class='icon'></div>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='zoom-bar-container'>\n<div class='zoom-button zoom-plus-button'></div>\n<div class='zoom-button zoom-minus-button'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='controls-container selection-container'>"),
                            this.title && (i.push("<div class='title'>"),
                                i.push("" + e(this.title)),
                                i.push("</div>")),
                            i.push("<div class='options-container'>"),
                            a = this.options,
                            n = 0,
                            s = a.length; n < s; n++)
                            r = a[n],
                            i.push("<div class='option-container'>\n<input class='" + t(e(this.isEmpty(r) ? "empty" : void 0)) + "' id='" + t(e(this.optionToId(r))) + "' type='radio' value='" + t(e(this.optionToValue(r))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(r))) + "'>"),
                            i.push("" + e(this.getOptionLabel(r))),
                            i.push("</label>\n</div>");
                        return i.push("<div class='option-container'>\n<input id='custom_description_radio' type='radio' value='" + t(e(this.CUSTOM_DESCRIPTION)) + "' name='" + t(e(this.name)) + "'>\n<label for='custom_description_radio'>"),
                            i.push("" + e(this.t("merge_places.custom_description"))),
                            i.push("</label>\n</div>\n<div class='text-container'>\n<textarea class='form-control'></textarea>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='selection-container'>\n<div class='fa-spin loader'>\n<div class='spinner'></div>\n</div>\n<div class='selection-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='controls-container images-selection selection-container'>"),
                            this.title && (i.push("<div class='title'>"),
                                i.push("" + e(this.title)),
                                i.push("</div>")),
                            i.push("<div class='options-container'>"),
                            a = this.options,
                            n = 0,
                            s = a.length; n < s; n++)
                            r = a[n],
                            i.push("<div class='image-container'>\n<input id='" + t(e(this.optionToId(r))) + "' type='checkbox' value='" + t(e(this.optionToValue(r))) + "' name='" + t(e(this.name)) + "'>\n<label class='image-label' for='" + t(e(this.optionToId(r))) + "'>\n<img class='image-preview' src='" + t(e(this.getUrlById(r))) + "'>\n</label>\n</div>");
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<div class='merge-landmark-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<div class='modal-title'>\n<h3>"),
                            t.push("" + e(this.t("merge_places.title", {
                                count: this.placesCount,
                                mainPlaceName: this.mainPlaceName
                            }))),
                            t.push("</h3>\n</div>\n</div>\n<div class='modal-body'>\n<div class='instruction'>"),
                            t.push("" + e(this.t("merge_places.instruction", {
                                count: this.placesCount,
                                mainPlaceName: this.mainPlaceName
                            }))),
                            t.push("</div>\n<div class='name-region'></div>\n<div class='description-region'></div>\n<div class='address-region'></div>\n<div class='lockRank-region'></div>\n<div class='categories-region'></div>\n<div class='alert alert-gray parking-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.parking_message"))),
                            t.push("</div>\n<div class='alert alert-gray brand-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.gas_message"))),
                            t.push("</div>\n<div class='brand-region'></div>\n<div class='externalProviderIDs-region'></div>\n<div class='openingHours-region'></div>\n<div class='url-region'></div>\n<div class='phone-region'></div>\n<div class='services-region'></div>\n<div class='images-region'></div>\n<div class='parking-attributes'>\n<div class='parkingType-region'></div>\n<div class='hasTBR-region'></div>\n<div class='canExitWhileClosed-region'></div>\n<div class='costType-region'></div>\n<div class='paymentType-region'></div>\n<div class='estimatedNumberOfSpots-region'></div>\n<div class='lotType-region'></div>\n</div>\n</div>\n<div class='modal-footer'>\n<button class='do-close waze-btn waze-btn-smaller waze-btn-white'>"),
                            t.push("" + e(this.t("merge_places.actions.cancel"))),
                            t.push("</button>\n<button class='do-apply waze-btn waze-btn-blue waze-btn-smaller'>"),
                            t.push("" + e(this.t("merge_places.actions.merge"))),
                            t.push("</button>\n</div>\n</div>\n</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='controls-container selection-container'>"),
                            this.title && (i.push("<div class='title'>"),
                                i.push("" + e(this.title)),
                                i.push("</div>")),
                            i.push("<div class='options-container'></div>"),
                            a = this.options,
                            n = 0,
                            s = a.length; n < s; n++)
                            r = a[n],
                            i.push("<div class='" + ["option-container", "" + t(e(this.isEmpty(r) ? "empty" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input id='" + t(e(this.optionToId(r))) + "' type='checkbox' value='" + t(e(this.optionToValue(r))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(r))) + "'>"),
                            i.push("" + e(this.getOptionLabel(r))),
                            i.push("</label>\n<input class='main-button' id='" + t(e(this.optionToId(r) + "_radio")) + "' type='radio' value='" + t(e(this.optionToValue(r))) + "' name='" + t(e(this.name)) + "'>\n<label class='main-label' for='" + t(e(this.optionToId(r) + "_radio")) + "' data-main-text='" + t(e(this.t("merge_places.name.main"))) + "' data-set-main-text='" + t(e(this.t("merge_places.name.set_main"))) + "'></label>\n</div>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='controls-container selection-container'>"),
                            this.title && (i.push("<div class='title'>"),
                                i.push("" + e(this.title)),
                                i.push("</div>")),
                            i.push("<div class='options-container'>"),
                            a = this.options,
                            n = 0,
                            s = a.length; n < s; n++)
                            r = a[n],
                            i.push("<div class='option-container'>\n<input id='" + t(e(this.optionToId(r))) + "' type='checkbox' value='" + t(e(this.optionToValue(r))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(r))) + "'>"),
                            i.push("" + e(this.getOptionLabel(r))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='selection-container waze-radio-container'>"),
                            this.title && (i.push("<div class='title'>"),
                                i.push("" + e(this.title)),
                                i.push("</div>")),
                            i.push("<div class='options-container'></div>"),
                            a = this.options,
                            n = 0,
                            s = a.length; n < s; n++)
                            r = a[n],
                            i.push("<div class='option-container'>\n<input class='" + t(e(this.isEmpty(r) ? "empty" : void 0)) + "' id='" + t(e(this.optionToId(r))) + "' type='radio' value='" + t(e(this.optionToValue(r))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(r))) + "'>"),
                            i.push("" + e(this.getOptionLabel(r))),
                            i.push("</label>\n</div>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<form class='edit-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.navigation_point.type"))) + "</label>\n<div class='controls controls-container entry-controls'>\n<select class='form-control type' name='type'>\n<option value='" + t(e(this.NAVIGATION_POINT_TYPE.ENTRY)) + "'>" + t(e(this.t("edit.landmark.navigation_point.types.entry"))) + "</option>\n<option value='" + t(e(this.NAVIGATION_POINT_TYPE.EXIT)) + "'>" + t(e(this.t("edit.landmark.navigation_point.types.exit"))) + "</option>\n<option value='" + t(e(this.NAVIGATION_POINT_TYPE.BOTH)) + "'>" + t(e(this.t("edit.landmark.navigation_point.types.both"))) + "</option>\n</select>\n<div class='is-primary-checkbox-container'>\n<input class='is-primary' id='" + t(e(this.isPrimaryInputId)) + "' name='is-primary' type='checkbox'>\n<label for='" + t(e(this.isPrimaryInputId)) + "'>" + t(e(this.t("edit.landmark.navigation_point.is_primary"))) + "</label>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.navigation_point.name"))) + "</label>\n<div class='controls'>\n<input class='form-control name' name='name'>\n</div>\n</div>\n<div class='buttons'>\n<button class='btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='preview'>\n<div class='arrow-icon'></div>\n<div class='name'></div>\n<div class='buttons'>\n<div class='edit-button waze-icon-edit'></div>\n<div class='delete-button waze-icon-trash'></div>\n</div>\n</div>\n<div class='edit-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='list-region'></div>\n<button class='add-button btn btn-link'>" + t(e(this.t("edit.landmark.navigation_point.add_button"))) + "</button>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.showNext ? i.push("<div class='next waze-plain-btn'>" + t(e(this.adapter.getNextButtonString())) + "</div>") : i.push("<div class='done waze-plain-btn'>" + t(e(this.t("problems.panel.done"))) + "</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            null != this.attributes.description && (i.push("<p class='description'>"),
                                i.push("" + t(e(this.attributes.description))),
                                i.push("</p>")),
                            null != this.attributes.extraInfo && (i.push("<p class='extraInfo'>"),
                                i.push("" + t(e(this.attributes.extraInfo))),
                                i.push("</p>")),
                            null != this.attributes.street && (i.push("<div class='street'>\n<strong>" + t(e(this.t("problems.panel.closure.street") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.street))),
                                i.push("</div>")),
                            null != this.attributes.fromCrossStreet && (i.push("<div class='fromCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.from_cross_street") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.fromCrossStreet))),
                                i.push("</div>")),
                            null != this.attributes.toCrossStreet && (i.push("<div class='toCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.to_cross_street") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.toCrossStreet))),
                                i.push("</div>")),
                            null != this.attributes.startTime && (i.push("<div class='startTime'>\n<strong>" + t(e(this.t("problems.panel.closure.start_time") + ":")) + "</strong>"),
                                i.push("" + t(e(I18n.l("time.formats.long", this.attributes.startTime)))),
                                i.push("</div>")),
                            null != this.attributes.endTime && (i.push("<div class='endTime'>\n<strong>" + t(e(this.t("problems.panel.closure.end_time") + ":")) + "</strong>"),
                                i.push("" + t(e(I18n.l("time.formats.long", this.attributes.endTime)))),
                                i.push("</div>")),
                            null != this.attributes.dailyHours && (i.push("<div class='dailyHours'>\n<strong>" + t(e(this.t("problems.panel.closure.schedule") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.dailyHours))),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["problem-edit", "" + t(e("severity-" + this.adapter.getSeverity()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='top-section'>\n<a class='close-panel'></a>\n<div class='header'>\n<div class='dot'></div>\n<div class='main-title'>" + t(e(this.mainTitle)) + "</div>\n<div class='title'>" + t(e(this.adapter.getTitle()))),
                            i.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            i.push("</div>\n<div class='reported'>" + t(e(this.adapter.getReportedString())) + "</div>"),
                            this.showDebug && i.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.adapter.problem.getID()
                            }))) + "</div>"),
                            i.push("</div>\n<div class='body'>\n<div class='problem-data'>"),
                            this.adapter.hasDescription() && (i.push("<div class='description section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.description"))) + "</div>\n<div class='collapsible content'>"),
                                null != this.adapter.getDescriptionTemplate() ? i.push("" + e(this.renderPartial(this.adapter.getDescriptionTemplate(), this.adapter.problem))) : i.push("" + t(e(this.adapter.getDescription()))),
                                i.push("</div>\n</div>")),
                            this.showMoreInfoSection()) {
                            for (i.push("<div class='collapsed more-info section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.more_info"))) + "</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<form class='controls-container'>\n<div class='not-available'>" + t(e(this.t("problems.panel.more_info.not_available"))) + "</div>"),
                                r = this.adapter.getMoreInfoTypes(),
                                n = 0,
                                s = r.length; n < s; n++)
                                a = r[n],
                                a = a.get("name"),
                                i.push("<div class='" + ["more-info-checkbox", "more-info-" + t(e(a)) + "-checkbox"].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='" + ["legend", "more-info-" + t(e(a))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                                i.push("" + e(this.h.checkbox(this.t("problems.panel.more_info." + a), a, "on"))),
                                i.push("</div>");
                            i.push("</form>\n</div>\n</div>")
                        }
                        return this.adapter.isConversationAvailable() && (i.push("<div class='conversation section'>\n<div class='title'>"),
                                i.push("" + t(e(this.t("problems.panel.section.conversation")))),
                                i.push("<span class='comment-count-badge'></span>\n</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<div class='conversation-region'></div>\n</div>\n</div>")),
                            i.push("</div>\n</div>\n</div>\n<div class='actions'>"),
                            this.showCloseDetails() ? (i.push("<div class='close-details section'>\n<div class='content'>\n<div class='date'>" + e(this.getCloseDate()) + "</div>\n<div class='by'>" + e(this.getClosingUser()) + "</div>\n<div class='navigation'>"),
                                i.push("" + e(this.renderPartial("Waze/Modules/Problems/templates/_navigation", this))),
                                i.push("</div>\n</div>\n</div>")) : (i.push("<div class='section'>\n<div class='content'>\n<form class='controls-container'>"),
                                i.push("" + e(this.h.radio({
                                    label: this.adapter.getOpenStateString(),
                                    name: "state",
                                    value: "open",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                i.push("" + e(this.h.radio({
                                    label: this.adapter.getSolvedStateString(),
                                    name: "state",
                                    value: "solved",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                i.push("" + e(this.h.radio({
                                    label: this.adapter.getNotIdentifiedStateString(),
                                    name: "state",
                                    value: "not-identified",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                this.adapter.isEditable() || (this.adapter.rankAllowsEdit() ? i.push("<div class='alert alert-gray alert-lock no-permissions-alert'>" + t(e(this.t("problems.panel.no_permission"))) + "</div>") : i.push("<div class='alert alert-gray alert-lock no-permissions-alert'>" + t(e(this.t("problems.panel.no_permission_level", {
                                    level: this.adapter.minLevelForEdit()
                                }))) + "</div>")),
                                i.push("</form>\n<div class='navigation'>"),
                                i.push("" + e(this.renderPartial("Waze/Modules/Problems/templates/_navigation", this))),
                                i.push("</div>\n</div>\n</div>")),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='drive-profile-edit-blocked'>\n<div class='drive-profile-group'>\n<div class='controls-container'>\n<input id='all-vehicles-on-radio' type='radio' name='isAllVehicles' value='true'>\n<label for='all-vehicles-on-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                            i.push("</label>\n</div>\n</div>\n<div class='drive-profile-group drive-profile-vehicles-group'>\n<div class='controls-container'>\n<input id='all-vehicles-off-radio' type='radio' name='isAllVehicles' value='false'>\n<label class='drive-profile-vehicles-option-label' for='all-vehicles-off-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.only_vehicles")))),
                            i.push("</label>\n</div>\n<div class='drive-profile-vehicle-types'>"),
                            a = this.getVehicleTypes(),
                            n = 0,
                            r = a.length; n < r; n++)
                            s = a[n],
                            i.push("<div class='controls-container'>\n<input class='vehicle-type' id='vehicle-type-" + s.value + "-checkbox' type='checkbox' value='" + t(e(s.value)) + "'>\n<label class='vehicle-type-label' for='vehicle-type-" + t(e(s.value)) + "-checkbox'>"),
                            i.push("" + t(e(this.t("restrictions.vehicle_types." + s.key)))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='drive-profile-edit-free'>\n<div class='collection-region'></div>\n<div class='add-drive-profile-item do-add-item'>\n<span class='waze-icon-plus'></span>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.add_vehicle")))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o, l, u, d, c, h, f, p;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='drive-profile-item-attributes'>"),
                            this.isBlank)
                            i.push("<div class='is-blank'>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.no_vehicle")))),
                            i.push("</div>");
                        else {
                            if (i.push("<div class='vehicle-type'>"),
                                this.hasVehicleType) {
                                for (i.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    i.push("" + t(e(this.vehicleName))),
                                    i.push("</span>\n<i class='do-delete-vehicle-type drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    c = this.vehicleTypesNames,
                                    s = 0,
                                    l = c.length; s < l; s++)
                                    p = c[s],
                                    i.push("<li>\n<a class='do-set-vehicle-type' data-target='#' data-value='" + t(e(this.vehicleTypes[p])) + "'>"),
                                    i.push("" + t(e(this.t("restrictions.vehicle_types." + p)))),
                                    i.push("</a>\n</li>");
                                i.push("</ul>\n</div>")
                            } else
                                i.push("<div class='all-vehicles'>"),
                                i.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                                i.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                i.push("</div>");
                            if (i.push("</div>"),
                                this.hasNumPassengers) {
                                for (i.push("<div class='num-passengers'>"),
                                    this.hasVehicleType && (i.push("<span class='driving-preposition'>"),
                                        i.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        i.push("</span>")),
                                    i.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    i.push("" + t(e(this.t("restrictions.editing.driving.min_passengers", {
                                        count: this.numPassengers
                                    })))),
                                    i.push("</span>\n<i class='do-delete-num-passengers drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    h = this.numPassengersRange,
                                    a = 0,
                                    u = h.length; a < u; a++)
                                    n = h[a],
                                    i.push("<li>\n<a class='do-set-num-passengers' data-target='#' data-value='" + t(e(n)) + "'>"),
                                    i.push("" + t(e(this.t("restrictions.editing.driving.min_passengers", {
                                        count: n
                                    })))),
                                    i.push("</a>\n</li>");
                                i.push("</ul>\n</div>\n</div>")
                            }
                            if (this.hasSubscription) {
                                for (i.push("<div class='subscription'>"),
                                    this.hasNumPassengers ? (i.push("<span class='driving-preposition'>"),
                                        i.push("" + t(e(this.t("restrictions.editing.driving.prepositions.and")))),
                                        i.push("</span>")) : this.hasVehicleType && (i.push("<span class='driving-preposition'>"),
                                        i.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        i.push("</span>")),
                                    i.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    i.push("" + t(e(this.subscriptionName))),
                                    i.push("</span>\n<i class='do-delete-subscription drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    f = this.subscriptionOptions,
                                    o = 0,
                                    d = f.length; o < d; o++)
                                    r = f[o],
                                    i.push("<li>\n<a class='do-set-subscription' data-target='#' data-value='" + t(e(r.value)) + "'>"),
                                    i.push("" + t(e(r.name))),
                                    i.push("</a>\n</li>");
                                i.push("</ul>\n</div>\n</div>")
                            }
                        }
                        return i.push("</div>"),
                            this.restrictionEditable && (i.push("<div class='drive-profile-item-actions'>\n<div class='do-delete-item drive-profile-item-action'>\n<i class='fa fa-trash'></i>\n</div>"),
                                this.isExhaustive || (i.push("<div class='btn-group'>\n<span class='drive-profile-item-action dropdown-toggle' data-toggle='dropdown'>\n<i class='fa fa-plus'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    this.hasVehicleType || (i.push("<li>\n<a class='do-init-vehicle-type' data-target='#'>"),
                                        i.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.vehicle_type")))),
                                        i.push("</a>\n</li>")), !this.hasNumPassengers && this.supportsNumPassengers && (i.push("<li>\n<a class='do-init-num-passengers' data-target='#'>"),
                                        i.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.num_passengers")))),
                                        i.push("</a>\n</li>")), !this.hasSubscription && this.supportsSubscriptions && this.subscriptionsAvailable && (i.push("<li>\n<a class='do-init-subscription' data-target='#'>"),
                                        i.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.subscription")))),
                                        i.push("</a>\n</li>")),
                                    i.push("</ul>\n</div>")),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            this.isNewRestriction ? i.push("" + t(e(this.t("restrictions.modal_headers.creating_restriction")))) : i.push("" + t(e(this.t("restrictions.modal_headers.editing_restriction")))),
                            i.push("</h3>\n</div>\n<div class='modal-body'>\n<div class='restriction-editing-region'>\n<div class='restriction-validation-region'></div>\n<div class='restriction-editing-section'>\n<div class='restriction-editing-title restriction-editing-title-main'>"),
                            i.push("" + t(e(this.editingTitle))),
                            i.push("</div>\n<div class='segment-editing-region'></div>\n<div class='timeframe-editing-region'></div>\n</div>"),
                            this.showEditDriveProfile && (i.push("<div class='restriction-editing-section'>\n<div class='driving-modality-editing-region'>\n<div class='restriction-editing-title'>"),
                                i.push("" + t(e(this.t("restrictions.editing.sections.driving_prefix")))),
                                i.push("<select class='do-change-driving-modality driving-modality-select form-control'></select>"),
                                this.showTollDisabledTooltip && i.push("<i class='waze-tooltip' title='" + t(e(this.t("restrictions.editing.driving.toll_disabled"))) + "'></i>"),
                                i.push("" + t(e(this.t("restrictions.editing.sections.driving_suffix")))),
                                i.push("</div>\n</div>\n</div>")),
                            i.push("<div class='drive-profile-editing-region'></div>\n<div class='restriction-editing-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.more_info")))),
                            i.push("</div>\n<div class='description-editing-region'>\n<textarea class='form-control' name='description' placeholder='" + t(e(this.t("restrictions.editing.placeholders.description"))) + "'></textarea>\n</div>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>\n<div class='help-message-region'>\n<i class='fa fa-exclamation-circle'></i>\n<div class='help-message'></div>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-cancel'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>"),
                            this.isNewRestriction ? i.push("<button class='btn btn-primary do-create'>" + t(e(this.t("restrictions.buttons.add"))) + "</button>") : i.push("<button class='btn btn-primary do-update'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>"),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='restriction-editing-container'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.segment.applies")))),
                            i.push("</div>\n<div class='segment-section-content'>\n<select class='form-control' name='disposition'></select>\n<select class='form-control' name='laneType'></select>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='restriction-validation-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.validation")))),
                            i.push("</div>\n<div class='collection-region'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.forwardTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.reverseTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='bidi-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-bidi'>\n    <span class='direction-icon direction-icon-bidi'>"),
                            i.push("    " + t(e(this.t("segment.direction.label.3")))),
                            i.push("    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.bidiTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<td class='restriction-segment-attribute'>" + t(e(this.laneStr)) + "</td>\n<td>" + t(e(this.daysStr)) + "</td>\n<td>" + t(e(this.timeStr)) + "</td>\n<td class='restriction-item-summary' title='" + t(e(this.summaryStr)) + "'>\n<div class='restriction-item-details'>"),
                            this.isAllowed && (i.push("<span class='restriction-item-badge restriction-item-badge-allowed'>"),
                                i.push("" + t(e(this.t("restrictions.summary.badges.allowed")))),
                                i.push("</span>")),
                            this.isBlocked && (i.push("<span class='restriction-item-badge restriction-item-badge-blocked'>"),
                                i.push("" + t(e(this.t("restrictions.summary.badges.blocked")))),
                                i.push("</span>")),
                            this.isTollFree && (i.push("<span class='restriction-item-badge restriction-item-badge-toll-free'>"),
                                i.push("" + t(e(this.t("restrictions.summary.badges.toll_free")))),
                                i.push("<i class='badge-tooltip fa fa-info-circle' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("restrictions.summary.tooltips.toll_free"))) + "'></i>\n</span>")),
                            i.push("<div class='restriction-item-details-summary'>"),
                            i.push("" + t(e(this.summaryStr))),
                            i.push("</div>\n</div>\n</td>\n<td>\n<div class='restriction-actions'>"),
                            this.canModifyRestriction && (i.push("<div class='restriction-editing-actions'>"),
                                this.canApplyToAll && i.push("<i class='apply-to-all-tooltip do-applyToAll fa fa-clone' title='" + t(e(this.t("restrictions.editing.actions.apply_to_all"))) + "'></i>"),
                                i.push("<i class='do-delete fa fa-trash' title='" + t(e(this.t("restrictions.editing.actions.delete"))) + "'></i>\n</div>")),
                            i.push("<i class='do-edit fa fa-chevron-right restriction-action-edit'></i>\n</div>\n</td>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='modal-dialog restrictions-modal'>\n<div class='modal-content'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.forwardTitle))),
                            i.push("</div>\n<div class='restriction-summary-filler'></div>\n<div class='restriction-summary-dropdown'>\n<select class='constraint-select constraint-select-fwd form-control' name='constraint'></select>\n</div>\n</div>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.reverseTitle))),
                            i.push("</div>\n<div class='restriction-summary-filler'></div>\n<div class='restriction-summary-group-dropdown'>\n<select class='constraint-select constraint-select-rev form-control' name='constraint'></select>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            i.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            i.push("</h3>\n<div class='modal-header-messages'>"),
                            this.editingMultipleSegments && (i.push("<div class='modal-header-message'>"),
                                i.push("" + t(e(this.t("restrictions.modal_headers.multiple_segments")))),
                                i.push("</div>")),
                            this.canEditRestrictions || (i.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                i.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                i.push("</div>")),
                            i.push("</div>\n</div>\n<div class='modal-body'>"),
                            this.enablePickupRestrictions ? (i.push("<ul class='nav nav-tabs restriction-tabs'>\n<li>\n<a data-toggle='tab' href='#driving-restrictions'>"),
                                i.push("" + t(e(this.t("restrictions.tab_headers.driving")))),
                                i.push("</a>\n</li>\n<li>\n<a data-toggle='tab' href='#pickup-restrictions'>"),
                                i.push("" + t(e(this.t("restrictions.tab_headers.pickup")))),
                                i.push("</a>\n</li>\n</ul>\n<div class='tab-content'>\n<div class='tab-pane' id='driving-restrictions'></div>\n<div class='tab-pane' id='pickup-restrictions'></div>\n</div>")) : i.push("<div id='driving-restrictions'></div>"),
                            i.push("</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-container'>\n<div class='driving-controls'>\n<input id='tollRoadCheckbox' type='checkbox' name='tollRoad'>\n<label for='tollRoadCheckbox'>"),
                            i.push("" + t(e(this.t("restrictions.editing.segment.toll_road")))),
                            i.push("</label>\n<i class='toll-road-tooltip waze-tooltip' title='" + t(e(this.t("restrictions.editing.segment.toll_road_disabled"))) + "'></i>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<table class='restrictions-table table'>\n<thead>\n<tr>\n<th class='restriction-segment-attribute'>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.lane")))),
                            i.push("</th>\n<th>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.days")))),
                            i.push("</th>\n<th>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.time")))),
                            i.push("</th>\n<th>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.details")))),
                            i.push("</th>\n<th></th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            i.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            i.push("</h3>\n<div class='modal-header-messages'>"),
                            this.canEditRestrictions || (i.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                i.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                i.push("</div>")),
                            i.push("</div>\n</div>\n<div class='modal-body'>\n<div class='restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.summaryTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>"),
                            this.canEditDifficultTurns && (i.push("<div class='controls-container'>\n<input id='is-difficult-checkbox' type='checkbox' name='isDifficult'>\n<label for='is-difficult-checkbox'>"),
                                i.push("" + t(e(this.t("restrictions.editing.turn.difficult_turn")))),
                                i.push("</label>\n</div>")),
                            i.push("</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='restriction-editing-container'>\n<div class='timeframe-section timeframe-section-weekdays'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.days")))),
                            i.push("</div>\n<div class='timeframe-section-content'>\n<div class='timeframe-weekdays'>"),
                            a = W.Config.week_days_order,
                            s = 0,
                            r = a.length; s < r; s++)
                            n = a[s],
                            i.push("<div class='controls-container'>\n<input class='weekday' id='day-ordinal-" + n + "-checkbox' type='checkbox' value='" + t(e(this.getWeekdayFromOrdinal(n))) + "'>\n<label for='day-ordinal-" + t(e(n)) + "-checkbox'>"),
                            i.push("" + t(e(this.t("date.abbr_day_names")[n]))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n<div class='timeframe-weekdays-toggle'>"),
                            i.push("      " + t(e(this.t("restrictions.editing.toggle.select")))),
                            i.push("      <span>\n      :&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-all weekdays-toggle'>"),
                            i.push("      " + t(e(this.t("restrictions.editing.toggle.all")))),
                            i.push("      </span>\n      <span>\n      ,&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-none weekdays-toggle'>"),
                            i.push("      " + t(e(this.t("restrictions.editing.toggle.none")))),
                            i.push("      </span>\n</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-hours'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.hours")))),
                            i.push("</div>\n<div class='timeframe-hours-controls'>\n<div class='timeframe-section-content'>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-from-time' name='fromTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-to-time' name='toTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='controls-container timeframe-all-day'>\n<input id='is-all-day-checkbox' type='checkbox' name='isAllDay'>\n<label for='is-all-day-checkbox'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.all_day")))),
                            i.push("</label>\n</div>\n</div>\n<div class='timeframe-overnight-message'>\n<i class='waze-tooltip'></i>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.overnight")))),
                            i.push("</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-dates'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.applies")))),
                            i.push("</div>\n<div class='timeframe-section-content'>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-off-radio' type='radio' name='isDuringDates' value='false'>\n<label for='is-during-dates-off-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.always")))),
                            i.push("</label>\n</div>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-on-radio' type='radio' name='isDuringDates' value='true'>\n<label class='label-datepicker' for='is-during-dates-on-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.every_month")))),
                            i.push("</label>\n<input class='btn btn-default datepicker'>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<p class='description'>"),
                            i.push("" + t(e(this.title))),
                            this.collated && i.push("" + t(e(" (" + this.collated + ")"))),
                            this.showPanButton && i.push("<a class='focus'>\n<i class='fa fa-crosshairs'></i>\n</a>"),
                            i.push("</p>\n<div class='suggestion'>\n<span class='suggestion-title'>" + t(e(this.t("save.error.suggestion"))) + "</span>"),
                            i.push("" + t(e(this.solution))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='error-list'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.getTitle())) + "</h4>\n</div>\n<div class='body'>\n<ul class='list list-unstyled'></ul>\n</div>\n<div class='actions clearfix'>"),
                            this.showActionTitle() && i.push("<p class='actions-title'>" + t(e(this.t("save.error.actions.title"))) + "</p>"),
                            this.collection.isIgnorable() ? i.push("<button class='btn btn-default edit'>" + t(e(this.t("save.error.actions.edit"))) + "</button>\n<button class='btn btn-default save'>" + t(e(this.t("save.error.actions.save"))) + "</button>") : i.push("<button class='btn btn-default close-button'>" + t(e(this.t("save.error.actions.close"))) + "</button>"),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='success'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.t("save.success.title"))) + "</h4>\n</div>\n<div class='body'>\n<div class='change-count'>"),
                            i.push("" + e(this.getSaveCountTextFor("segments"))),
                            i.push("" + e(this.getSaveCountTextFor("nodes"))),
                            i.push("" + e(this.getSaveCountTextFor("venues"))),
                            i.push("" + e(this.getSaveCountTextFor("bigJunctions"))),
                            i.push("</div>"),
                            this.showPendingVenues() && (i.push("<div class='pending-venues'></div>"),
                                this.venueNames.length > 0 ? i.push("" + e(this.safe_t("save.success.pending_venues.with_names", {
                                    names: this.h.contentTag("strong", this.venueNames)
                                }))) : i.push("" + e(this.safe_t("save.success.pending_venues.no_names")))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='street-view-control'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div id='street-view-container'>\n<div class='panorama view-area'></div>\n<a class='close-button'>\n<i class='fa fa-remove'></i>\n</a>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='result-error-message results-error'>"),
                            i.push("" + t(e(this.t("toolbar.search_results.error")))),
                            i.push("</div>\n<div class='no-results-error-message results-error'>"),
                            i.push("" + t(e(this.t("toolbar.search_results.no_results")))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='search-result'>\n<div class='icon'></div>\n<div class='content'>\n<div class='" + ["title", "" + t(e(this.description ? void 0 : "no-description"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>"),
                            this.description && (i.push("<div class='description'>"),
                                i.push("" + t(e(this.description))),
                                i.push("</div>")),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<form class='form-search'>\n<div class='input-wrapper'>\n<input class='search-query' autocomplete='off' name='q' spellcheck='off' type='text' placeholder='" + t(e(this.t("toolbar.search"))) + "'>\n<i class='fa fa-spin fa-spinner input-addon input-addon-right spinner'></i>\n</div>\n<div class='search-result-region'></div>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='toolbar-icon'></div>\n<div class='group-title'>" + t(e(this.t("toolbar." + this.name))) + "</div>\n<menu class='dropdown-menu'></menu>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.icon && i.push("<div class='" + ["toolbar-tooltip-icon", "" + t(e(this.icon + "-icon"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                            i.push("<div class='toolbar-tooltip-text'>" + t(e(this.text)) + "</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='item-icon'></div>\n<span class='menu-title'>" + t(e(this.title)) + "</span>"),
                            this.showDrawingControls && (i.push("<div class='drawing-controls'>"),
                                this.secondaryControl && i.push("<span class='" + ["drawing-control", "secondary-control", "waze-tooltip", "" + t(e(this.secondaryControl.drawingType))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-toggle='tooltip' title='" + t(e(this.t("drawing." + this.secondaryControl.drawingType))) + "'></span>"),
                                this.control && i.push("<span class='" + ["drawing-control", "main-control", "waze-tooltip", "" + t(e(this.control.drawingType))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-toggle='tooltip' title='" + t(e(this.t("drawing." + this.control.drawingType, {
                                    name: this.featureName
                                }))) + "'></span>"),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='mode-switcher'>\n<div class='title-button'>\n<div class='short-title span'>" + t(e(this.t("title_short"))) + "</div>\n<div class='fa fa-angle-down icon'></div>\n</div>\n<menu class='dropdown-menu'>\n<ul class='list-unstyled'>\n<li class='mode-item' data-mode='" + t(e(0)) + "'>"),
                            i.push("" + t(e(this.t("modes.name.default")))),
                            i.push("</li>\n<li class='mode-item' data-mode='" + t(e(1)) + "'>"),
                            i.push("" + t(e(this.t("modes.name.mte")))),
                            i.push("</li>\n</ul>\n</menu>\n</div>\n<div id='search'></div>\n<div id='edit-buttons'></div>\n<div class='layer-switcher-container'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='area-manager-item'>\n<a href='#'>\n<span class='username'>" + t(e(this.username)) + "</span>\n</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='main-list-region'></div>\n<div class='rest-list-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='title'>" + t(e(this.t("area_managers_list.title") + ":")) + "</div>\n<ul class='main-list'></ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.numItems > 0 && i.push("" + t(e("+"))),
                            i.push("<span class='dropdown'>\n<a class='dropdown-toggle' data-toggle='dropdown'>"),
                            this.numItems > 0 && i.push("" + t(e(this.t("area_managers_list.rest", {
                                count: this.numItems
                            })))),
                            i.push("</a>\n<ul class='dropdown-menu'></ul>\n</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='topbar'>\n<div class='location-info-region'></div>\n<div class='area-managers-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + t(e(this.operationText))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<span class='full-address'></span>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            null != this.updatedBy && t.push("<li>" + e(this.safe_t("edit.updated", {
                                time: this.h.dateOnlyString(this.updatedOn),
                                user: this.h.userProfile(this.updatedBy)
                            })) + "</li>"),
                            null != this.createdBy && t.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</li>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", {
                                createdBy: this.createdBy,
                                updatedBy: this.updatedBy
                            }))),
                            this.id && i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.id
                            }))) + "</li>"),
                            i.push("</ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='alt-street' data-id='" + t(e(this.id)) + "'>\n<div class='city-name'>" + t(e(this.cityName)) + "</div>\n<div class='street-name'>" + t(e(this.streetName)) + "</div>\n<a class='alt-street-delete' href='#'></a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='alt-street-form-template new-alt-street'>\n<div class='alt-street-block'>"),
                            i.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            i.push("<div class='city-block form-group toggleable-input'>\n<label class='control-label'>" + t(e(this.t("edit.address.city"))) + "</label>\n<div class='controls-container'>"),
                            n = _.uniqueId("alt_street_empty_city"),
                            i.push("<input class='alt-address empty-city' id='" + t(e(n)) + "' type='checkbox'>\n<label for='" + t(e(n)) + "'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n<div class='city-container'>\n<label></label>\n<input class='city-name form-control' type='text' autocomplete='off' title='" + t(e(this.t("edit.address.city"))) + "' maxlength='100'>\n</div>\n</div>\n<div class='form-group street-block toggleable-input'>\n<label class='control-label'>" + t(e(this.t("edit.address.street"))) + "</label>\n<input class='form-control street-name' type='text' autocomplete='off' title='" + t(e(this.t("edit.address.street"))) + "' maxlength='100'>\n</div>\n<a class='alt-street-delete' href='#'></a>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, a, o, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(50).CITY_NAME_PATTERN,
                            n.push("<div class='clearfix preview'>\n<div class='full-address-container'>\n<span class='full-address'></span>\n<div class='quota-tooltip waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.address.quota_exceeded", {
                                quota: this.maxAllowedStreetNamesChanges
                            }))) + "'></div>\n</div>"),
                            null != this.altStreets && this.altStreets.length > 0) {
                            for (n.push("<ul class='alt-street-list list-unstyled'>"),
                                l = this.altStreets.models,
                                a = 0,
                                o = l.length; a < o; a++)
                                r = l[a],
                                n.push("<li class='alt-street'>"),
                                n.push("" + t(e(r.get("streetName") + ", " + (r.get("cityName") || this.t("edit.address.no_city"))))),
                                n.push("</li>");
                            n.push("</ul>")
                        }
                        return n.push("</div>\n<form class='address-form clearfix inner-form'>"),
                            n.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            this.showStreetInput && (n.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                                n.push("" + t(e(this.t("edit.address.street")))),
                                n.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-street' id='empty-street' type='checkbox'>\n<label for='empty-street'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='" + ["controls", "" + t(e(this.enableTTS ? "input-group" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='form-control street-name tts-input' autocomplete='off' type='text' maxlength='" + t(e(this.MAX_LENGTH.STREET_NAME)) + "'>"),
                                this.enableTTS && n.push("<span class='input-group-btn tts-playback-region'></span>"),
                                n.push("</div>\n</div>")),
                            this.showHouseNumberInput && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.houseNumber"))) + "</label>\n<div class='controls'>\n<input class='form-control house-number' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.HOUSE_NUMBER)) + "' type='text'>\n</div>\n</div>"),
                            n.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("edit.address.city")))),
                            n.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-city' id='empty-city' type='checkbox'>\n<label for='empty-city'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls'>"),
                            this.showCitySelect ? n.push("<select class='city-id form-control' required></select>") : n.push("<input class='city-name form-control' type='text' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.CITY_NAME)) + "' pattern='" + t(e(s)) + "'>"),
                            n.push("</div>\n</div>"),
                            this.showStatesSelection && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.state"))) + "</label>\n<div class='controls'>\n<select class='form-control state-id' required></select>\n</div>\n</div>"),
                            n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.country"))) + "</label>\n<div class='controls'>\n<select class='country-id form-control' required></select>\n</div>\n</div>"),
                            this.showAltStreets && n.push("<div class='add-alt-street-form'>\n<div class='alt-streets'></div>\n<div class='alt-streets-actions'>\n<a class='add-alt-street-btn' href='#'>" + t(e("+ " + this.t("edit.segment.actions.add_alt_street"))) + "</a>\n</div>\n<div class='new-alt-streets'></div>\n</div>"),
                            n.push("<div class='action-buttons'>\n<button class='save-button waze-btn waze-btn-blue waze-btn-smaller' type='submit'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='archive-panel'>\n<div class='header'>\n<a class='close-panel'></a>"),
                            i.push("" + t(e(this.t("archive_panel.title")))),
                            i.push("</div>\n<div class='body'>"),
                            null != this.fromAddress && (i.push("<div class='from-address'>\n<strong>" + t(e(this.t("archive_panel.from") + ":")) + "</strong>"),
                                i.push("" + t(e(this.formatAddress(this.fromAddress)))),
                                i.push("</div>")),
                            null != this.toAddress && (i.push("<div class='to-address'>\n<strong>" + t(e(this.t("archive_panel.to") + ":")) + "</strong>"),
                                i.push("" + t(e(this.formatAddress(this.toAddress)))),
                                i.push("</div>")),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            _.isEmpty(this.sessions))
                            i.push("<p class='message'>\n<strong>"),
                            i.push("" + t(e(this.t("user.drives.no_drives")))),
                            i.push("</strong>\n</p>\n<p class='message'>"),
                            i.push("" + t(e(this.t("user.drives.no_drives_explanation")))),
                            i.push("</p>");
                        else {
                            for (i.push("<p class='message'>"),
                                i.push("" + t(e(this.t("user.drives.subtitle") + ":"))),
                                i.push("</p>\n<ul class='result-list' id='archive-sessions'>"),
                                r = this.sessions,
                                n = 0,
                                s = r.length; n < s; n++)
                                a = r[n],
                                i.push("<li class='" + ["result", "session", "" + t(e(a.hasFullSession ? "session-available" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-id='" + t(e(a.id)) + "'>\n<p class='title'>" + t(e(this.h.dateString(a.startTime))) + "</p>\n<p class='additional-info clearfix'>\n<span>" + t(e(this.h.lengthString(a.totalRoadMeters))) + "</span>\n<span>" + t(e(this.h.durationString(a.startTime, a.endTime))) + "</span>\n</p>\n</li>");
                            i.push("</ul>")
                        }
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='big-junction separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.big_junction.title"))) + "</span>\n</div>\n<div class='alert alert-danger header-alert size-alert'>" + t(e(this.t("edit.big_junction.validation_errors.area_too_big", {
                                size: this.MAX_POLYGON_SIZE_DEGREES
                            }))) + "</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='big-junction-edit-general'>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text'>\n</div>\n</div>\n</form>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.entrances"))) + "</label>\n<div class='junction-entry-list-region'></div>\n</div>\n<div class='form-group side-panel-section'>\n<div class='controls junction-actions'>\n<button class='action-button select-short-segments waze-btn waze-btn-smaller waze-btn-white'>" + t(e(this.t("edit.big_junction.select_segments"))) + "</button>\n</div>\n</div>\n<div class='lock-edit'></div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='segment-count'></li>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            i.push("<li class='feature-id'></li>\n</ul>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='camera separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.camera.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='camera-edit-general'></div>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.type_label"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='type'></select>\n</div>\n</div>\n<div class='controls-container form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.speed")))),
                            i.push("" + t(e(this.h.speedString()))),
                            i.push("</label>\n<div class='controls'>\n<input class='form-control' type='number' name='speed' maxlength='4'>\n</div>\n</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            i.push("<li class='feature-id'></li>\n</ul>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div style='display:none'>\n<input type='text' name='PreventChromeAutocomplete' autocomplete='address-level4'>\n</div>"),
                            e.join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, a, o, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(233),
                            _.isEmpty(this.areas))
                            n.push("<p class='message'>" + t(e(this.t("user.areas.no_areas"))) + "</p>");
                        else {
                            for (n.push("<p class='message'>" + t(e(this.t("user.areas.subtitle") + ":")) + "</p>\n<ul class='result-list'>"),
                                l = this.areas,
                                a = 0,
                                o = l.length; a < o; a++)
                                r = l[a],
                                n.push("<li class='area result' data-index='" + t(e(r.get("num"))) + "'>"),
                                r.get("type") === s.prototype.TYPE.DRIVE ? n.push("<p class='title'>" + t(e(this.t("user.areas.area", {
                                    num: r.get("num") + 1
                                }))) + "</p>") : n.push("<p class='title'>" + t(e(this.t("user.areas.managed_area"))) + "</p>"),
                                n.push("<p class='additional-info clearfix'>\n<span>" + t(e(this.h.areaString(r.get("area")))) + "</span>\n</p>\n</li>");
                            n.push("</ul>")
                        }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='focus-buttons'>\n<a class='focus' title='" + t(e(this.t("geolocation.focus-btn"))) + "'></a>\n<a class='street-view-btn' title='" + t(e(this.t("geolocation.street-view-btn"))) + "'></a>\n<a class='street-view-tooltip tooltip' title='" + t(e(this.t("geolocation.street-view-btn-disabled"))) + "' data-toggle='tooltip' data-placement='bottom'></a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["content", "" + t(e("valid-" + this.valid + " forced-" + this.forced))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='uneditable-number'>" + t(e(this.number)) + "</div>\n<div class='drag-handle'></div>\n<div class='" + ["input-wrapper", "" + t(e("side-" + (this.isLeft ? "left" : "right")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='number-preview'>" + t(e(this.number)) + "</div>\n<input class='number' value='" + t(e(this.number)) + "' type='text' placeholder='" + t(e(this.t("edit.segment.house_numbers.no_number"))) + "'>\n<div class='delete-button'>x</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='content'>\n<div class='header'>\n<div class='title'>" + t(e(this.address)) + "</div>\n<div class='loading-animation not-shown'></div>\n</div>\n<div class='success-message' style='display: none;'>" + t(e(this.t("edit.house_numbers.save.success"))) + "</div>\n<div class='error-message' style='display: none;'>Error loading house numbers</div>\n<div class='save-error-message' style='display: none;'>Error saving, please try again later\n<br>\n<button class='continue-editing waze-btn waze-btn-smaller waze-btn-white'>OK</button>\n</div>"),
                            this.pm.editingAllowedInZoom() || i.push("<div class='zoom-message'>" + t(e(this.t("edit.house_numbers.zoom_to_edit"))) + "</div>"),
                            i.push("<div class='last-edited'>\nLast edited by\n<span class='username'>" + t(e(this.h.formatUserName(null != (n = this.pm.selectedNumber) ? n.model.updatedBy : void 0))) + "</span>\n</div>\n<div class='force-message' style='display: none;'>"),
                            i.push("" + t(e(this.t("edit.house_numbers.save.invalid")))),
                            i.push("<br>"),
                            this.pm.canForcedInvalid() && (i.push("" + t(e(this.t("edit.house_numbers.force.title")))),
                                i.push("<br>\n<button class='force-invalid waze-btn waze-btn-red waze-btn-smaller'>" + t(e(this.t("edit.house_numbers.force.action"))) + "</button>")),
                            i.push("<button class='continue-editing waze-btn waze-btn-smaller waze-btn-white'>" + t(e(this.t("edit.house_numbers.force.continue"))) + "</button>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='instruction-override-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<h3>" + t(e(this.t("instruction_override.title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control opcode-select'></select>\n</div>\n<div class='controls'>\n<button class='apply-button btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, i, n, s, r, a, o, l, u, d;
                        i = this.__htmlEscape,
                            t = this.__cleanValue,
                            n = [],
                            u = this.groups;
                        for (r in u)
                            if (e.call(u, r)) {
                                for (s = u[r],
                                    n.push("<section class='shortcut-action-group'>"),
                                    null != s.members && n.push("<h2>" + i(t(this.t("keyboard_shortcuts.groups." + r + ".description"))) + "</h2>"),
                                    d = s.members,
                                    a = 0,
                                    o = d.length; a < o; a++)
                                    l = d[a],
                                    l.changeable && (n.push("<p class='" + ["shortcut-action", "" + i(t(l.enabled ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-action='" + i(t(l.id)) + "'>"),
                                        null == l.shortcut || _.isEmpty(l.shortcut) ? n.push("<kbd class='no-shotcut'>None</kbd>") : (n.push("" + t(this.h.shortcutMaskToKeys(l.shortcut))),
                                            n.push("<kbd>" + i(t(this.h.getShortcutKey(l.shortcut))) + "</kbd>")),
                                        n.push("" + i(t(this.t("keyboard_shortcuts.groups." + r + ".members." + l.name)))),
                                        n.push("</p>"));
                                n.push("</section>")
                            }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='shortcuts-dialog'>\n<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<button class='close' data-dismiss='modal' type='button'>×</button>\n<h3 class='modal-title'>" + t(e(this.t("keyboard_shortcuts.title"))) + "</h3>\n</div>\n<div class='modal-body'>"),
                            i.push("" + e(this.renderPartial("templates/keyboard_shortcuts/list", {
                                groups: this.groups
                            }))),
                            i.push("</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='footer-message location-message'>\nData for this location is on a different server environment,\n<a data-env='" + t(e(this.otherEnv)) + "' href='#'>switch now</a>\n<button class='close'>×</button>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<select class='form-control'>\n<option value='row' selected='" + t(e(this.isCurrentEnv("row"))) + "'>"),
                            i.push("" + t(e(this.t("envs.row")))),
                            i.push("</option>\n<option value='usa' selected='" + t(e(this.isCurrentEnv("usa"))) + "'>"),
                            i.push("" + t(e(this.t("envs.usa")))),
                            i.push("</option>\n<option value='il' selected='" + t(e(this.isCurrentEnv("il"))) + "'>"),
                            i.push("" + t(e(this.t("envs.il")))),
                            i.push("</option>\n</select>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control lock-level-displayer waze-radio-container'>"),
                            i.push("" + e(this.h.radio({
                                label: " ",
                                name: "lockRankDisplay",
                                enable: !1,
                                forceChecked: !0
                            }))),
                            i.push("</div>\n<div class='form-control lock-level-selector waze-radio-container'>"),
                            i.push("" + e(this.h.radio({
                                label: this.t("edit.multiple_values"),
                                value: "MIXED",
                                name: "lockRank"
                            }))),
                            i.push("" + e(this.h.radio({
                                label: " ",
                                className: "automatic",
                                value: "AUTO",
                                name: "lockRank"
                            }))),
                            s = n = 0,
                            r = this.userRank; 0 <= r ? n <= r : n >= r; s = 0 <= r ? ++n : --n)
                            i.push("" + e(this.h.radio({
                                label: this.h.formatRank(s),
                                value: s,
                                name: "lockRank"
                            })));
                        return i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='footer-message map-message sandbox-message'>\n<div class='map-message-icon'></div>\n<div class='title'>" + t(e(this.t("play_mode.title"))) + "</div>\n<div class='description'>" + t(e(this.t("play_mode.description"))) + "</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div id='map'>\n<div id='map-overlay'></div>\n<div id='overlay-buttons'></div>\n<div id='popup-overlay'></div>\n<div id='map-lightbox'>\n<div class='overlay'></div>\n<div class='content'></div>\n</div>\n<div>\n<div id='topbar-container'></div>\n<div id='panel-container'></div>\n<div id='street-view-container'>\n<div class='panorama view-area'></div>\n<a class='close-button'>\n<i class='fa fa-remove'></i>\n</a>\n</div>\n<div class='view-area' id='WazeMap' tabindex='1'>\n<div class='snapshot-message'></div>\n<div id='sandbox-message'></div>\n</div>\n</div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='merge-item'>\n<div class='icon-container'>\n<div class='" + ["icon", "" + t(e(this.categoryClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='error-badge lock' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.lock_tooltip", {
                                rank: this.lockRank
                            }))) + "'></div>\n<div class='error-badge purs' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.purs_tooltip", {
                                count: this.pursCount
                            }))) + "'></div>\n</div>\n<div class='do-remove'></div>\n<div class='content'>\n<div class='landmark-name'>"),
                            i.push("" + e(this.name)),
                            i.push("</div>\n<div class='details'>"),
                            this.createdBy && i.push("<div class='text'>" + e(this.safe_t("edit.merge_landmark.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            i.push("</div>\n</div>\n<div class='do-merge waze-btn waze-btn-white'>"),
                            i.push("" + e(this.t("edit.merge_landmark.merge"))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='merge-landmarks separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.merge_landmark.title", {
                                count: this.numVenues
                            }))) + "</span>\n</div>"),
                            this.showPendingUpdateRequestAlert && (i.push("<div class='alert alert-gray header-alert pending-changes-alert'>"),
                                i.push("" + t(e(this.t("edit.merge_landmark.unresolved_message")))),
                                i.push("</div>")),
                            this.showAdLockAlert && (i.push("<div class='alert alert-gray header-alert'>"),
                                i.push("" + t(e(this.t("edit.merge_landmark.ad_locked")))),
                                i.push("</div>")),
                            this.showLockLevelAlert && (i.push("<div class='alert alert-gray alert-lock header-alert'>"),
                                i.push("" + t(e(this.t("edit.merge_landmark.lock_message")))),
                                i.push("</div>")),
                            this.showParkingAlert && (i.push("<div class='alert alert-gray header-alert'>"),
                                i.push("" + t(e(this.t("edit.merge_landmark.parking_message")))),
                                i.push("</div>")),
                            this.showCountAlert && (i.push("<div class='alert alert-gray header-alert'>"),
                                i.push("" + t(e(this.t("edit.merge_landmark.count_message", {
                                    count: this.maxLandmarksCount
                                })))),
                                i.push("</div>")),
                            this.showDistanceAlert && (i.push("<div class='alert alert-gray header-alert'>"),
                                i.push("" + t(e(this.t("edit.merge_landmark.distance_message")))),
                                i.push("</div>")),
                            i.push("<div class='tab-content'>\n<div class='active tab-pane'>\n<div id='mergeLandmarksCollection'></div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='node separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.node.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='node-edit-general'>\n<div class='form-group side-panel-section'>\n<div class='big-junction-error'>\n<span class='error'>" + t(e(this.t("edit.node.permissions.big_junction.title"))) + "</span>"),
                            i.push("" + t(e(this.t("edit.node.permissions.big_junction.description")))),
                            i.push("</div>\n<div class='connections-edit'>\n<p class='connectionStatus'></p>\n<button class='allow-connections btn btn-default'>" + t(e(this.t("edit.node.turns.allow_all"))) + "</button>\n<button class='btn btn-default disallow-connections'>" + t(e(this.t("edit.node.turns.disallow_all"))) + "</button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='feature-id'></li>\n</ul>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-content'>\n<div class='modal-header'>\n<h3 class='modal-title'>" + t(e(this.t("edit.landmark.opening_hours.add_title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<form class='add-opening-hour' action='#' method='post'>\n<div class='days section'>"),
                            i.push("" + e(this.renderPartial("templates/util/day-checkboxes", {
                                cb: this.dayCallback
                            }))),
                            i.push("" + e(this.renderPartial("templates/util/toggle-checkboxes"))),
                            i.push("</div>\n<div class='hours section'>\n<div class='clearfix'>\n<div class='labels'>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='on' checked='" + t(e(!1)) + "'>"),
                            i.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.all_day")))),
                            i.push("</label>\n</div>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='off' checked='" + t(e(!0)) + "'>"),
                            i.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.from") + ":"))),
                            i.push("</label>\n</div>\n</div>\n<div class='inputs'>\n<div class='col-xs-4'>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control from-time time-selector' type='text' name='fromTime' value='" + t(e(this.defaultFromTime)) + "'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='col-xs-4'>\n<div class='pull-left to-label'>"),
                            i.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.to") + ":"))),
                            i.push("</div>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control time-selector to-time' type='text' name='toTime' value='" + t(e(this.defaultToTime)) + "'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class='validation-errors'></div>\n<div class='bottom'>\n<button class='waze-btn waze-btn-blue waze-btn-smaller'>" + t(e(this.t("edit.add"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + t(e(this.h.formatOpeningHour(this.model)))),
                            this.isEditable && i.push("<a class='delete' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group'>\n<div class='control-label'>" + t(e(this.t("edit.landmark.opening_hours.title"))) + "</div>\n</div>\n<ul class='list'></ul>"),
                            this.isEditable && i.push("<a class='add waze-btn waze-btn-white' href='#'>" + t(e(this.t("edit.landmark.opening_hours.add"))) + "</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["actions", "approve-intent-" + t(e(this.getApproveActionIntent())) + " " + t(e(this.model.get("updateType")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            this.model.isPlaceAdLocked() ? i.push("<div class='alert alert-danger'>" + t(e(I18n.t("venues.update_requests.panel.needs_staff_approval"))) + "</div>") : this.model.isEditableByUser() ? (i.push("<form class='controls-container'>"),
                                this.isOpened() ? (i.push("" + e(this.h.radio({
                                        label: this.getRejectActionName(),
                                        name: "approved",
                                        dataType: "boolean",
                                        value: !1,
                                        currentValue: this.model.get("approved"),
                                        className: "reject"
                                    }))),
                                    i.push("" + e(this.h.radio({
                                        label: this.getApproveActionName(),
                                        name: "approved",
                                        dataType: "boolean",
                                        value: !0,
                                        currentValue: this.model.get("approved"),
                                        className: "approve"
                                    })))) : this.isApproved() ? (i.push("<div class='approved status'>"),
                                    i.push("" + e(this.getApprovedLabel())),
                                    i.push("</div>")) : this.isRejected() && (i.push("<div class='rejected status'>"),
                                    i.push("" + e(this.getRejectedLabel())),
                                    i.push("</div>")),
                                i.push("</form>")) : i.push("<div class='alert alert-danger'>" + t(e(this.getNoPermissionsMessage())) + "</div>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<div class='add-details'>"),
                            this.dateAdded && t.push("<div class='date small'>" + e(this.safe_t("venues.update_requests.panel.added_on", {
                                added_on_title: this.t("venues.update_requests.panel." + this.type),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"), !this.hideUserDetails && this.createdBy && t.push("<div class='small user'>" + e(this.safe_t("venues.update_requests.panel.added_by", {
                                added_by_title: this.t("venues.update_requests.panel.added_by_title"),
                                username: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return e = this.__cleanValue,
                            t = [],
                            i = this.model.getAddedImage(),
                            t.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: i
                            }))),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !1,
                                dateAdded: i.get("date"),
                                createdBy: i.get("creatorUserId")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o, l, u, d;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.shouldShowName() && i.push("<div class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</div>"),
                            i.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n<div class='images'>\n<div class='carousel slide' id='" + t(e(this.getCarouselUniqueId())) + "' data-ride='carousel' data-interval='false'>\n<div class='carousel-inner' role='listbox'>"),
                            u = this.getNewPlaceImages(),
                            r = n = 0,
                            o = u.length; n < o; r = ++n)
                            s = u[r],
                            i.push("<div class='" + ["item", "" + t(e(0 === r ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: s
                            }))),
                            i.push("</div>");
                        if (i.push("</div>"),
                            this.shouldShowCarousel()) {
                            for (i.push("<ol class='carousel-indicators list-unstyled'>"),
                                d = this.getNewPlaceImages(),
                                r = a = 0,
                                l = d.length; a < l; r = ++a)
                                s = d[r],
                                i.push("<li class='" + t(e(0 === r ? "active" : void 0)) + "' data-target='" + t(e("#" + this.getCarouselUniqueId())) + "' data-slide-to='" + t(e(r)) + "'></li>");
                            i.push("</ol>")
                        }
                        return i.push("</div>\n</div>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, a, o, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            n.push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            this.isGeometry)
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.hover")))),
                            n.push("<div class='current location-button'>"),
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.current")))),
                            n.push("<i class='fa fa-crosshairs'></i>\n</div>\n<div class='location-button suggested'>"),
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.suggested")))),
                            n.push("<i class='fa fa-crosshairs'></i>\n</div>");
                        else if ("images" === this.fieldName) {
                            for (s = i(76).SIZE,
                                n.push("<div class='removed-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>\n<div class='remove-images'>"),
                                l = this.getRemovedImages(),
                                r = 0,
                                o = l.length; r < o; r++)
                                a = l[r],
                                n.push("<img class='image-preview' src='" + t(e(a.getUrl(s.WEB))) + "' data-image-id='" + t(e(a.id)) + "'>");
                            n.push("</div>")
                        } else
                            n.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this)));
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.showChangeList)
                            if (this.isExternalProvider)
                                i.push("<div class='external-providers-view'></div>");
                            else {
                                for (i.push("<ul class='diff-list list-unstyled'>"),
                                    a = this.changeList,
                                    n = 0,
                                    r = a.length; n < r; n++)
                                    s = a[n],
                                    i.push("<li class='" + ["diff", "" + t(e(s.changeType.toLowerCase()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<span class='name'>" + t(e(s.name)) + "</span>\n</li>");
                                i.push("</ul>")
                            }
                        else
                            this.currentValue && (this.removing ? i.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>") : i.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.current"))) + "</div>"),
                                i.push("<div class='current'>" + t(e(this.currentValue)) + "</div>")),
                            this.removing || i.push("<div class='suggested-title'>" + t(e(this.t("venues.update_requests.panel.change.suggested"))) + "</div>\n<div class='suggested'>" + t(e(this.suggestedValue)) + "</div>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.parking.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<h3>" + t(e(I18n.t("venues.update_requests.panel.place_deleted"))) + "</h3>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='anchor fa fa-crosshairs'></div>\n<div class='id span'>" + t(e(this.uuid)) + "</div>\n<a class='external-provider-link name' href='" + t(e(this.url)) + "' target='_blank'>" + t(e(this.name)) + "</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<ul class='diff-list external-providers-list list-unstyled'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            i.push("<div class='body'>\n<div class='scrollable'>\n<div class='request-details'>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                            this.showImage ? (i.push("" + e(this.renderPartial("templates/place_updates/image", {
                                    image: this.image
                                }))),
                                this.image && i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "picture_added_on_title",
                                    hideUserDetails: !this.showAddingUser,
                                    dateAdded: this.image.get("date"),
                                    createdBy: this.image.get("creatorUserId")
                                })))) : i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !this.showAddingUser,
                                dateAdded: this.venue.attributes.createdOn
                            }))),
                            i.push("</div>\n<div class='changes'>\n<div class='small'>" + t(e(I18n.t("venues.update_requests.panel.flag_reason"))) + "</div>\n<h3>" + t(e(this.t("venues.update_requests.flags." + this.model.get("type")))) + "</h3>"),
                            this.showComment && i.push("<div class='flag-comment'>" + t(e(this.model.get("comment"))) + "</div>"),
                            this.model.get("createdBy") && (i.push("<div class='reported-by small'>"),
                                i.push("" + e(this.safe_t("edit.reported", {
                                    time: this.h.dateOnlyString(this.model.get("dateAdded")),
                                    user: this.h.userProfile(this.model.get("createdBy"))
                                }))),
                                i.push("</div>")),
                            i.push("</div>"),
                            this.showDuplicateVenue && (i.push("<div class='duplicate request-details'>"),
                                i.push("" + e(this.renderPartial("templates/place_updates/place_details", _.defaults({
                                    venue: this.model.getDuplicateVenue()
                                }, this)))),
                                i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "added_on_title",
                                    hideUserDetails: !0,
                                    dateAdded: this.model.getDuplicateVenue().attributes.createdOn
                                }))),
                                i.push("</div>")),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(76).SIZE,
                            this.image ? n.push("<a>\n<img class='image-preview' src='" + t(e(this.image.getUrl(s.MOBILE))) + "' data-image-id='" + t(e(this.image.id)) + "'>\n</a>") : n.push("<div class='missing-image'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-dialog venue-image-dialog'>\n<div class='modal-content'>\n<div class='" + ["prev-button", "waze-icon-full-arrow-left", "" + t(e(this.hasPrev ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='" + ["next-button", "waze-icon-full-arrow-right", "" + t(e(this.hasNext ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='modal-header'>\n<div class='close' data-dismiss='modal' type='button'>×</div>\n<div class='venue-name'>" + t(e(this.h.formatVenueName(this.venueName))) + "</div>\n</div>\n<div class='modal-body'>\n<img src='" + t(e(this.imageUrl)) + "'>\n<div class='details'>\n<div class='date small'>" + e(this.safe_t("venues.images.added_on", {
                                added_on_title: this.h.contentTag("strong", this.t("venues.images.added_on_title")),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"),
                            this.addingUserId && i.push("<div class='small user'>" + e(this.safe_t("venues.images.added_by", {
                                added_by_title: this.h.contentTag("strong", this.t("venues.images.added_by_title")),
                                username: this.h.userProfile(this.addingUserId)
                            })) + "</div>"),
                            i.push("<div class='delete-button waze-icon-trash'>" + t(e(this.t("venues.images.delete"))) + "</div>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            t.push("<div class='body'>\n<div class='scrollable'>"),
                            this.hidePlaceDetails || (t.push("<div class='request-details'>"),
                                t.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                                t.push("</div>")),
                            t.push("<div class='changes'>"),
                            t.push("" + e(this.renderPartial(this.getChangesTemplate(), this))),
                            t.push("</div>\n</div>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='place-update'></div>\n<div class='navigation'>"),
                            this.showNextButton ? (i.push("<div class='next waze-plain-btn'>"),
                                i.push("" + t(e(this.nextButtonString))),
                                i.push("</div>")) : this.showNextVenueButton ? (i.push("<div class='next-venue waze-plain-btn'>"),
                                i.push("" + t(e(this.t("venues.update_requests.panel.next_venue")))),
                                i.push("</div>")) : (i.push("<div class='done waze-plain-btn'>"),
                                i.push("" + t(e(this.t("venues.update_requests.panel.done")))),
                                i.push("</div>")),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<a class='close-panel'></a>\n<div class='header'>\n<div class='dot'></div>\n<div class='main-title'>" + t(e(this.t("venues.update_requests.panel.title.MAIN_TITLE"))) + "</div>\n<div class='title'>" + t(e(this.getTitle()))),
                            i.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            i.push("</div>\n<div class='reported'></div>"),
                            this.showDebug && i.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.h.formatVenueUpdateRequestId(this.model.id)
                            }))) + "</div>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='place-details'>"),
                            this.shouldShowName() && i.push("<h3 class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</h3>"),
                            i.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<ul class='changed-fields list-unstyled'></ul>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='settings side-panel-section'>\n<h4>" + t(e(this.t("user.prefs.subtitle"))) + "</h4>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.two_way"), "twoWayRoad", "on"))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.turns_allowed"), "turnsAllowed", "on"))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.require_deselect"), "requireDeselect", "on"))),
                            i.push("</div>\n</div>\n<div class='form-group'>\n<div class='controls'>\n<label class='control-label'>" + t(e(this.t("user.prefs.units.title"))) + "</label>\n<div class='btn-group units-group waze-radio-container' data-type='boolean'>\n<input class='units-check' id='settings-units-imperial' type='radio' name='units-radio' value='true'>\n<label for='settings-units-imperial'>"),
                            i.push("" + t(e(this.t("user.prefs.units.imperial")))),
                            i.push("</label>\n<input class='units-check' id='settings-units-metric' type='radio' name='units-radio' value='false'>\n<label for='settings-units-metric'>"),
                            i.push("" + t(e(this.t("user.prefs.units.metric")))),
                            i.push("</label>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("envs.title")))),
                            i.push("</label>\n<div class='controls' id='env-select'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("user.prefs.language")))),
                            i.push("</label>\n<select class='form-control language-select'>"),
                            a = I18n.availableLocales,
                            n = 0,
                            r = a.length; n < r; n++)
                            s = a[n],
                            i.push("<option value='" + t(e(s)) + "' selected='" + t(e(s === I18n.currentLocale())) + "'>"),
                            i.push("" + t(e(I18n.languageNames["" + s]))),
                            i.push("</option>");
                        return i.push("</select>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("user.prefs.turn_arrows")))),
                            i.push("</label>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.spread_turn_arrows"), "spreadTurnArrows", "on"))),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.show_transparent_turn_arrows"), "showTransparentTurnArrows", "on"))),
                            i.push("</div>\n</div>\n</form>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<label class='control-label'>" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "</label>\n<div class='controls'>\n<div class='controls-container'>"),
                            (this.segment.mixed.fwdDirection || this.segment.attributes.fwdDirection) && i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "fwdSpeedCamera"
                            }))),
                            i.push("</div>\n<div class='controls-container'>"),
                            (this.segment.mixed.revDirection || this.segment.attributes.revDirection) && i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "revSpeedCamera"
                            }))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='hide-walking-trail'>\n<div class='form-group'>\n<div class='hint routing-road-type-message'></div>\n<div class='controls'>\n<div class='controls-container'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "unpaved"
                            }))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "tunnel"
                            }))),
                            i.push("</div>\n<div class='controls-container headlights-reminder'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "headlights",
                                disabledTooltip: this.t("objects.common.rank_too_low")
                            }))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "nearbyHOV"
                            }))),
                            i.push("<i class='waze-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.segment.tooltips.nearbyHOV"))) + "'></i>\n</div>\n</div>\n</div>\n<div class='form-group routing-road-type-select'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='routingRoadType'></select>\n</div>\n</div>\n<div class='form-group toll-road-message'>\n<i class='waze-tooltip'></i>\n<span>" + t(e(this.t("edit.segment.fields.toll"))) + "</span>\n</div>\n<div class='form-group restriction-editing'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.restriction"))) + "</label>\n<div class='restriction-list'>\n<div>\n<a class='restriction-count' href='#' data-restriction-type='driving'>\n<span class='number'></span>\n<span class='title'>" + t(e(this.t("edit.segment.restrictions.driving_restrictions"))) + "</span>\n</a>\n</div>\n<div>\n<a class='restriction-count' href='#' data-restriction-type='pickup'>\n<span class='number'></span>\n<span class='title'>" + t(e(this.t("edit.segment.restrictions.pickup_restrictions"))) + "</span>\n</a>\n</div>\n</div>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-white'></button>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.direction"))) + "</label>\n<div class='controls waze-radio-container'>"),
                            i.push("" + e(this.h.directionRadio(-1))),
                            i.push("" + e(this.h.directionRadio(3))),
                            i.push("" + e(this.h.directionRadio(1))),
                            i.push("" + e(this.h.directionRadio(2))),
                            i.push("" + e(this.h.directionRadio(0))),
                            i.push("</div>\n</div>\n<div class='form-group speed-limits'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.speed_limit"))) + "</label>\n<div class='clearfix controls speed-limit'>"),
                            i.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                direction: "fwd"
                            }))),
                            i.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                direction: "rev"
                            }))),
                            i.push("</div>\n</div>\n</div>\n<div class='lock-edit'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.level"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='level'></select>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o, l, u;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='segment separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.segment.title", {
                                count: this.numSegments
                            }))) + "</span>\n</div>\n<div class='inconsistent-direction segment-alert'>\n<i class='fa fa-info-circle'></i>"),
                            i.push("" + t(e(this.t("edit.segment.alerts.op_direction")))),
                            i.push("</div>\n<div class='inconsistent-driving-types segment-alert'>\n<i class='fa fa-info-circle'></i>"),
                            i.push("" + t(e(this.t("edit.segment.alerts.different_driving_types")))),
                            i.push("</div>\n<div class='segment-details'>\n<span class='error'>" + t(e(this.segmentErrorTitle)) + "</span>"),
                            i.push("" + t(e(this.segmentErrorDescription))),
                            i.push("</div>\n<section class='tabs-container'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#segment-edit-general'>" + t(e(this.t("edit.segment.tabs.general"))) + "</a>\n</li>\n<li>\n<a class='closures-tab' data-toggle='tab' href='#segment-edit-closures'>"),
                            i.push("" + t(e(this.t("edit.segment.tabs.closures")))),
                            i.push("</a>\n</li>\n<li class='lanes-tab-list-item'>\n<a class='lanes-tab' data-toggle='tab' href='#segment-edit-lanes'>"),
                            i.push("" + t(e(this.t("edit.segment.tabs.lanes")))),
                            i.push("</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='segment-edit-general'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.address"))) + "</label>\n<div class='address-edit'></div>\n<form class='attributes-form side-panel-section'>\n<div class='junction-exit-list-region'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.road_type"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='roadType'></select>\n</div>\n</div>"),
                            i.push("" + e(this.renderPartial("templates/segment/edit-panel-attributes-form", this))),
                            i.push("</form>\n<div class='form-group more-actions'>\n<button class='action-button select-entire-roundabout waze-btn waze-btn-white'>"),
                            i.push("" + t(e(this.t("edit.segment.actions.select_entire_roundabout")))),
                            i.push("</button>\n<button class='action-button select-entire-street waze-btn waze-btn-white'>"),
                            i.push("" + t(e(this.t("edit.segment.actions.select_entire_street")))),
                            i.push("</button>\n<div class='edit-house-numbers-btn-wrapper waze-tooltip' data-toggle='tooltip'>\n<button class='action-button edit-house-numbers waze-btn waze-btn-white'></button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='length-attribute'>\n<span class='name'>" + t(e(this.t("edit.segment.fields.length") + ":")) + "</span>\n<span class='value'></span>\n</li>"),
                            null != this.updatedOn)
                            if (1 === this.numSegments)
                                i.push("<li>" + e(this.safe_t("edit.updated", {
                                    time: this.h.dateOnlyString(this.updatedOn),
                                    user: this.h.userProfile(this.updatedBy)
                                })) + "\n&lrm;\n</li>");
                            else if (this.mixedUpdatedBy) {
                            for (i.push("<li>"),
                                i.push("" + t(e(this.t("edit.segment.fields.updated_by") + ":"))),
                                i.push("<ul class='list-unstyled updated-by-list'>"),
                                o = this.updatedBy,
                                n = 0,
                                r = o.length; n < r; n++)
                                u = o[n],
                                i.push("<li>" + e(this.h.userProfile(u)) + "\n&lrm;\n</li>");
                            i.push("</ul>\n</li>")
                        } else
                            i.push("<li>\n<span class='name'>" + t(e(this.t("edit.segment.fields.updated_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.updatedBy)) + "</span>\n</li>");
                        if (1 === this.numSegments)
                            null != this.createdBy && i.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "\n&lrm;\n</li>");
                        else if (this.mixedCreatedBy) {
                            for (i.push("<li>"),
                                i.push("" + t(e(this.t("edit.segment.fields.created_by") + ":"))),
                                i.push("<ul class='created-by-list list-unstyled'>"),
                                l = this.createdBy,
                                s = 0,
                                a = l.length; s < a; s++)
                                u = l[s],
                                i.push("<li>" + e(this.h.userProfile(u)) + "\n&lrm;\n</li>");
                            i.push("</ul>\n</li>")
                        } else
                            i.push("<li>\n<span>" + t(e(this.t("edit.segment.fields.created_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.createdBy)) + "</span>\n</li>");
                        return i.push("<li class='feature-id'></li>\n</ul>\n<div class='element-history-region'></div>\n</div>\n<div class='tab-pane' id='segment-edit-closures'>\n<div class='closures'></div>\n</div>\n<div class='tab-pane' id='segment-edit-lanes'>\n<div class='lanes'></div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            n = this.attribute + "Checkbox",
                            i.push("<input id='" + t(e(n)) + "' name='" + t(e(this.attribute)) + "' type='checkbox'>\n<label for='" + t(e(n)) + "'>" + t(e(this.t("edit.segment.fields." + this.attribute))) + "</label>"),
                            this.disabledTooltip && i.push("<div class='waze-flag-locked-toolip waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("objects.common.rank_too_low"))) + "'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.junction_exits"))) + "</label>\n<div class='list'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["arrow", "fa", "fa-arrow-right", "" + t(e(this.isTurnAllowed ? "allowed" : "disallowed"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<span class='street-name'>" + t(e(this.streetName)) + "</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='routingRoadType' data-nullable>"),
                            this.segment.mixed.routingRoadType && i.push("<option value='' data-mixed-indicator='" + t(e(!0)) + "'>" + t(e(this.t("edit.multiple_values"))) + "</option>"),
                            i.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.prev"), this.routingRoadTypes.prev, this.segment.attributes.routingRoadType, !1, this.prevRouteRankDisabled))),
                            i.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.current"), null, this.segment.attributes.routingRoadType))),
                            i.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.next"), this.routingRoadTypes.next, this.segment.attributes.routingRoadType, !1, this.nextRouteRankDisabled))),
                            i.push("</select>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='speed-limit-" + this.direction + "'>\n<div class='speed-limit'>\n<div class='direction-label'>" + t(e(this.t("edit.segment.speed_limit." + this.direction + "MaxSpeed"))) + "</div>\n<input class='form-control' type='number' name='" + t(e(this.direction)) + "MaxSpeed' maxlength='4'>\n<i class='auto-speed-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.segment.speed_limit.added_automatically"))) + "'></i>\n<div class='unit-label'>"),
                            i.push("" + t(e(this.h.speedString()))),
                            i.push("</div>\n<div class='average-speed-camera controls-container'>\n<input id='speedCamera" + this.direction + "' name='" + t(e(this.direction)) + "SpeedCamera' type='checkbox'>\n<label for='speedCamera" + t(e(this.direction)) + "'>" + e("&nbsp;") + "</label>\n<div class='camera-icon waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "'></div>\n<div class='waze-camera-tooltip waze-lock-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("objects.common.rank_too_low"))) + "'></div>\n</div>\n</div>\n<div class='verify-buttons' data-direction='" + t(e(this.direction)) + "'>\n<button class='verify-btn waze-btn waze-btn-green waze-btn-small'>" + t(e(this.t("edit.segment.speed_limit.verify_speed_limit"))) + "</button>\n<button class='edit-btn waze-btn waze-btn-small waze-btn-white'>" + t(e(this.t("edit.segment.speed_limit.edit"))) + "</button>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<select class='form-control language-select locale-select'>"),
                            a = this.locales,
                            n = 0,
                            s = a.length; n < s; n++)
                            o = a[n],
                            r = o.locale,
                            l = o.tts,
                            i.push("<option value='" + t(e(l)) + "'>" + t(e(I18n.languageNames[r] || r || l)) + "</option>");
                        return i.push("</select>\n<buttton class='play-button waze-btn waze-btn-blue waze-btn-smaller'>" + t(e(this.t("tts.play"))) + "</buttton>\n<a class='report-problem-link' href='" + t(e(this.t("internal.tts_report_problem_url"))) + "' target='_blank'>"),
                            i.push("" + t(e(this.t("tts.report_problem")))),
                            i.push("</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<button class='tts-button' type='button' disabled='" + t(e(this.ttsDisabled)) + "'>\n<i class='fa fa-volume-up'></i>\n</button>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='waze-staff-tools'>\n<div class='action dropdown env-switcher'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#'>"),
                            i.push("" + t(e(this.t("envs")[W.location.code]))),
                            i.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>\n<li>\n<a class='env-link' href='/" + t(e(I18n.locale !== W.Config.default_locale ? I18n.locale + "/" : void 0)) + "editor' data-env='row'>" + t(e(this.t("envs.row"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='/" + t(e(I18n.locale !== W.Config.default_locale ? I18n.locale + "/" : void 0)) + "editor' data-env='usa'>" + t(e(this.t("envs.usa"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='/" + t(e(I18n.locale !== W.Config.default_locale ? I18n.locale + "/" : void 0)) + "editor' data-env='il'>" + t(e(this.t("envs.il"))) + "</a>\n</li>\n</ul>\n</div>\n<div id='snapshot-toggler'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='list-unstyled'>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>" + t(e(this.t("footer.wiki"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>" + t(e(this.t("footer.forum"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.status_page_link"))) + "' target='_blank'>" + t(e(this.t("footer.status"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='#keyboard-dialog' data-toggle='modal'>\n<kbd>?</kbd>"),
                            i.push("" + t(e(this.t("footer.keyboard_shortcuts")))),
                            i.push("</a>\n</li>\n</ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='overlay'></div>\n<div id='user-info'></div>\n<div id='edit-panel'>\n<div class='contents'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='user-profile'>\n<a class='" + ["level-icon", "level-icon-" + t(e(this.normalizedLevel))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='" + t(e(this.h.userProfileLink({
                                userName: this.userName
                            }))) + "' target='_blank'></a>\n<div class='user-about'>\n<h3>\n<a class='profile-link' href='" + t(e(this.h.userProfileLink({
                                userName: this.userName
                            }))) + "' target='_blank'>"),
                            i.push("" + t(e(this.userName))),
                            i.push("</a>\n</h3>\n<div class='level'>"),
                            this.isStaff ? i.push("" + e(this.safe_t("user.info.staff_level_name"))) : i.push("" + e(this.safe_t("user.info.level_name", {
                                level: this.normalizedLevel
                            }))),
                            i.push("</div>\n<div class='user-stats'>\n<div class='stat'>"),
                            i.push("" + e(this.t("user.info.points", {
                                points: I18n.toNumber(this.totalPoints, {
                                    precision: 0
                                })
                            }))),
                            i.push("<div class='separator'>/</div>\n</div>\n<div class='stat'>"),
                            i.push("" + e(this.t("user.info.edits", {
                                edits: I18n.toNumber(this.totalEdits, {
                                    precision: 0
                                })
                            }))),
                            i.push("</div>\n<i class='waze-tooltip' id='permissions-info' data-toggle='tooltip'></i>\n</div>\n<a class='logout-link waze-gray-link' href='#'>" + t(e(this.t("user.logout"))) + "</a>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<section id='user-box'>\n<div id='user-details'></div>\n</section>\n<section id='user-tabs'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#sidepanel-feed'>" + t(e(this.t("user.feed.title"))) + "\n<span class='fa fa-repeat feed-refresh nav-tab-icon'></span>\n</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-drives'>" + t(e(this.t("user.drives.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-areas'>" + t(e(this.t("user.areas.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-prefs'>\n<span class='fa fa-gear'></span>\n</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='sidepanel-feed'></div>\n<div class='tab-pane' id='sidepanel-drives'>\n<div class='loading-animation'></div>\n<div class='error hide'>"),
                            i.push("" + t(e(this.t("user.drives.error")))),
                            i.push("</div>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-areas'>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-prefs'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(59).UNIT,
                            W.Config.user_editing_enabled ? (n.push("" + t(e(this.t("user.info.edit_area.title", {
                                    distance: this.h.lengthString(this.editableMiles, {
                                        units: s.MILE,
                                        translationKey: "user.info.edit_area"
                                    })
                                })))),
                                this.isCountryManager ? n.push("" + t(e(this.t("user.info.country_manager")))) : this.isAreaManager && n.push("" + t(e(this.t("user.info.area_manager"))))) : n.push("" + e(this.safe_t("user.info.editing_restricted", {
                                forum_link: this.h.link(this.t("user.info.forum"), this.t("internal.ur_forum_link"))
                            }))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='sandbox'>\n<div class='welcome-container'>\n<div class='sandbox-logo'></div>\n<h2>"),
                            i.push("" + e(this.t("play_mode.sidebar.hey"))),
                            i.push("</h2>\n<div class='welcome-text'>" + t(e(this.t("play_mode.sidebar.join"))) + "</div>\n<div class='sign-in-button waze-btn waze-btn-blue waze-btn-medium' href=''>" + t(e(this.t("play_mode.sidebar.login_link"))) + "</div>\n<a class='help-link' href='/forgot_password' target='_blank'>" + t(e(this.t("play_mode.sidebar.help"))) + "</a>\n</div>\n<div class='links'>\n<a class='tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='title'>" + t(e(this.t("welcome.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.tutorial.description"))) + "</div>\n</a>\n<a class='wiki' href='http://www.waze.com/wiki/index.php/Map_Editing_-_select_map_editor' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.wiki.title"))) + "</div>\n</a>\n<a class='forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.forum.title"))) + "</div>\n</a>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='map-message snapshot-message-inner'>\n<div class='map-message-icon'></div>\n<div class='title'>" + t(e(this.t("snapshot.title"))) + "</div>\n<div class='description'>" + t(e(this.t("snapshot.description"))) + "</div>\n<a class='return-to-edit-mode'>" + t(e(this.t("snapshot.back_to_editing"))) + "</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.isOn ? i.push("<a class='toggler'>Exit Snapshot mode</a>") : i.push("<a class='toggler' disabled='" + t(e(!this.canToggleOn)) + "'>Enter Snapshot mode</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            n.push("<div class='clearfix hidable-message' id='show-tutorial-lightbox'>\n<div class='fa fa-times-circle hide-message' data-hide-message='tips/watch-tutorial'></div>\n<a data-toggle='modal' href='#tutorial-dialog'>\n<img src='" + t(e(i(724))) + "'>"),
                            n.push("" + t(e(this.t("tutorial.title")))),
                            n.push("</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = i.p + "img/video-notext00f564d3d1e7b4eaa9f30c473da6a09f.png"
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            a = this.timeFrames,
                            s = n = 0,
                            r = a.length; n < r; s = ++n)
                            o = a[s],
                            i.push("" + t(e(o))),
                            s !== this.timeFrames.length - 1 && i.push("<br>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='turn-arrow-tooltip'>\n<div class='turn-header'>" + t(e(this.toStreet ? this.t("turn_tooltip.turn_to_street", {
                                street: this.toStreet
                            }) : "")) + "</div>\n<div class='tooltip-control'>"),
                            this.ioEditingDisabled = this.pathSelectorOnly || !this.canEditInstructionOverride,
                            i.push("<label class='" + t(e(this.ioEditingDisabled ? "disabled" : void 0)) + "' for='opcode-select'>" + t(e(this.t("turn_tooltip.instruction_override.title"))) + "</label>\n<select class='form-control opcode-select' id='opcode-select' disabled='" + t(e(this.ioEditingDisabled)) + "'></select>\n</div>\n<div class='tooltip-control'>\n<label class='" + t(e(this.pathSelectorOnly ? "disabled" : void 0)) + "'>" + t(e(this.t("turn_tooltip.restrictions"))) + "</label>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-warning waze-btn-white' disabled='" + t(e(this.pathSelectorOnly)) + "'>"),
                            this.allowRestrictionEditing ? this.hasRestrictions ? i.push("" + t(e(this.t("edit.segment.actions.restrictions.edit")))) : i.push("" + t(e(this.t("edit.segment.actions.restrictions.add")))) : i.push("" + t(e(this.t("edit.segment.actions.restrictions.view")))),
                            i.push("</button>\n</div>"),
                            this.hasMultiplePaths && i.push("<div class='tooltip-control'>\n<label>" + t(e(this.t("turn_tooltip.switch_route"))) + "</label>\n<div class='path-switcher'>\n<button class='prev-path-button waze-btn waze-btn-small waze-btn-white'></button>\n<button class='next-path-button waze-btn waze-btn-small waze-btn-white'></button>\n<span class='path-progress'></span>\n</div>\n</div>"),
                            i.push("<div class='tooltip-control'>\n<label id='difficult_label'>" + t(e(this.t("turn_tooltip.difficult_turn"))) + "</label>\n<div class='difficult-turn waze-radio-container'>\n<input id='" + t(e("difficult_false")) + "' type='radio' name='isDifficult' value='false'>\n<label for='difficult_false'>" + t(e(this.t("formats.boolean.is_false"))) + "</label>\n<input id='" + t(e("difficult_true")) + "' type='radio' name='isDifficult' value='true'>\n<label for='difficult_true'>" + t(e(this.t("formats.boolean.is_true"))) + "</label>\n<div class='time-based-restrictions-button' data-toggle='tooltip' data-placement='top'></div>"),
                            this.canEditDifficultTurns || i.push("<div class='waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom'></div>"),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='arrow-tooltip'></div>\n<div class='" + ["arrow", "" + t(e(this.arrowClasses))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' style='transform: rotate(" + t(e(this.angle)) + "deg'>"),
                            this.hasRestrictions && this.turnAllowed && i.push("<div class='restriction-badge' style='transform: rotate(" + t(e(-this.angle)) + "deg'></div>"),
                            this.turnAllowed || i.push("<div class='closed-badge' style='transform: rotate(" + t(e(-this.angle)) + "deg'></div>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='clearfix modal-body'>\n<div class='header'>" + t(e(this.t("tutorial.header"))) + "</div>\n<ul class='video-menu' style='display: none;'>"),
                            r = 0,
                            a = this.videos,
                            n = 0,
                            s = a.length; n < s; n++)
                            o = a[n],
                            r++,
                            i.push("<li class='video-link' data-video-key='" + t(e(o)) + "'>\n<div class='number'>" + t(e(r + ".")) + "</div>\n<div class='text'>" + t(e(this.t("tutorial.videos." + o + ".title"))) + "</div>\n</li>");
                        return i.push("</ul>\n<div id='tutorial-player'></div>\n<a class='dialog-close-button' href='#'></a>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<h2>" + e(this.safe_t("user.info.greeting", {
                                username: this.h.contentTag("strong", this.userName)
                            })) + "</h2>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='controls-container'>"),
                            o = W.Config.week_days_order,
                            s = 0,
                            a = o.length; s < a; s++)
                            n = o[s],
                            r = "day-checkbox-" + n,
                            i.push("<input id='" + t(e(r)) + "' type='checkbox' name='days' value='" + t(e(n)) + "' checked='" + t(e(this.cb(n))) + "'>\n<label class='checkbox-inline' for='" + t(e(r)) + "'>" + t(e(this.t("date.abbr_day_names")[n])) + "</label>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='toggle'>\n<a class='select-all' href='#'>" + t(e(this.t("edit.select.all"))) + "</a>\n/\n<a class='select-none' href='#'>" + t(e(this.t("edit.select.none"))) + "</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<input class='alias-name form-control' type='text' value='" + t(e(this.name)) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='list list-unstyled'></ul>\n<a class='" + ["add", "waze-link", "" + t(e(this.hideAddButton ? "hidden" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#'>"),
                            i.push("" + t(e(this.t("edit.landmark.aliases.add")))),
                            i.push("</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='category' data-category='" + t(e(this.category)) + "'>"),
                            i.push("" + t(e(this.t("venues.categories." + this.category)))),
                            this.hideClose || i.push("<a class='remove-choice select2-search-choice-close' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<input class='uuid' value='" + t(e(this.uuid)) + "' type='hidden' placeholder='" + t(e(this.t("edit.landmark.external_providers.search"))) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>\n<a class='url' href='" + t(e(this.url)) + "' target='_blank'>\n<i class='fa fa-link'></i>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='list list-unstyled'></ul>\n<a class='add waze-btn waze-btn-smaller waze-btn-white' href='#'>"),
                            i.push("" + t(e(this.t("edit.landmark.external_providers.add")))),
                            i.push("</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r;
                        for (e = this.__cleanValue,
                            t = [],
                            t.push("<ul class='clearfix list-unstyled'>"),
                            r = this.view.getSuggestedCategories(),
                            n = 0,
                            s = r.length; n < s; n++)
                            i = r[n],
                            this.categoryMap[i] || (t.push("<li class='select2-search-choice suggested-category'>"),
                                t.push("" + e(this.renderPartial("templates/venue/category-tag", {
                                    category: i,
                                    hideClose: !0
                                }))),
                                t.push("</li>"));
                        return t.push("</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<input name='categories' data-placeholder='" + t(e(this.t("edit.landmark.select_categories"))) + "' type='hidden'>\n<div class='suggested-categories'>"),
                            i.push("" + e(this.renderPartial("templates/venue/suggested-categories", this))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a, o, l, u, d, c;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = function(e) {
                                return e.replace(/\n/g, "&#x000A;")
                            },
                            i = [],
                            i.push("<form class='attributes-form side-panel-section'>"),
                            this.landmark.attributes.residential || i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text' value='" + t(e(this.landmark.attributes.name)) + "'>\n<div class='aliases-view'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>" + t(e(this.t("edit.landmark.fields.categories"))) + "</label>\n<i class='categories-tooltip waze-tooltip' data-toggle='tooltip'></i>\n<div class='categories controls'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.description"))) + "</label>\n<div class='controls'>\n<textarea class='form-control' name='description' maxlength='" + t(e(300)) + "'>" + n(t(e(this.landmark.attributes.description))) + "</textarea>\n</div>\n</div>"),
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.navigation_points"))) + "</label>\n<div class='controls'>\n<div class='navigation-point-region'></div>\n</div>\n</div>"), !this.landmark.attributes.residential) {
                            if (i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control waze-radio-container'>"),
                                this.landmark.arePropertiesEditable())
                                for (d = this.lockRankRange,
                                    r = 0,
                                    o = d.length; r < o; r++)
                                    u = d[r],
                                    i.push("" + e(this.h.venueRankOption(this.landmark, u, this.landmark.attributes.lockRank)));
                            else
                                i.push("" + e(this.h.formatRank(this.landmark.attributes.lockRank)));
                            for (i.push("</div>\n</div>\n</div>\n<div class='" + ["form-group", "brand", "" + t(e(this.brands.length ? void 0 : "not-shown"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                                this.landmark.isParkingLot() ? i.push("<label class='control-label'>" + t(e(this.t("edit.landmark.parking.operator"))) + "</label>") : i.push("<label class='control-label'>" + t(e(this.t("edit.landmark.fields.brand"))) + "</label>"),
                                i.push("<div class='controls'>\n<select class='form-control select2style' name='brand'>"),
                                c = this.brands,
                                a = 0,
                                l = c.length; a < l; a++)
                                s = c[a],
                                i.push("" + e(this.h.option(s, s, this.landmark.attributes.brand, !0)));
                            i.push("</select>\n</div>"),
                                this.landmark.isParkingLot() && i.push("<a class='add-brand-link waze-link' href='" + t(e(this.t("internal.add_operator_form"))) + "' target='_blank'>" + t(e(this.t("edit.landmark.add_operator.text"))) + "</a>"),
                                i.push("</div>"),
                                this.canEditType && (i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.type"))) + "</label>\n<div class='controls'>"),
                                    this.landmark.isParkingLot() ? (i.push("<div class='btn btn-block btn-default convert-to-polygon'>"),
                                        i.push("" + t(e(this.t("edit.landmark.type.convert_to_area")))),
                                        i.push("</div>")) : (i.push("<div class='btn-group' data-toggle='buttons'>\n<label class='" + ["btn", "btn-default", "point-btn", "" + t(e(this.landmark.isPoint() ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(this.landmark.isPoint())) + "' value='true'>"),
                                        i.push("" + t(e(this.t("edit.landmark.type.point")))),
                                        i.push("</label>\n<label class='" + ["btn", "btn-default", "area-btn", "" + t(e(this.landmark.isPoint() ? void 0 : "active"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(!this.landmark.isPoint())) + "' value='false'>"),
                                        i.push("" + t(e(this.t("edit.landmark.type.area")))),
                                        i.push("</label>\n</div>")),
                                    i.push("</div>\n</div>")),
                                this.showExternalProviderView && i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.external_providers.title"))) + "</label>\n<div class='controls'>\n<div class='external-providers-view'></div>\n</div>\n</div>")
                        }
                        return this.landmark.isParkingLot() || (i.push("<div class='form-group'>\n<div class='controls'>"),
                                this.landmark.attributes.residential ? this.landmark.canConvertToPublic() && (i.push("<button class='btn-link toggle-residential waze-link' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "' type='button'>"),
                                    i.push("" + t(e(this.t("edit.landmark.residential.convert_from")))),
                                    i.push("</button>")) : this.hasHouseNumber ? (i.push("<button class='btn-link toggle-residential waze-link' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "' type='button'>"),
                                    i.push("" + t(e(this.t("edit.landmark.residential.convert_to")))),
                                    i.push("</button>")) : (i.push("<div class='btn-link residential-tooltip toggle-residential waze-link' data-toggle='tooltip' title='" + t(e(this.t("objects.venue.residential_tooltip"))) + "'>"),
                                    i.push("" + t(e(this.t("edit.landmark.residential.convert_to")))),
                                    i.push("</div>")),
                                i.push("</div>\n</div>")),
                            i.push("</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='url' type='text' value='" + t(e(this.landmark.attributes.url)) + "'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.phone"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='phone' type='tel' value='" + t(e(this.landmark.attributes.phone)) + "'>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, a, o, l, u, d, c, h, f, p, g, m, v;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(116),
                            n.push("<form class='attributes-form'>\n<fieldset class='controls-container'>\n<div class='side-panel-section'>\n<div class='form-group'>\n<template class='hidden parkingType-tooltip-template'>\n<ul class='list-unstyled parkingType-tooltip-content'>"),
                            f = s.PARKING_TYPE,
                            r = 0,
                            u = f.length; r < u; r++)
                            v = f[r],
                            n.push("<li>\n<span class='parkingType-tooltip-header'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + v)))),
                            n.push("</span>\n<span>-</span>\n<span>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.titles.parkingType." + v)))),
                            n.push("</span>\n</li>");
                        for (n.push("</ul>\n</template>\n<label class='control-label control-label-inline'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.fields.parkingType")))),
                            n.push("</label>\n<i class='parkingType-tooltip waze-tooltip'></i>"),
                            p = s.PARKING_TYPE,
                            a = 0,
                            d = p.length; a < d; a++)
                            v = p[a],
                            n.push("<div class='parking-type-option'>\n<input id='parking-type-" + v + "' type='radio' name='parkingType' value='" + t(e(v)) + "'>\n<label for='parking-type-" + t(e(v)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + v)))),
                            n.push("</label>\n</div>");
                        for (n.push("</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.fields.hasTBR")))),
                            n.push("</label>\n<i class='hasTBR-tooltip waze-tooltip' title='" + t(e(this.t("edit.landmark.parking.titles.hasTBR"))) + "'></i>\n<input id='has-tbr' type='checkbox' name='hasTBR'>\n<label for='has-tbr'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.general.yes")))),
                            n.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='opening-hours'></div>\n<div class='controls-container form-group'>\n<input id='can-exit-checkbox' type='checkbox' name='canExitWhileClosed'>\n<label for='can-exit-checkbox'>"),
                            n.push("" + e(this.t("edit.landmark.parking.fields.canExitWhileClosed"))),
                            n.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.costType"))) + "</label>\n<select class='form-control' name='costType'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.paymentType"))) + "</label>"),
                            g = s.PAYMENT_TYPE,
                            o = 0,
                            c = g.length; o < c; o++)
                            v = g[o],
                            n.push("<div class='payment-checkbox'>\n<input id='payment-checkbox-" + v + "' type='checkbox' name='paymentType' value='" + t(e(v)) + "'>\n<label for='payment-checkbox-" + t(e(v)) + "'>"),
                            n.push("" + e(this.t("edit.landmark.parking.types.paymentType." + v))),
                            n.push("</label>\n</div>");
                        for (n.push("</div>\n<div class='form-group'>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-services", this))),
                            n.push("</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.estimatedNumberOfSpots"))) + "</label>\n<select class='form-control' name='estimatedNumberOfSpots'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.lotType"))) + "</label>"),
                            m = s.LOT_TYPE,
                            l = 0,
                            h = m.length; l < h; l++)
                            v = m[l],
                            n.push("<div class='lot-checkbox'>\n<input id='lot-checkbox-" + v + "' type='checkbox' name='lotType' value='" + t(e(v)) + "'>\n<label for='lot-checkbox-" + t(e(v)) + "'>"),
                            n.push("" + e(this.t("edit.landmark.parking.types.lotType." + v))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>\n<div class='side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-contact", this))),
                            n.push("</div>\n</fieldset>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='sub-section-header'>" + t(e(this.t("edit.landmark.fields.services"))) + "</div>\n<div class='controls-container form-group'>"),
                            r = this.serviceTypes,
                            n = 0,
                            s = r.length; n < s; n++)
                            a = r[n],
                            i.push("<div class='service-checkbox'>\n<input id='service-checkbox-" + a + "' type='checkbox' name='services' data-multiple='" + t(e(!0)) + "' value='" + t(e(a)) + "' checked='" + t(e(null != this.serviceSet[a])) + "'>\n<label for='service-checkbox-" + t(e(a)) + "'>" + t(e(this.t("venues.services." + a))) + "</label>\n</div>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<form class='attributes-form'>\n<div class='side-panel-section'>"),
                            t.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-contact", this))),
                            t.push("</div>\n<div class='side-panel-section'>"),
                            t.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-services", this))),
                            t.push("</div>"),
                            this.landmark.attributes.residential || t.push("<div class='opening-hours side-panel-section'></div>"),
                            t.push("</form>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, a, o, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            n.push("<div class='" + ["landmark", "sidebar-column", "separator-line", "" + t(e(this.categoryClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.landmark.title"))) + "</span>"),
                            n.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            n.push("</div>"),
                            this.showUnapprovedAlert ? (n.push("<div class='alert alert-danger header-alert pending-changes-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.unapproved")))),
                                n.push("</div>")) : this.showPendingChangesAlert && (n.push("<div class='alert alert-danger header-alert pending-changes-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.pending")))),
                                n.push("</div>")),
                            this.showAdLockedAlert ? (n.push("<div class='alert alert-danger header-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.ad_locked")))),
                                n.push("</div>")) : this.showRequiresModerationAlert && (n.push("<div class='alert alert-danger header-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.moderation")))),
                                n.push("</div>")),
                            this.showPendingMergeNote && (n.push("<div class='alert alert-info header-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.merge.pending")))),
                                n.push("</div>")),
                            n.push("<div class='tabs-container'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#landmark-edit-general'>" + t(e(this.t("edit.landmark.tabs.general"))) + "</a>\n</li>"),
                            this.landmark.attributes.residential || n.push("<li>\n<a data-toggle='tab' href='#landmark-edit-more-info'>" + t(e(this.t("edit.landmark.tabs.more_info"))) + "</a>\n</li>"),
                            n.push("<li>\n<a data-toggle='tab' href='#landmark-edit-photos'>"),
                            n.push("" + t(e(this.t("edit.landmark.tabs.photos") + " (" + this.imageCount + ")"))),
                            n.push("</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='landmark-edit-general'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-general", this))),
                            n.push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this.landmark.attributes))),
                            n.push("<li>" + t(e(this.t("edit.id", {
                                num: this.landmark.getID()
                            }))) + "</li>\n</ul>\n<div class='element-history-region'></div>\n</div>"),
                            this.landmark.attributes.residential || n.push("<div class='more-info tab-pane' id='landmark-edit-more-info'></div>"),
                            n.push("<div class='tab-pane' id='landmark-edit-photos'>\n<div class='image-view'>"),
                            this.hasImages || n.push("<em>" + t(e(this.t("edit.landmark.no_photos"))) + "</em>"),
                            s = i(76).SIZE,
                            l = this.images,
                            r = 0,
                            o = l.length; r < o; r++)
                            a = l[r],
                            n.push("<div class='image-preview-container' data-id='" + t(e(a.id)) + "'>\n<div class='image-container'>\n<img class='image-preview' src='" + t(e(a.getUrl(s.WEB))) + "'>\n</div>\n<button class='image-delete-button'></button>\n<button class='btn fa fa-search image-enlarge-button'></button>\n</div>");
                        return n.push("</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(48),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(746),
        u = i(747);
    W.Config = l.beta,
        W.Config.raster_layers = u.beta,
        W.Config.init = function(e) {
            W.Config.deployments && $.extend(!0, W.Config, W.Config.deployments[e.code]),
                W.Config.raster_layers.deployments && $.extend(!0, W.Config.raster_layers, W.Config.raster_layers.deployments[e.code]),
                (0,
                    o.default)(W.Config.paths).forEach(function(e) {
                    var t = W.Config.paths[e];
                    W.Config.paths[e] = W.Config.api_base + "/" + t
                });
            var t = W.Config.map.projection;
            t.local = new OL.Projection(t.local),
                t.remote = new OL.Projection(t.remote),
                (0,
                    r.default)(W.Config)
        }
}, function(e, t, i) {
    "use strict";
    var n = i(234),
        s = {
            default_locale: "en",
            api_base: "/Descartes/app",
            deployments: {
                il: {
                    api_base: "/Descartes/app",
                    search: {
                        server: "/SearchServer/mozi"
                    }
                },
                usa: {
                    api_base: "/Descartes/app",
                    search: {
                        server: "/SearchServer/mozi"
                    }
                },
                row: {
                    api_base: "/Descartes/app",
                    search: {
                        server: "/SearchServer/mozi"
                    }
                }
            },
            paths: {
                features: "Features",
                issues: "Feed/Issues",
                notifications: "Feed/Notifications",
                auth: "Session",
                problemDetails: "MapProblems/Details",
                updateRequestSessions: "MapProblems/UpdateRequests",
                updateRequestComments: "MapProblems/UpdateRequests/Comment",
                updateRequestFollow: "MapProblems/UpdateRequests/Notification",
                mapCommentConversation: "MapComments/Comment",
                mapCommentFollow: "MapComments/Notification",
                archive: "Archive/List",
                archiveSessions: "Archive/SessionGPS",
                houseNumbers: "HouseNumbers",
                cityExists: "CityExistence",
                mteDetails: "MajorTrafficEvents/Details",
                mtePublish: "MajorTrafficEvents/Publish",
                mteReady: "MajorTrafficEvents/Ready",
                logger: "ErrorReport",
                elementHistory: "ElementHistory",
                configurationInfo: "info/config",
                version: "info/version"
            },
            enabled_modules: ["Comments", "Cities"],
            units: {
                lonLatPrecision: 5
            },
            week_days_order: [1, 2, 3, 4, 5, 6, 0],
            reporting: {
                enable: !1
            },
            login: {
                paths: {
                    get: "/login/get",
                    create: "/login/create",
                    dashboard: "/dashboard",
                    email_verification: "/UsersProfile/email/verify"
                }
            },
            search: {
                server: "/SearchServer/mozi",
                resultZoom: 3,
                options: {
                    origin: "editor"
                }
            },
            places_api: {
                url: {
                    autocomplete: "/maps/api/place/autocomplete/json",
                    details: "/maps/api/place/details/json"
                }
            },
            mte: {
                root_url: "/mte"
            },
            map: {
                initialPosition: {
                    il: {
                        lon: 34.789,
                        lat: 32.086,
                        initialZoom: 1
                    },
                    usa: {
                        lon: -73.99078,
                        lat: 40.73565,
                        initialZoom: 0
                    },
                    row: {
                        lon: -.119,
                        lat: 51.524,
                        initialZoom: 0
                    }
                },
                projection: {
                    remote: "EPSG:4326",
                    local: "EPSG:900913"
                }
            },
            tts: {
                url: "https://ttsgw.world.waze.com/TTSGateway/Text2SpeechServlet",
                default_locale: {
                    tts: "en-US",
                    locale: "en"
                },
                options: {
                    version: 6,
                    protocol: 2,
                    sessionid: 12345654321,
                    content_type: "audio/mpeg",
                    type: "street",
                    validate_data: "positive",
                    skipCache: !0,
                    lon: 0,
                    lat: 0
                }
            },
            chat: {
                enable: !0,
                staffOnly: !1
            },
            segments: {
                allTypes: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
                minDisplayZoom: 2,
                zoomToRoadType: {
                    0: [],
                    1: [],
                    2: [2, 3, 4, 6, 7, 15],
                    3: [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
                    4: -1,
                    5: -1,
                    6: -1,
                    7: -1,
                    8: -1,
                    9: -1,
                    10: -1
                }
            },
            speed_limit: {
                enable: !0
            },
            place_updates: {
                focusZoom: 6
            },
            problems: {
                maxDetailsZoom: 7,
                minDetailsZoom: 5
            },
            houseNumbers: {
                allowEditing: !0,
                minEditZoom: 6
            },
            restrictions: {
                allowEditing: !0
            },
            closures: {
                minDisplayZoom: 0
            },
            cameras: {
                minDisplayZoom: 3,
                minDragZoom: 3
            },
            editable_areas: {
                minDisplayZoom: 0
            },
            user_drive: {
                gutterMinDisplayZoom: 6,
                arrowsMinDisplayZoom: 5,
                instructionsMinDisplayZoom: 5,
                weightMinDisplayZoom: 5,
                initialZoom: 7
            },
            user_editing_enabled: !0,
            big_junctions: {
                minRank: 4,
                enable: !0
            },
            venues: {
                image_bucket_url: "https://venue-image.waze.com/",
                zoomToSize: {
                    0: 1,
                    1: 2,
                    2: 3,
                    3: 3,
                    4: 3,
                    5: 4,
                    6: 4,
                    7: 4,
                    8: 4,
                    9: 4,
                    10: 4
                },
                categories: ["CAR_SERVICES", "TRANSPORTATION", "PROFESSIONAL_AND_PUBLIC", "SHOPPING_AND_SERVICES", "FOOD_AND_DRINK", "CULTURE_AND_ENTERTAINEMENT", "OTHER", "LODGING", "OUTDOORS", "NATURAL_FEATURES", "PARKING_LOT"],
                subcategories: {
                    CAR_SERVICES: ["GAS_STATION", "GARAGE_AUTOMOTIVE_SHOP", "CAR_WASH", "CHARGING_STATION"],
                    PARKING_LOT: [],
                    TRANSPORTATION: ["AIRPORT", "BUS_STATION", "FERRY_PIER", "SEAPORT_MARINA_HARBOR", "SUBWAY_STATION", "TRAIN_STATION", "BRIDGE", "TUNNEL", "TAXI_STATION", "JUNCTION_INTERCHANGE", "REST_AREAS"],
                    PROFESSIONAL_AND_PUBLIC: ["COLLEGE_UNIVERSITY", "SCHOOL", "CONVENTIONS_EVENT_CENTER", "GOVERNMENT", "LIBRARY", "CITY_HALL", "ORGANIZATION_OR_ASSOCIATION", "PRISON_CORRECTIONAL_FACILITY", "COURTHOUSE", "CEMETERY", "FIRE_DEPARTMENT", "POLICE_STATION", "MILITARY", "HOSPITAL_URGENT_CARE", "DOCTOR_CLINIC", "OFFICES", "POST_OFFICE", "RELIGIOUS_CENTER", "KINDERGARDEN", "FACTORY_INDUSTRIAL", "EMBASSY_CONSULATE", "INFORMATION_POINT", "EMERGENCY_SHELTER", "TRASH_AND_RECYCLING_FACILITIES"],
                    SHOPPING_AND_SERVICES: ["ARTS_AND_CRAFTS", "BANK_FINANCIAL", "SPORTING_GOODS", "BOOKSTORE", "PHOTOGRAPHY", "CAR_DEALERSHIP", "FASHION_AND_CLOTHING", "CONVENIENCE_STORE", "PERSONAL_CARE", "DEPARTMENT_STORE", "PHARMACY", "ELECTRONICS", "FLOWERS", "FURNITURE_HOME_STORE", "GIFTS", "GYM_FITNESS", "SWIMMING_POOL", "HARDWARE_STORE", "MARKET", "SUPERMARKET_GROCERY", "JEWELRY", "LAUNDRY_DRY_CLEAN", "SHOPPING_CENTER", "MUSIC_STORE", "PET_STORE_VETERINARIAN_SERVICES", "TOY_STORE", "TRAVEL_AGENCY", "ATM", "CURRENCY_EXCHANGE", "CAR_RENTAL", "TELECOM"],
                    FOOD_AND_DRINK: ["RESTAURANT", "BAKERY", "DESSERT", "CAFE", "FAST_FOOD", "FOOD_COURT", "BAR", "ICE_CREAM"],
                    CULTURE_AND_ENTERTAINEMENT: ["ART_GALLERY", "CASINO", "CLUB", "TOURIST_ATTRACTION_HISTORIC_SITE", "MOVIE_THEATER", "MUSEUM", "MUSIC_VENUE", "PERFORMING_ARTS_VENUE", "GAME_CLUB", "STADIUM_ARENA", "THEME_PARK", "ZOO_AQUARIUM", "RACING_TRACK", "THEATER"],
                    OTHER: ["CONSTRUCTION_SITE"],
                    LODGING: ["HOTEL", "HOSTEL", "CAMPING_TRAILER_PARK", "COTTAGE_CABIN", "BED_AND_BREAKFAST"],
                    OUTDOORS: ["PARK", "PLAYGROUND", "BEACH", "SPORTS_COURT", "GOLF_COURSE", "PLAZA", "PROMENADE", "POOL", "SCENIC_LOOKOUT_VIEWPOINT", "SKI_AREA"],
                    NATURAL_FEATURES: ["ISLAND", "SEA_LAKE_POOL", "RIVER_STREAM", "FOREST_GROVE", "FARM", "CANAL", "SWAMP_MARSH", "DAM"]
                }
            },
            marx: {
                server: "https://localhost:8000"
            },
            openlayers: {
                img_path: "images/"
            },
            log: {
                enable: !0
            },
            user_profile: {
                enable: !0,
                url: "https://www.waze.com/user/editor/"
            },
            area_manager_widget: {
                enable: !1
            },
            livemap: {
                zoom_offset: 12,
                max_zoom: 17,
                url: "/livemap"
            },
            advanced_tools: {
                minRank: 3
            }
        },
        r = n(s, {
            deployments: {
                il: {
                    api_base: "/il-Descartes/app",
                    search: {
                        server: "/il-SearchServer/mozi"
                    }
                },
                row: {
                    api_base: "/row-Descartes/app",
                    search: {
                        server: "/row-SearchServer/mozi"
                    }
                }
            },
            reporting: {
                enable: !0
            },
            marx: {
                server: "https://marx.waze.com:443"
            },
            log: {
                enable: !1
            }
        }),
        a = n(r, {
            marx: {
                server: "https://marx-beta.waze.com:443"
            },
            area_manager_widget: {
                enable: !0
            }
        }),
        o = n(s, {
            enable_lanes: !0
        }),
        l = n(s, {
            api_base: "https://www.gcp.wazestg.com/Descartes/app",
            enable_lanes: !0
        }),
        u = n(s, {
            enable_lanes: !0
        });
    e.exports = {
        defaults: s,
        production: r,
        beta: a,
        staging: o,
        qa: l,
        fakecartes: u
    }
}, function(e, t, i) {
    "use strict";
    var n = i(234),
        s = {
            options: {
                alpha: !0,
                buffer: 1,
                tileWidth: 512,
                tileHeight: 512,
                gutter: 15,
                transitionEffect: "resize",
                displayInLayerSwitcher: !0,
                draggable: !1
            },
            wms: {
                servers: ["/wms"],
                file_name: "wme",
                params: {
                    projection: "EPSG:900913",
                    format: "image/png",
                    transparent: !0
                }
            },
            mapnik: {
                servers: [],
                file_name: "tiles/${z}/${x}/${y}.png"
            },
            roads: {
                uniqueName: "roads",
                visible: !0,
                type: "mapnik",
                options: {
                    isBaseLayer: !1,
                    zoomOffset: 12,
                    draggable: !0,
                    gutter: 0
                }
            },
            gps_points: {
                uniqueName: "gps_points",
                visible: !1,
                type: "mapnik",
                options: {
                    isBaseLayer: !1,
                    zoomOffset: 12,
                    opacity: 1,
                    draggable: !0,
                    gutter: 0
                },
                params: {
                    clientLayer: "gps_points"
                }
            }
        },
        r = n(s, {
            deployments: {
                usa: {
                    wms: {
                        servers: ["http://etiles5.waze.com/wms", "http://etiles6.waze.com/wms", "http://etiles7.waze.com/wms", "http://etiles8.waze.com/wms"]
                    },
                    mapnik: {
                        servers: ["https://editor-tiles1.waze.com", "https://editor-tiles2.waze.com", "https://editor-tiles3.waze.com", "https://editor-tiles4.waze.com"]
                    }
                },
                row: {
                    wms: {
                        servers: ["http://etiles1.waze.com/wms", "http://etiles2.waze.com/wms", "http://etiles3.waze.com/wms", "http://etiles4.waze.com/wms"]
                    },
                    mapnik: {
                        servers: ["https://world-editor-tiles1.waze.com", "https://world-editor-tiles2.waze.com", "https://world-editor-tiles3.waze.com", "https://world-editor-tiles4.waze.com"]
                    }
                },
                il: {
                    wms: {
                        servers: ["http://etiles1.maps.waze.co.il/wms", "http://etiles2.maps.waze.co.il/wms", "http://etiles3.maps.waze.co.il/wms", "http://etiles4.maps.waze.co.il/wms"]
                    },
                    mapnik: {
                        servers: ["https://il-editor-tiles1.waze.com", "https://il-editor-tiles2.waze.com", "https://il-editor-tiles3.waze.com", "https://il-editor-tiles4.waze.com"]
                    }
                }
            }
        }),
        a = n(r, {
            deployments: {
                row: {
                    wms: {
                        file_name: "wme_beta"
                    }
                }
            }
        }),
        o = n(s, {
            mapnik: {
                servers: ["https://editor-tiles.gcp.wazestg.com"]
            }
        }),
        l = n(s, {
            mapnik: {
                servers: ["https://editor-tiles.gcp.wazestg.com"]
            }
        }),
        u = n(s, {
            mapnik: {
                servers: ["https://editor-tiles.gcp.wazestg.com"]
            }
        });
    e.exports = {
        defaults: s,
        production: r,
        beta: a,
        staging: o,
        qa: l,
        fakecartes: u
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(235),
        r = n(s),
        a = i(236),
        o = n(a),
        l = i(240),
        u = n(l),
        d = i(125),
        c = n(d),
        h = i(95),
        f = n(h),
        p = i(123),
        g = n(p),
        m = i(96),
        v = n(m),
        _ = i(52),
        y = n(_),
        b = i(63),
        w = n(b),
        E = i(241),
        k = n(E),
        M = i(126),
        S = n(M),
        T = i(64),
        C = n(T),
        I = i(79),
        A = n(I),
        D = i(242),
        R = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(D),
        O = i(172),
        L = n(O),
        x = i(170),
        P = n(x),
        N = i(243),
        V = n(N),
        F = i(53),
        U = n(F),
        j = i(78),
        B = n(j),
        G = i(173),
        W = n(G),
        z = i(77),
        H = n(z),
        $ = i(171),
        q = n($),
        Y = i(244),
        K = n(Y),
        J = i(20),
        Z = n(J),
        X = i(124),
        Q = n(X),
        ee = i(26),
        te = n(ee),
        ie = i(93),
        ne = n(ie),
        se = i(30),
        re = n(se),
        ae = i(224),
        oe = n(ae),
        le = i(97),
        ue = n(le),
        de = i(37),
        ce = n(de),
        he = i(61),
        fe = n(he),
        pe = i(98),
        ge = n(pe),
        me = i(32),
        ve = n(me),
        _e = i(245),
        ye = n(_e),
        be = i(65),
        we = n(be);
    window.Waze = new Proxy(window.W, {
            get: function(e, t) {
                return console.warn("window.Waze is deprecated and will be removed soon, use window.W instead"),
                    e[t]
            }
        }),
        window.require = function(e) {
            var t = {
                    "Waze/Action/AddAlternateStreet": r.default,
                    "Waze/Action/AddIntersection": o.default,
                    "Waze/Action/AddLandmark": u.default,
                    "Waze/Action/AddNode": c.default,
                    "Waze/Action/AddOrGetCity": f.default,
                    "Waze/Action/AddOrGetStreet": g.default,
                    "Waze/Action/AddSegment": v.default,
                    "Waze/Action/ConnectSegment": y.default,
                    "Waze/Action/CreateObject": w.default,
                    "Waze/Action/CreateRoundabout": k.default,
                    "Waze/Action/DeleteObject": S.default,
                    "Waze/Action/DeleteSegment": C.default,
                    "Waze/Action/DisconnectSegment": A.default,
                    "Waze/Action/HouseNumber": R,
                    "Waze/Action/MergeSegments": L.default,
                    "Waze/Action/ModifyAllConnections": P.default,
                    "Waze/Action/MoveNode": V.default,
                    "Waze/Action/MultiAction": U.default,
                    "Waze/Action/SplitSegments": B.default,
                    "Waze/Action/UpdateFeatureAddress": W.default,
                    "Waze/Action/UpdateFeatureGeometry": H.default,
                    "Waze/Action/UpdateHouseNumber": q.default,
                    "Waze/Action/UpdateHouseNumberGeometry": K.default,
                    "Waze/Action/UpdateObject": Z.default,
                    "Waze/Action/UpdateSegmentGeometry": Q.default,
                    "Waze/DivIcon": te.default,
                    "Waze/Feature/Vector/Landmark": ne.default,
                    "Waze/Feature/Vector/Segment": re.default,
                    "Waze/Feature/Vector/UpdateRequest": oe.default,
                    "Waze/Handler/DragElement": ue.default,
                    "Waze/Model/Graph/Actions/SetTurn": ce.default,
                    "Waze/Model/Graph/TurnData": fe.default,
                    "Waze/Model/Graph/TurnGraph": ge.default,
                    "Waze/Model/Graph/Vertex": ve.default,
                    "Waze/Modules/Closures/Models/ClosureActionBuilder": ye.default,
                    "Waze/Modules/Closures/Models/SharedClosure": we.default
                },
                i = t[e];
            if (null != i)
                return i;
            throw new Error("Cannot find module " + e)
        }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(12),
        v = n(m),
        _ = i(37),
        y = n(_),
        b = i(32),
        w = n(b),
        E = function(e) {
            function t(e, i, n, s) {
                (0,
                    u.default)(this, t);
                var r = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, s));
                return r._forwardVertex = w.default.forwardOf(e),
                    r._reverseVertex = w.default.reverseOf(e),
                    r._firstSplitID = n,
                    r._lastSplitID = i,
                    r
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this.model.getTurnGraph();
                        e.getTurnsTo(this._forwardVertex).forEach(function(t) {
                                t = t.withToVertex(w.default.forwardOf(this._firstSplitID)),
                                    this.doSubAction(new y.default(e, t, {
                                        dontSerialize: !0
                                    }))
                            }, this),
                            e.getTurnsFrom(this._forwardVertex).forEach(function(t) {
                                t = t.withFromVertex(w.default.forwardOf(this._lastSplitID)),
                                    this.doSubAction(new y.default(e, t, {
                                        dontSerialize: !0
                                    }))
                            }, this),
                            e.getTurnsFrom(this._reverseVertex).forEach(function(t) {
                                t = t.withFromVertex(w.default.reverseOf(this._firstSplitID)),
                                    this.doSubAction(new y.default(e, t, {
                                        dontSerialize: !0
                                    }))
                            }, this),
                            e.getTurnsTo(this._reverseVertex).forEach(function(t) {
                                t = t.withToVertex(w.default.reverseOf(this._lastSplitID)),
                                    this.doSubAction(new y.default(e, t, {
                                        dontSerialize: !0
                                    }))
                            }, this)
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(E.prototype, {
        CLASS_NAME: "Waze.Model.Graph.Actions.SplitTurns"
    }),
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(18),
        v = n(m),
        _ = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, (0,
                        r.default)({
                        dontSerialize: !0
                    }, e)))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this.model.loginManager.user.incrementSegmentStreetChangeCount()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.model.loginManager.user.decrementSegmentStreetChangeCount()
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.loginManager.user.incrementSegmentStreetChangeCount()
                    }
                }]),
                t
        }(v.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._fromLaneIndex = t,
                    this._toLaneIndex = i,
                    this._arrowAngle = n
            }
            return (0,
                    o.default)(e, [{
                    key: "isValid",
                    value: function() {
                        return this.fromLaneIndex <= this.toLaneIndex && this.arrowAngle % 45 == 0
                    }
                }, {
                    key: "getFromLaneIndex",
                    value: function() {
                        return this._fromLaneIndex
                    }
                }, {
                    key: "getToLaneIndex",
                    value: function() {
                        return this._toLaneIndex
                    }
                }, {
                    key: "getLaneRange",
                    value: function() {
                        return [this._fromLaneIndex, this._toLaneIndex]
                    }
                }, {
                    key: "getArrowAngle",
                    value: function() {
                        return this._arrowAngle
                    }
                }, {
                    key: "includes",
                    value: function(e) {
                        return this._fromLaneIndex <= e && e <= this._toLaneIndex
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = i(11),
        v = i(36),
        _ = function(e) {
            function t(e, i, n) {
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n));
                return s.closure = e,
                    s.segment = i,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: m.ROAD_CLOSURE,
                            action: g.default.TYPE.ADD,
                            attributes: {
                                reason: this.closure.reason,
                                location: this.closure.location,
                                segID: this.closure.segID,
                                id: this.closure.getID(),
                                startDate: this.closure.startDate,
                                endDate: this.closure.endDate,
                                forward: this.closure.forward,
                                permanent: this.closure.permanent,
                                eventId: this.closure.eventId
                            }
                        }
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        W.model.repos.roadClosures.put(this.closure)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.doAction()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        W.model.repos.roadClosures.remove(this.closure)
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.closure.getUniqueID(), this.segment.getUniqueID()]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            v.formatActionAddressDescription)(this.segment, "AddRoadClosure")
                    }
                }]),
                t
        }(g.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = i(11),
        v = function(e) {
            function t(e, i) {
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return n.closure = e,
                    n
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: m.ROAD_CLOSURE,
                            action: g.default.TYPE.UPDATE,
                            attributes: {
                                reason: this.closure.reason,
                                location: this.closure.location,
                                segID: this.closure.segID,
                                id: this.closure.id,
                                startDate: this.closure.startDate,
                                endDate: this.closure.endDate,
                                forward: this.closure.forward,
                                permanent: this.closure.permanent,
                                eventId: this.closure.eventId
                            }
                        }
                    }
                }, {
                    key: "doAction",
                    value: function() {}
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.get(this.closure.segID).getUniqueID(), this.closure.getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.get(this.closure.segID)]
                    }
                }]),
                t
        }(g.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = i(11),
        v = function(e) {
            function t(e, i, n) {
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n));
                return s.closure = e,
                    s.segment = i,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: m.ROAD_CLOSURE,
                            action: g.default.TYPE.DELETE,
                            attributes: {
                                id: this.closure.getID(),
                                segID: this.closure.segID
                            }
                        }
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        W.model.repos.roadClosures.remove(this.closure)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.doAction()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        W.model.repos.roadClosures.put(this.closure)
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.closure.getUniqueID(), this.segment.getUniqueID()]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.DeleteRoadClosure")
                    }
                }]),
                t
        }(g.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    $.fn.booleanVal = function() {
        var e = this.val();
        return "null" === e ? null : "true" === e
    }
}, function(e, t, i) {
    "use strict";
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(25);
    Backbone.ajax = function(e) {
        !e.method && e.type && (e = (0,
            s.default)({}, e, {
            method: e.type
        }));
        var t = (0,
            r.httpRequest)(e.url, e.data, e);
        return t.then(function(t) {
            return e.success && e.success.call(e.context, t),
                t
        }).catch(function(i) {
            e.error && e.error.call(e.context, t, null, i.errorString)
        })
    }
}, function(e, t, i) {
    "use strict";
    var n = i(22),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    Marionette.View.prototype.renderOnceLater = function() {
        var e = this;
        this.__alreadyRenderedInCurrentTask || (this.__alreadyRenderedInCurrentTask = !0,
            s.default.runLater(function() {
                e.__alreadyRenderedInCurrentTask = !1,
                    e.render()
            }))
    }
}, function(e, t, i) {
    "use strict";
    W.Rule = OL.Class(OL.Rule, {
            getContext: function(e) {
                return e
            },
            CLASS_NAME: "Waze.Rule"
        }),
        W.rule = function(e, t, i) {
            return new W.Rule({
                filter: new OL.Filter({
                    evaluate: function(i) {
                        null != i.model && (i = i.model);
                        var n = i[e];
                        return _.isFunction(n) && (n = n.apply(i)),
                            n === t
                    }
                }),
                symbolizer: i
            })
        },
        W.defaultRule = function(e) {
            return new W.Rule({
                filter: new OL.Filter({
                    evaluate: function(e) {
                        return !0
                    }
                }),
                symbolizer: e
            })
        }
}, function(e, t, i) {
    "use strict";
    var n = {
            EDITOR_RANK: "dimension1"
        },
        s = function(e, t, i, n) {
            e = "wme_" + e,
                W.Config.reporting.enable && ga("send", "event", e, t, i, n)
        };
    W.Report = {
        feedAction: function(e, t) {
            s("feed", e, t)
        },
        loginAction: function(e, t) {
            s("login", e, t)
        },
        generalAction: function(e, t) {
            s("general", e, t)
        },
        mapProblemAction: function(e, t, i) {
            s("map_problem", e, t, i)
        },
        updateRequestAction: function(e, t, i) {
            s("update_request", e, t, i)
        },
        placeUpdateRequestAction: function(e, t, i) {
            s("place_update_request", e, t, i)
        },
        chatAction: function(e, t) {
            s("chat", e, t)
        },
        elementHistoryAction: function(e, t) {
            s("element_history", e, t)
        },
        focusAction: function(e, t, i) {
            s("focus_on_item", e, t, i)
        },
        setUserRank: function(e) {
            if (null != e) {
                var t = "" + e;
                ga("set", n.EDITOR_RANK, t)
            }
        },
        searchAction: function(e, t, i) {
            s("wme_search", e, t, i)
        },
        saveError: function(e) {
            s("save_error", e)
        }
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(127),
        o = i(761),
        l = n(o),
        u = i(247),
        d = n(u),
        c = i(770),
        h = n(c),
        f = i(229),
        p = n(f),
        g = i(932),
        m = n(g),
        v = i(157),
        y = n(v),
        b = i(75),
        w = Backbone.Model.extend({
            defaults: {
                loading: !0,
                loadingFeatures: !1,
                loggedIn: null,
                sandbox: !1,
                sessionExpired: !1,
                editing: !1,
                featureSelected: !1,
                user: null,
                mode: d.default.DEFAULT,
                descartes: null
            },
            layout: null,
            modeController: null,
            initialize: function() {
                this._urlParams = OL.Util.getParameters(window.location.href)
            },
            start: function() {
                var e = this;
                return p.default.getCurrent().then(function(t) {
                    W.location = t,
                        W.Config.init(t),
                        e.descartes = new y.default,
                        (0,
                            b.init)(e.descartes).then(function() {
                            return e.atlas = new h.default,
                                e.layout = new l.default({
                                    model: e
                                }),
                                e.modeController = new m.default({
                                    model: e,
                                    layout: e.layout
                                }),
                                e.listenTo(e.modeController, a.STATE_CHANGED, e.trigger.bind(e, a.STATE_CHANGED)),
                                e._redirectToLocation(),
                                W.location.redirectToLocale(),
                                e.atlas.heft(e).then(function() {
                                    return e._onDependenciesReady()
                                })
                        }).catch(function(e) {
                            console.error("Error loading server configuration", e),
                                window.location = "/500.html"
                        })
                })
            },
            _redirectToLocation: function() {
                if (this._urlParams.env && this._urlParams.env.length > 0 && W.location.code !== this._urlParams.env)
                    return W.location.change(this._urlParams.env),
                        window.location.reload()
            },
            changeAppLocale: function(e) {
                W.location.setLocale(e),
                    W.location.redirectToLocale()
            },
            _onDependenciesReady: function() {
                var e = this;
                return this.loginManager = W.loginManager,
                    this.loginManager.events.on({
                        login: this._onLoginChanged,
                        sessionExpired: this._onSessionExpired,
                        logout: this._onLogout,
                        scope: this
                    }),
                    this.loginManager.getLoggedInUser().catch(function(e) {
                        return console.error("Error getting logged in user", e)
                    }).finally(function() {
                        e.set("loading", !1),
                            e.layout.render(),
                            e._setLoggedInUser(),
                            $(window).on("beforeunload", e._onBeforeUnload.bind(e)),
                            e.modeController.activate(),
                            e._restoreState(),
                            e._setupBindings()
                    })
            },
            _onBeforeUnload: function(e) {
                if (!this.modeController.canExitMode() && !this.isSandboxMode()) {
                    var t = e || window.event;
                    return t && (t.returnValue = I18n.t("edit.unsaved_changes")),
                        I18n.t("edit.unsaved_changes")
                }
            },
            _onLoginChanged: function(e) {
                return this.get("sessionExpired") ? this._processRelogin() : (this._setLoggedInUser(),
                    this._setSandboxMode(!1))
            },
            _processRelogin: function() {
                return this.loginManager.returningUser ? this._setSessionExpired(!1) : this._onLogout()
            },
            _onSessionExpired: function(e) {
                return this._setSessionExpired(!0)
            },
            _onLogout: function() {
                return W.model.actionManager.clear(),
                    window.location.reload()
            },
            _setEditing: function() {
                var e = this.isSandboxMode() || this.loginManager.isLoggedIn();
                return this.set("editing", e)
            },
            _setSandboxMode: function(e) {
                this.get("sandbox") !== e && (this.set("sandbox", e),
                    this._setEditing(),
                    W.model.actionManager.clear(),
                    W.controller.reload())
            },
            _setSessionExpired: function(e) {
                if (this.get("sessionExpired") !== e)
                    return this.set("sessionExpired", e),
                        this._setEditing()
            },
            _setLoggedInUser: function() {
                var e = this.loginManager.isLoggedIn();
                this.set({
                        user: this.loginManager.user,
                        loggedIn: e
                    }),
                    this.loginManager.isFirstLogin() && this._onFirstLogin(),
                    this._setAnalyticsContext(),
                    this._setEditing(),
                    e && W.controller.reload()
            },
            _onFirstLogin: function() {
                var e = this.loginManager.user && this.loginManager.user.address;
                if (e && e.x && e.y) {
                    var t = W.map.getPannable(),
                        i = e.toLonLat();
                    t.panTo(i)
                }
            },
            _setAnalyticsContext: function() {
                var e = this.loginManager.user;
                null != e && W.Report.setUserRank(e.rank)
            },
            isLoggedIn: function() {
                return this.get("loggedIn")
            },
            isEditingMode: function() {
                return this.get("editing")
            },
            isSandboxMode: function() {
                return this.get("sandbox")
            },
            activateSandboxMode: function() {
                this._setSandboxMode(!0)
            },
            disableSandboxMode: function() {
                this._setSandboxMode(!1)
            },
            requestModeChange: function(e) {
                var t = this;
                return new r.default(function(i, n) {
                    t.modeController.canExitMode() ? (W.Report.generalAction("mode_changed", e),
                        i(t.set({
                            mode: e
                        }))) : (W.Report.generalAction("mode_changed", -1),
                        n(t.modeController.getExitError()))
                })
            },
            getState: function() {
                var e = this.get("mode"),
                    t = {};
                return e !== d.default.DEFAULT && (t.mode = e),
                    _.extend(t, this.modeController.getState())
            },
            _restoreState: function() {
                this._restoreMode()
            },
            _restoreMode: function() {
                if (this._urlParams.mode) {
                    var e = parseInt(this._urlParams.mode, 10);
                    d.default.isValid(e) && this.set("mode", e)
                }
                return this.modeController.restore(this._urlParams)
            },
            _setupBindings: function() {
                W.controller.bindToMap(W.map)
            }
        });
    t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(174),
        r = i(762),
        a = n(r),
        o = i(763),
        l = n(o),
        u = i(765),
        d = i(25);
    t.default = Marionette.View.extend({
            el: "body",
            template: !1,
            ui: {
                descartesVersion: "#debug .version.descrates"
            },
            regions: {
                toolbarRegion: "#toolbar",
                topbarRegion: "#topbar-container",
                advancedToolsRegion: "#advanced-tools",
                sidebarRegion: "#sidebarContent",
                sandboxMessageRegion: "#sandbox-message",
                linksRegions: "#links",
                dialogRegion: {
                    regionClass: s.DialogRegion
                }
            },
            bindings: {
                ".app-loading": {
                    observe: "loading",
                    visible: !0
                },
                ".app": {
                    classes: {
                        "show-sidebar": "editing",
                        "not-visible": {
                            observe: "loading"
                        }
                    }
                },
                "#sidebar": {
                    observe: "editing",
                    visible: !0,
                    classes: {
                        "not-shown": {
                            observe: "editing",
                            onGet: function(e) {
                                return this._resizeMap(), !e
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                this.listenTo(this.model, "change:user", this._renderStaffRegion),
                    this.listenTo(this.model, "change:sandbox", this._renderSandboxMessage),
                    this.listenTo(this.model, "change:editing", this._toggleLoginView),
                    this.listenTo(this.getRegion("topbarRegion"), "show", this._resizeMap)
            },
            onRender: function() {
                var e = this;
                this.stickit(),
                    this._renderDescartesVersion(),
                    this.addRegions({
                        mapDialogRegion: {
                            regionClass: a.default,
                            el: "#map-lightbox",
                            map: W.map
                        }
                    }),
                    this.showChildView("linksRegions", new Marionette.View({
                        tagName: "waze-links",
                        template: "templates/sidebar/links"
                    })),
                    W.loginManager.events.register("beforeloginchanged", null, function(t) {
                        if (!e.model.isSandboxMode() && W.model.actionManager.canUndo())
                            return window.confirm(I18n.t("edit.unsaved_changes"))
                    }),
                    this._toggleLoginView()
            },
            _resizeMap: function() {
                return W.map.resize()
            },
            _renderStaffRegion: function() {
                var e = this.model.get("user");
                if (this.getRegion("advancedToolsRegion").empty(),
                    e.rank >= W.Config.advanced_tools.minRank)
                    return this.showChildView("advancedToolsRegion", new l.default({
                        editingMediator: W.editingMediator
                    }))
            },
            _renderSandboxMessage: function() {
                this.getRegion("sandboxMessageRegion").empty(),
                    this.model.get("sandbox") && this.showChildView("sandboxMessageRegion", new Marionette.View({
                        template: "templates/login/sandbox-message"
                    }))
            },
            _toggleLoginView: function() {
                var e = this.getRegion("dialogRegion");
                if (this.model.get("editing"))
                    e.empty();
                else {
                    var t = new u.LoginMainView({
                        app: W.app,
                        loginManager: W.loginManager
                    });
                    e.show(t, {
                        keyboard: !1,
                        backdrop: !1,
                        modalDialogClass: "modal-dialog-login"
                    })
                }
            },
            _renderDescartesVersion: function() {
                var e = this;
                return (0,
                    d.httpGet)(W.Config.paths.version).then(function(t) {
                    return $(e.ui.descartesVersion).text(t.version)
                })
            }
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "el",
                    value: function() {
                        return "#map-lightbox"
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._map = e.map
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        this._map.$el.addClass("lightboxShown")
                    }
                }, {
                    key: "onEmpty",
                    value: function() {
                        this._map.$el.removeClass("lightboxShown")
                    }
                }]),
                t
        }(Marionette.Region);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(764),
        g = n(p),
        m = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i._editingMediator = e.editingMediator,
                    i._viewModel = new Backbone.Model({
                        editingHouseNumbers: i._editingMediator.get("editingHouseNumbers")
                    }),
                    i.listenTo(i._editingMediator, "change:editingHouseNumbers", i._onEditingHouseNumbersChanged),
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            snapShotToggleRegion: "#snapshot-toggler"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .env-link": "onLocationChanged"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/sidebar/advanced-tools"
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".waze-staff-tools": {
                                classes: {
                                    "editing-house-numbers": {
                                        observe: "editingHouseNumbers"
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("snapShotToggleRegion", new g.default({
                                snapshotManager: W.snapshotManager
                            })),
                            this.stickit(this._viewModel, this.bindings())
                    }
                }, {
                    key: "_onEditingHouseNumbersChanged",
                    value: function() {
                        this._viewModel.set("editingHouseNumbers", this._editingMediator.get("editingHouseNumbers"))
                    }
                }, {
                    key: "onLocationChanged",
                    value: function(e) {
                        e.preventDefault();
                        var t = $(e.target).data("env");
                        return this.changeLocation(t)
                    }
                }, {
                    key: "changeLocation",
                    value: function(e) {
                        return W.location.changeAndRemovePermalink(e)
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/snapshot-toggler",
        ui: {
            toggler: ".toggler"
        },
        events: {
            "click @ui.toggler": "_onSnapshotClicked"
        },
        initialize: function() {
            return this.snapshotManager = this.options.snapshotManager,
                this.listenTo(this.snapshotManager, "change:state change:togglable", this.render)
        },
        onRender: function() {
            if (!this.snapshotManager.canToggleOn())
                return this.ui.toggler.tooltip({
                    title: "Save changes first",
                    placement: "bottom"
                })
        },
        serializeData: function() {
            return {
                canToggleOn: this.snapshotManager.canToggleOn(),
                isOn: this.snapshotManager.isSnapshotOn()
            }
        },
        onBeforeDestroy: function() {
            return this.ui.toggler.tooltip("destroy")
        },
        _onSnapshotClicked: function() {
            return this.snapshotManager.isSnapshotOn() ? this.snapshotManager.toggle(!1) : this.snapshotManager.canToggleOn() ? this.snapshotManager.toggle(!0) : void 0
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.LoginMainView = void 0;
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(766),
        g = n(p),
        m = i(769),
        v = n(m);
    t.LoginMainView = function(e) {
        function t() {
            return (0,
                    o.default)(this, t),
                (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                f.default)(t, e),
            (0,
                u.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        contentRegion: ".modal-content"
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        app: null,
                        loginManager: null
                    };
                    this._app = e.app,
                        this._loginManager = e.loginManager
                }
            }, {
                key: "onRender",
                value: function() {
                    this._showLoginView()
                }
            }, {
                key: "onChildviewLoginFormSuccess",
                value: function() {
                    this._needsEmailVerfication() && this._showEmailVerificationView()
                }
            }, {
                key: "onChildviewLoginVerificationBack",
                value: function() {
                    this._showLoginView()
                }
            }, {
                key: "_needsEmailVerfication",
                value: function() {
                    return this._loginManager.isAuthenticated() && !this._loginManager.isVerifiedEmail()
                }
            }, {
                key: "_showLoginView",
                value: function() {
                    this.showChildView("contentRegion", new g.default({
                        app: this._app,
                        loginManager: this._loginManager
                    }))
                }
            }, {
                key: "_showEmailVerificationView",
                value: function() {
                    this.showChildView("contentRegion", new v.default({
                        loginManager: this._loginManager
                    }))
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/Modules/Login/templates/login_main"
                }
            }]),
            t
    }(Marionette.View)
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(246),
        g = i(768),
        m = n(g),
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .playmode": "_onPlaymodeClicked",
                            "click .change-language": "_onChangeLanguageClicked",
                            "submit form": "_onSubmit"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            form: "form",
                            grecaptcha: ".g-recaptcha"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            app: null,
                            loginManager: null
                        };
                        this._app = e.app,
                            this._loginManager = e.loginManager,
                            this._recaptchaClient = new m.default;
                        var t = W.loginManager.expired;
                        this._viewModel = new Backbone.Model({
                            username: "",
                            password: "",
                            loading: !1,
                            errorMessage: "",
                            expired: t,
                            title: t ? I18n.t("session.expired.description") : I18n.t("login.subtitle")
                        })
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "input[name=username]": "username",
                            "input[name=password]": "password",
                            ".error-message": "errorMessage",
                            ".title-text": "title",
                            ".loading": {
                                observe: "loading",
                                visible: !0
                            },
                            ".expired-warning": {
                                observe: "expired",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this._viewModel),
                            this._renderRecaptcha()
                    }
                }, {
                    key: "_renderRecaptcha",
                    value: function() {
                        this._recaptchaClient.render(this.ui.grecaptcha[0], {
                            callback: this._submitLoginForm.bind(this)
                        })
                    }
                }, {
                    key: "_onSubmit",
                    value: function(e) {
                        e.preventDefault(),
                            this._recaptchaClient.execute()
                    }
                }, {
                    key: "_submitLoginForm",
                    value: function() {
                        var e = this;
                        this._viewModel.set({
                            loading: !0,
                            errorMessage: ""
                        });
                        var t = this._viewModel.get("username"),
                            i = this._viewModel.get("password"),
                            n = this._recaptchaClient.getResponse();
                        this._loginManager.login(t, i, n).then(function() {
                                e.triggerMethod("login:form:success")
                            }).catch(function(t) {
                                var i = e._getLoginErrorMessage(t);
                                e._viewModel.set("errorMessage", i)
                            }).finally(function() {
                                e._viewModel.set({
                                        loading: !1
                                    }),
                                    e._recaptchaClient.reset()
                            }),
                            W.Report.loginAction("login_tap")
                    }
                }, {
                    key: "_getLoginErrorMessage",
                    value: function(e) {
                        return e instanceof p.InvalidLoginError ? I18n.t("login.form.error") : I18n.t("login.form.server_error")
                    }
                }, {
                    key: "_onPlaymodeClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this._app.activateSandboxMode()
                    }
                }, {
                    key: "_onChangeLanguageClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = $(e.target).data("locale");
                        this._app.changeAppLocale(t)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Login/templates/login_view"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(15),
        v = n(m),
        y = i(71),
        b = n(y),
        w = i(233),
        E = n(w),
        k = i(30),
        M = i(75),
        S = {
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 4,
            6: 4
        },
        T = {
            EDIT_DIFFICULT_TURNS: 1
        },
        C = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = arguments[1];
                (0,
                    u.default)(this, t);
                var n = {
                        isFirstLogin: !1,
                        userLimits: null,
                        emailVerified: !1,
                        unverifiedEmail: null
                    },
                    s = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, (0,
                        r.default)(n, e), i));
                return s._parseLegacyEditableAreas(),
                    s.normalizedLevel = b.default.prototype.NormalizedLevels[s.rank],
                    s.editableMiles = S[s.normalizedLevel],
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_parseLegacyEditableAreas",
                    value: function() {
                        if (this.editableAreasMeters) {
                            var e = this.editableAreasMeters.map(function(e, t) {
                                    return new E.default({
                                        geometry: this.editableAreas.components[t],
                                        area: e,
                                        type: E.default.prototype.TYPE.DRIVE
                                    })
                                }, this),
                                t = this.managedAreasMeters.map(function(e, t) {
                                    return new E.default({
                                        geometry: this.managedAreas.components[t],
                                        area: e,
                                        type: E.default.prototype.TYPE.MANAGED
                                    })
                                }, this);
                            this.areas = e.concat(t)
                        }
                    }
                }, {
                    key: "isCountryManager",
                    value: function() {
                        return this.editableCountryIDs && !_.isEmpty(this.editableCountryIDs)
                    }
                }, {
                    key: "isVerifiedEmail",
                    value: function() {
                        return this.emailVerified
                    }
                }, {
                    key: "isEmailAddressMissing",
                    value: function() {
                        return !this.emailVerified && null == this.unverifiedEmail
                    }
                }, {
                    key: "getUnverifiedEmail",
                    value: function() {
                        return this.unverifiedEmail
                    }
                }, {
                    key: "resetUserLimits",
                    value: function(e) {
                        this.userLimits = _.clone(e)
                    }
                }, {
                    key: "incrementDeleteSegmentCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.segmentDeletionCount && this.userLimits.segmentDeletionCount++
                    }
                }, {
                    key: "decrementDeleteSegmentCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.segmentDeletionCount && this.userLimits.segmentDeletionCount--
                    }
                }, {
                    key: "incrementSegmentStreetChangeCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.streetNameChangeCount && this.userLimits.streetNameChangeCount++
                    }
                }, {
                    key: "decrementSegmentStreetChangeCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.streetNameChangeCount && this.userLimits.streetNameChangeCount--
                    }
                }, {
                    key: "canDeleteSegments",
                    value: function() {
                        var e = (0,
                                M.getServerConfig)(),
                            t = e.minRankForDeletingSegment,
                            i = e.maxAllowedSegmentDeletions;
                        if (this.rank < t)
                            return k.SEGMENT_DELETION_REJECTION.USER_RANK_TOO_LOW;
                        if (this.userLimits) {
                            var n = this.userLimits.segmentDeletionCount;
                            if (null == n || n >= i)
                                return k.SEGMENT_DELETION_REJECTION.USER_QUOTA_EXCEEDED
                        }
                        return k.SEGMENT_DELETION_REJECTION.NOT_REJECTED
                    }
                }, {
                    key: "canEditDifficultTurns",
                    value: function() {
                        return this.isAllowed(T.EDIT_DIFFICULT_TURNS)
                    }
                }, {
                    key: "canChangeStreetName",
                    value: function() {
                        var e = (0,
                                M.getServerConfig)(),
                            t = e.maxAllowedStreetNamesChanges;
                        if (this.userLimits) {
                            var i = this.userLimits.streetNameChangeCount;
                            return null == i || i < t
                        }
                        return !0
                    }
                }]),
                t
        }(v.default);
    (0,
        r.default)(C.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.LoggedInUser",
        nested: {
            editableAreas: OL.Geometry,
            managedAreas: OL.Geometry,
            areas: E.default,
            address: OL.Geometry
        }
    }),
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = "//www.google.com/recaptcha/api.js?render=explicit&hl=" + I18n.locale + "&onload=onRecaptchaLoad";
    $.getScript(d);
    var c = function() {
        function e() {
            (0,
                o.default)(this, e),
            this._widgetID = null
        }
        return (0,
                u.default)(e, [{
                key: "render",
                value: function(t) {
                    var i = this,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        s = (0,
                            r.default)({
                            sitekey: "6LfLjVIUAAAAAEJ5rgYY151d5Zy1qD46Gvc8MP42",
                            callback: function() {},
                            "error-callback": function() {
                                console.error("RecaptchaClient: error")
                            },
                            "expired-callback": function() {
                                console.error("RecaptchaClient: expired")
                            }
                        }, n);
                    null == this._widgetID && e.loadDeferred.then(function() {
                        i._widgetID = grecaptcha.render(t, s)
                    })
                }
            }, {
                key: "execute",
                value: function() {
                    return grecaptcha.execute(this._widgetID)
                }
            }, {
                key: "reset",
                value: function() {
                    if (null != this._widgetID)
                        return grecaptcha.reset(this._widgetID)
                }
            }, {
                key: "getResponse",
                value: function() {
                    return null != this._widgetID ? grecaptcha.getResponse(this._widgetID) : null
                }
            }], [{
                key: "load",
                value: function() {
                    e.loadDeferred.resolve()
                }
            }]),
            e
    }();
    c.loadDeferred = $.Deferred(),
        window.onRecaptchaLoad = function() {
            c.load()
        },
        t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(25),
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".step-email-missing": {
                                observe: "stepEmailMissing",
                                visible: !0
                            },
                            ".step-verification": {
                                observe: "stepDoVerification",
                                visible: !0
                            },
                            ".step-verification-done": {
                                observe: "stepVerificationDone",
                                visible: !0
                            },
                            ".step-verification .verification-alert": {
                                observe: "emailFailed",
                                visible: !0
                            },
                            ".emailSending": {
                                observe: "emailSending",
                                visible: !0
                            },
                            ".do-send-verification-email": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "emailSending"
                                }]
                            }
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-back-to-login": "login:verification:back"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-send-verification-email": "_doSendVerificationEmail"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            loginManager: null
                        };
                        this._loginManager = e.loginManager;
                        var t = this._loginManager.isUserEmailAddressMissing();
                        this.model = new Backbone.Model({
                            stepEmailMissing: t,
                            stepDoVerification: !t,
                            stepVerificationDone: !1,
                            emailFailed: !1,
                            emailSending: !1
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            recipient: this._loginManager.getUserVerificationEmailAddress(),
                            dashboardURL: W.Config.login.paths.dashboard
                        }
                    }
                }, {
                    key: "_doSendVerificationEmail",
                    value: function() {
                        var e = this;
                        return this.model.set({
                                emailFailed: !1,
                                emailSending: !0
                            }),
                            (0,
                                p.httpPost)(W.Config.login.paths.email_verification, {
                                locale: I18n.currentLocale(),
                                channel: "waze_map_editor"
                            }).then(function() {
                                e.model.set({
                                    stepVerificationDone: !0,
                                    stepDoVerification: !1
                                })
                            }).catch(function() {
                                e.model.set({
                                    emailFailed: !0
                                })
                            }).finally(function() {
                                e.model.set({
                                    emailSending: !1
                                })
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Login/templates/email_verification"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(771),
        c = i(774),
        h = n(c),
        f = i(99),
        p = n(f),
        g = i(249),
        m = n(g),
        v = i(787),
        _ = n(v),
        y = i(788),
        b = n(y),
        w = i(799),
        E = n(w),
        k = i(255),
        M = n(k),
        S = i(800),
        T = n(S),
        C = i(801),
        I = n(C),
        A = i(802),
        D = n(A),
        R = i(246),
        O = n(R),
        L = i(804),
        x = n(L),
        P = i(869),
        N = n(P),
        V = i(870),
        F = n(V),
        U = i(881),
        j = n(U),
        B = i(895),
        G = n(B),
        z = i(902),
        H = n(z),
        q = i(903),
        Y = n(q),
        K = i(904),
        J = n(K),
        Z = i(909),
        X = n(Z),
        Q = i(35),
        ee = n(Q),
        te = i(910),
        ie = n(te),
        ne = i(912),
        se = n(ne),
        re = i(931),
        ae = n(re),
        oe = function() {
            function e() {
                (0,
                    o.default)(this, e)
            }
            return (0,
                    u.default)(e, [{
                    key: "heft",
                    value: function(e) {
                        W.vent = new Backbone.Wreqr.EventAggregator,
                            W.commands = new Backbone.Wreqr.Commands,
                            W.reqres = new Backbone.Wreqr.RequestResponse,
                            W.model = new m.default,
                            W.model.loginManager = W.loginManager = new O.default,
                            W.accelerators = new M.default,
                            this._initKeyboard();
                        var t = new x.default({
                            app: e
                        });
                        W.map = t,
                            W.map.registerAccelerators(W.accelerators),
                            W.togglerTree = se.default.create();
                        var i = new _.default;
                        W.editingMediator = i;
                        var n = t.layers.filter(function(e) {
                                return e.selectable
                            }),
                            s = new ae.default(W.map, n, {
                                boxSelectionLayers: [t.segmentLayer]
                            });
                        W.selectionManager = new H.default(W.model, n, s),
                            W.geometryEditing = new b.default(W.selectionManager, W.editingMediator, W.map, W.model);
                        var a = new J.default({
                            map: W.map,
                            selectionManager: W.selectionManager
                        });
                        return W.streetViewController = a,
                            new j.default({
                                mediator: W.editingMediator,
                                mapLayers: [W.map.problemLayer, W.map.updateRequestLayer],
                                streetViewController: W.streetViewController
                            }),
                            this._initPlaceUpdateControl({
                                map: t,
                                editingMediator: i,
                                streetViewController: a
                            }),
                            new X.default($("#tutorial-dialog")),
                            new ie.default(W.model).activate(),
                            this._heftController(),
                            this._heftMarx(),
                            this._heftModules(),
                            r.default.resolve()
                    }
                }, {
                    key: "_initKeyboard",
                    value: function() {
                        return W.accelerators.registerDefaultShortcuts(),
                            W.accelerators.restore(),
                            new E.default,
                            W.accelerators.activate()
                    }
                }, {
                    key: "_heftController",
                    value: function() {
                        W.snapshotManager = new Y.default(W.model.actionManager),
                            W.map.setSnapshotManager(W.snapshotManager),
                            W.controller = new p.default({
                                snapshotManager: W.snapshotManager
                            }),
                            new G.default({
                                controller: W.controller,
                                mediator: W.editingMediator
                            }),
                            W.editingMediator.activate(),
                            W.map.initMapState(W.selectionManager, W.app, W.togglerTree),
                            W.map.setEditingMediator(W.editingMediator)
                    }
                }, {
                    key: "_heftMarx",
                    value: function() {
                        if (W.Config.chat.enable) {
                            var e = new N.default({
                                    app: W.app,
                                    authCookieName: W.loginManager.getAuthCookieName()
                                }),
                                t = new T.default(W.model, e, W.map),
                                i = new I.default(W.model, e, t);
                            new D.default({
                                model: i,
                                map: W.map
                            });
                            var n = new d.Chat(W.model, e);
                            new h.default({
                                    model: n,
                                    marx: e,
                                    map: W.map
                                }),
                                W.model.chat = n,
                                W.model.liveUsers = i
                        }
                    }
                }, {
                    key: "_heftModules",
                    value: function() {
                        var e = {
                            map: W.map,
                            selectionManager: W.selectionManager
                        };
                        return ee.default.getEntryPoints().forEach(function(t) {
                            return t(e)
                        })
                    }
                }, {
                    key: "_initPlaceUpdateControl",
                    value: function(e) {
                        var t = e.map,
                            i = void 0 === t ? null : t,
                            n = e.editingMediator,
                            s = void 0 === n ? null : n,
                            r = e.streetViewController,
                            a = void 0 === r ? null : r;
                        i.getPlaceUpdateLayers().forEach(function(e) {
                            new F.default({
                                map: i,
                                mediator: s,
                                mapLayer: e,
                                streetViewController: a
                            })
                        })
                    }
                }]),
                e
        }();
    t.default = oe,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ChatRooms = t.ChatRoom = t.Chat = void 0;
    var s = i(7),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(772),
        v = n(m),
        y = i(773),
        b = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(y),
        w = i(22),
        E = n(w),
        k = void 0,
        M = void 0,
        S = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "initialize",
                    value: function(e, t) {
                        this._wazeModel = e,
                            this._marx = t,
                            this.messages = new b.Collection,
                            this.users = new Backbone.Collection([], {
                                model: v.default,
                                comparator: function(e, t) {
                                    return t.get("rank") - e.get("rank")
                                }
                            }),
                            this.rooms = new M,
                            this._refreshRooms(),
                            this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                            this._marx.on("reconnect", this._onMarxReconnect, this),
                            this._marx.on("disconnect", this._onMarxDisconnect, this),
                            this._registerWazeModelEvents(),
                            this.set({
                                room: this._getTopRoom(),
                                currentUser: null,
                                active: !1,
                                visible: null,
                                open: !1
                            }),
                            this._loadFromLocalStorage(),
                            this.on("change:room", this._onRoomChange, this),
                            this.on("change:visible", this._onVisibilityChanged, this),
                            this.on("change:open", this._onOpenChanged, this)
                    }
                }, {
                    key: "_loadFromLocalStorage",
                    value: function() {
                        var e = E.default.localStorage.get("chatSettings");
                        null != e && this.set(e)
                    }
                }, {
                    key: "_saveToLocalStorage",
                    value: function() {
                        E.default.localStorage.set("chatSettings", {
                            visible: this.get("visible"),
                            open: this.get("open")
                        })
                    }
                }, {
                    key: "_onMarxFirstConnect",
                    value: function() {
                        this._registerSocketEvents(),
                            this._activate()
                    }
                }, {
                    key: "_onMarxReconnect",
                    value: function() {
                        this._activate()
                    }
                }, {
                    key: "_onMarxDisconnect",
                    value: function() {
                        this._deactivate()
                    }
                }, {
                    key: "_canActivate",
                    value: function() {
                        var e = this._wazeModel.loginManager.user;
                        return null != e && this._canUserChat(e)
                    }
                }, {
                    key: "_canUserChat",
                    value: function(e) {
                        return !W.Config.chat.staffOnly || e.isStaff
                    }
                }, {
                    key: "_getDefaultVisibility",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "_activate",
                    value: function(e) {
                        if (this._canActivate()) {
                            var t = this.get("visible");
                            null == t && (t = this._getDefaultVisibility()),
                                this._refreshRooms();
                            var i = this.get("room") || this._getTopRoom();
                            return this.set({
                                    currentUser: this._createMyUser(),
                                    visible: t,
                                    active: this._canActivate(),
                                    room: i
                                }),
                                null == this.get("visible") && (t = this._getDefaultVisibility()),
                                null != i && this._onRoomChange(),
                                this._onVisibilityChanged()
                        }
                    }
                }, {
                    key: "_createMyUser",
                    value: function() {
                        var e = this._wazeModel.loginManager.user;
                        return new v.default({
                            id: e.id,
                            rank: e.rank,
                            name: e.userName
                        })
                    }
                }, {
                    key: "_registerWazeModelEvents",
                    value: function() {
                        return this._wazeModel.events.on({
                            mergeend: this._onMergeEnd,
                            scope: this
                        })
                    }
                }, {
                    key: "_registerSocketEvents",
                    value: function() {
                        return this._marx.socket.on("room:userJoin", this._onRoomUserJoin.bind(this)),
                            this._marx.socket.on("room:userLeave", this._onRoomUserLeave.bind(this)),
                            this._marx.socket.on("room:userPan", this._onRoomUserPan.bind(this)),
                            this._marx.socket.on("room:userEdit", this._onRoomUserEdit.bind(this)),
                            this._marx.socket.on("room:newMessage", this._onMessage.bind(this)),
                            this._marx.socket.on("me:newMessage", this._onMessageFromOtherTab.bind(this)),
                            this._marx.socket.on("me:change:room", this._onMeChangeRoom.bind(this)),
                            this._marx.socket.on("me:change:visible", this._onMeChangeVisible.bind(this))
                    }
                }, {
                    key: "_onMergeEnd",
                    value: function() {
                        this.get("active") && (this._refreshRooms(),
                            null == this.get("room") && this.set("room", this._getTopRoom()))
                    }
                }, {
                    key: "_getTopRoom",
                    value: function() {
                        return null != this._wazeModel.countries.top ? this.rooms.findById(this._wazeModel.countries.top.id) : this.rooms[0]
                    }
                }, {
                    key: "_refreshRooms",
                    value: function() {
                        var e = this._wazeModel.countries.objects || {};
                        return this.rooms.update(e)
                    }
                }, {
                    key: "_deactivate",
                    value: function() {
                        this.users.reset([]),
                            this.set({
                                active: !1
                            })
                    }
                }, {
                    key: "_onMeChangeVisible",
                    value: function(e) {
                        this._silent = !0,
                            this.set("visible", e.visible),
                            this._silent = !1
                    }
                }, {
                    key: "_onMeChangeRoom",
                    value: function(e) {
                        var t = e.room;
                        this.users.reset(t.users || []),
                            this.set({
                                room: this._findOrCreateRoom(t.name)
                            }, {
                                pushToServer: !1
                            }),
                            this.messages.add({
                                type: "system",
                                body: "Joined room " + t.name,
                                from: {},
                                ownMessage: !1
                            }),
                            this._showOrHideMeInUsersList()
                    }
                }, {
                    key: "_findOrCreateRoom",
                    value: function(e) {
                        var t = this.rooms.findWhere({
                            name: e
                        });
                        return null == t && (t = new k({
                                    name: e
                                }),
                                this.rooms.add(t)),
                            t
                    }
                }, {
                    key: "_onRoomUserJoin",
                    value: function(e) {
                        null == this.getUserById(e.user.id) && this.users.add(e.user)
                    }
                }, {
                    key: "_onRoomUserLeave",
                    value: function(e) {
                        var t = this.getUserById(e.user.id);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_onRoomUserPan",
                    value: function(e) {
                        this.getUserById(e.user.id).set(e.user)
                    }
                }, {
                    key: "_onRoomUserEdit",
                    value: function(e) {
                        this.getUserById(e.user.id).set(e.user)
                    }
                }, {
                    key: "_onMessage",
                    value: function(e) {
                        var t = this.get("currentUser");
                        e.ownMessage = t && e.from && e.from.id === t.id,
                            this.messages.add(e),
                            W.Report.chatAction("chat_message")
                    }
                }, {
                    key: "_onMessageFromOtherTab",
                    value: function(e) {
                        e.from = this.get("currentUser").toJSON(),
                            e.ownMessage = !0,
                            this.messages.add(e)
                    }
                }, {
                    key: "getUserById",
                    value: function(e) {
                        return this.users.findWhere({
                            id: e
                        })
                    }
                }, {
                    key: "_onRoomChange",
                    value: function(e, t) {
                        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                        this.set({
                                roomName: this._getCurrentRoomName()
                            }),
                            i = _.defaults(i, {
                                pushToServer: !0
                            }),
                            this.get("active") && i.pushToServer && this._marx.socket.emit("user:change:roomName", {
                                roomName: this.get("roomName")
                            })
                    }
                }, {
                    key: "_getCurrentRoomName",
                    value: function() {
                        var e = this.get("room");
                        return e && e.get ? e.get("name") : null
                    }
                }, {
                    key: "_onVisibilityChanged",
                    value: function() {
                        this.get("active") && (this._saveToLocalStorage(),
                            this._silent || this._sendVisibilityChangedMessage(),
                            this._showOrHideMeInUsersList())
                    }
                }, {
                    key: "_showOrHideMeInUsersList",
                    value: function() {
                        return this.get("visible") ? this._addMeToUsers() : this._removeMeFromUsers()
                    }
                }, {
                    key: "_addMeToUsers",
                    value: function() {
                        var e = this.get("currentUser");
                        if (null == this.getUserById(e.get("id")))
                            return this.users.add(e)
                    }
                }, {
                    key: "_removeMeFromUsers",
                    value: function() {
                        var e = this.get("currentUser").get("id"),
                            t = this.getUserById(e);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_onOpenChanged",
                    value: function() {
                        this.get("active") && this._saveToLocalStorage()
                    }
                }, {
                    key: "_sendVisibilityChangedMessage",
                    value: function() {
                        return this._marx.socket.emit("user:change:visible", {
                            visible: this.get("visible")
                        })
                    }
                }, {
                    key: "sendMessage",
                    value: function(e) {
                        var t = this.get("currentUser"),
                            i = {
                                body: e
                            };
                        this._marx.socket.emit("user:newMessage", i);
                        var n = {
                            body: e,
                            from: {
                                id: t.get("id"),
                                name: t.get("name")
                            },
                            ownMessage: !0
                        };
                        return this.messages.add(n)
                    }
                }]),
                t
        }(Backbone.Model);
    t.ChatRoom = k = function(e) {
        function t() {
            return (0,
                    u.default)(this, t),
                (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments))
        }
        return (0,
                g.default)(t, e),
            (0,
                c.default)(t, [{
                key: "getName",
                value: function() {
                    return this.attributes.name
                }
            }, {
                key: "equals",
                value: function(e) {
                    return null != e && this.getName() === e.getName()
                }
            }, {
                key: "matchesId",
                value: function(e) {
                    return -1 !== (this.get("ids") || []).indexOf(e)
                }
            }, {
                key: "addId",
                value: function(e) {
                    var t = this.get("ids") || [];
                    if (-1 === t.indexOf(e))
                        return t.push(e),
                            this.set({
                                ids: t
                            })
                }
            }]),
            t
    }(Backbone.Model);
    var T = {
        Belgium: "Benelux",
        Netherlands: "Benelux",
        Luxembourg: "Benelux",
        "Palestinian Territory": "Israel",
        "West Bank": "Israel",
        "Gaza Strip": "Israel"
    };
    t.ChatRooms = M = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "update",
                    value: function(e) {
                        for (var t = this, i = {}, n = 0; n < this.models.length; n++) {
                            var s = this.models[n];
                            i[s.getName()] = s
                        }
                        (0,
                            r.default)(e).forEach(function(n) {
                            var s = e[n],
                                r = t._getRoomNameByCountry(s),
                                a = i[r];
                            null != a ? a.addId(s.id) : (a = new k({
                                    name: r,
                                    ids: [s.id]
                                }),
                                i[r] = a,
                                t.add(a))
                        })
                    }
                }, {
                    key: "_getRoomNameByCountry",
                    value: function(e) {
                        return T[e.name] || e.name
                    }
                }, {
                    key: "findById",
                    value: function(e) {
                        for (var t = 0; t < this.models.length; t++) {
                            var i = this.models[t];
                            if (i.matchesId(e))
                                return i
                        }
                        return null
                    }
                }, {
                    key: "model",
                    get: function() {
                        return k
                    }
                }]),
                t
        }(Backbone.Collection),
        t.Chat = S,
        t.ChatRoom = k,
        t.ChatRooms = M
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getCenter",
                    value: function() {
                        var e = this.get("center");
                        return null != e ? new OL.LonLat(e.lon, e.lat) : null
                    }
                }]),
                t
        }(Backbone.Model);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.Collection = t.ChatMessage = void 0;
    var s = i(8),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            ownMessage: !1
                        }
                    }
                }, {
                    key: "getSenderID",
                    value: function() {
                        return this.get("from").id
                    }
                }, {
                    key: "addLine",
                    value: function(e) {
                        var t = this.get("body") + "\n" + e;
                        return this.set("body", t)
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return this.get("type") || "normal"
                    }
                }, {
                    key: "isSystem",
                    value: function() {
                        return "normal" !== this.getType()
                    }
                }, {
                    key: "isOwnMessage",
                    value: function() {
                        return !0 === this.get("ownMessage")
                    }
                }]),
                t
        }(Backbone.Model),
        v = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "add",
                    value: function(e) {
                        e instanceof this.model || (e = new this.model(e));
                        var i = this.last();
                        if (null != i && i.getSenderID() === e.getSenderID())
                            return this.trigger("beforeMessageUpdated", i),
                                i.addLine(e.get("body")),
                                void this.trigger("messageUpdated", i);
                        (0,
                            r.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "add", this).call(this, e)
                    }
                }, {
                    key: "model",
                    get: function() {
                        return m
                    }
                }]),
                t
        }(Backbone.Collection);
    t.ChatMessage = m,
        t.Collection = v
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(775),
        g = n(p),
        m = i(776),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .toggle": "toggleOpen",
                            "click .minimize": "toggleOpen",
                            "keypress .message-input": "_onMessageInputClicked",
                            "click ul.visibility a": "_toggleVisibility",
                            "click .header": "_onHeaderClicked",
                            "click .unread-messages-notification": "_onUnreadMessagesNotificationClicked",
                            "click .rooms a": "_onRoomClicked"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            toggle: ".toggle",
                            roomName: ".room-name",
                            popup: "#chat",
                            messages: ".message-list",
                            users: ".user-list",
                            rooms: ".rooms",
                            messageInput: ".message-input",
                            status: ".status",
                            visibleButton: ".visibility-visible",
                            invisibleButton: ".visibility-invisible",
                            unreadMessagesNotification: ".unread-messages-notification"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this;
                        this._map = e.map,
                            this._marx = e.marx,
                            this.$el.attr({
                                id: "chat-overlay"
                            }).appendTo($(this._map.div)),
                            this.$el.on("click mousedown dragstart", "input", function(e) {
                                return e.stopPropagation()
                            }),
                            this.model.users.on("reset", this._onUsersReset, this),
                            this.model.users.on("add", this._addUser, this),
                            this.model.users.on("remove", this._onUserRemoved, this),
                            this.model.on("change:open", this._onOpenChanged, this),
                            this.model.on("change:active", this._onActiveChanged, this),
                            this.model.on("change:visible", this._updateStatus, this),
                            this.model.on("change:roomName", function() {
                                return t.ui.roomName.text(t.model.get("roomName") || I18n.t("chat.connecting")),
                                    t.$el.toggleClass("connected", null != t.model.get("roomName")),
                                    t._resetRooms()
                            }),
                            this.model.messages.on("add", this._addMessage, this),
                            this.model.messages.on("reset", this._resetMessages, this),
                            this.model.messages.on("beforeMessageUpdated", function() {
                                t._wasScrolledToBottom = t._isScrolledToBottomMessage()
                            }),
                            this.model.messages.on("messageUpdated", function(e) {
                                if (!e.isSystem())
                                    return t._afterContentAdded(t._wasScrolledToBottom)
                            }),
                            this.model.rooms.on("reset", this._resetRooms, this),
                            this.model.rooms.on("add", this._resetRooms, this),
                            this.userViews = {},
                            this.render(),
                            this.ui.messages.on("scroll", function() {
                                return t._hideUnreadMessagesNotification()
                            }),
                            this._updateStatus(),
                            this._onOpenChanged(),
                            W.accelerators.events.on({
                                toggleChat: this.toggleOpen,
                                scope: this
                            })
                    }
                }, {
                    key: "_onHeaderClicked",
                    value: function(e) {
                        $(e.target).hasClass("header") && this.toggleOpen()
                    }
                }, {
                    key: "_onUsersReset",
                    value: function() {
                        var e = this;
                        this.ui.users.empty(),
                            this.model.users.models.map(function(t) {
                                return e._addUser(t)
                            })
                    }
                }, {
                    key: "_addUser",
                    value: function(e) {
                        var t = new g.default({
                            model: e,
                            map: this._map,
                            marx: this._marx,
                            currentUser: this.model.get("currentUser")
                        });
                        t.render(),
                            this.userViews[e.get("id")] = t;
                        var i = this.model.users.models.indexOf(e),
                            n = this.ui.users.children().eq(i);
                        n.length ? t.$el.insertBefore(n) : t.$el.appendTo(this.ui.users)
                    }
                }, {
                    key: "_onUserRemoved",
                    value: function(e) {
                        var t = e.get("id"),
                            i = ".user[data-id='" + t + "']";
                        this.ui.users.find(i).remove(),
                            delete this.userViews[t]
                    }
                }, {
                    key: "_onOpenChanged",
                    value: function() {
                        var e = !0 === this.model.get("open");
                        this.$el.toggleClass("open", e),
                            e && (this._scrollToBottomMessage(),
                                this._hideUnreadMessagesNotification())
                    }
                }, {
                    key: "_onActiveChanged",
                    value: function() {
                        var e = this.model.get("active");
                        this.$el.toggle(e),
                            this.ui.toggle.toggle(e)
                    }
                }, {
                    key: "_onRoomClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = $(e.target).data("room");
                        this.model.set("room", t)
                    }
                }, {
                    key: "_updateStatus",
                    value: function() {
                        var e = this.model.get("visible");
                        this.ui.status.text(this._getStatusText()),
                            this.ui.visibleButton.toggleClass("checked", e),
                            this.ui.invisibleButton.toggleClass("checked", !e),
                            this.$el.toggleClass("visible-true", e),
                            this.$el.toggleClass("visible-false", !e)
                    }
                }, {
                    key: "toggleOpen",
                    value: function() {
                        var e = this.model.get("open");
                        e || W.Report.chatAction("chat_open"),
                            this.model.set("open", !e)
                    }
                }, {
                    key: "_toggleVisibility",
                    value: function(e) {
                        e && e.preventDefault(),
                            this.model.set("visible", !this.model.get("visible"))
                    }
                }, {
                    key: "_onMessageInputClicked",
                    value: function(e) {
                        if (13 === e.keyCode) {
                            var t = $.trim(this.ui.messageInput.val());
                            return null != this.model.get("room") && "" !== t && (this.model.sendMessage(t),
                                this.ui.messageInput.val("")), !1
                        }
                    }
                }, {
                    key: "_addMessage",
                    value: function(e) {
                        var t = new v.default({
                            model: e
                        });
                        t.render();
                        var i = this._isScrolledToBottomMessage();
                        if (this.ui.messages.append(t.$el), !e.isSystem())
                            return this._afterContentAdded(i)
                    }
                }, {
                    key: "_afterContentAdded",
                    value: function(e) {
                        e ? this._scrollToBottomMessage() : this._showUnreadMessagesNotification(),
                            this.model.get("open") || this.$el.addClass("has-unread-messages")
                    }
                }, {
                    key: "_showUnreadMessagesNotification",
                    value: function() {
                        this._unreadMessagesCount || (this._unreadMessagesCount = 0),
                            this._unreadMessagesCount++,
                            this.ui.unreadMessagesNotification.text(I18n.t("chat.unread", {
                                count: this._unreadMessagesCount
                            })).show()
                    }
                }, {
                    key: "_onUnreadMessagesNotificationClicked",
                    value: function(e) {
                        e.preventDefault && e.preventDefault(),
                            this._scrollToBottomMessage(),
                            this._hideUnreadMessagesNotification()
                    }
                }, {
                    key: "_hideUnreadMessagesNotification",
                    value: function() {
                        this._unreadMessagesCount = 0,
                            this.ui.unreadMessagesNotification.hide(),
                            this.$el.removeClass("has-unread-messages")
                    }
                }, {
                    key: "_isScrolledToBottomMessage",
                    value: function() {
                        var e = this.ui.messages;
                        return e.scrollTop() + e.outerHeight() >= e[0].scrollHeight
                    }
                }, {
                    key: "_scrollToBottomMessage",
                    value: function() {
                        this.ui.messages.scrollTop(this.ui.messages[0].scrollHeight)
                    }
                }, {
                    key: "_resetMessages",
                    value: function(e) {
                        var t = this;
                        this.ui.messages.empty(),
                            this.model.messages.models.map(function(e) {
                                return t._addMessage(e)
                            })
                    }
                }, {
                    key: "_resetRooms",
                    value: function(e) {
                        var t = this;
                        return this.ui.rooms.empty(),
                            this.model.rooms.models.map(function(e) {
                                return t._addRoom(e)
                            })
                    }
                }, {
                    key: "_addRoom",
                    value: function(e) {
                        var t = this.model.get("room"),
                            i = this._createRoomMenuItem(e);
                        e.equals(t) && i.addClass("checked"),
                            i.appendTo(this.ui.rooms),
                            this.$el.toggleClass("multiple-rooms", this.model.rooms.models.length > 1)
                    }
                }, {
                    key: "_createRoomMenuItem",
                    value: function(e) {
                        var t = e.getName(),
                            i = $("<li>");
                        return $("<a>").attr({
                                href: "#"
                            }).text(t).data({
                                room: e
                            }).appendTo(i),
                            i
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        var e = this.model.toJSON();
                        return e.status = this._getStatusText(),
                            e
                    }
                }, {
                    key: "_getStatusText",
                    value: function() {
                        return this.model.get("visible") ? I18n.t("chat.visible") : I18n.t("chat.invisible")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Chat/View/chat"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._map = e.map,
                            this._marx = e.marx,
                            this._currentUser = e.currentUser
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .user": "_onClick"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            className: this._isCurrentUser() ? "current-user" : ""
                        }
                    }
                }, {
                    key: "_isCurrentUser",
                    value: function() {
                        return this.model.get("id").toString() === this._currentUser.get("id").toString()
                    }
                }, {
                    key: "_onClick",
                    value: function(e) {
                        e.preventDefault();
                        var t = this._transformFromMarx(this.model.getCenter());
                        return this._map.setCenter(t),
                            W.Report.chatAction("chat_user_clicked")
                    }
                }, {
                    key: "_transformFromMarx",
                    value: function(e) {
                        return e.transform(this._marx.displayProjection, this._map.getProjectionObject())
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "li"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Chat/View/chat_user"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return "message " + this.model.getType() + "-message " + (this.model.isOwnMessage() ? "own-message" : "")
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:body": "render"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$el.find(".body div").autoRTL()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Chat/View/chat_message"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(58),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(22),
        c = n(d),
        h = i(10),
        f = n(h),
        p = function() {
            function e() {
                (0,
                    o.default)(this, e),
                this.currentContainer = {},
                    this.currentContainer._subActions = [],
                    this.root = this.currentContainer,
                    this.previousContainers = []
            }
            return (0,
                    u.default)(e, [{
                    key: "visit",
                    value: function(e) {
                        this.addAction(e)
                    }
                }, {
                    key: "beforeEnter",
                    value: function(e) {
                        if (!e.dontSerialize) {
                            var t = {};
                            this.previousContainers.push(this.currentContainer),
                                this.currentContainer._subActions.push(t),
                                this.currentContainer = t,
                                t.name = e.constructor.name,
                                t._subActions = []
                        }
                        return !e.dontSerialize
                    }
                }, {
                    key: "afterLeave",
                    value: function(e) {
                        e.dontSerialize || (this.currentContainer = this.previousContainers.pop())
                    }
                }, {
                    key: "addAction",
                    value: function(e) {
                        var t = void 0;
                        e.dontSerialize || (t = e.serialize(),
                            null !== (t = c.default.deepClone(t)) && (t instanceof Array ? (t = this.serializeGeometries(t),
                                this.currentContainer._subActions = this.currentContainer._subActions.concat(t)) : (t = this.serializeGeometries(t),
                                this.currentContainer._subActions.push(t))))
                    }
                }, {
                    key: "serializeGeometries",
                    value: function(e) {
                        if ("object" === (void 0 === e ? "undefined" : (0,
                                r.default)(e)) && null !== e) {
                            if (Array.isArray(e)) {
                                for (var t = 0; t < e.length; t++)
                                    e[t] = this.serializeGeometries(e[t]);
                                return e
                            }
                            if (e instanceof OL.Geometry)
                                return e = f.default.unproject(e),
                                    f.default.toGeoJSON(e);
                            for (var i in e)
                                e.hasOwnProperty(i) && (e[i] = this.serializeGeometries(e[i]));
                            return e
                        }
                        return e
                    }
                }, {
                    key: "getResult",
                    value: function() {
                        return this.root._subActions[0]
                    }
                }]),
                e
        }();
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e(t, i, n) {
                (0,
                    o.default)(this, e),
                this._name = t,
                    this._attributeBitNumbers = n,
                    this._categoryOrder = i,
                    this._attributes = i.map(function() {
                        return (0,
                            r.default)(n).reduce(function(e, t) {
                            return e[t] = !1,
                                e
                        }, {})
                    })
            }
            return (0,
                    u.default)(e, [{
                    key: "getName",
                    value: function() {
                        return this._name
                    }
                }, {
                    key: "setAttribute",
                    value: function(e, t, i) {
                        var n = this._categoryOrder.indexOf(e);
                        i !== this._attributes[n][t] && (this._attributes[n][t] = i,
                            this.trigger("change"))
                    }
                }, {
                    key: "_attributesToBitField",
                    value: function(e) {
                        var t = this;
                        return (0,
                            r.default)(e).reduce(function(i, n) {
                            return e[n] && (i |= 1 << t._attributeBitNumbers[n]),
                                i
                        }, 0)
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return this._attributes.map(this._attributesToBitField.bind(this)).every(function(e) {
                            return 0 === e
                        })
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return this._attributes.map(this._attributesToBitField.bind(this)).join(",")
                    }
                }]),
                e
        }();
    _.extend(d.prototype, Backbone.Events),
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(73),
        u = n(l),
        d = i(60),
        c = n(d),
        h = i(25),
        f = OpenLayers.Class(u.default, {
            serializer: null,
            initialize: function(e, t) {
                u.default.prototype.initialize.apply(this, arguments),
                    this.serializer = new c.default
            },
            get: function(e, t, i, n) {
                var s = this,
                    a = {},
                    l = void 0;
                return null !== e && (Array.isArray(e) ? a = {
                        ids: e.join(",")
                    } : (l = u.default.prototype.get.apply(this, arguments),
                        a = {
                            id: e
                        })),
                    this.model.loginManager.isLoggedIn() || (a.sandbox = !0),
                    null == l ? ((0,
                            o.default)(a, t),
                        (0,
                            h.httpGet)(this.url, a).then(function(t) {
                            return s.serializer.read(t),
                                s.mergeOnDemandObjects(t, e)
                        })) : r.default.resolve(l)
            },
            mergeOnDemandObjects: function(e, t) {
                e.users && this.model.users.mergeObjects(e.users, null, new OL.Bounds),
                    e = e[this.objectType + "s"];
                var i = e.objects;
                return delete e.objects,
                    this.put(i),
                    this.additionalInfo = e,
                    i
            },
            CLASS_NAME: "Waze.Model.OnDemandRepository"
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(73),
        o = n(a),
        l = i(781),
        u = n(l),
        d = OpenLayers.Class(o.default, {
            zoomToRoadType: null,
            roadTypeBounds: null,
            topCityID: null,
            initialize: function(e, t) {
                o.default.prototype.initialize.apply(this, arguments),
                    this.zoomToRoadType = W.Config.segments.zoomToRoadType,
                    this.roadTypeBounds = {}
            },
            destroy: function() {
                this.roadTypeBounds = null,
                    o.default.prototype.destroy.apply(this, arguments)
            },
            updateDataExtent: function(e, t, i) {
                var n = this,
                    s = this.zoomToRoadType[i] || [],
                    a = [];
                return -1 === s && (s = W.Config.segments.allTypes),
                    (0,
                        r.default)(this.zoomToRoadType).forEach(function(t) {
                        t = parseInt(t, 10);
                        var i = s.includes(t);
                        n.roadTypeBounds[t] && n.roadTypeBounds[t].containsBounds(e) || i && a.push(t)
                    }),
                    _.isEmpty(a) ? null : {
                        roadTypes: s.toString()
                    }
            },
            getDirectedSegment: function(e) {
                var t = this.get(e.getSegmentID());
                return null == t ? null : new u.default(e, t)
            },
            mergeObjects: function(e, t, i, n, s) {
                this.currentDataBounds = i.clone(),
                    (e.roadTypes || []).forEach(function(e) {
                        this.roadTypeBounds[e] = i
                    }, this),
                    this.calcTopCity(e),
                    o.default.prototype.mergeObjects.apply(this, arguments)
            },
            calcTopCity: function(e) {
                var t = {},
                    i = void 0,
                    n = void 0,
                    s = void 0,
                    r = void 0,
                    a = 0;
                this.topCityID = null,
                    e.objects.forEach(function(e) {
                        (r = this.model.streets.get(e.attributes.primaryStreetID)) && (s = r.cityID,
                            (n = this.model.cities.get(s)) && !n.isEmpty() && (i = t[s] || 0,
                                t[s] = i++,
                                i >= a && (a = i,
                                    this.topCityID = s)))
                    }, this)
            },
            clear: function(e) {
                this.roadTypeBounds = {},
                    o.default.prototype.clear.apply(this, arguments)
            },
            CLASS_NAME: "Waze.Model.SegmentRepository"
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i) {
                (0,
                    r.default)(this, e),
                this._vertex = t,
                    this._segment = i
            }
            return (0,
                    o.default)(e, [{
                    key: "getVertex",
                    value: function() {
                        return this._vertex
                    }
                }, {
                    key: "getSegment",
                    value: function() {
                        return this._segment
                    }
                }, {
                    key: "getNode",
                    value: function() {
                        return this._segment.model.nodes.get(this.getNodeID())
                    }
                }, {
                    key: "_getDirectedAttribute",
                    value: function(e) {
                        var t = this._vertex.isForward() ? "fwd" : "rev";
                        return this._segment.attributes[t + e]
                    }
                }, {
                    key: "_getEdgeAttribute",
                    value: function(e) {
                        var t = this._vertex.isForward() ? "to" : "from";
                        return this._segment.attributes[t + e]
                    }
                }, {
                    key: "isDirectionAllowed",
                    value: function() {
                        return this._getDirectedAttribute("Direction")
                    }
                }, {
                    key: "getDrivingRestrictions",
                    value: function() {
                        var e = this._segment.getBidiDrivingRestrictions(),
                            t = void 0;
                        return t = this._vertex.isForward() ? this._segment.getForwardDrivingRestrictions() : this._segment.getReverseDrivingRestrictions(),
                            t.concat(e)
                    }
                }, {
                    key: "getNodeID",
                    value: function() {
                        return this._getEdgeAttribute("NodeID")
                    }
                }, {
                    key: "hasBigJunction",
                    value: function() {
                        return this._getEdgeAttribute("Crossroads").length > 0
                    }
                }, {
                    key: "getBigJunction",
                    value: function() {
                        var e = this._getEdgeAttribute("Crossroads")[0];
                        return null == e ? null : this._segment.model.bigJunctions.get(e)
                    }
                }, {
                    key: "areTurnsLocked",
                    value: function() {
                        return this._getDirectedAttribute("TurnsLocked")
                    }
                }, {
                    key: "isDrivable",
                    value: function() {
                        return this._segment.isDrivable()
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(73),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            landmarkBounds: null,
            venueLevel: null,
            categoryBrands: null,
            zoomToSize: null,
            initialize: function(e, t) {
                s.default.prototype.initialize.apply(this, arguments),
                    this.zoomToSize = W.Config.venues.zoomToSize,
                    this.categoryBrands = {}
            },
            destroy: function() {
                this.landmarkBounds = null,
                    this.updateRequestBounds(),
                    s.default.prototype.destroy.apply(this, arguments)
            },
            updateDataExtent: function(e, t, i) {
                var n = this.zoomToSize[i],
                    s = {};
                return n ? (this._areLandmarksInBounds(e) && this.venueLevel === n || this.filter.isEmpty() || (s.venueLevel = n,
                        s[this.filter.getName()] = this.filter.serialize()),
                    s) : s
            },
            _areLandmarksInBounds: function(e) {
                return this.landmarkBounds && this.landmarkBounds.containsBounds(e)
            },
            mergeObjects: function(e, t, i, n, r) {
                this.landmarkBounds = i.clone(),
                    this.venueLevel = e.venueLevel,
                    this.categoryBrands = e.categoryBrands || {},
                    s.default.prototype.mergeObjects.apply(this, arguments)
            },
            clear: function() {
                this.landmarkBounds = null,
                    this.venueLevel = null,
                    s.default.prototype.clear.apply(this, arguments)
            },
            CLASS_NAME: "Waze.Model.LandmarkRepository"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(73),
        r = n(s),
        a = i(228),
        o = n(a),
        l = OL.Class(r.default, {
            MIN_CONVERAGE: .9,
            getInvalidEnvs: function() {
                var e = this;
                return this.getObjectArray(function(t) {
                    var i = t.attributes.geometry.getArea() / e.currentDataBounds.toGeometry().getArea();
                    return t.attributes.type === o.default.TYPE.INVALID_ENV && i >= e.MIN_CONVERAGE
                })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(22),
        c = n(d),
        h = i(12),
        f = n(h),
        p = i(250),
        g = n(p),
        m = function() {
            function e(t, i) {
                (0,
                    o.default)(this, e),
                this.index = -1,
                    this._savingEnabled = !0,
                    (0,
                        r.default)(this, i),
                    this.model = t,
                    this.actions = [],
                    this.events = new OpenLayers.Events(this)
            }
            return (0,
                    u.default)(e, [{
                    key: "add",
                    value: function(e) {
                        if ((e.undoSupported() || !1 !== this.events.triggerEvent("beforeclearactions")) && !1 !== this.events.triggerEvent("beforeaction", {
                                action: e
                            })) {
                            var t = this.unsavedActionsNum(),
                                i = void 0,
                                n = void 0;
                            if (e.undoSupported()) {
                                for (this.index++,
                                    i = this.index,
                                    n = this.actions.length; i < n; i++)
                                    this.actions[i].destroy();
                                this.actions.splice(this.index, this.actions.length - this.index, e)
                            } else {
                                for (i = 0,
                                    n = this.actions.length; i < n; i++)
                                    this.actions[i].destroy();
                                this.actions = [],
                                    this.index = -1,
                                    this.events.triggerEvent("afterclearactions", {
                                        action: e
                                    })
                            }
                            e.setModel(this.model), !1 === e.doAction() && (this.actions.pop(),
                                    this.index > -1 && this.index--),
                                0 === t && this.events.triggerEvent("hasActions"),
                                this.events.triggerEvent("afteraction", {
                                    action: e
                                })
                        }
                    }
                }, {
                    key: "canUndo",
                    value: function() {
                        return this.index >= 0
                    }
                }, {
                    key: "canSave",
                    value: function() {
                        return this.canUndo() && this.isAllowedToSave()
                    }
                }, {
                    key: "canRedo",
                    value: function() {
                        return this.index < this.actions.length - 1
                    }
                }, {
                    key: "unsavedActionsNum",
                    value: function() {
                        return this.index + 1
                    }
                }, {
                    key: "undo",
                    value: function() {
                        return !!this.canUndo() && (!1 !== this.events.triggerEvent("beforeundoaction", {
                            action: this.actions[this.index]
                        }) && (c.default.protect("undoing " + this.actions[this.index].CLASS_NAME, function() {
                                this.actions[this.index].undoAction()
                            }, this),
                            this.index--,
                            this.events.triggerEvent("afterundoaction", {
                                action: this.actions[this.index]
                            }),
                            0 === this.unsavedActionsNum() && this.events.triggerEvent("noActions"),
                            W.Report.generalAction("undo_clicked"), !0))
                    }
                }, {
                    key: "redo",
                    value: function() {
                        if (!this.canRedo())
                            return !1;
                        if (!1 === this.events.triggerEvent("beforeaction", {
                                action: this.actions[this.index + 1]
                            }))
                            return !1;
                        var e = this.unsavedActionsNum();
                        return this.index++,
                            c.default.protect("redoing " + this.actions[this.index].CLASS_NAME, function() {
                                this.actions[this.index].redoAction()
                            }, this),
                            this.events.triggerEvent("afteraction", {
                                action: this.actions[this.index]
                            }),
                            0 === e && this.events.triggerEvent("hasActions"), !0
                    }
                }, {
                    key: "clear",
                    value: function() {
                        for (var e = 0, t = this.actions.legnth; e < t; e++)
                            this.actions[e].destroy();
                        this.actions = [],
                            this.index = -1,
                            this.events.triggerEvent("afterclearactions"),
                            this.events.triggerEvent("noActions")
                    }
                }, {
                    key: "getChangesBounds",
                    value: function() {
                        var e = new f.default;
                        return e.subActions = this.actions.slice(0, this.index + 1),
                            e.getBounds()
                    }
                }, {
                    key: "getActions",
                    value: function() {
                        return this.actions.slice(0, this.index + 1)
                    }
                }, {
                    key: "toggleSavingEnabled",
                    value: function(e) {
                        this._savingEnabled = e
                    }
                }, {
                    key: "isAllowedToSave",
                    value: function() {
                        return this.model.loginManager.isLoggedIn() && this._savingEnabled
                    }
                }, {
                    key: "getFlatActions",
                    value: function() {
                        return _.flatten(this.getActions().map(function(e) {
                            return e.flat()
                        }))
                    }
                }, {
                    key: "hasPendingMerge",
                    value: function(e) {
                        var t = this.getFlatActions();
                        return _.some(t, function(t) {
                            return t instanceof g.default && t._toVenue.getID() === e
                        })
                    }
                }]),
                e
        }();
    (0,
        r.default)(m.prototype, {
        CLASS_NAME: "Waze.ActionManager"
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(32),
        u = n(l),
        d = function() {
            function e(t, i) {
                (0,
                    r.default)(this, e),
                this._nodeRepository = t,
                    this._segmentRepository = i
            }
            return (0,
                    o.default)(e, [{
                    key: "getConnectedVertices",
                    value: function(e) {
                        var t = this.getVertexNodeID(e),
                            i = null;
                        return null !== t && (i = this._nodeRepository.get(t)),
                            null === i ? [] : this._getNodeConnectedVertices(i).filter(function(t) {
                                return !t.equals(e)
                            })
                    }
                }, {
                    key: "_getNodeConnectedVertices",
                    value: function(e) {
                        var t = this,
                            i = [],
                            n = e.getID();
                        return e.attributes.segIDs.forEach(function(e) {
                                var s = t._segmentRepository.get(e);
                                s && (s.attributes.fromNodeID === n && i.push(u.default.forwardOf(e)),
                                    s.attributes.toNodeID === n && i.push(u.default.reverseOf(e)))
                            }),
                            i
                    }
                }, {
                    key: "getVertexNodeID",
                    value: function(e) {
                        var t = this._segmentRepository.get(e.getSegmentID());
                        return e.isForward() ? t.attributes.toNodeID : t.attributes.fromNodeID
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = this,
                            t = {};
                        return this._nodeRepository.getObjectArray().forEach(function(i) {
                                i.isDeleted() || (t[i.getID()] = e._getNodeConnectedVertices(i).map(function(e) {
                                    return e.getOpposite().toString()
                                }))
                            }),
                            t
                    }
                }, {
                    key: "isTurnLegal",
                    value: function(e, t) {
                        var i = this._segmentRepository.getDirectedSegment(e),
                            n = this._segmentRepository.getDirectedSegment(t);
                        return i.isDirectionAllowed() && n.isDirectionAllowed() && n.isDrivable()
                    }
                }, {
                    key: "areVerticesConnected",
                    value: function(e, t) {
                        var i = this._segmentRepository.getDirectedSegment(e),
                            n = this._segmentRepository.getDirectedSegment(t.getOpposite());
                        return i.getNodeID() === n.getNodeID()
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(53),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.DeleteSegments", {
                            count: this.subActions.length
                        })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function() {
                        this._editingLocks = {},
                            this.set({
                                drawing: !1,
                                editingEnabled: !1,
                                saving: !1,
                                navigation: !1,
                                advancedTools: !1,
                                editingHouseNumbers: !1
                            })
                    }
                }, {
                    key: "activate",
                    value: function() {
                        return this.model = W.app,
                            this.model.on("change:editing", this._onEditingChanged, this)
                    }
                }, {
                    key: "lockEditing",
                    value: function() {
                        var e = _.uniqueId("editingLock_");
                        return this._editingLocks[e] = !0,
                            this.set("editingEnabled", !1),
                            e
                    }
                }, {
                    key: "releaseEditing",
                    value: function(e) {
                        return delete this._editingLocks[e],
                            this.set("editingEnabled", _.isEmpty(this._editingLocks))
                    }
                }, {
                    key: "_onEditingChanged",
                    value: function() {
                        var e = this.model.get("loggedIn"),
                            t = this.model.get("user"),
                            i = this.model.get("editing");
                        this.set({
                            editingEnabled: i,
                            advancedTools: e && t.isStaff,
                            navigation: i
                        })
                    }
                }, {
                    key: "setDrawingInProgress",
                    value: function() {
                        return this.set("drawing", !0)
                    }
                }, {
                    key: "setDrawingDone",
                    value: function() {
                        return this.set("drawing", !1)
                    }
                }, {
                    key: "enterEditingHouseNumbers",
                    value: function() {
                        this.set("editingHouseNumbers", !0)
                    }
                }, {
                    key: "exitEditingHouseNumbers",
                    value: function() {
                        this.set("editingHouseNumbers", !1)
                    }
                }]),
                t
        }(Backbone.Model);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(6),
        l = n(o),
        u = i(0),
        d = n(u),
        c = i(1),
        h = n(c),
        f = i(22),
        p = n(f),
        g = i(789),
        m = n(g),
        v = i(253),
        y = n(v),
        b = i(797),
        w = n(b),
        E = i(798),
        k = n(E),
        M = i(175),
        S = n(M),
        T = i(11),
        C = i(35),
        I = n(C),
        A = function() {
            function e(t, i, n, s) {
                var r = this;
                (0,
                    d.default)(this, e),
                this.modifyControl = null,
                    this.editors = null,
                    this.activeEditor = null,
                    this.selectionManager = t,
                    this.editingMediator = i,
                    this.map = n,
                    this.dataModel = s,
                    this._typeToEditorClass = _.clone(this.TYPE_TO_EDITOR_CLASS),
                    this._typeToEditorOptions = {},
                    I.default.getLayers().forEach(function(e) {
                        var t = e.options;
                        t.geometryEditing && t.geometryEditing.enable && (r._typeToEditorClass[t.objectType] = S.default),
                            t.geometryEditing && t.geometryEditing.options && (r._typeToEditorOptions[t.objectType] = t.geometryEditing.options)
                    }),
                    this.selectionManager.events.register("selectionchanged", this, this.onSelectionChanged),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this)
            }
            return (0,
                    h.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this.selectionManager.events.unregister("selectionchanged", this, this.onSelectionChanged),
                            this.editingMediator.un("change:editingEnabled", this._onEditingEnabledChanged, this)
                    }
                }, {
                    key: "_createGeometryEditor",
                    value: function(e, t) {
                        var i = e[0].model.type;
                        if (i === T.SEGMENT || i === T.NODE)
                            return this._createSegmentGeometryEditor(e, t);
                        var n = this._typeToEditorClass[i];
                        if (!n)
                            return null;
                        var s = this.dataModel.getRepository(i);
                        return new n(e[0], (0,
                            l.default)({
                            virtualStyle: y.default.virtualVertices,
                            repo: s,
                            model: this.dataModel,
                            map: this.map
                        }, this._typeToEditorOptions[i]))
                    }
                }, {
                    key: "_createSegmentGeometryEditor",
                    value: function(e, t) {
                        return new m.default(e, t, this.dataModel, this.map.sketchLayer, this.map.segmentLayer, this.map.nodeLayer, {
                            mode: OpenLayers.Control.ModifyFeature.RESHAPE,
                            virtualStyle: y.default.virtualVertices,
                            standalone: !0,
                            selectionManager: this.selectionManager,
                            map: this.map
                        })
                    }
                }, {
                    key: "_onEditingEnabledChanged",
                    value: function() {
                        this.editingMediator.get("editingEnabled") ? (this.selectionManager.enable(),
                            this._createGeometryEditorForSelection()) : (this.selectionManager.disable(),
                            this._destroyGeometryEditor())
                    }
                }, {
                    key: "onSelectionChanged",
                    value: function(e) {
                        this._createGeometryOnceLater()
                    }
                }, {
                    key: "_createGeometryOnceLater",
                    value: function() {
                        this._schedualRun || (this._schedualRun = !0,
                            p.default.runLater(this._createGeometryEditorForSelection.bind(this)))
                    }
                }, {
                    key: "_createGeometryEditorForSelection",
                    value: function() {
                        this._destroyGeometryEditor();
                        var e = this.selectionManager.getSelectedFeatures(),
                            t = this.selectionManager.getReversedSegments();
                        e.length > 0 && (this.activeEditor = this._createGeometryEditor(e, t)),
                            this._schedualRun = !1
                    }
                }, {
                    key: "_destroyGeometryEditor",
                    value: function() {
                        this.activeEditor && (this.activeEditor.destroy(),
                            this.activeEditor = null)
                    }
                }]),
                e
        }();
    (0,
        l.default)(A.prototype, {
        TYPE_TO_EDITOR_CLASS: (s = {},
            (0,
                a.default)(s, T.VENUE, k.default),
            (0,
                a.default)(s, T.SPEED_CAMERA, w.default),
            s)
    }),
    t.default = A,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(790),
        u = n(l),
        d = i(27),
        c = i(91),
        h = i(11),
        f = i(124),
        p = n(f),
        g = i(243),
        m = n(g),
        v = i(795),
        y = n(v),
        b = i(252),
        w = n(b),
        E = i(22),
        k = n(E),
        M = i(10),
        S = n(M),
        T = i(796),
        C = n(T),
        I = OpenLayers.Class(u.default, {
            model: null,
            origGeometries: null,
            initialize: function(e, t, i, n, s, r, a) {
                this.features = e.concat(),
                    this.reverseSegments = t,
                    this.model = i,
                    u.default.prototype.initialize.apply(this, [n, s, r, a]),
                    this.origGeometries = {},
                    this._registerEvents(),
                    this.map.addControl(this),
                    this.activate(),
                    this.selectFeature(this.feature)
            },
            destroy: function() {
                this._unregisterEvents(),
                    this.unselectFeature(),
                    this.deactivate(),
                    u.default.prototype.destroy.apply(this, arguments)
            },
            _registerEvents: function() {
                this.model.segments.on(d.CHANGED, this.onFeatureUpdated, this),
                    this.model.nodes.on(d.CHANGED, this.onFeatureUpdated, this),
                    this.model.events.register("mergeend", this, this.onFeaturesMerge)
            },
            _unregisterEvents: function() {
                this.model.events.unregister("mergeend", this, this.onFeaturesMerge),
                    this.model.segments.off(d.CHANGED, this.onFeatureUpdated, this),
                    this.model.nodes.off(d.CHANGED, this.onFeatureUpdated, this)
            },
            onFeatureUpdated: function(e) {
                this.resetVertices()
            },
            clickOnDragPoint: function(e) {
                var t = null;
                if (e.parent && e.parent.model.type === h.NODE)
                    t = e.parent;
                else if (e.parent && e.parent.model.type === h.SEGMENT) {
                    var i = e.parent.geometry.getVertices(!0);
                    e.geometry.equals(i[0]) && e.parent.model.attributes.fromNodeID ? t = this.map.nodeLayer.getVector(this.model.nodes.get(e.parent.model.attributes.fromNodeID)) : e.geometry.equals(i[1]) && e.parent.model.attributes.toNodeID && (t = this.map.nodeLayer.getVector(this.model.nodes.get(e.parent.model.attributes.toNodeID)))
                }
                t && (this.selectionManager.unselectAll(),
                    this.selectionManager.selectFeature(t))
            },
            getFeaturesArray: function(e, t) {
                return e[t.getID()] || (e[t.getID()] = []),
                    e[t.getID()]
            },
            _getArrowVector: function(e, t, i) {
                var n = void 0,
                    s = void 0;
                e.isOneWay() ? (s = t ? "arrowOneWayRestricted" : "arrowOneWayStandard",
                    n = 360 - S.default.radToDeg(_.last(i)), !0 === e.attributes.revDirection && (n -= 180)) : s = "arrowTwoWayRestricted";
                var r = new OpenLayers.Feature.Vector(i[0], {
                    angle: n
                });
                return r["_" + s] = !0,
                    r
            },
            collectVerticesFromFeatures: function(e, t, i, n) {
                var s = this,
                    r = this.calculateNodesToParents(e);
                (0,
                    o.default)(r).forEach(function(e) {
                    var t = r[e],
                        i = s.model.nodes.get(e);
                    if (t && t[0] && t[0].model.isAllowed(c.Nodes.EDIT_GEOMETRY) && t.allPresent) {
                        var a = new w.default(s.getFeatureGeometries(t), null);
                        a._sketch = !0,
                            a._nodeDragPoint = !0,
                            i.isVirtual() ? a._virtualNodeDragPoint = !0 : a._regularNodeDragPoint = !0,
                            a.parents = t,
                            a.parent = a.parents[0],
                            a.uneditable = !i.isAllowedToMoveNode();
                        s.getFeaturesArray(n, a.parent.model).push(a)
                    }
                });
                for (var a = 0; a < e.length; a++) {
                    var l = e[a],
                        u = e[a].model;
                    if (u.type === h.SEGMENT) {
                        var d = u.getDrivingRestrictionCount();
                        (d || u.isOneWay()) && (this.directionArrows[u.getID()] = u.getArrowPoints(42 * this.map.getResolution(), 20 * this.map.getResolution(), 20 * this.map.getResolution()).map(_.partial(this._getArrowVector, u, d))),
                        this._createDragHandles(u, l, t, r, n, i)
                    }
                }
            },
            _createDragHandles: function(e, t, i, n, s, r) {
                var a = new OL.Feature.Vector(e.geometry.clone(), null),
                    o = e.getID();
                a.parent = t,
                    a._highlightPlaceHolder = !0,
                    this.dragPointsPaddingVertices.push(a);
                for (var l = e.isAllowed(c.Segments.EDIT_GEOMETRY) && !e.outOfScope, u = this.getFeaturesArray(i, e), d = this.getFeaturesArray(s, e), h = e.geometry, f = null, p = e.attributes.fromNodeID && n[e.attributes.fromNodeID] ? 1 : 0, g = h.components.length - (e.attributes.toNodeID && n[e.attributes.toNodeID] ? 1 : 0), m = p; m < g; ++m) {
                    var v = h.components[m];
                    if ("OpenLayers.Geometry.Point" === v.CLASS_NAME) {
                        var _ = new OL.Feature.Vector(v, null);
                        if (f) {
                            if (f.geometry.distanceTo(_.geometry) / this.map.getResolution() < 3 && m > 0 && m < h.components.length - 1)
                                continue
                        }
                        f = _,
                            _._sketch = !0,
                            _._virtualParent = a,
                            _.renderIntent = "sketch",
                            _.parent = t,
                            _.parents = [t];
                        var y = void 0;
                        0 === m && e.attributes.fromNodeID || m === h.components.length - 1 && e.attributes.toNodeID ? (0 === m ? (y = this.model.nodes.get(e.attributes.fromNodeID),
                                _[this.reverseSegments[o] ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0) : m === h.components.length - 1 && (y = this.model.nodes.get(e.attributes.toNodeID),
                                _[this.reverseSegments[o] ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0),
                            _.uneditable = !y || !y.isAllowedToMoveNode() || !l,
                            d.push(_)) : (_.uneditable = !l,
                            0 === m ? (_[this.reverseSegments[o] ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0,
                                d.push(_)) : m === h.components.length - 1 ? (_[this.reverseSegments[o] ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0,
                                d.push(_)) : (_._dragPoint = !0,
                                l && u.push(_)))
                    }
                }
                l && this._createVirtualVertices(e, h, t, a, r)
            },
            _createVirtualVertices: function(e, t, i, n, s) {
                var r = this.getFeaturesArray(s, e);
                if ("OpenLayers.Geometry.MultiPoint" !== t.CLASS_NAME)
                    for (var a = 0; a < t.components.length - 1; ++a) {
                        var o = t.components[a],
                            l = t.components[a + 1];
                        if ("OpenLayers.Geometry.Point" === o.CLASS_NAME && "OpenLayers.Geometry.Point" === l.CLASS_NAME) {
                            var u = o.distanceTo(l) / this.map.getResolution();
                            if (u < 20)
                                continue;
                            var d = (o.x + l.x) / 2,
                                c = (o.y + l.y) / 2,
                                h = new OL.Feature.Vector(new OpenLayers.Geometry.Point(d, c));
                            h._virtualParent = n,
                                h.parent = i,
                                h.parents = [i],
                                h._index = a + 1,
                                h._sketch = !0,
                                h._middleDragPoint = !0,
                                h.virtual = !0,
                                r.push(h)
                        }
                    }
            },
            getFeatureGeometries: function(e) {
                var t = [],
                    i = e[0].model;
                t.push(i.geometry);
                for (var n = 1; n < e.length; n++) {
                    var s = e[n].model;
                    if (s.isVirtuallyConnectedToNode(i)) {
                        var r = s.attributes.geometry.components.find(function(e) {
                            return e.equals(i.attributes.geometry)
                        });
                        null != r && t.push(r)
                    } else
                        s.attributes.fromNodeID === i.getID() ? t.push(s.geometry.components[0]) : s.attributes.toNodeID === i.getID() && t.push(s.geometry.components[s.geometry.components.length - 1])
                }
                return t
            },
            calculateNodesToParents: function(e) {
                for (var t = this, i = {}, n = {}, s = 0; s < e.length; s++) {
                    var r = e[s].model;
                    if (r.type === h.SEGMENT) {
                        var a = r.attributes.fromNodeID,
                            o = r.attributes.toNodeID;
                        a && !i[a] && (n[a] ? (i[a] = this.getNodeIDParents(a),
                                delete n[a]) : n[a] = !0),
                            o && !i[o] && (n[o] ? (i[o] = this.getNodeIDParents(o),
                                delete n[o]) : n[o] = !0),
                            r.attributes.virtualNodeIDs.forEach(function(e) {
                                return i[e] = t.getNodeIDParents(e)
                            })
                    } else
                        r.type === h.NODE && (i[r.getID()] || (i[r.getID()] = this.getNodeIDParents(r.getID())))
                }
                return i
            },
            getNodeIDParents: function(e) {
                var t = this.model.nodes.get(e);
                if (!k.default.defined(t))
                    return null;
                var i = [this.map.nodeLayer.getVector(t)];
                i.allPresent = !0;
                for (var n = 0; n < t.attributes.segIDs.length; n++) {
                    var s = t.attributes.segIDs[n],
                        r = this.model.segments.get(s);
                    r ? (r = this.map.segmentLayer.getVector(r),
                        i.push(r)) : i.allPresent = !1
                }
                return i
            },
            onModificationStart: function(e) {
                var t = this;
                e.parents && e.parents.forEach(function(e) {
                    var i = e.model.type + e.model.getID();
                    t.origGeometries[i] || (t.origGeometries[i] = e.geometry.clone())
                })
            },
            onModificationComplete: function(e) {
                var t = void 0,
                    i = {},
                    n = this.snapControl.snappedFeature;
                if (n && !n.feature.model.outOfScope && (n.feature = n.feature.model,
                        i.snappedFeatures = n),
                    1 === e.parents.length) {
                    if (e.parent.model.type === h.SEGMENT) {
                        var s = e.parent.model.getID(),
                            r = e.parent.model;
                        t = this.origGeometries["segment" + s],
                            i.createNodes = !0,
                            t && this.model.actionManager.add(new p.default(r, t.clone(), e.parent.geometry, i))
                    }
                } else {
                    for (var a = {}, o = e.parent.model, l = 0; l < o.attributes.segIDs.length; l++) {
                        var u = o.attributes.segIDs[l];
                        this.model.segments.get(u) && (a[u] = this.origGeometries["segment" + u].clone())
                    }
                    this._handleMoveNode(o, e, a, i)
                }
                for (var d = 0; d < this.origGeometries.length; d++)
                    this.origGeometries[d].destroy();
                this.origGeometries = {}
            },
            _isSnappingFeature: function() {
                return null != this.snapControl.snappedFeature
            },
            _isSnappingNode: function() {
                return this._isSnappingFeature() && this._getSnappedFeature().type === h.NODE
            },
            _getSnappedFeature: function() {
                return this._isSnappingFeature() ? this.snapControl.snappedFeature.feature : null
            },
            _handleMoveNode: function(e, t, i, n) {
                var s = this._isSnappingNode(),
                    a = new m.default(e, this.origGeometries["node" + e.getID()].clone(), t.parent.geometry, i, (0,
                        r.default)({}, n, {
                        dontSerialize: s
                    })),
                    o = [a];
                if (s) {
                    var l = new y.default(e, this._getSnappedFeature());
                    o.push(l),
                        this.model.actionManager.add(new C.default(o))
                } else
                    this.model.actionManager.add(a)
            },
            onFeaturesMerge: function() {
                this.verifySelectionValidity()
            },
            verifySelectionValidity: function() {
                this.resetVertices()
            },
            CLASS_NAME: "Waze.Control.ModifyModelFeature"
        });
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(45),
        o = n(a),
        l = i(40),
        u = n(l),
        d = i(791),
        c = n(d),
        h = i(251),
        f = n(h),
        p = i(252),
        g = n(p),
        m = i(793),
        v = n(m),
        _ = i(794),
        y = n(_),
        b = OpenLayers.Class(OpenLayers.Control, u.default, {
            geometryTypes: null,
            clickout: !0,
            toggle: !0,
            toggleKey: null,
            multiple: !1,
            multipleKey: null,
            standalone: !1,
            sketchLayer: null,
            segmentLayer: null,
            nodeLayer: null,
            draggingIntent: "drag",
            features: null,
            dragHandles: null,
            nodeDragHandles: null,
            virtualDragHandles: null,
            directionArrows: null,
            dragPointsPaddingVertices: null,
            selectionManager: null,
            featureHover: null,
            dragControl: null,
            snapControl: null,
            handlers: null,
            deleteCodes: null,
            verticesStyle: null,
            mode: null,
            modified: [],
            radiusHandle: null,
            dragHandle: null,
            initialize: function(e, t, i, n) {
                this.sketchLayer = e,
                    this.segmentLayer = t,
                    this.nodeLayer = i,
                    this.dragHandles = {},
                    this.nodeDragHandles = {},
                    this.virtualDragHandles = {},
                    this.directionArrows = {},
                    this.dragPointsPaddingVertices = [],
                    this.deleteCodes = [68],
                    this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                    OpenLayers.Control.prototype.initialize.apply(this, [n]),
                    this.bridgeCreator = new y.default(this.features.map(function(e) {
                        return e.model
                    }), n.map.getDrawingContext(), this.model),
                    this.nodeCreator = new v.default(this.features.map(function(e) {
                        return e.model
                    }), n.map.getDrawingContext(), this.model),
                    this.deleteCodes instanceof Array || (this.deleteCodes = [this.deleteCodes]),
                    W.accelerators.events.register("toggleMultipleSelection", this, this.toggleMultipleSelection);
                var s = this;
                this.featureHover = new c.default(this, this.selectionManager.selectionMediator.getLayer(), {
                    over: function(e) {
                        var t = e.parent;
                        !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t) && (this.drawSegmentDraggingHandles(t),
                            this.sketchLayer.removeFeatures(this.directionArrows[t.model.getID()] || [], {
                                silent: !0
                            }))
                    },
                    out: function(e) {
                        var t = e.parent;
                        !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t) && (this.removeAllFeatures(this.virtualDragHandles),
                            this.removeAllFeatures(this.dragHandles),
                            this.sketchLayer.addFeatures(this.directionArrows[t.model.getID()] || [], {
                                silent: !0
                            }))
                    },
                    click: function(e) {
                        var t = e.parent;
                        if (!this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t))
                            return this.selectionManager.unselectFeature(t), !1
                    }
                });
                var r = {
                    geometryTypes: ["OpenLayers.Geometry.Point"],
                    snappingOptions: this.snappingOptions,
                    onStart: function(e, t) {
                        s.dragStart.apply(s, [e, t])
                    },
                    onDrag: function(e, t) {
                        s.dragVertex.apply(s, [e, t])
                    },
                    onComplete: function(e) {
                        s.dragComplete.apply(s, [e])
                    },
                    featureCallbacks: {
                        over: function(e) {
                            e._sketch && s.dragControl.overFeature.apply(s.dragControl, [e])
                        },
                        click: function(e) {
                            s.clickOnDragPoint.apply(s, [e])
                        }
                    },
                    dragCallbacks: {}
                };
                this.dragControl = new OpenLayers.Control.DragFeature(this.sketchLayer, r),
                    this.dragControl.handlers.feature.geometryTypeMatches = function(e) {
                        return OpenLayers.Handler.Feature.prototype.geometryTypeMatches.apply(this, arguments) && !e.uneditable
                    };
                var a = {
                    keydown: this.handleKeypress
                };
                this.handlers = {
                        keyboard: new OpenLayers.Handler.Keyboard(this, a)
                    },
                    this.snapControl = new f.default({
                        layer: this.sketchLayer,
                        targets: [{
                            layer: this.nodeLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.isConnectedToBigJunction()
                                }
                            }
                        }, {
                            layer: this.segmentLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.outOfScope && e.model.isGeometryEditable()
                                }
                            }
                        }]
                    });
                var o = function(e) {
                    this.dragControl.feature && this.dragControl.feature._nodeDragPoint && this.dragControl.feature.geometry.translate(e.point.x, e.point.y)
                };
                this.snapControl.events.on({
                    unsnap: o,
                    snap: o,
                    scope: this
                })
            },
            destroy: function() {
                this.dragControl.destroy(),
                    this.snapControl.destroy(),
                    this.bridgeCreator.destroy(),
                    this.nodeCreator.destroy(),
                    this.featureHover.destroy(),
                    this.map.events.un({
                        zoomend: this.resetVertices,
                        scope: this
                    }),
                    W.accelerators.events.unregister("toggleMultipleSelection", this, this.toggleMultipleSelection),
                    OpenLayers.Control.prototype.destroy.apply(this, [])
            },
            activate: function() {
                return this.standalone || this.selectionManager.enable(),
                    this.handlers.keyboard.activate() && this.featureHover.activate() && this.snapControl.activate() && OpenLayers.Control.prototype.activate.apply(this, arguments)
            },
            deactivate: function() {
                var e = !1;
                return OpenLayers.Control.prototype.deactivate.apply(this, arguments) && (this.removeAllFeatures(this.dragHandles),
                        this.removeAllFeatures(this.virtualDragHandles),
                        this.dragHandles = [],
                        this.dragControl.deactivate(),
                        this.handlers.keyboard.deactivate(),
                        this.featureHover.deactivate(),
                        this.snapControl.deactivate(),
                        e = !0),
                    e
            },
            removeAllFeatures: function(e) {
                var t = this;
                (0,
                    o.default)(e).forEach(function(e) {
                    t.sketchLayer.removeFeatures(e, {
                        silent: !0
                    })
                })
            },
            addAllFeatures: function(e) {
                var t = this;
                (0,
                    o.default)(e).forEach(function(e) {
                    t.sketchLayer.addFeatures(e, {
                        silent: !0
                    })
                })
            },
            selectFeature: function() {
                this.features.forEach(function(e) {
                        this.drawSegmentDraggingHandles(e)
                    }, this),
                    this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                    this.resetVertices(),
                    this.dragControl.activate()
            },
            unselectFeature: function(e) {
                e || (e = this.features),
                    e instanceof Array || (e = [e]),
                    e.concat().forEach(function(e) {
                        e._highlightPlaceHolder && (e = e.parent),
                            this.features.includes(e) && (OpenLayers.Util.removeItem(this.features, e),
                                e.layer && (e.layer.events.triggerEvent("afterfeaturemodified", {
                                        feature: e,
                                        modified: OpenLayers.Util.indexOf(this.modified, e) >= 0
                                    }),
                                    e._sketch && (delete e._sketch,
                                        e.layer.drawFeature(e))),
                                OpenLayers.Util.removeItem(this.modified, e))
                    }, this),
                    0 === this.features.length && this.dragControl.deactivate(),
                    this.resetVertices()
            },
            clickOnDragPoint: function(e) {},
            dragStart: function(e, t) {
                var i = this;
                this.onModificationStart(e),
                    e.parents.forEach(function(e) {
                        i.sketchLayer.removeFeatures(i.directionArrows[e.model.getID()], {
                            silent: !0
                        })
                    }),
                    OpenLayers.Util.indexOf(this.features, e) < 0 && !e.virtual && e !== this.dragHandle && e !== this.radiusHandle && (null !== this.geometryTypes && -1 === OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) || (this.dragControl.overFeature.apply(this.dragControl, [e]),
                            this.dragControl.lastPixel = t,
                            this.dragControl.handlers.drag.started = !0,
                            this.dragControl.handlers.drag.start = t,
                            this.dragControl.handlers.drag.last = t),
                        e.parents.forEach(function(e) {
                            e._sketch = !0
                        }))
            },
            dragVertex: function(e, t) {
                if (this.modified = !0,
                    e.parent && "OpenLayers.Geometry.Point" === e.parent.geometry.CLASS_NAME)
                    this.sketchLayer.events.triggerEvent("vertexmodified", {
                        vertex: e.geometry,
                        feature: e,
                        pixel: t
                    });
                else if (e._index) {
                    var i = e.parent.model.getID(),
                        n = e.parentGeom;
                    n || (n = e.parent.geometry),
                        n.addComponent(e.geometry, e._index),
                        delete e._index,
                        OpenLayers.Util.removeItem(this.virtualDragHandles[i], e),
                        this.dragHandles[i].push(e)
                } else
                    e === this.dragHandle ? (this.removeAllFeatures(this.dragHandles),
                        this.dragHandles = {},
                        this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                                silent: !0
                            }),
                            this.radiusHandle = null)) : e !== this.radiusHandle && this.sketchLayer.events.triggerEvent("vertexmodified", {
                        vertex: e.geometry,
                        feature: e.parent,
                        pixel: t
                    });
                (0,
                    r.default)(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                        this.virtualDragHandles = []),
                    e.parents.forEach(function(e) {
                        e.layer && e.layer.drawFeature(e, this.draggingIntent)
                    }, this),
                    this.sketchLayer.drawFeature(e)
            },
            dragComplete: function(e) {
                this.onModificationComplete(e),
                    this.sketchLayer.events.triggerEvent("featuremodified", {
                        feature: e
                    });
                for (var t = 0, i = e.parents.length; t < i; t++) {
                    var n = e.parents[t];
                    delete n._sketch,
                        n.layer && (this.selectionManager.recalculateStyle(e.parents[t]),
                            n.layer.events.triggerEvent("featuremodified", {
                                feature: e.parents[t]
                            }))
                }
                this.resetVertices(),
                    e.parent && (this.sketchLayer.removeFeatures(this.directionArrows[e.parent.model.getID()], {
                            silent: !0
                        }),
                        this.drawSegmentDraggingHandles(e.parent))
            },
            drawSegmentDraggingHandles: function(e) {
                e && (this.sketchLayer.addFeatures(this.virtualDragHandles[e.model.getID()] || []),
                    this.sketchLayer.addFeatures(this.dragHandles[e.model.getID()] || []))
            },
            isSelected: function(e) {
                return e.layer && OpenLayers.Util.indexOf(e.layer.selectedFeatures, e) >= 0
            },
            resetVertices: function() {
                this.dragControl.feature && this.dragControl.outFeature(this.dragControl.feature),
                    (0,
                        r.default)(this.dragHandles).length > 0 && (this.removeAllFeatures(this.dragHandles),
                        this.dragHandles = {}),
                    (0,
                        r.default)(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                        this.virtualDragHandles = {}),
                    (0,
                        r.default)(this.nodeDragHandles).length > 0 && (this.removeAllFeatures(this.nodeDragHandles),
                        this.nodeDragHandles = {}),
                    (0,
                        r.default)(this.directionArrows).length > 0 && (this.removeAllFeatures(this.directionArrows),
                        this.directionArrows = {}),
                    this.dragPointsPaddingVertices.length > 0 && (this.sketchLayer.removeFeatures(this.dragPointsPaddingVertices, {
                            silent: !0
                        }),
                        this.dragPointsPaddingVertices = []),
                    this.dragHandle && (this.sketchLayer.destroyFeatures([this.dragHandle, this.dragBoundry], {
                            silent: !0
                        }),
                        this.dragHandle = null,
                        this.dragBoundry = null),
                    this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                            silent: !0
                        }),
                        this.radiusHandle = null),
                    this.features.length > 0 && (this.mode & OpenLayers.Control.ModifyFeature.DRAG && this.collectDragHandle(),
                        this.mode & (OpenLayers.Control.ModifyFeature.ROTATE | OpenLayers.Control.ModifyFeature.RESIZE) && this.collectRadiusHandle(),
                        this.mode & OpenLayers.Control.ModifyFeature.RESHAPE && (this.mode & OpenLayers.Control.ModifyFeature.RESIZE || this.collectVertices())),
                    this.bridgeCreator.drawBridgeMarker(),
                    this.nodeCreator.drawNodeMarker()
            },
            toggleMultipleSelection: function() {
                this.selectionManager.toggleMultipleSelection()
            },
            handleKeypress: function(e) {
                var t = e.keyCode;
                if (this.features.length > 0 && -1 !== OpenLayers.Util.indexOf(this.deleteCodes, t)) {
                    var i = this.dragControl.feature;
                    i && i._dragPoint && !this.dragControl.handlers.drag.dragging && i.parent && (this.onModificationStart(i),
                        i.parentGeom ? i.parentGeom.removeComponent(i.geometry) : i.parent.geometry.removeComponent(i.geometry),
                        i.parent.layer.drawFeature(i.parent, this.selectionManager.selectionMediator._selectRenderIntent),
                        this.onModificationComplete(i),
                        this.sketchLayer.events.triggerEvent("featuremodified", {
                            feature: i
                        }))
                }
            },
            createGeometryCollection: function() {
                for (var e = [], t = 0, i = this.features.length; t < i; t++)
                    e.push(this.features[t].geometry);
                return new OpenLayers.Geometry.Collection(e)
            },
            collectVertices: function() {
                this.dragHandles = {},
                    this.virtualDragHandles = {},
                    this.nodeDragHandles = {},
                    this.directionArrows = {},
                    this.dragPointsPaddingVertices = [],
                    this.collectVerticesFromFeatures(this.features, this.dragHandles, this.virtualDragHandles, this.nodeDragHandles),
                    this.sketchLayer.addFeatures(this.dragPointsPaddingVertices, {
                        silent: !0
                    }),
                    this.addAllFeatures(this.directionArrows),
                    this.addAllFeatures(this.nodeDragHandles)
            },
            collectComponentVertices: function(e, t, i) {
                var n = void 0,
                    s = void 0,
                    r = void 0,
                    a = void 0,
                    o = e.geometry;
                if ("OpenLayers.Geometry.Point" === o.CLASS_NAME)
                    s = new g.default([o], null, this.verticesStyle),
                    s._sketch = !0,
                    s.parent = e,
                    t.push(s);
                else {
                    var l = o.components.length;
                    for ("OpenLayers.Geometry.LinearRing" === o.CLASS_NAME && (l -= 1),
                        n = 0; n < l; ++n)
                        r = o.components[n],
                        "OpenLayers.Geometry.Point" === r.CLASS_NAME ? (s = new OL.Feature.Vector(r, null, this.verticesStyle),
                            s._sketch = !0,
                            s.renderIntent = "sketch",
                            s.parent = e,
                            t.push(s)) : this.collectComponentVertices(s, t, i);
                    if ("OpenLayers.Geometry.MultiPoint" !== o.CLASS_NAME)
                        for (n = 0,
                            a = o.components.length; n < a - 1; ++n) {
                            var u = o.components[n],
                                d = o.components[n + 1];
                            if ("OpenLayers.Geometry.Point" === u.CLASS_NAME && "OpenLayers.Geometry.Point" === d.CLASS_NAME) {
                                var c = (u.x + d.x) / 2,
                                    h = (u.y + d.y) / 2,
                                    f = new OL.Feature.Vector(new OpenLayers.Geometry.Point(c, h));
                                f.parent = e,
                                    f._index = n + 1,
                                    f._sketch = !0,
                                    f._middleDragPoint = !0,
                                    f.virtual = !0,
                                    i.push(f)
                            }
                        }
                }
            },
            collectVerticesFromFeatures: function(e, t, i) {
                for (var n = 0, s = e.length; n < s; n++)
                    this.collectComponentVertices(e[n], t, i)
            },
            setMap: function(e) {
                this.dragControl.setMap(e),
                    this.featureHover.setMap(e),
                    this.snapControl.setMap(e),
                    e.events.on({
                        zoomend: this.resetVertices,
                        scope: this
                    }),
                    OpenLayers.Control.prototype.setMap.apply(this, arguments)
            },
            onModificationStart: function(e) {},
            onModificationComplete: function(e) {},
            CLASS_NAME: "Waze.Control.ModifyFeature"
        });
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OpenLayers.Class(OpenLayers.Handler, {
        EVENTMAP: {
            mousemove: { in: "over",
                out: "out"
            },
            click: { in: "click"
            },
            dblclick: { in: "dblclick",
                out: null
            }
        },
        feature: null,
        lastFeature: null,
        geometryTypes: null,
        initialize: function(e, t, i, n) {
            OpenLayers.Handler.prototype.initialize.apply(this, [e, i, n]),
                this.layer = t
        },
        mousemove: function(e) {
            return !this.callbacks.over && !this.callbacks.out || (this.handle(e), !0)
        },
        click: function(e) {
            return !this.handle(e) || !this.stopClick
        },
        geometryTypeMatches: function(e) {
            return null === this.geometryTypes || OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) > -1
        },
        handle: function(e) {
            this.feature && !this.feature.layer && (this.feature = null);
            var t = e.type,
                i = !1,
                n = Boolean(this.feature);
            if (this.feature = this.layer.getFeatureFromEvent(e),
                this.feature && !this.feature.layer && (this.feature = null),
                this.lastFeature && !this.lastFeature.layer && (this.lastFeature = null),
                this.feature) {
                var s = this.feature !== this.lastFeature,
                    r = s && this.feature._virtualParent === this.lastFeature,
                    a = "click" === t || "dblclick" === t || "touchstart" === t;
                this.geometryTypeMatches(this.feature) && this.feature.layer && !this.feature.layer.featuresNonSelectable ? (n && s && !r ? (this.lastFeature && this.triggerCallback(t, "out", [this.lastFeature]),
                        this.triggerCallback(t, "in", [this.feature])) : n && !a || this.triggerCallback(t, "in", [this.feature]),
                    this.lastFeature = this.feature,
                    i = !0) : (this.lastFeature && n && s && this.triggerCallback(t, "out", [this.lastFeature]),
                    this.feature = null)
            } else
                this.lastFeature && n && this.triggerCallback(t, "out", [this.lastFeature]);
            return i
        },
        triggerCallback: function(e, t, i) {
            var n = this.EVENTMAP[e][t];
            n && this.callback(n, i)
        },
        activate: function() {
            var e = !1;
            return OpenLayers.Handler.prototype.activate.apply(this, arguments) && (this.moveLayerToTop(),
                    this.map.events.on({
                        removelayer: this.handleMapEvents,
                        changelayer: this.handleMapEvents,
                        scope: this
                    }),
                    e = !0),
                e
        },
        deactivate: function() {
            var e = !1;
            return OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.moveLayerBack(),
                    this.feature = null,
                    this.lastFeature = null,
                    this.down = null,
                    this.up = null,
                    this.map.events.un({
                        removelayer: this.handleMapEvents,
                        changelayer: this.handleMapEvents,
                        scope: this
                    }),
                    e = !0),
                e
        },
        handleMapEvents: function(e) {
            e.property && "order" !== e.property || this.moveLayerToTop()
        },
        moveLayerToTop: function() {
            var e = Math.max(this.map.Z_INDEX_BASE.Feature - 1, this.layer.getZIndex()) + 1;
            this.layer.setZIndex(e)
        },
        moveLayerBack: function() {
            var e = this.layer.getZIndex() - 1;
            e >= this.map.Z_INDEX_BASE.Feature ? this.layer.setZIndex(e) : this.map.setLayerZIndex(this.layer, this.map.getLayerIndex(this.layer))
        },
        CLASS_NAME: "Waze.Handler.Feature"
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OpenLayers.Class(OpenLayers.Geometry.Point, {
        points: null,
        initialize: function(e) {
            OpenLayers.Geometry.Point.prototype.initialize.apply(this, [e[0].x, e[0].y]),
                this.points = e
        },
        clone: function() {
            return new n(this.points)
        },
        calculateBounds: function() {
            OpenLayers.Geometry.Point.prototype.calculateBounds.apply(this);
            for (var e = 0; e < this.points.length; e++)
                this.points[e].calculateBounds()
        },
        move: function(e, t) {
            OpenLayers.Geometry.Point.prototype.move.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].move(e, t)
        },
        translate: function(e, t) {
            this.x = e,
                this.y = t,
                this.clearBounds(),
                this.points.forEach(function(i) {
                    i.x = e,
                        i.y = t,
                        i.clearBounds()
                })
        },
        rotate: function(e, t) {
            OpenLayers.Geometry.Point.prototype.rotate.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].rotate(e, t)
        },
        resize: function(e, t, i) {
            OpenLayers.Geometry.Point.prototype.resize.apply(this, arguments);
            for (var n = 0; n < this.points.length; n++)
                this.points[n].resize(e, t, i)
        },
        transform: function(e, t) {
            OpenLayers.Geometry.Point.prototype.transform.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].transform(e, t)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(236),
        u = n(l),
        d = i(26),
        c = n(d),
        h = i(91),
        f = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._segments = t,
                    this._drawingContext = i,
                    this._dataModel = n,
                    this._splits = this._generateSplits(this._segments)
            }
            return (0,
                    o.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "_onMarkerClicked",
                    value: function() {
                        this._dataModel.actionManager.add(new u.default(this._segments, this._splits))
                    }
                }, {
                    key: "_generateSplits",
                    value: function(e) {
                        if (2 !== e.length)
                            return null;
                        var t = e[0],
                            i = e[1];
                        return t.geometry.bounds && i.geometry.bounds ? t.attributes.level !== i.attributes.level ? null : t.geometry.bounds.intersectsBounds(i.geometry.bounds) ? t.geometry.split(i.geometry, {
                            edge: !0,
                            mutual: !0
                        }) : null : null
                    }
                }, {
                    key: "drawNodeMarker",
                    value: function() {
                        if (this._drawingContext.clear(),
                            null !== this._splits && 2 === this._splits[0].length && 2 === this._splits[1].length) {
                            if (this._segments.every(function(e) {
                                    return e.isAllowed(h.Segments.EDIT_GEOMETRY)
                                })) {
                                var e = _.last(_.last(this._splits)).components[0],
                                    t = new OL.Marker(new OL.LonLat(e.x, e.y), new c.default("add-junction"));
                                t.events.register("click", this, this._onMarkerClicked),
                                    this._drawingContext.addMarkers([t])
                            }
                        }
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(172),
        u = n(l),
        d = i(26),
        c = n(d),
        h = i(91),
        f = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._segments = t,
                    this._node = this._findConnectingNode(this._segments),
                    this._drawingContext = i,
                    this._dataModel = n
            }
            return (0,
                    o.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "_onMarkerClicked",
                    value: function() {
                        this._dataModel.actionManager.add(new u.default(this._segments, this._node))
                    }
                }, {
                    key: "_findConnectingNode",
                    value: function(e) {
                        if (2 !== e.length)
                            return null;
                        var t = e[0].getFromNode();
                        return t ? (e[1].isConnectedToNode(t) || (t = e[0].getToNode(),
                                e[1].isConnectedToNode(t) || (t = null)),
                            t) : null
                    }
                }, {
                    key: "drawBridgeMarker",
                    value: function() {
                        if (this._drawingContext.clear(),
                            null !== this._node && this._node.areSegmentsBridgable(this._segments)) {
                            if (this._segments.every(function(e) {
                                    return e.isAllowed(h.Segments.EDIT_GEOMETRY)
                                })) {
                                var e = new OL.Marker(new OL.LonLat(this._node.geometry.x, this._node.geometry.y), new c.default("add-bridge"));
                                e.events.register("click", this, this._onMarkerClicked),
                                    this._drawingContext.addMarkers([e])
                            }
                        }
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(238),
        w = n(b),
        E = i(64),
        k = n(E),
        M = i(79),
        S = n(M),
        T = i(52),
        C = n(T),
        I = i(11),
        A = i(237),
        D = n(A),
        R = i(18),
        O = n(R),
        L = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, n));
                return s.node = e,
                    s.mergeNode = i,
                    s
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "considerMerging",
                    value: function() {
                        return !(!this.mergeNode || !this.mergeNode.geometry.equals(this.node.geometry)) && (this.node.isVirtual() && this.doSubAction(new D.default(this.node)),
                            this.mergeNode.isVirtual() && this.doSubAction(new D.default(this.mergeNode)),
                            this.node.attributes.segIDs.every(function(e) {
                                var t = this.model.segments.get(e);
                                return !this.mergeNode.isConnectedToSegment(t) || t.isPoint()
                            }, this))
                    }
                }, {
                    key: "moveSegments",
                    value: function() {
                        this.node.attributes.segIDs.concat().forEach(function(e) {
                            var t = this.model.segments.get(e);
                            t.isPoint() ? this.doSubAction(new k.default(t, {
                                dontSerialize: !0
                            })) : (this.doSubAction(new S.default(t, this.node, {
                                    deleteNode: !1,
                                    dontSerialize: !0,
                                    keepTurns: !0
                                })),
                                this.doSubAction(new C.default(this.mergeNode, t, {
                                    dontSerialize: !0
                                })))
                        }, this)
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.mergeNode]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (!this.considerMerging())
                            return !1;
                        this.node.getID(),
                            this.mergeNode.getID(),
                            this.moveSegments(),
                            this.doSubAction(new w.default(this.node))
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {
                            sourceNodeID: this.node.getID(),
                            sourceNodeVersion: this.node.attributes.version,
                            destNodeID: this.mergeNode.getID(),
                            destNodeVersion: this.node.attributes.version
                        };
                        return {
                            _objectType: I.MERGED_NODE,
                            action: O.default.TYPE.ADD,
                            attributes: e
                        }
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.MergeNode")
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.node.getUniqueID(), this.mergeNode.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(y.default);
    t.default = L,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(53),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return this.subActions[0].getFocusFeatures()
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.MergeNode")
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(175),
        y = n(_),
        b = i(20),
        w = n(b),
        E = i(10),
        k = n(E),
        M = function(e) {
            function t(e, i) {
                (0,
                    u.default)(this, t),
                i = (0,
                    o.default)({}, {
                    mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.ROTATE
                }, i);
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e, i));
                return n.isDragging = !1,
                    n.originalAngle = n.feature.model.attributes.azymuth,
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "destroy",
                    value: function() {
                        this._removeDragBoundary(),
                            this._removeRadiusHandle(),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "destroy", this).apply(this, arguments)
                    }
                }, {
                    key: "resetVertices",
                    value: function() {
                        this.isDragging && (this.isDragging = !1),
                            this._removeDragBoundary(),
                            this._removeRadiusHandle(),
                            this.feature && (this._cameraDraggable() && this.collectDragHandle(),
                                this.feature.model.isGeometryEditable() && this._collectRadiusHandle())
                    }
                }, {
                    key: "_removeDragBoundary",
                    value: function() {
                        this.dragBoundary && (this.layer.destroyFeatures([this.dragBoundary], {
                                silent: !0
                            }),
                            this.dragBoundary = null)
                    }
                }, {
                    key: "_removeRadiusHandle",
                    value: function() {
                        this.radiusHandle && (this.layer.destroyFeatures([this.radiusHandle], {
                                silent: !0
                            }),
                            this.radiusHandle = null)
                    }
                }, {
                    key: "_cameraDraggable",
                    value: function() {
                        return this.feature.model.isGeometryEditable() && this.map.getZoom() >= W.Config.cameras.minDragZoom
                    }
                }, {
                    key: "collectDragHandle",
                    value: function() {
                        var e = this.feature.geometry,
                            t = this.map.getResolution(),
                            i = new OL.Geometry.Point(e.x, e.y);
                        this.feature.model.attributes.originalPosition || (this.feature.model.attributes.originalPosition = new OL.Geometry.Point(e.x, e.y));
                        var n = this.feature.model.attributes.originalPosition;
                        this._removeDragBoundary(),
                            this.dragBoundary = new OL.Feature.Vector(n.clone(), {}, {
                                pointRadius: 150 / t,
                                fillOpacity: .2,
                                pointerEvents: "none",
                                graphicZIndex: 0
                            });
                        var s = this;
                        return e.move = function(t, r) {
                                s.isDragging = !0,
                                    s.onDragVertex(),
                                    i.x = this.x + t,
                                    i.y = this.y + r;
                                var a = i.x - n.x,
                                    o = i.y - n.y,
                                    l = Math.sqrt(Math.pow(a, 2) + Math.pow(o, 2));
                                return OL.Geometry.Point.prototype.move.apply(this, arguments),
                                    l >= 150 ? (e.x = n.x + 150 * a / l,
                                        e.y = n.y + 150 * o / l,
                                        e.clearBounds()) : (e.x = i.x,
                                        e.y = i.y,
                                        e.clearBounds())
                            },
                            this.layer.addFeatures([this.dragBoundary], {
                                silent: !0
                            })
                    }
                }, {
                    key: "_collectRadiusHandle",
                    value: function() {
                        var e = this.map,
                            t = this.feature,
                            i = t.geometry,
                            n = k.default.degToRad(t.model.attributes.azymuth - 90),
                            s = new OL.Geometry.Point(i.x, i.y),
                            r = new OL.Geometry.Point(i.x + 50 * e.getResolution() * Math.cos(n), i.y - 50 * e.getResolution() * Math.sin(n)),
                            a = new OL.Feature.Vector(r),
                            o = new OL.Geometry.Point(r.x, r.y);
                        r.move = function(i, r) {
                                o.x = this.x + i,
                                    o.y = this.y + r;
                                var a = o.x - s.x,
                                    l = o.y - s.y,
                                    u = 50 * e.getResolution(),
                                    d = Math.sqrt(Math.pow(a, 2) + Math.pow(l, 2));
                                OL.Geometry.Point.prototype.move.call(this, i, r),
                                    d >= u ? (this.x = s.x + a * u / d,
                                        this.y = s.y + l * u / d) : (this.x = o.x,
                                        this.y = o.y),
                                    n = Math.atan2(l, a),
                                    t.model.attributes.azymuth = 450 - k.default.radToDeg(n),
                                    t.layer.drawFeature(t)
                            },
                            a._sketch = !0,
                            a._cameraRotator = !0,
                            this._removeRadiusHandle(),
                            this.radiusHandle = a,
                            this.layer.addFeatures([this.radiusHandle], {
                                silent: !0
                            })
                    }
                }, {
                    key: "onDragVertex",
                    value: function(e, t) {
                        return this.isDragging && this._removeRadiusHandle(),
                            this.layer.drawFeature(this.feature)
                    }
                }, {
                    key: "dragComplete",
                    value: function(e) {
                        if (e === this.radiusHandle) {
                            var t = this.feature.model.attributes.azymuth;
                            this.feature.model.attributes.azymuth = this.originalAngle,
                                this.originalAngle = t,
                                this.model.actionManager.add(new w.default(this.feature.model, {
                                    azymuth: t
                                }))
                        } else
                            this.onModification(this.feature);
                        return this.resetVertices()
                    }
                }]),
                t
        }(y.default);
    (0,
        o.default)(M.prototype, {
        CLASS_NAME: "Waze.Control.GeometryEditing.Camera"
    }),
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(175),
        v = n(m),
        _ = function(e) {
            function t(e, i) {
                return (0,
                        o.default)(this, t),
                    i.mode = OL.Control.ModifyFeature.RESHAPE | OL.Control.ModifyFeature.DRAG,
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).call(this, e, i))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "handleKeypress",
                    value: function(e) {
                        return this.deleteCodes.includes(e.keyCode) ? this.feature.model.isPoint() || this.feature.model.geometry.components[0].components.length > 4 ? (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "handleKeypress", this).call(this, e) : void 0 : (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "handleKeypress", this).call(this, e)
                    }
                }]),
                t
        }(v.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(255),
        f = n(h),
        p = i(33),
        g = function() {
            function e() {
                (0,
                    u.default)(this, e),
                this.currentAction = null,
                    this.active = !1;
                var t = this;
                this.$element = $("#keyboard-dialog"),
                    this.events = new OpenLayers.Events(this),
                    W.accelerators.events.register("showShortcutsDialog", this, function() {
                        this.show()
                    }),
                    $(window).bind("keydown.shortcut-editor", this.onKeyDown.bind(this)),
                    $(window).bind("keyup.shortcut-editor", this.onKeyUp.bind(this)),
                    this.$element.delegate(".shortcut-action", "click", function() {
                        t.onActionClicked(this.dataset.action)
                    }),
                    this.$element.on("hide.bs.modal", this.onDialogClose.bind(this)),
                    this.$element.on("show.bs.modal", function() {
                        t.activate()
                    })
            }
            return (0,
                    c.default)(e, [{
                    key: "activate",
                    value: function() {
                        this.render(),
                            this.active = !0
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.activate(),
                            this.$element.modal("show")
                    }
                }, {
                    key: "onDialogClose",
                    value: function() {
                        this.active = !1
                    }
                }, {
                    key: "render",
                    value: function() {
                        this.$element.html((0,
                            p.getHTML)("templates/keyboard_shortcuts/modal", {
                            groups: W.accelerators.Groups
                        }))
                    }
                }, {
                    key: "renderList",
                    value: function() {
                        this.$element.find(".modal-body").html((0,
                            p.getHTML)("templates/keyboard_shortcuts/list", {
                            groups: W.accelerators.Groups
                        }))
                    }
                }, {
                    key: "onActionClicked",
                    value: function(e) {
                        var t = this.$element.find(".shortcut-action[data-action=" + e + "]");
                        t.hasClass("disabled") || (this.currentAction && this.currentAction.removeClass("selected"),
                            this.currentAction = t,
                            this.currentAction.addClass("selected"))
                    }
                }, {
                    key: "onKeyDown",
                    value: function(e) {
                        var t = String.fromCharCode(e.which),
                            i = e.which;
                        if (this.active && this.currentAction)
                            return e.stopImmediatePropagation(),
                                (t.match(/^[a-zA-Z0-9]+/) || (0,
                                    o.default)(W.accelerators.SpecialKeys).includes(i.toString())) && (W.accelerators.registerShortcut(new f.default.KeyStroke(e).toString(), this.currentAction.get(0).dataset.action, !0),
                                    this.currentAction.removeClass("selected"),
                                    W.accelerators.persist(),
                                    this.currentAction = null,
                                    this.renderList()), !1
                    }
                }, {
                    key: "onKeyUp",
                    value: function(e) {
                        this.active && this.currentAction && e.stopImmediatePropagation()
                    }
                }, {
                    key: "getModifiersString",
                    value: function(e) {
                        var t = "";
                        return e.shiftKey && (t += "Shift+"),
                            e.ctrlKey && !e.metaKey && (t += "Control+"),
                            e.altKey && (t += "Alt+"),
                            e.metaKey && (t += "Command+"),
                            t
                    }
                }, {
                    key: "getShortcutCode",
                    value: function(e, t) {
                        var i = "";
                        return e.shiftKey && (i += "S"),
                            (e.ctrlKey || e.metaKey) && (i += "C"),
                            e.altKey && (i += "A"),
                            i + "+" + t
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.events.destroy()
                    }
                }]),
                e
        }();
    (0,
        r.default)(g.prototype, {
        CLASS_NAME: "Waze.View.KeyboardShortcutEditor"
    }),
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                return (0,
                        r.default)(this, e),
                    this._wazeModel = t,
                    this._marx = i,
                    this._map = n,
                    this.events = new OL.Events,
                    this._active = !1,
                    this
            }
            return (0,
                    o.default)(e, [{
                    key: "activate",
                    value: function() {
                        if (!this._active)
                            return this._active = !0,
                                this._wazeModel.actionManager.events.on({
                                    afteraction: this._onEditAreaChange,
                                    afterundoaction: this._onEditAreaChange,
                                    afterclearactions: this._onEditAreaChange,
                                    scope: this
                                }),
                                this._map.events.on({
                                    moveend: this._onViewAreaChange,
                                    scope: this
                                })
                    }
                }, {
                    key: "deactivate",
                    value: function() {
                        this._active && (this._wazeModel.actionManager.events.un({
                                afteraction: this._onEditAreaChange,
                                afterundoaction: this._onEditAreaChange,
                                afterclearactions: this._onEditAreaChange,
                                scope: this
                            }),
                            this._map.events.un({
                                moveend: this._onViewAreaChange,
                                scope: this
                            }),
                            this._active = !1)
                    }
                }, {
                    key: "_onEditAreaChange",
                    value: function() {
                        return this.events.triggerEvent("change:editArea", {
                            editArea: this.getEditArea()
                        })
                    }
                }, {
                    key: "_onViewAreaChange",
                    value: function() {
                        return this.events.triggerEvent("change:viewArea", {
                            viewArea: this.getViewArea()
                        })
                    }
                }, {
                    key: "getEditArea",
                    value: function() {
                        var e = this._wazeModel.actionManager.getChangesBounds();
                        return this.convertToMarx(e)
                    }
                }, {
                    key: "getCenter",
                    value: function() {
                        return this.convertToMarx(this._map.getCenter())
                    }
                }, {
                    key: "getViewArea",
                    value: function() {
                        return this.convertToMarx(this._map.getExtent())
                    }
                }, {
                    key: "convertToMarx",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        return e = this.parseGeometry(e),
                            null != e && (e = e.transform(this._map.getProjectionObject(), this._marx.displayProjection)),
                            e
                    }
                }, {
                    key: "convertFromMarx",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        return e = this.parseGeometry(e),
                            null != e && (e = e.transform(this._marx.displayProjection, this._map.getProjectionObject())),
                            e
                    }
                }, {
                    key: "parseGeometry",
                    value: function(e) {
                        return null != e && (e instanceof OL.LonLat || (e instanceof OL.Bounds ? 0 === e.getWidth() && 0 === e.getHeight() && (e = null) : null != e.lon && null != e.lat && (e = new OL.LonLat(e.lon, e.lat)))),
                            e
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = void 0,
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e, t, i) {
                        this._wazeModel = e,
                            this._marx = t,
                            this._adapter = i,
                            this.users = new Backbone.Collection([], {
                                model: p
                            }),
                            this.throttleUserPanMessage = _.throttle(this.sendUserPanMessage, 3e3, {
                                leading: !1
                            }),
                            this.throttleUserEditMessage = _.throttle(this.sendUserEditMessage, 3e3, {
                                leading: !1
                            }),
                            this._connected = !1,
                            this._adapter.events.on({
                                "change:editArea": this._onEditAreaChange,
                                "change:viewArea": this._onViewAreaChange,
                                scope: this
                            }),
                            this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                            this._marx.on("reconnect", this._onMarxReconnect, this),
                            this._marx.on("disconnect", this._onMarxDisconnect, this)
                    }
                }, {
                    key: "_onMarxFirstConnect",
                    value: function() {
                        this._isUserAuthorized() && this._registerMarxEvents(),
                            this._activate()
                    }
                }, {
                    key: "_registerMarxEvents",
                    value: function() {
                        return this._marx.socket.on("viewport:userPan", this._onUserPan.bind(this)),
                            this._marx.socket.on("viewport:userEdit", this._onUserEdit.bind(this)),
                            this._marx.socket.on("viewport:userLeave", this._onUserLeave.bind(this)),
                            this._marx.socket.on("viewport:reset", this._onViewportReset.bind(this))
                    }
                }, {
                    key: "_onMarxReconnect",
                    value: function() {
                        this._activate()
                    }
                }, {
                    key: "_activate",
                    value: function() {
                        return this._connected || (this._connected = !0,
                                this._adapter.activate()),
                            this.sendUserPanMessage()
                    }
                }, {
                    key: "_onUserPan",
                    value: function(e) {
                        return this._mergeUser(e.user)
                    }
                }, {
                    key: "_onUserEdit",
                    value: function(e) {
                        return this._mergeUser(e.user)
                    }
                }, {
                    key: "_onUserLeave",
                    value: function(e) {
                        var t = this.findUserById(e.user.id);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_isUserAuthorized",
                    value: function() {
                        return !W.Config.chat.staffOnly || this._wazeModel.loginManager.user.isStaff
                    }
                }, {
                    key: "_onMarxDisconnect",
                    value: function() {
                        this._connected && (this._adapter.deactivate(),
                            this._connected = !1)
                    }
                }, {
                    key: "_onViewportReset",
                    value: function(e) {
                        return this.mergeUsers(e)
                    }
                }, {
                    key: "mergeUsers",
                    value: function(e) {
                        var t = this;
                        return this._removeUsersNotIn(e),
                            e.map(function(e) {
                                return t._mergeUser(e)
                            })
                    }
                }, {
                    key: "_mergeUser",
                    value: function(e) {
                        e = $.extend({}, e),
                            this._transformCenterFromMarx(e);
                        var t = this.findUserById(e.id);
                        return null != t ? t.set(e) : this.users.add(e)
                    }
                }, {
                    key: "_removeUsersNotIn",
                    value: function(e) {
                        var t = e.reduce(function(e, t) {
                                return e[t.id] = !0,
                                    e
                            }, {}),
                            i = this.users.filter(function(e) {
                                return !t[e.get("id")]
                            });
                        this.users.remove(i)
                    }
                }, {
                    key: "_transformCenterFromMarx",
                    value: function(e) {
                        if (null != e.center) {
                            var t = e.center;
                            t = new OL.LonLat(t.lon, t.lat),
                                e.center = this._adapter.convertFromMarx(t)
                        }
                    }
                }, {
                    key: "findUserById",
                    value: function(e) {
                        return this.users.findWhere({
                            id: e
                        })
                    }
                }, {
                    key: "_onEditAreaChange",
                    value: function(e) {
                        return this.throttleUserEditMessage()
                    }
                }, {
                    key: "sendUserEditMessage",
                    value: function() {
                        var e = {
                            editArea: this._adapter.getEditArea()
                        };
                        return this._marx.socket.emit("user:edit", e)
                    }
                }, {
                    key: "_onViewAreaChange",
                    value: function(e) {
                        return this.throttleUserPanMessage()
                    }
                }, {
                    key: "sendUserPanMessage",
                    value: function() {
                        if (null != this._marx.socket) {
                            var e = {
                                center: this._adapter.getCenter(),
                                viewArea: this._adapter.getViewArea()
                            };
                            return this._marx.socket.emit("user:pan", e)
                        }
                    }
                }]),
                t
        }(Backbone.Model);
    p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function() {
                        this.on("change:center", this._onCenterChanged, this)
                    }
                }, {
                    key: "_onCenterChanged",
                    value: function(e) {
                        if (null != e.newValue && null != e.oldValue && e.newValue.lon !== e.oldValue.lon && e.newValue.lat !== e.oldValue.lat)
                            return this.trigger("moved")
                    }
                }]),
                t
        }(Backbone.Model),
        t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(803),
        u = n(l),
        d = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this._map = t.map,
                    this._model = t.model,
                    this._model.users.on("add", this._addUser, this),
                    this._model.users.on("remove", this._onRemoveUser, this),
                    this._layer = this._map.liveUsersLayer,
                    this._markersByUserId = {}
            }
            return (0,
                    o.default)(e, [{
                    key: "_addUser",
                    value: function(e) {
                        var t = new u.default(e, this._map, this._layer);
                        return this._markersByUserId[e.get("id")] = t,
                            this._layer.addMarker(t),
                            t.render()
                    }
                }, {
                    key: "_onRemoveUser",
                    value: function(e) {
                        var t = e.get("id");
                        this._removeMarker(t)
                    }
                }, {
                    key: "_removeMarker",
                    value: function(e) {
                        var t = this._markersByUserId[e];
                        t.destroy(),
                            this._layer.removeMarker(t),
                            delete this._markersByUserId[e]
                    }
                }, {
                    key: "centerUser",
                    value: function(e) {
                        this._markersByUserId[e] && this._markersByUserId[e].center()
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(26),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(OL.Marker, {
            initialize: function(e, t, i) {
                this.model = e,
                    this.map = t,
                    this.layer = i;
                var n = new s.default("live-user-marker", !0);
                OL.Marker.prototype.initialize.call(this, this.getLonLat(), n),
                    this.icon.$div.addClass("rank" + this.model.attributes.rank),
                    this.model.on("moved", this._onMoved, this)
            },
            render: function() {
                return this.icon.$div.tooltip({
                    title: this.model.get("name")
                })
            },
            getLonLat: function() {
                return this.model.get("center")
            },
            _onMoved: function() {
                var e = this;
                return this.icon.$div.one("transitionend", function() {
                        return e.icon.$div.removeClass("moving")
                    }),
                    this.lonlat = this.getLonLat(),
                    this.icon.$div.addClass("moving"),
                    this.layer.drawMarker(this)
            },
            center: function() {
                return this.map.setCenter(this.getLonLat())
            },
            destroy: function() {
                return this.icon.$div.tooltip("destroy")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(128),
        r = n(s),
        a = i(854),
        o = n(a),
        l = i(855),
        u = n(l),
        d = i(857),
        c = n(d),
        h = i(858),
        f = n(h),
        p = i(859),
        g = n(p),
        m = i(860),
        v = n(m),
        _ = i(861),
        y = n(_),
        b = i(862),
        w = n(b),
        E = i(33),
        k = i(863),
        M = n(k),
        S = OpenLayers.Class(OL.Map, r.default, {
            DefaultPanInPixel: 20,
            navigationControl: null,
            mapState: null,
            navigationEnabled: !0,
            $el: null,
            $map: null,
            zoomMethod: null,
            initialize: function(e) {
                var t = this;
                e = e || {},
                    $("#editor-container").html((0,
                        E.getHTML)("templates/map")),
                    this.app = e.app,
                    this.$el = $("#map"),
                    this.$map = $("#WazeMap"),
                    this.popupOverlay = $("#popup-overlay"),
                    this.resize(),
                    this.navigationControl = new OpenLayers.Control.Navigation({
                        dragPanOptions: {
                            enableKinetic: {
                                delay: 100,
                                deceleration: .005
                            }
                        }
                    }),
                    this.footerControl = new OpenLayers.Control({
                        displayClass: "WazeMapFooter"
                    }),
                    this.footerMessages = new OpenLayers.Control({
                        displayClass: "footer-messages"
                    }),
                    e.controls = [this.navigationControl, this.footerControl, this.footerMessages],
                    e.projection = new OpenLayers.Projection(W.Config.map.projection.local),
                    e.displayProjection = new OpenLayers.Projection(W.Config.map.projection.remote),
                    e.theme = null,
                    OpenLayers.Map.prototype.initialize.apply(this, ["WazeMap", e]),
                    this.panelRegion = new y.default({
                        map: this
                    }),
                    $(this.viewPortDiv).on("mouseup", function(e) {
                        "INPUT" !== e.target.tagName && t.focus()
                    }),
                    $(window).on("resize", this.resize.bind(this)),
                    this.initializeLayers()
            },
            initMapState: function(e, t, i) {
                this.mapState = new u.default(this, e, t, i),
                    new g.default({
                        app: this.app,
                        location: W.location,
                        mapState: this.mapState,
                        el: $("<div/>").addClass("WazeControlPermalink").appendTo(this.footerControl.div)
                    }).render(),
                    this._addFooterControls(),
                    this._addButtonsOverlayView()
            },
            registerAccelerators: function(e) {
                e.events.on({
                    panUp: this.panUp,
                    panRight: this.panRight,
                    panDown: this.panDown,
                    panLeft: this.panLeft,
                    zoomIn: this.zoomIn,
                    zoomOut: this.zoomOut,
                    scope: this
                })
            },
            _addFooterControls: function() {
                this.addFooterControl({
                        displayClass: "olControlAttribution",
                        control: new OpenLayers.Control.Attribution
                    }),
                    new v.default({
                        map: this,
                        el: $("<div/>").addClass("WazeControlMousePosition").appendTo(this.footerControl.div)
                    }).render(),
                    this.addFooterControl({
                        displayClass: "olControlScaleLine",
                        control: new OpenLayers.Control.ScaleLine
                    }),
                    this.addControl(new o.default({
                        div: $("<div/>").appendTo(this.footerMessages.div)
                    })),
                    new c.default({
                        dataModel: W.model,
                        mapState: this.mapState,
                        location: W.location,
                        el: $("<div/>").appendTo(this.footerMessages.div)
                    })
            },
            _addButtonsOverlayView: function() {
                this.buttonsOverlay = new M.default({
                        el: $("#overlay-buttons"),
                        map: W.map,
                        streetViewController: W.streetViewController
                    }),
                    this.buttonsOverlay.show(),
                    this.buttonsOverlay.render()
            },
            addFooterControl: function(e) {
                var t = $("<div>").addClass(e.displayClass);
                t.appendTo(this.footerControl.div),
                    e.control.div = t[0],
                    this.addControl(e.control)
            },
            focus: function() {
                $(this.div).focus()
            },
            panLeft: function() {
                this.navigationEnabled && this.pan(-this.DefaultPanInPixel, 0, {
                    animate: !1
                })
            },
            panRight: function() {
                this.navigationEnabled && this.pan(this.DefaultPanInPixel, 0, {
                    animate: !1
                })
            },
            panUp: function() {
                this.navigationEnabled && this.pan(0, -this.DefaultPanInPixel, {
                    animate: !1
                })
            },
            panDown: function() {
                this.navigationEnabled && this.pan(0, this.DefaultPanInPixel, {
                    animate: !1
                })
            },
            zoomIn: function() {
                this.navigationEnabled && OL.Map.prototype.zoomIn.apply(this, arguments)
            },
            zoomOut: function() {
                this.navigationEnabled && OL.Map.prototype.zoomOut.apply(this, arguments)
            },
            showOverlay: function() {
                $("#map-overlay").show()
            },
            hideOverlay: function() {
                $("#map-overlay").hide()
            },
            setEditingMediator: function(e) {
                W.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    W.editingMediator.on("change:navigation", this._onNavigationChanged, this),
                    this._onNavigationChanged()
            },
            setSnapshotManager: function(e) {
                this.snapshotManager = e,
                    this.snapshotManager.on("change:state", this._refreshRoadLayers, this),
                    this._createSnapshotMessage()
            },
            _createSnapshotMessage: function() {
                var e = $(this.div).find(".snapshot-message").css({
                    zIndex: this.Z_INDEX_BASE.Control
                });
                new f.default({
                    el: e,
                    snapshotManager: this.snapshotManager
                }).render()
            },
            _onEditingEnabledChanged: function() {
                var e = W.editingMediator.get("editingEnabled");
                this.$el.toggleClass("editing-disabled", !e),
                    e || this.panelRegion.empty()
            },
            _onNavigationChanged: function() {
                W.editingMediator.get("navigation") ? (this.buttonsOverlay.show(),
                    this.popupOverlay.hide(),
                    this.navigationEnabled = !0) : (this.buttonsOverlay.hide(),
                    this.popupOverlay.show(),
                    this.navigationEnabled = !1)
            },
            toggleSVMode: function(e) {
                this.$el.toggleClass("street-view-mode", e),
                    this.updateSize()
            },
            resize: function() {
                var e = parseInt(this.$map.css("max-height"), 10),
                    t = parseInt(this.$map.css("min-height"), 10),
                    i = $(window).height() - this.$map.offset().top;
                i > e ? i = e : i < t && (i = t),
                    this.$el.find(".view-area").css("height", i),
                    null !== this.div && (this.updateSize(),
                        this.events.triggerEvent("resize", {
                            height: i
                        }))
            },
            getHeight: function() {
                return this.$map.height()
            },
            moveLayerToTop: function(e) {
                e.setZIndex(this.Z_INDEX_BASE.TopLayer)
            },
            setLayerZIndex: function(e, t) {
                var i = Boolean(e.markers);
                e.setZIndex(this.Z_INDEX_BASE[e.isBaseLayer ? "BaseLayer" : i ? "MarkerOverlay" : "Overlay"] + 5 * t)
            },
            getLayerVisibility: function(e) {
                var t = this.getLayersBy("uniqueName", e)[0];
                return t ? t.getVisibility() : null
            },
            setLayerVisibility: function(e, t) {
                var i = this.getLayersBy("uniqueName", e)[0];
                i && i.setVisibility(t)
            },
            getPannable: function() {
                var e = this;
                return {
                    panTo: function(t, i, n) {
                        return e.moveTo(t, i, n)
                    },
                    getZoom: function() {
                        return e.getZoom()
                    }
                }
            },
            getDrawingContext: function(e) {
                return new w.default(this, e)
            },
            toggleLayerSwitcherPinned: function(e) {
                this.$el.toggleClass("layer-switcher-pinned", e)
            },
            CLASS_NAME: "Waze.Map"
        });
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        fontFamily: "WazeFont",
        unicodeMap: {
            ".waze-icon-area": 61696,
            ".waze-icon-arrow-down": 61697,
            ".waze-icon-arrow-left": 61698,
            ".waze-icon-arrow-right": 61699,
            ".waze-icon-arrow-up": 61700,
            ".waze-icon-attach": 61701,
            ".waze-icon-bubble": 61702,
            ".waze-icon-c-alert": 61703,
            ".waze-icon-c-arrow-down": 61704,
            ".waze-icon-c-arrow-left": 61705,
            ".waze-icon-c-arrow-right": 61706,
            ".waze-icon-c-arrow-up": 61707,
            ".waze-icon-calendar": 61708,
            ".waze-icon-check": 61709,
            ".waze-icon-clock": 61710,
            ".waze-icon-close": 61711,
            ".waze-icon-closed-issue": 61712,
            ".waze-icon-closure": 61713,
            ".waze-icon-crosshair": 61714,
            ".waze-icon-detach": 61715,
            ".waze-icon-edit": 61716,
            ".waze-icon-envelope": 61717,
            ".waze-icon-event": 61718,
            ".waze-icon-full-arrow-down": 61719,
            ".waze-icon-full-arrow-left": 61720,
            ".waze-icon-full-arrow-right": 61721,
            ".waze-icon-full-arrow-two-sided": 61722,
            ".waze-icon-full-arrow-up": 61723,
            ".waze-icon-hive": 61724,
            ".waze-icon-house": 61725,
            ".waze-icon-km": 61726,
            ".waze-icon-layers": 61727,
            ".waze-icon-map": 61728,
            ".waze-icon-pin": 61729,
            ".waze-icon-place": 61730,
            ".waze-icon-place-car": 61731,
            ".waze-icon-place-culture": 61732,
            ".waze-icon-place-food-drink": 61733,
            ".waze-icon-place-lodging": 61734,
            ".waze-icon-place-natural": 61735,
            ".waze-icon-place-other": 61736,
            ".waze-icon-place-outdoors": 61737,
            ".waze-icon-place-professional": 61738,
            ".waze-icon-place-shopping": 61739,
            ".waze-icon-place-transportation": 61740,
            ".waze-icon-plus": 61741,
            ".waze-icon-plus_neg": 61742,
            ".waze-icon-redo": 61743,
            ".waze-icon-reload": 61744,
            ".waze-icon-road": 61745,
            ".waze-icon-route": 61746,
            ".waze-icon-save": 61747,
            ".waze-icon-star": 61748,
            ".waze-icon-trash": 61749,
            ".waze-icon-undo": 61750,
            ".waze-icon-view": 61751,
            ".waze-icon-visible": 61752
        },
        toUnicode: function(e) {
            var t = this.unicodeMap["." + e];
            return String.fromCharCode(t)
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: [W.defaultRule({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillOpacity: 0
                }), W.rule("isUnchanged", !1, {
                    fillColor: "#ff8383",
                    fillOpacity: 1
                })]
            }),
            highlight: new OpenLayers.Style(null, {
                rules: [W.defaultRule({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillColor: "#00ece3",
                    fillOpacity: 1
                }), W.rule("isUnchanged", !1, {
                    fillOpacity: 1,
                    fillColor: "#eb7171"
                })]
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = W.rule("_cameraRotator", !0, {
            pointRadius: 7,
            strokeOpacity: 1,
            strokeColor: "#aaaaaa",
            fillColor: "#ff3300",
            fillOpacity: 1,
            strokeWidth: 2,
            externalGraphic: null,
            graphicZIndex: 1
        }),
        s = W.rule("type", "camera", {}),
        r = [n, s],
        a = function(e) {
            return new OpenLayers.Style(e, {
                rules: r,
                context: {
                    getAzymuth: function(e) {
                        if (e.model)
                            return e.model.attributes.azymuth
                    },
                    getImageURL: function(e) {
                        var t = e.model;
                        if (t)
                            return i(808)("./camera" + t.attributes.type + t.attributes.validated + ".png")
                    }
                }
            })
        };
    t.default = new OpenLayers.StyleMap({
            default: a({
                externalGraphic: "${getImageURL}",
                pointRadius: 18,
                rotation: "${getAzymuth}",
                graphicZIndex: 1
            }),
            highlight: a({
                pointRadius: 22
            }),
            select: a({
                pointRadius: 22
            }),
            highlightselected: a({
                pointRadius: 22
            }),
            drag: a({
                pointRadius: 22
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./camera2false.png": 809,
        "./camera2true.png": 810,
        "./camera3false.png": 811,
        "./camera3true.png": 812,
        "./camera4false.png": 813,
        "./camera4true.png": 814
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 808
}, function(e, t, i) {
    e.exports = i.p + "img/camera2falsea81daea9d3458f341a839f7951a51b0f.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera2trueafd04923e745ff85f9b132ce1d08e73c.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera3false54505f9b495b98be656407caee4e3f62.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera3true5aab8ac3d52b67ac2b4ef5f22667e317.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera4false057cbe29796c55ba566003f2e6f72904.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera4true19787cc5b17be6328baa0f706e30764c.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            strokeColor: "#ffc62e",
            fillColor: "#ffc62e",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        s = function(e) {
            var t = W.defaultRule({
                Polygon: n
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        r = W.defaultRule({
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        a = W.defaultRule({
            Polygon: {
                fill: !1,
                strokeDashstyle: "dash",
                strokeColor: "#ff8383"
            }
        }),
        o = W.rule("isUnchanged", !1, {
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        l = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        });
    t.default = new OL.StyleMap({
            default: s([l, o]),
            highlight: s([W.defaultRule({
                Polygon: {
                    strokeColor: "#fed15a",
                    fillColor: "#fed15a"
                }
            }), l, o]),
            select: s([r]),
            highlightselected: s([r]),
            delete: s([a]),
            highlightdeleted: s([a])
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(257),
        o = n(a),
        l = i(817),
        u = n(l),
        d = i(818),
        c = n(d),
        h = {
            dragPoint: {
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 6,
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 1
            },
            middleDragPoint: {
                strokeWidth: 2,
                fillOpacity: .6,
                strokeColor: "#00ece3",
                pointRadius: 4,
                fillColor: "white",
                graphicZIndex: 1
            },
            fromNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "A",
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 2
            },
            toNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "B",
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 2
            },
            regularNodeDragPoint: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "white",
                fillColor: "#00ece3",
                fillOpacity: 1,
                strokeWidth: 3,
                graphicZIndex: 2
            },
            virtualNodeDragPoint: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "white",
                fillColor: "#00ece3",
                fillOpacity: 1,
                strokeWidth: 3,
                strokeDashstyle: "3,5",
                graphicZIndex: 2
            },
            cameraRotator: {
                pointRadius: 7,
                strokeOpacity: 1,
                strokeColor: "#aaaaaa",
                fillColor: "#ff3300",
                fillOpacity: 1,
                strokeWidth: 2
            },
            highlightPlaceHolder: {
                strokeColor: "transparent",
                strokeOpacity: 0,
                strokeWidth: 30,
                graphicZIndex: 0
            },
            arrowOneWayStandard: {
                externalGraphic: o.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            },
            arrowOneWayRestricted: {
                externalGraphic: u.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            },
            arrowTwoWayRestricted: {
                externalGraphic: c.default,
                rotation: "${angle}",
                graphicWidth: 5,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            }
        },
        f = (0,
            r.default)(h).map(function(e) {
            return W.rule("_" + e, !0, h[e])
        });
    f.push(W.rule("uneditable", !0, {
            fillColor: "#cecece",
            strokeColor: "#aeaeae"
        })),
        t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: f
            }),
            highlight: new OpenLayers.Style(null, {
                rules: f
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-restricted12d401d9920318fa515cfbd84b8bd91c.png"
}, function(e, t, i) {
    e.exports = i.p + "img/two-way-restrictedd655660f966eee861e57842c3b34c64f.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(129),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            colorEmptyStreetSegments: !1,
            initialize: function() {
                s.default.prototype.initialize.apply(this, arguments),
                    W.accelerators.events.register("colorEmptyStreets", this, this.colorEmptyStreetsToggled)
            },
            colorEmptyStreetsToggled: function() {
                this.colorEmptyStreetSegments = !this.colorEmptyStreetSegments,
                    this.redraw()
            },
            CLASS_NAME: "Waze.Layer.SegmentLayer"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(129),
        o = n(a),
        l = OpenLayers.Class(o.default, {
            nodeDisplayMaxScale: 1e4,
            shouldDisplayFeature: function(e) {
                return !0
            },
            onNodesAdded: function(e) {
                this.onFeaturesAdded(e)
            },
            onNodesChanged: function(e) {
                this.onFeaturesChanged(e)
            },
            onNodesRemoved: function(e) {
                this.onFeaturesRemoved(e)
            },
            onDisplayChanged: function(e) {
                this.displayedNodes = e.scale <= this.nodeDisplayMaxScale
            },
            updateDisplayedFeatures: function(e) {
                o.default.prototype.updateDisplayedFeatures.apply(this, [(0,
                    r.default)({}, e.nodes)])
            },
            CLASS_NAME: "Waze.Layer.NodeLayer"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(54),
        r = n(s),
        a = i(177),
        o = n(a),
        l = i(178),
        u = n(l),
        d = OpenLayers.Class(OpenLayers.Layer.Vector, {
            rendererOptions: {
                zIndexing: !0
            },
            renderers: [r.default],
            styleMap: o.default,
            initialize: function(e, t) {
                OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments),
                    this.driveRenderer = new u.default(this),
                    this.styleMap.styles.select = new OpenLayers.Style({
                        strokeColor: "black",
                        strokeWidth: 10,
                        pointerEvents: "none"
                    }),
                    this.styleMap.styles.highlight = new OpenLayers.Style({
                        strokeWidth: 10,
                        strokeOpacity: 1
                    })
            },
            setMap: function(e) {
                OpenLayers.Layer.Vector.prototype.setMap.apply(this, arguments),
                    this.map.events.on({
                        zoomend: this.onZoomEnd,
                        scope: this
                    })
            },
            destroy: function() {
                OpenLayers.Layer.Vector.prototype.destroy.apply(this, arguments),
                    this.map && this.map.events.un({
                        zoomend: this.onZoomEnd
                    })
            },
            onZoomEnd: function() {
                this.redraw()
            },
            drawDrive: function() {
                this.clearDrive();
                var e = this.pm.currentSessionData;
                e && e.driveParts.forEach(function(e) {
                    e.isMatched() ? this.driveRenderer.drawUserDrive(e.geometry) : this.driveRenderer.drawDisconnect(e.geometry)
                }, this)
            },
            clearDrive: function() {
                this.removeAllFeatures()
            },
            zoomToDrive: function() {
                var e = this.pm.currentSessionData;
                if (e) {
                    var t = e.getDriveBounds(),
                        i = this.map.getZoomForExtent(t);
                    this.map.setCenter(t.getCenterLonLat(), i)
                }
            },
            redraw: function() {
                this.pm && this.drawDrive()
            },
            CLASS_NAME: "Waze.Layer.ArchiveLayer"
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-drivee7f57df07fa6d5f61eee9b71ae5e18b1.png"
}, function(e, t, i) {
    e.exports = i.p + "img/problem-pinA1d99ad1e8cd947bcea5969fff69d2eb8.png"
}, function(e, t, i) {
    e.exports = i.p + "img/problem-pinBafa0a6c37d9eba8278e82a3a97088206.png"
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-routed9aa340910f8fc7a0fd2285fa0aab968.png"
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./big_direction_end.png": 827,
        "./big_direction_exit_left.png": 828,
        "./big_direction_exit_right.png": 829,
        "./big_direction_forward.png": 830,
        "./big_direction_left.png": 831,
        "./big_direction_right.png": 832,
        "./big_direction_u.png": 833,
        "./big_directions_roundabout.png": 834,
        "./big_directions_roundabout_UK.png": 835,
        "./big_directions_roundabout_UK_l.png": 836,
        "./big_directions_roundabout_UK_s.png": 837,
        "./big_directions_roundabout_l.png": 838,
        "./big_directions_roundabout_r.png": 839,
        "./big_directions_roundabout_r_UK.png": 840,
        "./big_directions_roundabout_s.png": 841,
        "./big_directions_roundabout_u.png": 842,
        "./big_directions_roundabout_u_UK.png": 843,
        "./unknown.png": 844
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 826
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_end25226c71aed0efd3a2db41978066febc.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_exit_left1c1498a6dec9582bae81d34ec9e6dc3b.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_exit_rightba4fee1380f556a8570252c6745f1442.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_forwardc0958c4d4c5c79bcb656d34f3afb3ea2.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_left5b94fa33f945d46ab1bdd1131ac0457e.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_right2d403871f04763260a40c537e231897e.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_u63cf785b68a57e8663020098cd07ed76.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout9f9bf37022d431be50fecc457cd6e3df.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_UK7dce607d7359326a799fd9d3ad8542aa.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_UK_ldc86a0b99cfcd4ed03b0192d5b350c70.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_UK_s01ea5c47f4e08b20532505d84b3271e0.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_l54dc48b91e36549b26bae30135462780.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_rc114740b6cafc42177a53aa6c803c14d.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_r_UKc34794c4d01ec8a9fa012150d2f1e02a.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_sffadf4fd7b277b8ef2f21688e79b9351.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_u3634283a7d740f30eb18c203f6a357be.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_u_UKba204c8a12885976f9bc5b07165b8644.png"
}, function(e, t, i) {
    e.exports = i.p + "img/unknownb34dd18530431d8e3b14a4750cbe4352.png"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(129),
        r = n(s),
        a = i(54),
        o = n(a),
        l = OL.Class(r.default, {
            fogOfWar: null,
            renderers: [o.default],
            styleMap: new OL.StyleMap({
                default: new OL.Style({
                    fillOpacity: .3,
                    strokeOpacity: 1,
                    strokeWidth: 6,
                    fillColor: "white"
                })
            }),
            setMap: function() {
                r.default.prototype.setMap.apply(this, arguments)
            },
            setVisibility: function() {
                r.default.prototype.setVisibility.apply(this, arguments),
                    this.getVisibility() ? (this.map.events.register("moveend", this, this._refreshFogOfWar),
                        this._updateUserAreas()) : this.map.events.unregister("moveend", this, this._refreshFogOfWar)
            },
            _refreshFogOfWar: function() {
                this.removeFeatures(this.fogOfWar),
                    this._createFogOfWar(),
                    this.addFeatures(this.fogOfWar),
                    this.redraw()
            },
            onFeaturesAdded: function() {
                this._updateUserAreas()
            },
            _updateUserAreas: function() {
                if (this.removeAllFeatures(),
                    this.getVisibility()) {
                    var e = [];
                    this.model.userAreas.getObjectArray().forEach(function(t) {
                            this._createEditableAreaVector(e, t.geometry)
                        }, this),
                        this._createFogOfWar(),
                        this.addFeatures(e),
                        this.addFeatures(this.fogOfWar)
                }
            },
            _createEditableAreaVector: function(e, t) {
                e.push(new OL.Feature.Vector(t, {}, {
                        maskID: "editableAreaMask",
                        fillColor: "#000000",
                        fillOpacity: 1
                    })),
                    e.push(new OL.Feature.Vector(t.clone(), {}, {
                        fillColor: "transparent",
                        fillOpacity: 0,
                        strokeColor: "gray",
                        strokeWidth: 1
                    }))
            },
            _createFogOfWar: function() {
                this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                    fillColor: "black",
                    fillOpacity: .5,
                    strokeWidth: 0,
                    mask: "url(#editableAreaMask)"
                })
            },
            CLASS_NAME: "Waze.Layer.UserLayer"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(25),
        a = OpenLayers.Class(OpenLayers.Layer.XYZ, {
            key: null,
            tileUrl: "https://www.googleapis.com/tile/v1/tiles/${z}/${x}/${y}?session=${session}&key=${key}",
            type: "satellite",
            language: "en-US",
            region: "us",
            sessionKey: null,
            gettingSession: !1,
            sessionError: !1,
            attributionRequest: null,
            ATTRIBUTION_THROTTLE: 1e3,
            initialize: function(e) {
                (0,
                    s.default)(e, {
                    sphericalMercator: !0
                }, e);
                var t = e.name || "Google " + (e.type || this.type),
                    i = [t, null, e];
                OpenLayers.Layer.XYZ.prototype.initialize.apply(this, i),
                    this.tileOptions = (0,
                        s.default)({
                        crossOriginKeyword: null
                    }, this.options.tileOptions),
                    this.getSessionKey(),
                    this.updateAttribution = _.debounce(this.updateAttribution, this.ATTRIBUTION_THROTTLE)
            },
            getSessionKey: function() {
                var e = this;
                if (!this.gettingSession && !this.sessionError) {
                    var t = this;
                    this.gettingSession = !0,
                        (0,
                            r.httpPost)("https://www.googleapis.com/tile/v1/createSession?key=" + this.key, {
                            mapType: this.type,
                            language: this.language,
                            region: this.region
                        }, {
                            dataType: "json"
                        }).then(function(i) {
                            e.sessionKey = i.session,
                                window.setTimeout(t.onSessionExpire.bind(e), 72e6),
                                t.redraw(),
                                t.updateAttribution()
                        }).catch(function() {
                            t.sessionError = !0,
                                t.events.triggerEvent("loaderror")
                        }).finally(function() {
                            t.gettingSession = !1
                        })
                }
            },
            onSessionExpire: function() {
                this.map.events.register("movestart", this, this.renewSessionKey)
            },
            renewSessionKey: function() {
                this.map.events.unregister("movestart", this, this.renewSessionKey),
                    this.sessionKey = null,
                    this.getSessionKey()
            },
            getURL: function(e) {
                if (this.sessionKey) {
                    var t = this.getXYZ(e);
                    return t.session = this.sessionKey,
                        t.key = this.key,
                        OpenLayers.String.format(this.tileUrl, t)
                }
            },
            updateAttribution: function() {
                if (null !== this.sessionKey) {
                    null !== this.attributionRequest && this.attributionRequest.abort();
                    var e = this.map.getExtent(),
                        t = this;
                    null !== e && (e.transform(this.map.getProjectionObject(), new OpenLayers.Projection("EPSG:4326")),
                        this.attributionRequest = (0,
                            r.httpGet)("https://www.googleapis.com/tile/v1/viewport", {
                            key: this.key,
                            session: this.sessionKey,
                            zoom: this.getServerZoom(),
                            north: e.top,
                            south: e.bottom,
                            east: e.right,
                            west: e.left
                        }).then(function(e) {
                            t.attribution = "<a href='http://www.google.com/intl/en-US_US/help/terms_maps.html' target='_blank'  class='waze-black-link'>Terms</a>\n           <a href='https://www.waze.com/legal/notices' target='_blank' class='waze-black-link'>Notices</a>\n           <span>" + e.copyright + "</span>"
                        }).catch(function() {
                            t.attribution = ""
                        }).finally(function() {
                            t.attributionRequest = null,
                                t.map.events.triggerEvent("changelayer", {
                                    layer: t,
                                    property: "attribution"
                                })
                        }))
                }
            },
            setMap: function() {
                OpenLayers.Layer.XYZ.prototype.setMap.apply(this, arguments),
                    this.updateAttribution(),
                    this.map.events.register("moveend", this, this.updateAttribution)
            },
            clone: function(e) {
                return null === e && (e = new OpenLayers.Layer.Google(this.options)),
                    e = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [e])
            },
            destroy: function() {
                this.map && this.map.events.unregister("moveend", this, this.updateAttribution),
                    OpenLayers.Layer.XYZ.prototype.destroy.apply(this, arguments)
            },
            CLASS_NAME: "OpenLayers.Layer.Google"
        });
    t.default = a,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class(OL.Layer, {
        $div: null,
        isFixed: !0,
        setMap: function() {
            OL.Layer.prototype.setMap.apply(this, arguments),
                this.$div = $(this.div),
                this.$div.addClass("satellite-overlay")
        },
        CLASS_NAME: "W.Layer.AerialOverlayLayer"
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(259),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            initialize: function(e) {
                s.default.prototype.initialize.apply(this, arguments)
            },
            render: function() {
                if (s.default.prototype.render.apply(this, arguments),
                    this.icon.$div.addClass("user-generated"),
                    this.model.attributes.hasComments)
                    return this.icon.$div.addClass("has-comments")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(26),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new s.default("place-update"),
                    i = this._getLocation();
                OL.Marker.prototype.initialize.call(this, i, t),
                    this.render(),
                    this.icon.$div.data("model", this.model),
                    this.icon.$div.attr("data-id", this.model.getID())
            },
            render: function() {
                var e = this.icon.$div,
                    t = e.hasClass("selected");
                return e.removeClass(),
                    e.addClass("place-update"),
                    this._hasMultipleUpdates() ? (e.addClass("multiple"),
                        e.attr("data-update-count", this._getUpdateCount())) : e.addClass(this._getUpdateType()),
                    this.model.hasOpenUpdateRequests() || e.addClass("approved"),
                    t && e.addClass("selected"),
                    e.addClass(this._getSeverity()),
                    this._reposition(this._getLocation())
            },
            _reposition: function(e) {
                if (!e.equals(this.lonlat))
                    return this.lonlat = e,
                        this.moveTo(this.map.getLayerPxFromLonLat(this.lonlat))
            },
            _getLocation: function() {
                return this.model.geometry.getBounds().getCenterLonLat()
            },
            _hasMultipleUpdates: function() {
                return this.model.attributes.venueUpdateRequests.length > 1
            },
            _getUpdateCount: function() {
                return this.model.attributes.venueUpdateRequests.length
            },
            _getUpdateType: function() {
                return this.model.attributes.venueUpdateRequests[0].get("updateType").toLowerCase()
            },
            _getSeverity: function() {
                return this.model.attributes.venueUpdateRequests[0].getSeverity()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(26),
        r = n(s),
        a = i(10),
        o = n(a),
        l = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new r.default("road-closure"),
                    i = this._getCenter();
                OL.Marker.prototype.initialize.call(this, i.lonlat, t),
                    this.icon.$div.data("model", this.model),
                    this._createArrow(i.angle).appendTo(this.icon.$div),
                    this.render()
            },
            _createArrow: function(e) {
                var t = 360 - o.default.radToDeg(e),
                    i = "forward";
                return this.model.forward || (t -= 180,
                        i = "backward"),
                    this.arrow = $("<div>").addClass("arrow").addClass(i).css({
                        transform: "rotate(" + t + "deg)"
                    }),
                    this.arrow
            },
            _getCenter: function() {
                var e = this.model.geometry.getLength(),
                    t = o.default.getPointAlongLine(this.model.geometry.getVertices(), e / 2),
                    i = t.point;
                return {
                    angle: t.angle,
                    lonlat: new OL.LonLat(i.x, i.y)
                }
            },
            render: function() {
                return this.icon.$div.toggleClass("inactive", !this.model.active)
            },
            toggle: function(e) {
                return this.icon.$div.toggle(e)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = OL.Class(OL.Layer, {
            isBaseLayer: !1,
            markers: null,
            repo: null,
            drawn: !1,
            $div: null,
            className: null,
            markerClass: OL.Marker,
            filter: null,
            initialize: function(e, t, i) {
                OL.Layer.prototype.initialize.apply(this, [e, i]),
                    this.markers = {},
                    this.repo = t,
                    i.className && (this.className = i.className),
                    this._registerEvents()
            },
            destroy: function() {
                return this.clearMarkers(),
                    this.markers = null,
                    this._unregisterEvents(),
                    OL.Layer.prototype.destroy.apply(this, arguments)
            },
            _registerEvents: function() {
                return this.div.addEventListener("click", this._onDivClick.bind(this)),
                    this._registerRepoEvents()
            },
            _unregisterEvents: function() {
                return this.div.removeEventListener("click", this._onDivClick),
                    this._unregisterRepoEvents()
            },
            _registerRepoEvents: function() {
                var e = this;
                return this.repo.map(function(t) {
                    return t.on("objectsadded", e.onFeaturesAdded, e),
                        t.on("objectschanged", e.onFeaturesChanged, e),
                        t.on("objectsremoved", e.onFeaturesRemoved, e)
                })
            },
            _unregisterRepoEvents: function() {
                var e = this;
                return this.repo.map(function(t) {
                    return t.off("objectsadded", e.onFeaturesAdded, e),
                        t.off("objectschanged", e.onFeaturesChanged, e),
                        t.off("objectsremoved", e.onFeaturesRemoved, e)
                })
            },
            shouldAddFeature: function(e) {
                return !this.filter || this.filter(e)
            },
            onFeaturesAdded: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    if (this.shouldAddFeature(i)) {
                        var n = new this.markerClass(i);
                        this.addMarker(n, i.getID())
                    }
                }
            },
            onFeaturesChanged: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t],
                        n = this._findMarker(i);
                    null != n ? this.shouldAddFeature(i) ? (this.drawMarker(n),
                        n.render()) : this.removeMarker(n) : this.shouldAddFeature(i) && (n = new this.markerClass(i),
                        this.addMarker(n, i.getID()))
                }
            },
            _findMarker: function(e) {
                return this.markers[e.getID()] || this._findMarkerByOldID(e)
            },
            _findMarkerByOldID: function(e) {
                if (null != e._prevID) {
                    var t = this.markers[e._prevID];
                    if (null != t)
                        return t.id = e.getID(),
                            this.markers[t.id] = t,
                            delete this.markers[e._prevID],
                            t
                }
                return null
            },
            onFeaturesRemoved: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t],
                        n = this.markers[i.getID()];
                    null != n && this.removeMarker(n)
                }
            },
            setOpacity: function(e) {
                if (e !== this.opacity) {
                    this.opacity = e;
                    var t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                o.default)((0,
                                r.default)(this.markers)); !(t = (s = a.next()).done); t = !0) {
                            var l = s.value;
                            this.markers[l].setOpacity(this.opacity)
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && a.return && a.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
            },
            moveTo: function(e, t, i) {
                if (OL.Layer.prototype.moveTo.apply(this, arguments),
                    t || !this.drawn) {
                    var n = !0,
                        s = !1,
                        a = void 0;
                    try {
                        for (var l, u = (0,
                                o.default)((0,
                                r.default)(this.markers)); !(n = (l = u.next()).done); n = !0) {
                            var d = l.value,
                                c = this.markers[d];
                            this.drawMarker(c)
                        }
                    } catch (e) {
                        s = !0,
                            a = e
                    } finally {
                        try {
                            !n && u.return && u.return()
                        } finally {
                            if (s)
                                throw a
                        }
                    }
                    this.drawn = !0
                }
            },
            addMarker: function(e, t) {
                if (this.markers[t] = e,
                    e.id = t,
                    this.map && this.map.getExtent())
                    return e.map = this.map,
                        this.drawMarker(e)
            },
            getMarker: function(e) {
                return this.markers[e]
            },
            removeMarker: function(e) {
                if (this.markers)
                    return e.erase(),
                        delete this.markers[e.id]
            },
            clearMarkers: function() {
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            o.default)((0,
                            r.default)(this.markers)); !(e = (n = s.next()).done); e = !0) {
                        var a = n.value,
                            l = this.markers[a];
                        this.removeMarker(l)
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
            },
            drawMarker: function(e) {
                var t = this.map.getLayerPxFromLonLat(e.lonlat);
                if (null == t)
                    return e.display(!1);
                if (!e.isDrawn()) {
                    var i = e.draw(t);
                    return i.classList.add("map-marker"),
                        this.div.appendChild(i)
                }
                return e.icon ? e.icon.moveTo(t) : void 0
            },
            setMap: function() {
                if (OL.Layer.prototype.setMap.apply(this, arguments),
                    this.$div = $(this.div),
                    this.$div.addClass("marker-layer"),
                    this.className)
                    return this.$div.addClass(this.className)
            },
            getDataExtent: function() {
                var e = null;
                if (this.markers) {
                    e = new OL.Bounds;
                    var t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                o.default)((0,
                                r.default)(this.markers)); !(t = (s = a.next()).done); t = !0) {
                            var l = s.value,
                                u = this.markers[l];
                            e.extend(u.lonlat)
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && a.return && a.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
                return e
            },
            getContainer: function() {
                return this.div
            },
            _onDivClick: function(e) {
                if (e.target.classList.contains("map-marker"))
                    return this.events.triggerEvent("markerclick", e), !1
            },
            CLASS_NAME: "W.Layer.Markers"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class(OL.Layer.XYZ, {
        getURL: function(e) {
            var t = OL.Layer.XYZ.prototype.getURL.apply(this, arguments),
                i = OL.Util.getParameterString(this.params);
            return OL.Util.urlAppend(t, i)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(254),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = new OpenLayers.StyleMap({
            default: new OL.Style({
                externalGraphic: s.default,
                graphicYOffset: -53,
                graphicWidth: 37,
                graphicHeight: 53
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class(OL.Control, {
        googleAerialLayer: null,
        $div: null,
        $link: null,
        destroy: function() {
            return this.map.events.un({
                    changelayer: this.toggleVisibility,
                    scope: this
                }),
                OL.Control.prototype.destroy.apply(this, arguments)
        },
        draw: function() {
            return OL.Control.prototype.draw.apply(this, arguments),
                this.map.events.on({
                    changelayer: this.toggleVisibility,
                    scope: this
                }),
                this.$div = $(this.div).addClass("google-permalink"),
                this.$link = $("<a/>").attr({
                    target: "blank",
                    href: "http://maps.google.com"
                }).appendTo(this.$div),
                this.div
        },
        toggleVisibility: function() {
            var e = this.map.baseLayer,
                t = e && e.getVisibility();
            return this.$div.toggle(t)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(253),
        b = n(y),
        w = i(22),
        E = n(w),
        k = i(856),
        M = n(k),
        S = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "initialize",
                    value: function(e, t, i, n) {
                        this.map = e,
                            this.selectionManager = t,
                            this.app = i,
                            this.togglers = n,
                            this.urlParams = null,
                            this.mapLocation = null,
                            this.isMapLocationChanged = !1,
                            this.selectedProblem = null,
                            this.preselectedProblem = null,
                            this.mapSelection = {},
                            this.marker = !1,
                            this.locationsPerEnv = {},
                            this._restore(),
                            this.map.events.on({
                                moveend: this._onMapLocationChanged,
                                scope: this
                            }),
                            this.selectionManager.events.on({
                                selectionchanged: this._onSelectionChanged,
                                scope: this
                            }),
                            this.app.on("change:loggedIn", this._onUserChanged, this),
                            W.vent.on({
                                "problems:shown": this._onProblemShown,
                                "problems:closed": this._onProblemClosed
                            }, this),
                            this.togglers.on("change", this._triggerStateChanged, this)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.map.events.un({
                                moveend: this._onMapLocationChanged,
                                scope: this
                            }),
                            this.selectionManager.events.un({
                                selectionchanged: this._onSelectionChanged,
                                scope: this
                            }),
                            this.togglers.off("change", this._onTogglersChanged, this)
                    }
                }, {
                    key: "_onMapLocationChanged",
                    value: function() {
                        return this.updateMapLocation()
                    }
                }, {
                    key: "_onUserChanged",
                    value: function() {
                        if (this.app.get("loggedIn") && !this.isMapLocationChanged)
                            return this._setLocationToUserDrive(this.app.get("user"))
                    }
                }, {
                    key: "_setLocationToUserDrive",
                    value: function(e) {
                        var t = e.editableAreas ? e.editableAreas.components : [];
                        if (0 !== t.length) {
                            var i = t[0].getBounds(),
                                n = this.map.getZoomForExtent(i),
                                s = i.getCenterLonLat();
                            return s.zoom = n,
                                this.mapLocation = s,
                                this._setMapLocation()
                        }
                    }
                }, {
                    key: "_setLocalStorage",
                    value: function(e, t) {
                        if (!W.app.isSandboxMode())
                            return E.default.localStorage.set(e, t)
                    }
                }, {
                    key: "updateMapLocation",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : W.location.code,
                            i = this.map.getCenter(),
                            n = this.map.getZoom();
                        if (null != i)
                            return i.zoom = n,
                                this.mapLocation = i,
                                this.locationsPerEnv[e] = i,
                                this._setLocalStorage(t.LOCAL_STORAGE_MAP_LOCATION, this.locationsPerEnv),
                                this.isMapLocationChanged = !0,
                                this._triggerStateChanged(), !0
                    }
                }, {
                    key: "_getSelectedFeaturesByType",
                    value: function() {
                        var e = {};
                        return this.selectionManager.getSelectedFeatures().forEach(function(t) {
                                if (!t.model.isNew()) {
                                    var i = e[t.model.type + "s"] || [];
                                    e[t.model.type + "s"] = i,
                                        i.push(t.model.getID())
                                }
                            }),
                            this.selectedProblem && (e[this.selectedProblem.type] = this.selectedProblem.getID()),
                            e
                    }
                }, {
                    key: "_onSelectionChanged",
                    value: function(e) {
                        return this._updateMapSelection(), !0
                    }
                }, {
                    key: "_onProblemShown",
                    value: function(e) {
                        return this.selectedProblem = e,
                            this._updateMapSelection()
                    }
                }, {
                    key: "_onProblemClosed",
                    value: function() {
                        return this.selectedProblem = null,
                            this._updateMapSelection()
                    }
                }, {
                    key: "_updateMapSelection",
                    value: function() {
                        return this.mapSelection = this._getSelectedFeaturesByType(),
                            this._triggerStateChanged()
                    }
                }, {
                    key: "_triggerStateChanged",
                    value: function() {
                        return this.trigger("statechanged", {
                            center: this._getProjectedCenter(),
                            selection: this.mapSelection,
                            marker: this.marker,
                            s: this.togglers.serialize()
                        })
                    }
                }, {
                    key: "_getProjectedCenter",
                    value: function() {
                        var e = this.mapLocation.zoom,
                            t = this.mapLocation.clone();
                        return t.transform(this.map.getProjectionObject(), this.map.displayProjection),
                            t.zoom = e,
                            t
                    }
                }, {
                    key: "_isTogglerTreeParamPresent",
                    value: function() {
                        return null != this.urlParams.s && /^\d+$/.test(this.urlParams.s)
                    }
                }, {
                    key: "_restoreLayerVisibility",
                    value: function() {
                        var e = new M.default(this.urlParams);
                        this._isTogglerTreeParamPresent() ? this.togglers.setStateFromBitfield(this.urlParams.s) : e.isLayerParamPresent() ? this.togglers.setState(e.getTogglersState()) : this.togglers.readFromLocalStorage(),
                            this.togglers.writeStateToApp({
                                map: this.map,
                                dataModel: W.model
                            })
                    }
                }, {
                    key: "_restoreMapLocation",
                    value: function() {
                        this.locationsPerEnv = E.default.localStorage.get(t.LOCAL_STORAGE_MAP_LOCATION),
                            null == this.locationsPerEnv && (this.locationsPerEnv = {});
                        var e = this.locationsPerEnv[W.location.code];
                        if (this.urlParams.lat && this.urlParams.lon) {
                            var i = new OL.LonLat(parseFloat(this.urlParams.lon), parseFloat(this.urlParams.lat));
                            if (i.transform(this.map.displayProjection, this.map.getProjectionObject()),
                                this.urlParams.zoom) {
                                var n = parseFloat(this.urlParams.zoom);
                                i.zoom = n
                            }
                            this.mapLocation = i,
                                this.isMapLocationChanged = !0
                        } else if (null != e) {
                            var s = new OL.LonLat(e.lon, e.lat);
                            s.zoom = e.zoom,
                                this.mapLocation = s,
                                this.isMapLocationChanged = !0
                        }
                    }
                }, {
                    key: "_restoreMarker",
                    value: function() {
                        this.marker = this.urlParams.marker
                    }
                }, {
                    key: "_restoreSelection",
                    value: function() {
                        var e = this;
                        this.selectionManager.getSelectableRepos().forEach(function(t) {
                            var i = e.urlParams[t.name];
                            i && (i instanceof Array || (i = [i]),
                                e.mapSelection[t.name] = i)
                        })
                    }
                }, {
                    key: "_selectObjects",
                    value: function() {
                        if (W.model.events.unregister("mergeend", this, this._selectObjects),
                            this.mapSelection) {
                            var e = [],
                                t = !0,
                                i = !1,
                                n = void 0;
                            try {
                                for (var s, a = (0,
                                        o.default)((0,
                                        r.default)(this.mapSelection)); !(t = (s = a.next()).done); t = !0) {
                                    var l = s.value,
                                        u = this.mapSelection[l],
                                        d = W.model[l];
                                    if (u && d)
                                        for (var c = 0; c < u.length; c++) {
                                            var h = u[c],
                                                f = d.get(h);
                                            f && e.push(f)
                                        }
                                }
                            } catch (e) {
                                i = !0,
                                    n = e
                            } finally {
                                try {
                                    !t && a.return && a.return()
                                } finally {
                                    if (i)
                                        throw n
                                }
                            }
                            _.isEmpty(e) || this.selectionManager.setSelectedModels(e)
                        }
                        return this._selectProblem()
                    }
                }, {
                    key: "_restoreProblemSelection",
                    value: function() {
                        for (var e = [W.model.mapUpdateRequests, W.model.problems], t = 0; t < e.length; t++) {
                            var i = e[t],
                                n = i.objectType,
                                s = this.urlParams[n];
                            if (null != s)
                                return void(this.preselectedProblem = {
                                    repo: i,
                                    problemID: s
                                })
                        }
                    }
                }, {
                    key: "_selectProblem",
                    value: function() {
                        if (this.preselectedProblem) {
                            var e = this.preselectedProblem.repo.get(this.preselectedProblem.problemID);
                            e && W.commands.execute("problems:show", e)
                        }
                    }
                }, {
                    key: "_setupMap",
                    value: function() {
                        if (this._setMapLocation(),
                            this.marker) {
                            var e = new OL.Layer.Vector("PermalinkMarker", {
                                    styleMap: b.default.permalinkMarker
                                }),
                                t = void 0;
                            t = this.mapLocation ? this.mapLocation.clone() : this.map.getCenter();
                            var i = new OL.Geometry.Point(t.lon, t.lat),
                                n = new OL.Feature.Vector(i);
                            this.map.addLayer(e),
                                e.addFeatures(n)
                        }
                        return W.model.events.register("mergeend", this, this._selectObjects)
                    }
                }, {
                    key: "_setMapLocation",
                    value: function() {
                        if (this.mapLocation) {
                            var e = this.mapLocation.clone();
                            return this.map.setCenter(e, this.mapLocation.zoom)
                        }
                    }
                }, {
                    key: "_restore",
                    value: function() {
                        return this.urlParams = OL.Util.getParameters(window.location.href),
                            this._restoreMapLocation(),
                            this._restoreMarker(),
                            this._restoreSelection(),
                            this._restoreProblemSelection(),
                            this._restoreLayerVisibility(),
                            this._setupMap()
                    }
                }]),
                t
        }(Backbone.Model);
    _.extend(S, {
            LOCAL_STORAGE_MAP_LOCATION: "mapLocation"
        }),
        t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r, a = i(7),
        o = n(a),
        l = i(6),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(17),
        g = n(p),
        m = i(128),
        v = n(m),
        _ = i(179),
        y = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(_),
        b = i(89),
        w = n(b),
        E = v.default.LAYER_UNIQUE_NAMES,
        k = (s = {},
            (0,
                g.default)(s, E.SATELLITE_IMAGERY, y.ITEM_SATELLITE_IMAGERY),
            (0,
                g.default)(s, E.ROADS, y.ITEM_ROAD),
            (0,
                g.default)(s, E.GPS_POINTS, y.ITEM_GPS_POINTS),
            (0,
                g.default)(s, E.AREA_MANAGERS, y.ITEM_AREA_MANAGERS),
            (0,
                g.default)(s, E.LANDMARKS, y.ITEM_VENUES),
            (0,
                g.default)(s, E.SPEED_CAMERAS, y.ITEM_SPEED_CAMERAS),
            (0,
                g.default)(s, E.PROBLEMS, y.ITEM_MAP_PROBLEMS),
            (0,
                g.default)(s, E.UPDATE_REQUESTS, y.ITEM_UPDATE_REQUESTS),
            (0,
                g.default)(s, E.EDITABLE_AREAS, y.ITEM_EDITABLE_AREAS),
            (0,
                g.default)(s, E.LIVE_USERS, y.ITEM_LIVE_USERS),
            (0,
                g.default)(s, E.PLACE_UPDATES, y.ITEM_PLACE_UPDATE_REQUESTS),
            (0,
                g.default)(s, E.BIG_JUNCTIONS, y.ITEM_JUNCTION_BOXES),
            (0,
                g.default)(s, E.CLOSURES, y.ITEM_CLOSURES),
            s),
        M = (r = {},
            (0,
                g.default)(r, y.GROUP_ISSUES, !0),
            (0,
                g.default)(r, y.GROUP_MAP_ISSUES, !0),
            (0,
                g.default)(r, y.GROUP_PLACES, !0),
            (0,
                g.default)(r, y.GROUP_ROAD, !0),
            (0,
                g.default)(r, y.GROUP_DISPLAY, !0),
            r),
        S = function() {
            function e(t) {
                (0,
                    c.default)(this, e),
                this._urlParams = t
            }
            return (0,
                    f.default)(e, [{
                    key: "isLayerParamPresent",
                    value: function() {
                        return null != this._urlParams.layers && /^\d+$/.test(this._urlParams.layers)
                    }
                }, {
                    key: "getTogglersState",
                    value: function() {
                        var e = (0,
                                u.default)({}, M),
                            t = new w.default(this._urlParams.layers);
                        return (0,
                                o.default)(k).forEach(function(i) {
                                var n = v.default.layerVisibilityBitmask[i],
                                    s = 1 << n;
                                e[k[i]] = t.isEnabled(s)
                            }),
                            e
                    }
                }]),
                e
        }();
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(27),
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click a": "_onLocationLinkClicked",
                            "click .close": "_onCloseClicked"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._mapState = e.mapState,
                            this._location = e.location,
                            this._otherEnv = null,
                            this._dataModel.restrictedAreas.on(p.UPDATED, this._onRestrictedAreasChanged, this),
                            this._onRestrictedAreasChanged()
                    }
                }, {
                    key: "_onRestrictedAreasChanged",
                    value: function() {
                        var e = this,
                            t = this._dataModel.restrictedAreas.getInvalidEnvs();
                        t = _.filter(t, function(t) {
                                return t.attributes.env !== e._location.code
                            }),
                            t.length > 0 ? (this._otherEnv = t[0].attributes.env,
                                this.render(),
                                this.show()) : this.hide()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            otherEnv: this._otherEnv
                        }
                    }
                }, {
                    key: "_onLocationLinkClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = $(e.target).data("env");
                        this._mapState.updateMapLocation(t),
                            this._location.changeAndRemovePermalink(t)
                    }
                }, {
                    key: "_onCloseClicked",
                    value: function() {
                        this.hide(),
                            this._dataModel.restrictedAreas.off(p.UPDATED, this.onRestrictedAreasChanged, this)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.$el.hide()
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.$el.show()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/location-message"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        className: "snapshot-message",
        template: "templates/snapshot-message",
        events: {
            "click .return-to-edit-mode": "_onReturnToEditModeClicked"
        },
        initialize: function() {
            return this.snapshotManager = this.options.snapshotManager,
                this.listenTo(this.snapshotManager, "change:state", this.render)
        },
        onRender: function() {
            return this.$el.toggle(this.snapshotManager.isSnapshotOn())
        },
        _onReturnToEditModeClicked: function() {
            return this.snapshotManager.toggle(!1)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(127),
        s = i(260),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s),
        a = Backbone.Model.extend({
            defaults: function() {
                return {
                    env: null,
                    lon: null,
                    lat: null,
                    zoom: null,
                    marker: !1,
                    appState: {},
                    selection: {},
                    s: 0
                }
            },
            hrefAttributes: ["env", "lon", "lat", "s", "zoom", "marker"],
            initialize: function(e) {
                return this.app = e.app,
                    this.mapState = e.mapState,
                    this.location = e.location,
                    this._bindEvents(),
                    this._setAppState(),
                    this._setLocation(),
                    this
            },
            onDestroy: function() {
                return this._unbindEvents()
            },
            _bindEvents: function() {
                this.listenTo(this.app, "change:mode", this._setAppState),
                    this.listenTo(this.app, n.STATE_CHANGED, this._setAppState),
                    this.location.events.register("change", this, this._setLocation),
                    this.mapState.on("statechanged", this._setMapState, this)
            },
            _unbindEvents: function() {
                return this.location.events.unregister("change", this, this._setLocation),
                    this.mapState.off("statechanged", this._setMapState, this)
            },
            _setAppState: function() {
                this.set({
                    appState: this.app.getState()
                })
            },
            _setLocation: function() {
                this.set({
                    env: this.location.code
                })
            },
            _setMapState: function(e) {
                return this.set({
                    lon: e.center.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: e.center.lat.toFixed(W.Config.units.lonLatPrecision),
                    s: e.s,
                    zoom: e.center.zoom,
                    marker: !!e.marker || void 0,
                    selection: e.selection
                })
            },
            getHref: function() {
                var e = _.pick(this.attributes, this.hrefAttributes);
                _.extend(e, this.get("appState")),
                    _.extend(e, this.get("selection"));
                var t = OL.Util.getParameterString(e);
                return "" + window.location.origin + window.location.pathname + "?" + t
            }
        }),
        o = Marionette.View.extend({
            template: "Waze/Modules/MapControls/templates/permalink",
            mapState: null,
            marker: null,
            clipboard: null,
            ui: {
                permalink: ".permalink",
                livemapLink: ".livemap-link"
            },
            events: {
                "click @ui.permalink": "_onPermalinkClick",
                "mouseover @ui.permalink": "_onPermalinkMouseOver"
            },
            initialize: function(e) {
                return Marionette.View.prototype.initialize.apply(this, arguments),
                    this.mapState = e.mapState,
                    this.mapState.on("statechanged", this._setLivemapLink, this),
                    this.permalinkModel = new a({
                        app: e.app,
                        mapState: e.mapState,
                        location: e.location
                    }),
                    this.listenTo(this.permalinkModel, "change", this._setPermalinkLink),
                    this.clipboard = new r.default,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }), !0
            },
            _onPermalinkClick: function(e) {
                return e.stopPropagation(),
                    W.Report.generalAction("permalink_clicked")
            },
            _onPermalinkMouseOver: function(e) {
                return this.clipboard.set($(e.target).attr("href"))
            },
            _onClipboardCopied: function(e) {
                return this.ui.permalink.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.link_copied"))
            },
            _setPermalinkLink: function() {
                var e = this.permalinkModel.getHref();
                return this.ui.permalink.attr("href", e)
            },
            _setLivemapLink: function(e) {
                var t = e.center,
                    i = t.zoom + W.Config.livemap.zoom_offset;
                i = Math.min(W.Config.livemap.max_zoom, i);
                var n = $.param({
                    lon: t.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: t.lat.toFixed(W.Config.units.lonLatPrecision),
                    zoom: i
                });
                return this.ui.livemapLink.attr("href", W.Config.livemap.url + "?" + n)
            },
            onRender: function() {
                return this.ui.permalink.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.permalink)
            }
        });
    t.default = o,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(260),
        r = n(s),
        a = i(10),
        o = n(a),
        l = Marionette.View.extend({
            granularity: 10,
            numDigits: 5,
            lastXy: null,
            mouseOver: !1,
            clipboard: null,
            template: "Waze/Modules/MapControls/templates/mouse_position",
            ui: {
                mousePosition: ".mouse-position"
            },
            events: {
                "mouseover @ui.mousePosition": "_onMouseOver",
                "mouseout @ui.mousePosition": "_onMouseOut"
            },
            initialize: function(e) {
                return this.map = e.map,
                    this.map.events.register("mousemove", this, this._onMapMouseMove),
                    this.clipboard = new r.default,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }), !0
            },
            onDestroy: function() {
                return this.map.events.unregister("mousemove", this, this._onMapMouseMove),
                    this.clipboard.events.un({
                        copied: this._onClipboardCopied,
                        scope: this
                    })
            },
            onRender: function() {
                return this.ui.mousePosition.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.mousePosition)
            },
            _formatOutput: function(e) {
                var t = parseInt(this.numDigits, 10);
                return e.lon.toFixed(t) + " " + e.lat.toFixed(t)
            },
            _onMouseOver: function(e) {
                this.mouseOver = !0;
                var t = this.map.getExtent().getCenterLonLat();
                return o.default.unproject(t),
                    this._updateHtmlFromLonLat(t),
                    this.clipboard.set(this.ui.mousePosition.html())
            },
            _onMouseOut: function(e) {
                this.mouseOver = !1
            },
            _onClipboardCopied: function(e) {
                return this.ui.mousePosition.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.coords_copied"))
            },
            _updateHtmlFromLonLat: function(e) {
                var t = this._formatOutput(e);
                if (t !== this.ui.mousePosition.html())
                    return this.ui.mousePosition.html(t)
            },
            _onMapMouseMove: function(e) {
                if (null != e && !this.mouseOver) {
                    (null == this.lastXy || Math.abs(e.xy.x - this.lastXy.x) > this.granularity || Math.abs(e.xy.y - this.lastXy.y) > this.granularity) && (this.lastXy = e.xy);
                    var t = this.map.getLonLatFromPixel(e.xy);
                    if (null == t)
                        return;
                    o.default.unproject(t),
                        this._updateHtmlFromLonLat(t),
                        this.lastXy = e.xy
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(19),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Region.extend({
            el: "#panel-container",
            mapHeight: null,
            initialize: function(e) {
                return e.map.events.register("resize", this, this._onMapResize),
                    this._bindCloseButtons()
            },
            onShow: function(e, t) {
                return this._ensureElement(),
                    t.$el.addClass("panel"),
                    s.default.resolve().then(function() {
                        t.$el.addClass("show")
                    }),
                    this._setViewHeight()
            },
            _bindCloseButtons: function() {
                var e = this;
                return this.$el.on("click", ".close-panel, .done", function(t) {
                    return e.trigger("closeClicked"),
                        e.empty()
                })
            },
            _onMapResize: function(e) {
                return this.mapHeight = e.height,
                    this._setViewHeight()
            },
            _setViewHeight: function(e) {
                if (this.currentView && !this.currentView.isDestroyed()) {
                    var t = this.mapHeight;
                    t -= parseInt(this.currentView.$el.css("marginTop"), 10),
                        t -= parseInt(this.currentView.$el.css("marginBottom"), 10),
                        this.currentView.setMaxHeight && this.currentView.setMaxHeight(t)
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(54),
        u = n(l),
        d = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    r.default)(this, e),
                this._map = t,
                    this._options = i,
                    this._vectorLayer = null,
                    this._markerLayer = null,
                    this._styleMap = null,
                    this._map.events.register("zoomend", this, this._onMapZoomed)
            }
            return (0,
                    o.default)(e, [{
                    key: "destroy",
                    value: function() {
                        null !== this._vectorLayer && (this._map.removeLayer(this._vectorLayer),
                                this._vectorLayer.destroy()),
                            null !== this._markerLayer && (this._map.removeLayer(this._markerLayer),
                                this._markerLayer.destroy()),
                            this._map.events.unregister("zoomend", this, this._onMapZoomed)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this._getVectorLayer().addFeatures(e)
                    }
                }, {
                    key: "redrawFeature",
                    value: function(e) {
                        this._getVectorLayer().drawFeature(e)
                    }
                }, {
                    key: "addMarkers",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            t._getMarkerLayer().addMarker(e),
                                e.layer = t._getMarkerLayer()
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this.removeAllFeatures(),
                            this.removeAllMarkers()
                    }
                }, {
                    key: "removeAllMarkers",
                    value: function() {
                        if (null !== this._markerLayer && null !== this._markerLayer.markers) {
                            var e = this._markerLayer.markers.slice();
                            this._markerLayer.clearMarkers(),
                                e.forEach(function(e) {
                                    return e.destroy()
                                })
                        }
                    }
                }, {
                    key: "removeAllFeatures",
                    value: function() {
                        null !== this._vectorLayer && this._vectorLayer.removeAllFeatures()
                    }
                }, {
                    key: "setStyleMap",
                    value: function(e) {
                        this._styleMap = e,
                            null !== this._vectorLayer && (this._vectorLayer.styleMap = e)
                    }
                }, {
                    key: "moveLayerToTop",
                    value: function() {
                        this._map.moveLayerToTop(this._getVectorLayer()),
                            this._map.moveLayerToTop(this._getMarkerLayer())
                    }
                }, {
                    key: "_getVectorLayer",
                    value: function() {
                        return null === this._vectorLayer && this._initVectorLayer(),
                            this._vectorLayer
                    }
                }, {
                    key: "_getMarkerLayer",
                    value: function() {
                        return null === this._markerLayer && (this._markerLayer = new OL.Layer.Markers(_.uniqueId("marker_drawing_context_")),
                                this._map.addLayer(this._markerLayer)),
                            this._markerLayer
                    }
                }, {
                    key: "_initVectorLayer",
                    value: function() {
                        var e = {
                            styleMap: this._styleMap
                        };
                        this._options.extendedMode && (e.renderers = [u.default]),
                            this._vectorLayer = new OL.Layer.Vector(_.uniqueId("vector_drawing_context_"), e),
                            this._map.addLayer(this._vectorLayer)
                    }
                }, {
                    key: "_onMapZoomed",
                    value: function() {
                        this.trigger("zoomend")
                    }
                }, {
                    key: "pixelToMapUnits",
                    value: function(e) {
                        return this._map.getResolution() * e
                    }
                }, {
                    key: "mapUnitsToPixel",
                    value: function(e) {
                        return e / this._map.getResolution()
                    }
                }, {
                    key: "getMapZoom",
                    value: function() {
                        return this._map.getZoom()
                    }
                }, {
                    key: "getMapExtent",
                    value: function() {
                        return this._map.getExtent()
                    }
                }]),
                e
        }();
    _.extend(d.prototype, Backbone.Events),
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(864),
        g = n(p),
        m = i(865),
        v = n(m),
        _ = i(866),
        y = n(_),
        b = i(867),
        w = n(b),
        E = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "dblclick click mousedown dragstart": "_stopPropagation"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            streetViewRegion: ".street-view-region",
                            geoLocationRegion: ".geo-location-region",
                            zoomBarRegion: ".zoom-bar-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".overlay-buttons-container": {
                                observe: "visible",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._geoLocationProvider = v.default,
                            this._streetViewController = e.streetViewController,
                            this._map = e.map,
                            this.model = new Backbone.Model({
                                visible: !1
                            })
                    }
                }, {
                    key: "_stopPropagation",
                    value: function(e) {
                        e.stopPropagation()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("geoLocationRegion", new g.default({
                                geoLocationProvider: this._geoLocationProvider,
                                map: this._map
                            })),
                            this.showChildView("streetViewRegion", new w.default({
                                streetViewController: this._streetViewController,
                                map: this._map
                            })),
                            this.showChildView("zoomBarRegion", new y.default({
                                map: this._map
                            })),
                            this.stickit()
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.model.set({
                            visible: !1
                        })
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.model.set({
                            visible: !0
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MapControls/templates/overlay-buttons"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(10),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .pan-button": "_onPanClicked"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            panButton: ".pan-button",
                            loading: ".loading"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.geoLocationProvider = e.geoLocationProvider,
                            this.map = e.map
                    }
                }, {
                    key: "toggleGeoLocated",
                    value: function(e) {
                        return this.ui.panButton.toggleClass("geo-located", e)
                    }
                }, {
                    key: "toggleLoading",
                    value: function(e) {
                        return this.ui.loading.toggle(e),
                            this.ui.panButton.toggle(!e)
                    }
                }, {
                    key: "_onMapMoved",
                    value: function() {
                        return this.toggleGeoLocated(!1),
                            this.map.events.unregister("moveend", this, this._onMapMoved)
                    }
                }, {
                    key: "_onPanClicked",
                    value: function() {
                        var e = this;
                        return this.toggleLoading(!0),
                            this.geoLocationProvider.getLonLat(1e4).then(function(t) {
                                return t = t.clone(),
                                    g.default.project(t),
                                    e.map.setCenter(t),
                                    e.map.events.register("moveend", e, e._onMapMoved),
                                    e.toggleGeoLocated(!0)
                            }).catch(function(e) {
                                console.error("Error getting location", e)
                            }).finally(function() {
                                return e.toggleLoading(!1)
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        return this.toggleLoading(!1),
                            this.ui.panButton.tooltip({
                                title: I18n.t("geolocation.tooltip"),
                                placement: "left",
                                container: "body",
                                delay: {
                                    show: 750
                                }
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/GeoLocation/templates/pan_button"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e() {
                (0,
                    o.default)(this, e),
                this._cachedLonLat = null
            }
            return (0,
                    u.default)(e, [{
                    key: "getLonLat",
                    value: function(e) {
                        var t = this;
                        return new r.default(function(i, n) {
                            null !== t._cachedLonLat ? i(t._cachedLonLat) : (t._getLonLatFromBrowser(e, i, n),
                                window.setTimeout(function() {
                                    return t._onTimeoutExpired(i, n)
                                }, e))
                        })
                    }
                }, {
                    key: "_getLonLatFromBrowser",
                    value: function(e, t, i) {
                        var n = this;
                        return window.navigator.geolocation.getCurrentPosition(function(e) {
                            return n._onGetPostionSuccess(e, t)
                        }, function(e) {
                            return n._onGetPositionError(e, i)
                        }, {
                            timeout: e
                        })
                    }
                }, {
                    key: "_onGetPostionSuccess",
                    value: function(e, t) {
                        var i = e.coords;
                        return this._cachedLonLat = new OL.LonLat(i.longitude, i.latitude),
                            t(this._cachedLonLat)
                    }
                }, {
                    key: "_onGetPositionError",
                    value: function(e, t) {
                        return t({
                            code: e.code
                        })
                    }
                }, {
                    key: "_onTimeoutExpired",
                    value: function(t, i) {
                        i({
                            code: e.ERROR_CODES.USER_TIMEOUT
                        })
                    }
                }]),
                e
        }();
    d.ERROR_CODES = {
            PERMISSION_DENIED: 1,
            POSITION_UNAVAILABLE: 2,
            TIMEOUT: 3,
            USER_TIMEOUT: 4
        },
        t.default = new d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        get template() {
            return "Waze/Modules/MapControls/templates/zoombar"
        },
        events: {
            "click .zoom-plus-button": "_onPlusClicked",
            "click .zoom-minus-button": "_onMinusClicked"
        },
        initialize: function(e) {
            this._map = e.map
        },
        _onPlusClicked: function() {
            this._map.zoomIn()
        },
        _onMinusClicked: function() {
            this._map.zoomOut()
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(868),
        g = n(p),
        m = i(10),
        v = n(m),
        y = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mousedown .street-view-control": "_onStreetViewControlMouseDown"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".street-view-control": {
                                observe: "visible",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._streetViewController = e.streetViewController,
                            this.scene = this._streetViewController.getScene(),
                            this.map = e.map,
                            this.model = new Backbone.Model({
                                visible: !0
                            }),
                            this._bindEvents(),
                            this._setupMap()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this.listenTo(this.scene, "change:cameraLongLat", this._onSceneCameraPositionChanged.bind(this)),
                            this.listenTo(this.scene, "change:cameraHeading", this._onCameraHeadingChanged.bind(this)),
                            this.listenTo(this._streetViewController, "stateChanged", this._onStateChanged.bind(this))
                    }
                }, {
                    key: "_unbindEvents",
                    value: function() {
                        this.map.events.unregister("moveend", this, this._onMoveEnd)
                    }
                }, {
                    key: "_onStateChanged",
                    value: function(e) {
                        e ? this._onSVActivated() : this._onSVDeactivated()
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        e ? this._onSVActivated() : this._onSVDeactivated()
                    }
                }, {
                    key: "_onSVActivated",
                    value: function() {
                        this._toggleButtonAndPin(!1)
                    }
                }, {
                    key: "_onSVDeactivated",
                    value: function() {
                        this._toggleButtonAndPin(!0)
                    }
                }, {
                    key: "_onSceneCameraPositionChanged",
                    value: function(e, t) {
                        this.pin.setCrosshairLonlat(t),
                            this.pin.setPanoAvailable(!0)
                    }
                }, {
                    key: "_onCameraHeadingChanged",
                    value: function(e, t) {
                        this.pin.setCrosshairAngle(t)
                    }
                }, {
                    key: "_setupMap",
                    value: function() {
                        this.markerLayer = new OL.Layer.Markers("streetViewPin"),
                            this.map.addLayer(this.markerLayer),
                            this.pin = new g.default(this.map.getCenter() || new OL.LonLat(0, 0), this.map),
                            this.pin.toggleVisibility(!1),
                            this.markerLayer.addMarker(this.pin),
                            this.pin.layer = this.markerLayer,
                            this.markerLayer.div.classList.add("street-view-layer");
                        var e = _.throttle(this._onPinDrag, 200);
                        this.pin.events.on({
                                dragStart: function() {
                                    this._toggleButtonAndPin(!1)
                                },
                                drag: function(t) {
                                    return e.call(this, t)
                                },
                                dragCancel: function(e) {
                                    this._streetViewController.isActive() || this._toggleButtonAndPin(!0)
                                },
                                dragDone: this._onPinDragDone,
                                scope: this
                            }),
                            this.map.events.register("moveend", this, this._onMoveEnd)
                    }
                }, {
                    key: "_onMoveEnd",
                    value: function() {
                        var e = this.map.getExtent().containsLonLat(this.pin.lonlat);
                        this._streetViewController.isActive() && (e ? this._toggleButtonAndPin(!1) : this._toggleButtonAndPin(!0))
                    }
                }, {
                    key: "_onPinDrag",
                    value: function(e) {
                        var t = this;
                        return this._streetViewController.getPanorama(e.svLonlat.clone(), this._getAvailabilityRadius()).then(function(e) {
                            return t.pin.setPanoAvailable(Boolean(e))
                        })
                    }
                }, {
                    key: "_onPinDragDone",
                    value: function(e) {
                        var t = this,
                            i = v.default.unproject(this.pin.lonlat.clone());
                        this._streetViewController.getPanorama(i, this._getAvailabilityRadius()).then(function(e) {
                            e ? t._streetViewController.lookAtCurrentItem(e) : t._handleNoPanorama()
                        }).catch(function() {
                            t._handleNoPanorama()
                        })
                    }
                }, {
                    key: "_handleNoPanorama",
                    value: function() {
                        var e = this._streetViewController.getCurrentCameraLonLat();
                        this._streetViewController.isActive() && e ? (this.pin.setCrosshairLonlat(e.clone()),
                            this.pin.setPanoAvailable(!0)) : this._toggleButtonAndPin(!0)
                    }
                }, {
                    key: "_onStreetViewControlMouseDown",
                    value: function() {
                        return this.pin.setCrosshairLonlat(new OL.LonLat(0, 0)),
                            this.pin.setPanoAvailable(!1),
                            this.pin.dragging.forceStart(!0), !1
                    }
                }, {
                    key: "_getAvailabilityRadius",
                    value: function() {
                        return this.pin.getGeodesicCrosshairRadius()
                    }
                }, {
                    key: "_toggleButtonAndPin",
                    value: function(e) {
                        e ? (this._showButton(),
                            this.pin.toggleVisibility(!1)) : (this._hideButton(),
                            this.pin.toggleVisibility(!0))
                    }
                }, {
                    key: "_hideButton",
                    value: function() {
                        this.model.set({
                            visible: !1
                        })
                    }
                }, {
                    key: "_showButton",
                    value: function() {
                        this.model.set({
                            visible: !0
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$el.tooltip({
                                title: I18n.t("street_view.tooltip"),
                                placement: "left",
                                container: "body",
                                delay: {
                                    show: 750
                                }
                            }),
                            this.stickit()
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this._unbindEvents()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/StreetView/templates/street-view-button"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(26),
        r = n(s),
        a = i(97),
        o = n(a),
        l = OL.Class(OL.Marker, {
            DRAG_POINT_RADIUS: 7,
            CROSSHAIR_RADIUS: 22,
            initialize: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                OL.Marker.prototype.initialize.call(this, e, new r.default("pin", !0));
                var n = (this.CROSSHAIR_RADIUS + this.DRAG_POINT_RADIUS) / Math.sqrt(2);
                this.crossHairOffset = new OL.Pixel(-n, -n),
                    this.svProjection = new OpenLayers.Projection("EPSG:4326"),
                    this.map = i,
                    this.render();
                var s = this.icon.$div;
                this.dragging = new o.default(this.map),
                    this.moved = !1,
                    this.dragging.down = function(e) {
                        return t.moved = !1,
                            s.addClass("dragging"),
                            t.events.triggerEvent("dragStart", {
                                xy: e.xy,
                                marker: t
                            })
                    },
                    this.dragging.force = function(e) {
                        return t.moved = !1,
                            s.addClass("dragging"),
                            t.events.triggerEvent("dragStart", {
                                marker: t
                            })
                    },
                    this.dragging.move = function(e) {
                        t.moved = !0,
                            t.lonlat = t.map.getLonLatFromViewPortPx(e.xy.offset(t.crossHairOffset));
                        var i = t.lonlat.clone().transform(t.map.getProjectionObject(), t.svProjection);
                        return t.layer.drawMarker(t),
                            t.events.triggerEvent("drag", {
                                xy: e.xy,
                                marker: t,
                                svLonlat: i
                            })
                    },
                    this.dragging.up = function(e) {
                        t.moved || (s.removeClass("dragging"),
                            t.events.triggerEvent("dragCancel", {}))
                    },
                    this.dragging.done = function(e) {
                        if (t.moved)
                            return t.icon.$div.removeClass("dragging"),
                                t.events.triggerEvent("dragDone", {
                                    xy: e.xy,
                                    marker: t
                                })
                    },
                    this.dragging.activate(this.dragHandle)
            },
            render: function() {
                this.crossHair = $("<div />").addClass("crosshair").appendTo(this.icon.$div),
                    this.dragHandle = $("<div />").addClass("drag-handle").appendTo(this.icon.$div),
                    this.arrow = $("<div/>").append($("<i/>").addClass("fa fa-arrow-up arrow")).appendTo(this.crossHair)
            },
            setPanoAvailable: function(e) {
                return this.icon.$div.toggleClass("pano-available", e)
            },
            setCrosshairAngle: function(e) {
                return this.arrow.css({
                    transform: "rotate(" + e + "deg)"
                })
            },
            setCrosshairLonlat: function(e) {
                return this.lonlat = e.clone().transform(this.svProjection, this.map.getProjectionObject()),
                    this.layer.drawMarker(this)
            },
            toggleVisibility: function(e) {
                return this.icon.display(e)
            },
            getGeodesicCrosshairRadius: function() {
                return this.CROSSHAIR_RADIUS * this.map.getGeodesicPixelSize().h * 1e3
            },
            getCrosshairRadius: function() {
                return this.CROSSHAIR_RADIUS * this.map.resolution
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            NotConnected: 0,
            FirstConnection: 1,
            Reconnection: 2
        },
        s = Backbone.Model.extend({
            socket: null,
            displayProjection: new OpenLayers.Projection("EPSG:4326"),
            initialize: function(e) {
                var t = e.app,
                    i = void 0 === t ? null : t,
                    s = e.authCookieName,
                    r = void 0 === s ? "" : s;
                this._app = i,
                    this._authCookieName = r,
                    this._mode = n.NotConnected,
                    this._app.on("change:loggedIn", this._onLoginChanged, this)
            },
            _onLoginChanged: function() {
                if (this._app.get("loggedIn"))
                    return this.activate()
            },
            activate: function() {
                var e = this;
                if (null == this.socket) {
                    var t = {},
                        i = void 0;
                    try {
                        i = $.cookie(this._authCookieName)
                    } catch (e) {
                        console.error("Marx error reading cookie", e)
                    }
                    t.sessionId = i;
                    var s = W.Config.marx.server + "/chat?" + $.param(t);
                    return this.socket = io.connect(s, {
                            "try multiple transports": !1
                        }),
                        this.socket.on("connect", function() {
                            return e._mode === n.NotConnected ? (e._mode = n.FirstConnection,
                                e.trigger("firstConnect")) : (e._mode = n.Reconnection,
                                e.trigger("reconnect"))
                        }),
                        this.socket.on("disconnect", function() {
                            return e.trigger("disconnect")
                        })
                }
            },
            CLASS_NAME: "Waze.Model.Marx"
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(871),
        u = n(l),
        d = i(872),
        c = n(d),
        h = i(880),
        f = n(h),
        p = i(265),
        g = n(p),
        m = function() {
            function e(t) {
                return (0,
                        r.default)(this, e),
                    this.mediator = t.mediator,
                    this.map = t.map,
                    this.mapLayer = t.mapLayer,
                    this.streetViewController = t.streetViewController,
                    this.pannable = this.map.getPannable(),
                    this.layer = new u.default({
                        $el: this.mapLayer.$div,
                        mediator: t.mediator
                    }),
                    W.commands.setHandler("place_updates:list", this._showVenue.bind(this)),
                    W.reqres.setHandler("updaterequests:browse", this._browseUpdateRequest.bind(this))
            }
            return (0,
                    o.default)(e, [{
                    key: "_showVenue",
                    value: function(e) {
                        var t = {
                            venue: e,
                            venueIterator: function() {
                                var t = e.model.venues.getObjectArray(),
                                    i = new f.default(t);
                                return i.sortByDistanceFrom(e),
                                    i
                            }
                        };
                        return this._createBrowser(t).show()
                    }
                }, {
                    key: "_browseUpdateRequest",
                    value: function(e) {
                        var t = e.updateRequest.get("place");
                        e = {
                            venue: t,
                            updateRequests: [e.updateRequest],
                            showNext: e.showNext,
                            nextButtonString: e.nextButtonString,
                            venueIterator: function() {
                                return new f.default([t])
                            }
                        };
                        var i = this._createBrowser(e);
                        i.show(),
                            this._showLayers(t);
                        var n = new g.default;
                        return i.on("nextClicked", function() {
                                return n.next()
                            }),
                            n
                    }
                }, {
                    key: "_createBrowser",
                    value: function(e) {
                        var t = this;
                        _.defaults(e, {
                            showDebug: this.mediator.get("advancedTools"),
                            pannable: this.pannable,
                            streetViewController: this.streetViewController
                        });
                        var i = new c.default(e);
                        return i.on("close", function() {
                                return t.layer.unhighlightAllMarkers()
                            }),
                            i.on("show", function(e) {
                                return t.layer.highlightMarker(e)
                            }),
                            i
                    }
                }, {
                    key: "_showLayers",
                    value: function(e) {
                        return this.map.showLayerByObjectType(e.type),
                            this.mapLayer.setVisibility(!0)
                    }
                }]),
                e
        }();
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        initialize: function(e) {
            this.mediator = e.mediator,
                this.setElement(e.$el)
        },
        events: {
            "click .place-update": "_onMarkerClicked"
        },
        _onMarkerClicked: function(e) {
            if (this.mediator.get("editingEnabled")) {
                var t = $(e.target).data("model");
                return W.commands.execute("place_updates:list", t)
            }
        },
        _findMarkerByVenueId: function(e) {
            return this.$el.find("[data-id='" + e + "']")
        },
        highlightMarker: function(e) {
            this.$el.addClass("highlight-selected");
            var t = this._findMarkerByVenueId(e.getID());
            return t.addClass("selected"),
                this._moveToTop(t)
        },
        _moveToTop: function(e) {
            return e.detach().appendTo(this.$el)
        },
        unhighlightAllMarkers: function() {
            return this.$el.removeClass("highlight-selected"),
                this.$el.find(".place-update").removeClass("selected")
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(873),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Object.extend({
            _nextVenue: null,
            initialize: function(e) {
                return this.venue = e.venue,
                    this.pannable = e.pannable,
                    this.streetViewController = e.streetViewController,
                    this.dataModel = this.venue.model,
                    this._generateIterator(),
                    this.dataModel.events.register("mergeend", this, this._onVenuesChanged)
            },
            _generateIterator: function() {
                this.iterator = new this.options.venueIterator
            },
            show: function() {
                var e = this;
                this._getNextVenue();
                var t = new s.default({
                    model: this.venue,
                    nextVenue: this._nextVenue,
                    updateRequests: this.options.updateRequests,
                    showNext: this.options.showNext,
                    showDebug: this.options.showDebug,
                    nextButtonString: this.options.nextButtonString,
                    streetViewController: this.streetViewController
                });
                return t.on("showNextVenueClicked", this._onNextVenueClicked.bind(this)),
                    t.on("nextClicked", this._onNextClicked.bind(this)),
                    t.on("destroy", this._close, this),
                    t.on("focusClicked", function() {
                        return e._focusVenue(W.Config.place_updates.focusZoom)
                    }),
                    t.on("streetViewClicked", function() {
                        e._streetViewVenue()
                    }),
                    W.map.panelRegion.show(t),
                    this._focusVenue(),
                    this.trigger("show", this.venue)
            },
            _onVenuesChanged: function() {
                return this._generateIterator(),
                    this._getNextVenue()
            },
            _onNextVenueClicked: function() {
                return this.venue = this._nextVenue,
                    this.show()
            },
            _onNextClicked: function() {
                return this.trigger("nextClicked")
            },
            _close: function() {
                return this.dataModel.events.unregister("mergeend", this, this._onVenuesChanged),
                    this.trigger("close")
            },
            _getNextVenue: function() {
                this._nextVenue = this.iterator.getNext(),
                    null !== this._nextVenue && this._nextVenue.getID() === this.venue.getID() && (this._nextVenue = this.iterator.getNext())
            },
            _focusVenue: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.pannable.getZoom();
                this.pannable.panTo(this.venue.geometry.getBounds().getCenterLonLat(), e),
                    W.Report.focusAction("locate", "pu_locate_clicked")
            },
            _streetViewVenue: function() {
                this.streetViewController.lookAtPlace(this.venue),
                    W.Report.focusAction("streetview", "pu_streetview_clicked")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(261),
        r = n(s),
        a = i(879),
        o = n(a),
        l = i(27),
        u = Marionette.View.extend({
            template: "templates/place_updates/layout",
            regions: {
                placeUpdate: ".place-update"
            },
            events: {
                "click .next": "_onNextClicked"
            },
            triggers: {
                "click .next-venue": "showNextVenueClicked"
            },
            ui: {
                navigation: ".navigation"
            },
            className: "place-update-edit",
            currentIndex: 0,
            dataModel: null,
            maxHeight: null,
            initialize: function() {
                return this.dataModel = this.model.model,
                    this._setUpdateRequests(),
                    this.listenTo(this.dataModel.venues, l.CHANGED, this._onVenuesChanged),
                    this.listenTo(this.dataModel.venues, l.REMOVED, this._onVenuesDeleted),
                    this.model.setSelected(!0)
            },
            _setUpdateRequests: function() {
                this.updateRequests = this.options.updateRequests,
                    null == this.updateRequests && (this.updateRequests = _(this.model.attributes.venueUpdateRequests).sortBy(function(e) {
                        return e.get("dateAdded")
                    }))
            },
            _onVenuesChanged: function(e) {
                var t = this;
                if (e.some(function(e) {
                        return e.getID() === t.model.getID() && e.isDeleted()
                    }))
                    return this.destroy()
            },
            _onVenuesDeleted: function(e) {
                var t = this;
                if (e.some(function(e) {
                        return e.getID() === t.model.getID()
                    }))
                    return this.destroy()
            },
            onDestroy: function() {
                return this.model.setSelected(!1)
            },
            serializeData: function() {
                var e = this._hasMoreUpdates();
                return {
                    showNextButton: e || this.options.showNext || !1,
                    showNextVenueButton: !e && null !== this.options.nextVenue,
                    showNextIssueButton: this.options.showNextIssueButton,
                    nextButtonString: this.options.nextButtonString || I18n.t("venues.update_requests.panel.next"),
                    nextButtonClass: this.options.nextButtonClass
                }
            },
            onRender: function() {
                return this._showCurrentUpdateView(),
                    this._setHeight()
            },
            _showCurrentUpdateView: function() {
                var e = this,
                    t = this.updateRequests[this.currentIndex],
                    i = r.default;
                "flag" === t.get("updateType") && (i = o.default);
                var n = new i({
                    model: t,
                    venue: this.model,
                    showDebug: this.options.showDebug,
                    streetViewController: this.options.streetViewController
                });
                return this.listenTo(n, "focusClicked", function() {
                        e.trigger("focusClicked")
                    }),
                    this.listenTo(n, "streetViewClicked", function() {
                        e.trigger("streetViewClicked")
                    }),
                    this.showChildView("placeUpdate", n)
            },
            _hasMoreUpdates: function() {
                return this.currentIndex < this.updateRequests.length - 1
            },
            _onNextClicked: function() {
                return this._hasMoreUpdates() && (this.currentIndex++,
                        this.render()),
                    this.trigger("nextClicked")
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setHeight()
            },
            _setHeight: function() {
                return this.$el.css({
                        maxHeight: this.maxHeight
                    }),
                    this.getChildView("placeUpdate").setMaxHeight(this.maxHeight - this.ui.navigation.outerHeight())
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(222),
        r = n(s),
        a = i(262),
        o = n(a),
        l = i(877),
        u = n(l),
        d = Marionette.CollectionView.extend({
            childView: function(e) {
                return e instanceof r.default ? u.default : o.default
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(876),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            template: "templates/place_updates/external_provider/list",
            childView: s.default,
            childViewContainer: ".diff-list",
            initialize: function() {
                this.venue = this.options.venue;
                var e = this.venue.attributes.externalProviderIDs.map(function(e) {
                    return e.clone()
                });
                this.collection = new Backbone.Collection(e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(10),
        r = n(s),
        a = i(263),
        o = n(a),
        l = Marionette.View.extend({
            template: "templates/place_updates/external_provider/item",
            tagName: "li",
            behaviors: {
                ToolTip: {
                    behaviorClass: o.default,
                    layerClassName: "suggested-geometry-layer"
                }
            },
            events: {
                "mouseover .anchor": "_onAnchorOver",
                "mouseout .anchor": "_onAnchorOut"
            },
            bindings: {
                ".external-provider-link": {
                    observe: "name",
                    attributes: [{
                        name: "href",
                        observe: "url"
                    }]
                }
            },
            onRender: function() {
                this.model.getDetails(),
                    this.stickit(this.model, this.bindings)
            },
            _onAnchorOver: function() {
                var e = this.model.get("location");
                if (e) {
                    var t = new OpenLayers.Geometry.Point(e.lng, e.lat);
                    r.default.project(t);
                    var i = new OL.Feature.Vector(t, {}, {
                        pointRadius: 6,
                        fillColor: "#c290c6",
                        strokeWidth: 3,
                        strokeColor: "#00ece3"
                    });
                    this.triggerMethod("show:tooltip", t.getBounds().getCenterLonLat(), this.model.get("name"), "", i)
                }
            },
            _onAnchorOut: function() {
                this.triggerMethod("hide:tooltip")
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(262),
        r = n(s),
        a = i(16),
        o = n(a),
        l = function(e, t) {
            var i = t.attributes.categoryAttributes;
            if (i && i.PARKING_LOT)
                return i.PARKING_LOT[e]
        },
        u = function(e, t) {
            var i = l(e, t);
            return null !== i && void 0 !== i ? _.isArray(i) ? i.map(function(t) {
                return I18n.t("edit.landmark.parking.types." + e + "." + t)
            }) : I18n.t("edit.landmark.parking.types." + e + "." + i) : null
        },
        d = r.default.extend({
            template: "templates/place_updates/changed_field_parking_lot",
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : l(t, e)
            },
            valueGetters: {
                canExitWhileClosed: function(e) {
                    return o.default.formatYesNo(l("canExitWhileClosed", e))
                },
                estimatedNumberOfSpots: function(e) {
                    return u("estimatedNumberOfSpots", e)
                },
                costType: function(e) {
                    return u("costType", e)
                },
                lotType: function(e) {
                    return u("lotType", e)
                },
                paymentType: function(e) {
                    return u("paymentType", e)
                }
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(18),
        g = n(p),
        m = function(e) {
            function t(e, i, n, s) {
                (0,
                    o.default)(this, t);
                var a = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, s));
                return a.venue = e,
                    a.request = i,
                    a.approved = n,
                    a.prevApproved = null,
                    a
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.prevApproved = this.request.get("approved"),
                            this.request.set({
                                approved: this.approved
                            }),
                            this.model.venues.changed(this.venue)
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return this.request.set({
                                approved: this.prevApproved
                            }),
                            this.model.venues.changed(this.venue)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.request.set({
                                approved: this.approved
                            }),
                            this.model.venues.changed(this.venue)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: "venueUpdateRequest",
                            action: "UPDATE",
                            attributes: {
                                venueID: this.venue.getID(),
                                id: this.request.id,
                                approve: this.approved
                            }
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.venue.getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.venue]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        !0 === this.approved ? this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.approved") : !1 === this.approved ? this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.rejected") : null === this.approved && (this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.reopened"))
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(261),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            template: "templates/place_updates/flag",
            APPROVE_ACTION_NAMES: {
                default: I18n.t("venues.update_requests.panel.action.solved"),
                DUPLICATE: I18n.t("venues.update_requests.panel.action.merge"),
                CLOSED: I18n.t("venues.update_requests.panel.action.delete")
            },
            APPROVE_ACTION_INTENT: {
                CLOSED: "danger"
            },
            COMMENT_TYPES: {
                WRONG_DETAILS: !0,
                CLOSED: !0,
                INAPPROPRIATE: !0
            },
            serializeData: function() {
                var e = this.model.isImage(),
                    t = e ? this.model.getImage() : null;
                return {
                    model: this.model,
                    venue: this.options.venue,
                    showImage: e,
                    image: t,
                    showAddingUser: e,
                    showComment: this.COMMENT_TYPES[this.model.get("type")],
                    showDuplicateVenue: this.model.get("type") === this.model.TYPE.DUPLICATE,
                    showDebug: this.options.showDebug
                }
            },
            templateContext: _({}).extend(s.default.prototype.templateContext, {
                getTitle: function() {
                    var e = this.model.get("subject");
                    return I18n.t("venues.update_requests.panel.flag_title." + e)
                },
                getApproveActionName: function() {
                    if (this.model.isVenue()) {
                        var e = r.prototype.APPROVE_ACTION_NAMES;
                        return e[this.model.get("type")] || e.default
                    }
                    return I18n.t("venues.update_requests.panel.action.delete_picture")
                },
                getApproveActionIntent: function() {
                    return this.model.isImage() ? "danger" : r.prototype.APPROVE_ACTION_INTENT[this.model.get("type")] || "default"
                },
                getRejectActionName: function() {
                    return I18n.t("venues.update_requests.panel.action.reject_flag")
                },
                getRejectedLabel: function() {
                    return I18n.t("venues.update_requests.panel.ignored")
                },
                getApprovedLabel: function() {
                    return I18n.t("venues.update_requests.panel.solved")
                }
            })
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this._currentIndex = 0,
                    this._venues = _.filter(t, function(e) {
                        return e.areUpdateRequestsEditable() && e.hasOpenUpdateRequests() && !e.attributes.residential && !e.attributes.adLocked
                    })
            }
            return (0,
                    o.default)(e, [{
                    key: "sortByDistanceFrom",
                    value: function(e) {
                        this.reset();
                        var t = e.geometry.getBounds().getCenterLonLat();
                        this._venues = _(this._venues).sortBy(function(e) {
                            var i = e.geometry.getBounds().getCenterLonLat(),
                                n = t.lon - i.lon,
                                s = t.lat - i.lat;
                            return n * n + s * s
                        })
                    }
                }, {
                    key: "getNext",
                    value: function() {
                        return this._currentIndex >= this._venues.length ? null : this._venues[this._currentIndex++]
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._currentIndex = 0
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(265),
        u = n(l),
        d = i(882),
        c = n(d),
        h = i(883),
        f = n(h),
        p = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this.editController = null,
                    this.mediator = t.mediator,
                    this.mapLayers = t.mapLayers,
                    this.streetViewController = t.streetViewController,
                    this._listenToLayerClicks(),
                    W.commands.setHandler("problems:show", this.showProblem, this),
                    W.reqres.setHandler("problems:browse", this.browseProblem, this)
            }
            return (0,
                    o.default)(e, [{
                    key: "showProblem",
                    value: function(e) {
                        var t = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        return this.editController && this.editController.destroy(),
                            this.editController = new f.default({
                                problem: e,
                                showDebug: this.mediator.get("advancedTools"),
                                showNext: i.showNext,
                                nextButtonString: i.nextButtonString,
                                streetViewController: this.streetViewController
                            }),
                            this.editController.on("destroy", function() {
                                return t.editController = null,
                                    W.vent.trigger("problems:closed")
                            }),
                            W.vent.trigger("problems:shown", e)
                    }
                }, {
                    key: "browseProblem",
                    value: function(e) {
                        var t = e.problem;
                        this.showProblem(t, e),
                            this._showLayer(t);
                        var i = new u.default;
                        return e.showNext && this.editController.on("nextClicked", function() {
                                return i.next()
                            }),
                            i
                    }
                }, {
                    key: "showProblemStream",
                    value: function(e) {
                        var t = this;
                        if (e.hasNext()) {
                            var i = e.next(),
                                n = e.hasNext();
                            return this.showProblem(i, {
                                    showNext: n
                                }),
                                n ? this.editController.on("nextClicked", function() {
                                    return t.showProblemStream(e)
                                }) : void 0
                        }
                    }
                }, {
                    key: "_showLayer",
                    value: function(e) {
                        return W.map.showLayerByObjectType(e.type)
                    }
                }, {
                    key: "_listenToLayerClicks",
                    value: function() {
                        var e = this;
                        this.mapLayers.forEach(function(t) {
                            return $(t.div).on("click", ".map-problem", e._onProblemMarkerClicked.bind(e))
                        })
                    }
                }, {
                    key: "_onProblemMarkerClicked",
                    value: function(e) {
                        if (this.mediator.get("editingEnabled")) {
                            var t = $(e.target).data("model"),
                                i = new c.default(t.type).sortByDistance(t);
                            return this.showProblemStream(i)
                        }
                    }
                }]),
                e
        }();
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t) {
                (0,
                    r.default)(this, e);
                var i = this._getRepository(t);
                this.problems = i.getObjectArray()
            }
            return (0,
                    o.default)(e, [{
                    key: "_getRepository",
                    value: function(e) {
                        var t = this.TYPE_TO_REPO[e];
                        return W.model[t]
                    }
                }, {
                    key: "sortByDistance",
                    value: function(e) {
                        return this.problems = _.sortBy(this.problems, function(t) {
                                return -1 * e.geometry.distanceTo(t.geometry)
                            }),
                            this
                    }
                }, {
                    key: "next",
                    value: function() {
                        return this.problems.pop()
                    }
                }, {
                    key: "hasNext",
                    value: function() {
                        return this.problems && this.problems.length > 0
                    }
                }]),
                e
        }();
    l.prototype.TYPE_TO_REPO = {
            mapProblem: "problems",
            mapUpdateRequest: "mapUpdateRequests"
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(884),
        r = n(s),
        a = i(885),
        o = n(a),
        l = i(892),
        u = n(l),
        d = i(27),
        c = i(894),
        h = n(c),
        f = Marionette.Object.extend({
            initialize: function() {
                return this.problem = this.options.problem,
                    this.streetViewController = this.options.streetViewController,
                    this.adapter = o.default.createAdapter(this.problem),
                    null != this.options.nextButtonString && this.adapter.setNextButtonString(this.options.nextButtonString),
                    this.viewModel = new h.default({
                        adapter: this.adapter,
                        streetViewController: this.streetViewController
                    }),
                    this.mapView = new u.default({
                        map: W.map,
                        markerLayer: this.adapter.getMarkerLayer(),
                        adapter: this.adapter,
                        viewModel: this.viewModel
                    }),
                    this.mapView.centerProblem(),
                    this.listenTo(this.viewModel, "change:problemState", this._onProblemStateChanged),
                    this.listenTo(this.adapter.getRepository(), d.CHANGED, this._repositoryChanged),
                    this.listenTo(this.adapter.getRepository(), d.ADDED, this._onProblemsAdded),
                    this.editView = new r.default({
                        model: this.viewModel,
                        adapter: this.adapter,
                        showDebug: this.options.showDebug,
                        showNext: this.options.showNext
                    }),
                    this.listenTo(this.editView, "destroy", this.destroy),
                    this.listenTo(this.editView, "focusClicked", this._onFocusClicked),
                    this.listenTo(this.editView, "streetViewClicked", this._onStreetViewClicked),
                    this.listenTo(this.editView, "nextClicked", this.trigger.bind(this, "nextClicked")),
                    W.map.panelRegion.show(this.editView)
            },
            _onProblemStateChanged: function(e, t, i) {
                i.fromRepository || (this.adapter.setState(this.viewModel.get("problemState")),
                    this.adapter.reportStateChanged())
            },
            _repositoryChanged: function() {
                return this.viewModel.set("problemState", this.adapter.getState(), {
                    fromRepository: !0
                })
            },
            _onProblemsAdded: function() {
                var e = this.adapter.problem.getID(),
                    t = this.adapter.getRepository().get(e);
                return null != t && (this.adapter.problem = t),
                    this.mapView.selectMarker()
            },
            _onFocusClicked: function() {
                this.mapView.focusProblem(),
                    W.Report.focusAction("locate", "mp_locate_clicked", this.adapter.problem.type)
            },
            _onStreetViewClicked: function() {
                this.streetViewController.lookAtPlace(this.adapter.problem),
                    W.Report.focusAction("streetview", "mp_streetview_clicked", this.adapter.problem.type)
            },
            onDestroy: function() {
                return this.editView.destroy(),
                    this.mapView.destroy()
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(232),
        r = n(s),
        a = i(16),
        o = n(a),
        l = i(11),
        u = Marionette.View.extend({
            maxHeight: null,
            template: "Waze/Modules/Problems/templates/edit",
            events: {
                "click .done": "destroy",
                "click .title": "_onSectionTitleClicked",
                "click .focus": "_onFocusClicked",
                "click .street-view-btn": "_onStreetViewClicked"
            },
            triggers: {
                "click .next": "nextClicked"
            },
            regions: {
                conversationRegion: ".conversation-region"
            },
            ui: {
                problemData: ".problem-data",
                topSection: ".top-section",
                actions: ".actions",
                header: ".header",
                tooltips: ".tooltip"
            },
            bindings: {
                "input[name=state]": "problemState",
                ".more-info": {
                    observe: "loadingMoreInfo",
                    update: function(e, t) {
                        return e.toggleClass("loading", t)
                    }
                },
                ".conversation": {
                    observe: "loadingConversation",
                    update: function(e, t) {
                        return e.toggleClass("loading", t)
                    }
                },
                ".problem-edit": {
                    observe: "problemState",
                    update: function(e, t) {
                        return e.attr("data-state", t)
                    }
                },
                ".not-available": {
                    observe: "moreInfoAvailable",
                    update: function(e, t) {
                        return e.toggle(!t)
                    }
                },
                ".street-view-btn": {
                    observe: "streetViewAvailable",
                    visible: !0
                },
                ".street-view-tooltip": {
                    observe: "streetViewAvailable",
                    visible: !0,
                    onGet: _.negate(Boolean)
                }
            },
            className: function() {
                return this.options.adapter.problem.type
            },
            initialize: function() {
                this.adapter = this.options.adapter
            },
            _bindMoreInfo: function() {
                var e = this,
                    t = void 0;
                return this.adapter.getMoreInfoTypes().map(function(i) {
                    return t = i.get("name"),
                        e.addBinding(i, "input[name=" + t + "]", "visible"),
                        e.addBinding(i, ".more-info-" + t + "-checkbox", {
                            observe: "available",
                            update: function(e, t) {
                                return e.toggle(t)
                            }
                        })
                })
            },
            _getMainTitle: function() {
                return this.adapter.problem.type === l.UPDATE_REQUEST ? I18n.t("problems.panel.titles.map_update_request") : I18n.t("problems.panel.titles.map_problem")
            },
            serializeData: function() {
                return {
                    mainTitle: this._getMainTitle(),
                    adapter: this.adapter,
                    showDebug: this.options.showDebug,
                    showNext: this.options.showNext,
                    model: this.model
                }
            },
            onRender: function() {
                return this.adapter.isConversationAvailable() && this._renderConversationView(),
                    this._bindMoreInfo(),
                    this.stickit(),
                    this.ui.tooltips.tooltip(),
                    this._setHeight()
            },
            _renderConversationView: function() {
                var e = this;
                return this.adapter.getConversation().then(function(t) {
                    return e.conversationView = new r.default({
                            commentable: t.getCommentable(),
                            enabled: e.adapter.allowCommenting()
                        }),
                        e.stickit(e.conversationView.viewModel, {
                            ".comment-count-badge": "commentCount"
                        }),
                        e.showChildView("conversationRegion", e.conversationView)
                })
            },
            _onSectionTitleClicked: function(e) {
                return $(e.target).parent(".section").toggleClass("collapsed")
            },
            _onFocusClicked: function(e) {
                return e.preventDefault(),
                    this.trigger("focusClicked")
            },
            _onStreetViewClicked: function(e) {
                e.preventDefault(),
                    this.trigger("streetViewClicked")
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setHeight()
            },
            _setHeight: function() {
                var e = this.maxHeight - this.ui.actions.outerHeight();
                return this.ui.topSection.css({
                    maxHeight: e
                })
            },
            templateContext: {
                showMoreInfoSection: function() {
                    return this.adapter.getMoreInfoTypes().length > 0
                },
                showCloseDetails: function() {
                    return !this.adapter.problem.editable
                },
                getCloseDate: function() {
                    var e = this.adapter.problem.attributes.resolvedOn,
                        t = I18n.t("problems.panel.closed.not_available");
                    return null != e && (t = I18n.l("date.formats.long", e)),
                        o.default.safe_t("problems.panel.closed.date", {
                            date_title: o.default.contentTag("strong", I18n.t("problems.panel.closed.date_title")),
                            date: t
                        })
                },
                getClosingUser: function() {
                    var e = this.adapter.problem.attributes.resolvedBy,
                        t = I18n.t("problems.panel.closed.not_available");
                    return null != e && (t = o.default.userProfile(e)),
                        o.default.safe_t("problems.panel.closed.user", {
                            user_title: o.default.contentTag("strong", I18n.t("problems.panel.closed.user_title")),
                            username: t
                        })
                }
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(74),
        l = n(o),
        u = i(886),
        d = n(u),
        c = i(888),
        h = n(c),
        f = i(890),
        p = n(f),
        g = i(217),
        m = n(g),
        v = i(11),
        _ = i(92),
        y = n(_),
        b = {},
        w = y.default.prototype.TYPE,
        E = (s = {},
            (0,
                a.default)(s, w.DISCONNECTION, l.default),
            (0,
                a.default)(s, w.TURN, h.default),
            (0,
                a.default)(s, w.DATA, d.default),
            (0,
                a.default)(s, w.ROAD_CLOSURE, p.default),
            s);
    b.createAdapter = function(e) {
            return new(e.type === v.UPDATE_REQUEST ? m.default : E[e.attributes.problemType])(e)
        },
        t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(887),
        o = n(a),
        l = i(74),
        u = n(l),
        d = u.default.extend({
            MORE_INFO_DEFAULTS: [],
            createMoreInfoRenderer: function(e, t, i) {
                return new o.default(e, t, i)
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? r.default.resolve(this.moreInfo) : this.problem.getSessions().then(function(t) {
                    return e.moreInfo = t
                })
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this.info = t,
                    this.layer = i,
                    this.displayOptions = n
            }
            return (0,
                    o.default)(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawSegments(),
                            this._drawVenue()
                    }
                }, {
                    key: "_drawSegments",
                    value: function() {
                        if (null != this.info.segmentGeom && this.layer.driveRenderer.drawShortSegment(this.info.segmentGeom),
                            null != this.info.secondarySegmentGeom)
                            return this.layer.driveRenderer.drawShortSegment(this.info.secondarySegmentGeom)
                    }
                }, {
                    key: "_drawVenue",
                    value: function() {
                        if (null != this.info.venueGeom)
                            return this.layer.driveRenderer.drawVenue(this.info.venueGeom)
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(889),
        o = n(a),
        l = i(74),
        u = n(l),
        d = u.default.extend({
            MORE_INFO_DEFAULTS: [],
            createMoreInfoRenderer: function(e, t, i) {
                return new o.default(e, t, i)
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? r.default.resolve(this.moreInfo) : this.problem.getSessions().then(function(t) {
                    return e.moreInfo = t,
                        t
                })
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this.info = t,
                    this.layer = i,
                    this.displayOptions = n
            }
            return (0,
                    o.default)(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawSuggestedRoute(),
                            this._drawAlternatives()
                    }
                }, {
                    key: "_drawSuggestedRoute",
                    value: function() {
                        return this.layer.driveRenderer.drawSuggestedRoute(this.info.routePrevSeg),
                            this.layer.driveRenderer.drawSuggestedRoute(this.info.routeNextSeg)
                    }
                }, {
                    key: "_drawAlternatives",
                    value: function() {
                        for (var e = _.last(this.info.routePrevSeg.components).clone(), t = 0; t < this.info.alternatives.length; t++) {
                            var i = this.info.alternatives[t];
                            this.layer.driveRenderer.drawUserDrive(i.averageGeom),
                                this.layer.driveRenderer.drawDriveWeightPoint(e, i.averageGeom, i.numDrives.toString())
                        }
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(74),
        o = n(a),
        l = i(891),
        u = n(l),
        d = o.default.extend({
            MORE_INFO_DEFAULTS: [],
            getTitle: function() {
                return I18n.t("problems.panel.closure.title")
            },
            getReportedString: function() {
                return I18n.t("problems.panel.closure.reported")
            },
            hasDescription: function() {
                return !0
            },
            getDescriptionTemplate: function() {
                return "Waze/Modules/Problems/templates/closure_description"
            },
            getMoreInfo: function() {
                return r.default.resolve([this.problem])
            },
            createMoreInfoRenderer: function(e, t, i) {
                return new u.default(e, t, i)
            },
            getSolvedStateString: function() {
                return I18n.t("problems.panel.closure.states.solved")
            },
            getNotIdentifiedStateString: function() {
                return I18n.t("problems.panel.closure.states.not_identified")
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this.info = null,
                    this.closureProblem = t,
                    this.layer = i,
                    this.displayOptions = n
            }
            return (0,
                    o.default)(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawPins()
                    }
                }, {
                    key: "_drawPins",
                    value: function() {
                        if (this.closureProblem.hasEndPoint())
                            return this.layer.driveRenderer.drawPin(this.closureProblem.attributes.geometry, "A"),
                                this.layer.driveRenderer.drawPin(this.closureProblem.attributes.endPoint, "B")
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(893),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Object.extend({
            layer: null,
            info: null,
            viewModel: null,
            initialize: function() {
                this.viewModel = this.options.viewModel,
                    this.map = this.options.map,
                    this.markerLayer = this.options.markerLayer,
                    this.adapter = this.options.adapter,
                    this.layer = new s.default("problemMoreInfo"),
                    this.viewModel.get("loadingMoreInfo") ? this.listenTo(this.viewModel, "change:loadingMoreInfo", this._onMoreInfoLoaded) : this._onMoreInfoLoaded();
                for (var e = this.adapter.getMoreInfoTypes(), t = 0; t < e.length; t++) {
                    var i = e[t];
                    this.listenTo(i, "change:visible", this._drawMoreInfo)
                }
                this.selectMarker()
            },
            centerProblem: function() {
                var e = this.adapter.getGeometry(),
                    t = new OL.LonLat(e.x, e.y);
                return this.map.setCenter(t)
            },
            focusProblem: function() {
                var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                    t = this.adapter.getBounds(),
                    i = t.getCenterLonLat();
                return e ? (e = this.map.getZoomForExtent(t),
                        e = Math.min(e, W.Config.problems.maxDetailsZoom),
                        e = Math.max(e, W.Config.problems.minDetailsZoom)) : e = this.map.getZoom(),
                    this.map.setCenter(i, e)
            },
            onDestroy: function() {
                return null != this.layer.map && this.map.removeLayer(this.layer),
                    this.map.events.unregister("zoomend", this, this._drawMoreInfo),
                    this._unselectMarker()
            },
            _onMoreInfoLoaded: function() {
                var e = this;
                return this.map.addLayer(this.layer),
                    this.map.events.register("zoomend", this, this._drawMoreInfo),
                    this.adapter.getMoreInfo().then(function(t) {
                        return e.info = t[0],
                            e._drawMoreInfo()
                    })
            },
            _getDisplayOptions: function() {
                for (var e = {}, t = this.adapter.getMoreInfoTypes(), i = 0; i < t.length; i++) {
                    var n = t[i];
                    e[n.get("name")] = n.get("visible") && n.get("available")
                }
                return e
            },
            _drawMoreInfo: function() {
                return this.layer.removeAllFeatures({
                        silent: !0
                    }),
                    this.renderer = this.adapter.createMoreInfoRenderer(this.info, this.layer, this._getDisplayOptions()),
                    this.renderer.drawMoreInfo()
            },
            selectMarker: function() {
                return this._toggleMarkerSelection(!0)
            },
            _unselectMarker: function() {
                return this._toggleMarkerSelection(!1)
            },
            _toggleMarkerSelection: function(e) {
                var t = this.adapter.problem.getID();
                return $(this.markerLayer.div).find("[data-id='" + t + "']").toggleClass("selected", e),
                    $(this.map.div).toggleClass("problem-selected", e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(178),
        r = n(s),
        a = i(54),
        o = n(a),
        l = i(177),
        u = n(l),
        d = OL.Class(OL.Layer.Vector, {
            rendererOptions: {
                zIndexing: !0
            },
            renderers: [o.default],
            styleMap: u.default,
            initialize: function() {
                OL.Layer.Vector.prototype.initialize.apply(this, arguments),
                    this.driveRenderer = new r.default(this)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            loadingMoreInfo: !0,
            loadingConversation: !0,
            moreInfoAvailable: !0,
            streetViewAvailable: !1
        },
        initialize: function() {
            var e = this;
            this.adapter = this.get("adapter"),
                this.streetViewController = this.get("streetViewController"),
                this.set({
                    problemState: this.adapter.getState()
                }),
                this.adapter.getMoreInfo().then(function() {
                    return e.set({
                            loadingMoreInfo: !1
                        }),
                        e.set({
                            loadingConversation: !1
                        }),
                        e.set({
                            moreInfoAvailable: e.adapter.isMoreInfoAvailable()
                        })
                }),
                this._checkStreetViewAvailability()
        },
        _checkStreetViewAvailability: function() {
            var e = this;
            this.streetViewController && this.streetViewController.hasPlacePanaorama(this.adapter.problem).then(function(t) {
                e.set({
                    streetViewAvailable: t
                })
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(266),
        r = n(s),
        a = i(269),
        o = n(a),
        l = i(99),
        u = Marionette.Object.extend({
            initialize: function(e) {
                this.controller = e.controller,
                    this.mediator = e.mediator,
                    this._setDefaultHandler(),
                    W.commands.setHandler("save:restoreDefaultHandler", this._setDefaultHandler, this),
                    W.commands.setHandler("save:setHandler", this._setHandler, this),
                    this.savePopoverRegion = new o.default({
                        saveButtonSelector: "#toolbar .waze-icon-save"
                    })
            },
            _startSave: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = this.controller.save(t);
                null != this.flowController && this.flowController.destroy(),
                    this.flowController = new r.default({
                        map: W.map,
                        mediator: this.mediator,
                        popoverRegion: this.savePopoverRegion
                    }),
                    i.then(function(t) {
                        e.flowController.success(t)
                    }).catch(function(t) {
                        if (!(t instanceof l.SaveError))
                            throw t;
                        e.flowController.fail(t.errors)
                    }),
                    this.flowController.on("resave", function() {
                        e._startSave({
                            ignoreWarnings: !0
                        })
                    })
            },
            _setDefaultHandler: function() {
                this._setHandler(this._startSave, this)
            },
            _setHandler: function(e, t) {
                W.commands.setHandler("save:start", e, t)
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(897),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {
            pointerEvents: "none",
            strokeLinecap: "square",
            strokeWidth: 5
        },
        a = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(r)
        });
    a.addUniqueValueRules("default", "type", {
            homePin: {
                pointerEvents: "visiblePainted",
                externalGraphic: s.default,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            }
        }),
        t.default = a,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/home-pin274fef96719c46ce1a4cf43e3b4a86b9.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(268),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default,
            isIgnorable: function() {
                return this.all(function(e) {
                    return e.get("ignorable")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(900),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            childView: s.default,
            childViewContainer: ".list",
            template: "Waze/Modules/Save/templates/error_list",
            events: {
                "click .save": "_onSaveClicked",
                "click .edit": "destroy",
                "click .close-button": "destroy"
            },
            childViewEvents: function() {
                return {
                    "click:focus": this._onChildFocusClicked
                }
            },
            _onChildFocusClicked: function(e) {
                return this.trigger("click:focus", e.model)
            },
            _onSaveClicked: function() {
                return this.trigger("click:save")
            },
            serializeData: function() {
                return {
                    collection: this.collection
                }
            },
            templateContext: {
                getTitle: function() {
                    return this.collection.isIgnorable() ? I18n.t("save.error.title_ignorable") : I18n.t("save.error.title")
                },
                showActionTitle: function() {
                    return this.collection.isIgnorable()
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(268),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/Save/templates/error_item",
            tagName: "li",
            className: "error-item",
            events: {
                "click .focus": "_onFocusClicked"
            },
            _onFocusClicked: function() {
                return this.trigger("click:focus")
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments);
                e.title = this._getTranslatedTitle() || this._getServerTitle() || this._getDefaultTitle(),
                    e.solution = this._getSolution(),
                    e.showPanButton = null !== this.model.get("geometry");
                var t = this.model.get("collatedCount");
                return null != t && t > 1 && (e.collated = I18n.t("save.error.collated", {
                        count: t
                    })),
                    e
            },
            _getTranslationsByCode: function(e) {
                return I18n.t("save.error_types")[e]
            },
            _getDefaultTitle: function() {
                var e = s.default.prototype.defaults.code,
                    t = this._getTranslationsByCode(e);
                if (t)
                    return t.title
            },
            _getServerTitle: function() {
                return this.model.get("details")
            },
            _getTranslatedTitle: function() {
                var e = this._getTranslationsByCode(this.model.get("code"));
                if (e)
                    return e.title
            },
            _getSolution: function() {
                var e = this._getTranslationsByCode(this.model.get("code"));
                return e && e.solution ? e.solution : I18n.t("save.default_solution")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            CLOSE_TIMEOUT_MILLIS: 2e3,
            template: "Waze/Modules/Save/templates/success",
            serializeData: function() {
                return {
                    venueNames: this._getVenueNames(),
                    model: this.model
                }
            },
            _getVenueNames: function() {
                var e = this.model.pendingEdits.venues.map(function(e) {
                    return e.attributes.name
                });
                return _.compact(e),
                    e.join(", ")
            },
            onRender: function() {
                return window.setTimeout(_.bind(this.destroy, this), this.CLOSE_TIMEOUT_MILLIS)
            },
            templateContext: function() {
                return {
                    showPendingVenues: function() {
                        return this.model.pendingEdits.venues.length > 0
                    },
                    getSaveCountTextFor: function(e) {
                        var t = this.model.saveCount[e];
                        return t < 1 ? "" : s.default.contentTag("div", I18n.t("save.success.change_count." + e, {
                            count: t
                        }))
                    }
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(11),
        c = i(180),
        h = n(c),
        f = function() {
            function e(t, i, n) {
                var s = this;
                (0,
                    o.default)(this, e),
                this.model = t,
                    this.events = new OpenLayers.Events(this),
                    this._selectedFeatures = [],
                    this._requireDeselect = W.prefs.get("requireFeatureDeselect"),
                    this._layers = i,
                    this._objectTypeToLayer = {},
                    this._deselectOnToggle = !0,
                    this._mouseInFeature = null,
                    this._layers.forEach(function(e) {
                        return s._objectTypeToLayer[e.featureType] = e
                    }),
                    this._enabled = !0,
                    this.selectionMediator = n,
                    this._bindEvents()
            }
            return (0,
                    u.default)(e, [{
                    key: "_bindEvents",
                    value: function() {
                        var e = this;
                        this._layers.forEach(function(t) {
                                t.events.on({
                                    visibilitychanged: e._layerVisibilityChanged,
                                    scope: e
                                })
                            }),
                            W.prefs.on("change:requireFeatureDeselect", function(e, t) {
                                this._requireDeselect = t
                            }, this),
                            this._bindSelectionMediatorEvents()
                    }
                }, {
                    key: "_bindSelectionMediatorEvents",
                    value: function() {
                        this._toggleMediatorEvents(!0)
                    }
                }, {
                    key: "_unbindSelectionMediatorEvents",
                    value: function() {
                        this._toggleMediatorEvents(!1)
                    }
                }, {
                    key: "_toggleMediatorEvents",
                    value: function(e) {
                        var t = e ? "on" : "off";
                        this.selectionMediator[t]("map:selection:pathSelect", this._onSelectPath, this),
                            this.selectionMediator[t]("map:selection:featureClick", this._onFeatureClicked, this),
                            this.selectionMediator[t]("map:selection:featureIn", this._onFeatureIn, this),
                            this.selectionMediator[t]("map:selection:featureOut", this._onFeatureOut, this),
                            this.selectionMediator[t]("map:selection:clickOut", this._onClickOut, this),
                            this.selectionMediator[t]("map:selection:featureBoxSelection", this._onFeatureBoxSelection, this),
                            this.selectionMediator[t]("map:selection:deselectKey", this._onDeselectKey, this)
                    }
                }, {
                    key: "_onDeselectKey",
                    value: function() {
                        this.unselectAll()
                    }
                }, {
                    key: "_onFeatureClicked",
                    value: function(e) {
                        var t = e.feature;
                        if (t.model && !t.model.isDeleted() && t) {
                            if (this.isSelected(t) && this._deselectOnToggle)
                                return void(e.addSelection && this._selectedFeatures.length > 1 ? this.unselectFeatures(t, !1) : this.unselectAll());
                            if (!e.addSelection || !this._canAddSelection(t)) {
                                if (this._requireDeselect && this._selectedFeatures.length > 0)
                                    return;
                                this.unselectAll(!1)
                            }
                            this.selectFeatures(t, !1)
                        }
                    }
                }, {
                    key: "_onFeatureIn",
                    value: function(e) {
                        this._mouseInFeature = e,
                            this.highlight(e)
                    }
                }, {
                    key: "_onFeatureOut",
                    value: function(e) {
                        this._mouseInFeature = null,
                            this.unhighlight(e)
                    }
                }, {
                    key: "highlight",
                    value: function(e) {
                        this._isFeatureHighlightable(e) && this.selectionMediator.highlight(e, this.isSelected(e), e.model.isDeleted())
                    }
                }, {
                    key: "unhighlight",
                    value: function(e) {
                        this._isFeatureHighlightable(e) && this.selectionMediator.unhighlight(e, this.isSelected(e), e.model.isDeleted())
                    }
                }, {
                    key: "_isFeatureHighlightable",
                    value: function(e) {
                        return Boolean(e.model)
                    }
                }, {
                    key: "recalculateStyle",
                    value: function(e) {
                        e === this._mouseInFeature ? this.highlight(e) : this.unhighlight(e)
                    }
                }, {
                    key: "_onClickOut",
                    value: function() {
                        this.unselectAll(!1)
                    }
                }, {
                    key: "_onFeatureBoxSelection",
                    value: function(e) {
                        e && e.length > 0 && (this._canAddSelection(e[0]) || this.unselectAll(!1),
                            this.selectFeatures(e, !1))
                    }
                }, {
                    key: "_layerVisibilityChanged",
                    value: function(e) {
                        var t = e.object;
                        t.getVisibility() || this._selectedFeatures.filter(function(e) {
                            return e.layer === t
                        }).forEach(this.unselectFeature.bind(this))
                    }
                }, {
                    key: "isSelected",
                    value: function(e) {
                        return this._selectedFeatures.includes(e)
                    }
                }, {
                    key: "selectFeature",
                    value: function(e) {
                        return !(!e || this.isSelected(e)) && (this._selectedFeatures.push(e),
                            e.model && e.model.setSelected(!0), !0)
                    }
                }, {
                    key: "unselectFeature",
                    value: function(e, t) {
                        if (e && this.isSelected(e)) {
                            var i = this._selectedFeatures.indexOf(e);
                            this._selectedFeatures.splice(i, 1),
                                e.model && e.model.setSelected(!1),
                                this._triggerUnSelected([e], t),
                                this._triggerSelectionChanged(t)
                        }
                    }
                }, {
                    key: "unselectAll",
                    value: function(e) {
                        if (this._selectedFeatures.length > 0) {
                            var t = this._selectedFeatures;
                            t.forEach(function(e) {
                                    e.model.setSelected(!1)
                                }),
                                this._selectedFeatures = [],
                                this._triggerUnSelected(t, e),
                                this._triggerSelectionChanged(e)
                        }
                    }
                }, {
                    key: "selectFeatures",
                    value: function(e, t) {
                        if (Array.isArray(e) || (e = [e]),
                            0 !== e.length) {
                            for (var i = [], n = 0; n < e.length; n++) {
                                var s = e[n];
                                this.selectFeature(s) && i.push(s)
                            }
                            i.length > 0 && (this._triggerSelected(i, t),
                                this._triggerSelectionChanged(t))
                        }
                    }
                }, {
                    key: "setSelectedModels",
                    value: function(e, t) {
                        var i = this;
                        this.unselectAll(),
                            Array.isArray(e) || (e = [e]);
                        var n = e.map(function(e) {
                            return i._objectTypeToLayer[e.type].getVector(e)
                        });
                        n = _.compact(n),
                            this.selectFeatures(n, t)
                    }
                }, {
                    key: "setSelection",
                    value: function(e, t) {
                        for (var i = !1, n = this._selectedFeatures.length - 1; n >= 0; n--) {
                            var s = this._selectedFeatures[n];
                            e.contains(s) || (this.unselectFeature(s, !0),
                                i = !0)
                        }
                        for (var r = 0; r < e.length; r++) {
                            var a = e[r];
                            this._selectedFeatures.contains(a) || (this.selectFeature(a, !0),
                                i = !0)
                        }
                        i && this._triggerSelectionChanged(t)
                    }
                }, {
                    key: "_triggerSelectionChanged",
                    value: function(e) {
                        e || this.events.triggerEvent("selectionchanged", {
                            selected: this._selectedFeatures,
                            reversedSegments: this.getReversedSegments()
                        })
                    }
                }, {
                    key: "_triggerSelected",
                    value: function(e, t) {
                        e.forEach(this.recalculateStyle.bind(this)),
                            t || this.events.triggerEvent("app:selection:featureselected", {
                                selection: this._selectedFeatures,
                                features: e
                            })
                    }
                }, {
                    key: "_triggerUnSelected",
                    value: function(e, t) {
                        t || this.events.triggerEvent("app:selection:featureunselected", {
                                selection: this._selectedFeatures,
                                features: e
                            }),
                            e.forEach(this.recalculateStyle.bind(this))
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        var e = this;
                        this._layers.forEach(function(t) {
                            return t.events.un({
                                visibilitychanged: e._layerVisibilityChanged,
                                scope: e
                            })
                        })
                    }
                }, {
                    key: "_onSelectPath",
                    value: function(e) {
                        var t = e.feature;
                        if (0 === this._selectedFeatures.length)
                            return void this.selectFeature(t);
                        var i = this._selectedFeatures[0].model,
                            n = t.model;
                        if (!(this._selectedFeatures.length > 1 || i.type !== d.SEGMENT)) {
                            var s = function(e) {
                                    return e.attributes.primaryStreetID === i.attributes.primaryStreetID
                                },
                                a = function(e) {
                                    return e.getID() === n.getID()
                                },
                                o = h.default.bfs(i, s, a),
                                l = (0,
                                    r.default)(o, 2),
                                u = l[0],
                                c = l[1];
                            if (null === u) {
                                var f = h.default.bfs(i, function() {
                                    return !0
                                }, a);
                                c = (0,
                                    r.default)(f, 2)[1]
                            }
                            var p = this._getPathFromVisitedSegments(c, i, n);
                            return p.length <= 25 ? this.setSelectedModels(p) : void 0
                        }
                    }
                }, {
                    key: "_getPathFromVisitedSegments",
                    value: function(e, t, i) {
                        for (var n = i.getID(), s = t.getID(), r = []; n !== s && null != n;)
                            r.push(n),
                            n = e[n];
                        return r.push(t.getID()),
                            r.map(function(e) {
                                return W.model.segments.get(e)
                            })
                    }
                }, {
                    key: "_getSelectionCountByType",
                    value: function() {
                        var e = this._selectedFeatures.map(function(e) {
                            return e.model.type
                        });
                        return _.countBy(e, _.identity)
                    }
                }, {
                    key: "unselectFeatures",
                    value: function(e, t, i) {
                        if (Array.isArray(e) || (e = [e]),
                            0 !== e.length) {
                            for (var n = !1, s = [], r = e.length - 1; r >= 0; r--) {
                                var a = e[r];
                                _.contains(this._selectedFeatures, a) && (this.unselectFeature(a, !0),
                                    s.push(a),
                                    n = !0)
                            }
                            s.length > 0 && this._triggerUnSelected(s, i),
                                n && this._triggerSelectionChanged(t, i)
                        }
                    }
                }, {
                    key: "_canAddSelection",
                    value: function(e) {
                        var t = e.model.type,
                            i = this._selectedFeatures[0] && this._selectedFeatures[0].model.type !== t;
                        return !(e.model.isResidential && e.model.isResidential() || this._selectedFeatures[0] && this._selectedFeatures[0].model.isResidential && this._selectedFeatures[0].model.isResidential() || i || t !== d.SEGMENT)
                    }
                }, {
                    key: "hasSelectedFeatures",
                    value: function() {
                        return !_.isEmpty(this._selectedFeatures)
                    }
                }, {
                    key: "getReversedSegments",
                    value: function() {
                        var e = _(this._selectedFeatures.filter(function(e) {
                                return e.model.type === d.SEGMENT
                            })).pluck("model"),
                            t = {
                                multipleConnectedComponents: !1,
                                numReversed: 0
                            };
                        return this._getSelectionCountByType().segment > 0 ? h.default.getReversedSegments(e) : t
                    }
                }, {
                    key: "toggleMultipleSelection",
                    value: function() {
                        this.selectionMediator.toggleMultipleSelection()
                    }
                }, {
                    key: "getSelectableRepos",
                    value: function() {
                        return this._layers.map(function(e) {
                            return e.repo
                        }).filter(function(e) {
                            return void 0 !== e
                        }).map(function(e) {
                            return e[0]
                        })
                    }
                }, {
                    key: "getSelectedFeatures",
                    value: function() {
                        return this._selectedFeatures.concat()
                    }
                }, {
                    key: "disable",
                    value: function() {
                        this._enabled && (this.selectionMediator.resetState(),
                            this._unbindSelectionMediatorEvents(),
                            this._enabled = !1)
                    }
                }, {
                    key: "enable",
                    value: function() {
                        this._enabled || (this._bindSelectionMediatorEvents(),
                            this._enabled = !0)
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this._snapshot = !1,
                    this._actionManager = t,
                    this._actionManager.events.on({
                        hasActions: this._onActionsChanged,
                        noActions: this._onActionsChanged,
                        scope: this
                    })
            }
            return (0,
                    o.default)(e, [{
                    key: "isSnapshotOn",
                    value: function() {
                        return this._snapshot
                    }
                }, {
                    key: "canToggleOn",
                    value: function() {
                        return !this._actionManager.canSave()
                    }
                }, {
                    key: "toggle",
                    value: function(e) {
                        if (e !== this._snapshot)
                            return !1 === e && this._actionManager.clear(),
                                this._snapshot = e,
                                this._actionManager.toggleSavingEnabled(!e),
                                this.trigger("change:state")
                    }
                }, {
                    key: "_onActionsChanged",
                    value: function() {
                        return this.trigger("change:togglable")
                    }
                }]),
                e
        }();
    _.extend(l.prototype, Backbone.Events),
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(905),
        g = n(p),
        m = i(906),
        v = n(m),
        y = i(907),
        b = n(y),
        w = i(10),
        E = n(w),
        k = i(908),
        M = n(k),
        S = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i.panoramaProvider = new g.default,
                    i.map = e.map,
                    i.scene = new v.default,
                    i.headingFinder = new M.default,
                    i.model = new Backbone.Model({
                        isActive: !1
                    }),
                    i._streetViewWindowView = new b.default({
                        el: "#street-view-container",
                        streetViewController: i,
                        scene: i.scene,
                        map: i.map
                    }),
                    e.selectionManager.events.register("selectionchanged", i, i._onSelectionChanged),
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getScene",
                    value: function() {
                        return this.scene
                    }
                }, {
                    key: "isActive",
                    value: function() {
                        return this.model.get("isActive")
                    }
                }, {
                    key: "activateStreetView",
                    value: function() {
                        this._toggleStreetView(!0)
                    }
                }, {
                    key: "deactivateStreetView",
                    value: function() {
                        this._toggleStreetView(!1)
                    }
                }, {
                    key: "_toggleStreetView",
                    value: function(e) {
                        this.isActive() !== e && (this.model.set("isActive", e),
                            this.triggerMethod("stateChanged", e),
                            this._streetViewWindowView.setState(e),
                            this.map.toggleSVMode(e),
                            e ? W.Report.generalAction("streeview_started") : W.Report.generalAction("streeview_ended"))
                    }
                }, {
                    key: "lookAtPlace",
                    value: function(e) {
                        var t = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50;
                        this.getPlacePanaorama(e, i).then(function(n) {
                            n && (t.activateStreetView(),
                                t.scene.set({
                                    panorama: n,
                                    features: [e]
                                }),
                                t.rotateHeadingTo(e, i))
                        })
                    }
                }, {
                    key: "rotateHeadingTo",
                    value: function(e, t) {
                        var i = this.scene.getPanoramaProjectedLonlat(),
                            n = this.headingFinder.find(i, [e], t);
                        this.scene.set({
                            cameraHeading: n
                        })
                    }
                }, {
                    key: "lookAtCurrentItem",
                    value: function(e, t) {
                        if (e) {
                            this.activateStreetView(),
                                this.scene.set({
                                    panorama: e
                                });
                            var i = this.scene.get("features");
                            i.length > 0 && this.rotateHeadingTo(i[0], t)
                        }
                    }
                }, {
                    key: "_getItemLonLat",
                    value: function(e) {
                        return E.default.unproject(e.geometry.getCentroid().clone()).toLonLat()
                    }
                }, {
                    key: "getPlacePanaorama",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50,
                            i = this._getItemLonLat(e);
                        return this.getPanorama(i, t)
                    }
                }, {
                    key: "hasPlacePanaorama",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50,
                            i = this._getItemLonLat(e);
                        return this.hasPanorama(i, t)
                    }
                }, {
                    key: "hasPanorama",
                    value: function(e, t) {
                        return this.getPanorama(e, t).then(function(e) {
                            return Boolean(e)
                        }).catch(function() {
                            return !1
                        })
                    }
                }, {
                    key: "getPanorama",
                    value: function(e, t) {
                        return this.panoramaProvider.getPanorama(e, t)
                    }
                }, {
                    key: "_onSelectionChanged",
                    value: function(e) {
                        var t = _.pluck(e.selected, "model");
                        return this.scene.set({
                            features: t
                        })
                    }
                }, {
                    key: "getCurrentCameraLonLat",
                    value: function() {
                        var e = this.scene.get("cameraLongLat");
                        return e ? e.clone() : null
                    }
                }]),
                t
        }(Marionette.Object);
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(19),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = function() {
            function e() {
                (0,
                    u.default)(this, e),
                this._streetViewProvider = null
            }
            return (0,
                    c.default)(e, [{
                    key: "getPanorama",
                    value: function(e) {
                        var t = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.DEFAULT_SEARCH_RADIUS_METERS,
                            n = new google.maps.LatLng(e.lat, e.lon);
                        i *= this.SEARCH_RADIUS_PADDING_FACTOR,
                            i = Math.floor(i);
                        var s = google.maps.StreetViewStatus;
                        return new o.default(function(e, r) {
                            t._getStreetViewProvider().getPanoramaByLocation(n, i, function(t, i) {
                                switch (i) {
                                    case s.OK:
                                        return e(t);
                                    case s.ZERO_RESULTS:
                                        return e(null);
                                    case s.UNKNOWN_ERROR:
                                        return r(new Error)
                                }
                            })
                        })
                    }
                }, {
                    key: "_getStreetViewProvider",
                    value: function() {
                        return this._streetViewProvider || (this._streetViewProvider = new google.maps.StreetViewService)
                    }
                }]),
                e
        }();
    (0,
        r.default)(h.prototype, {
        DEFAULT_SEARCH_RADIUS_METERS: 50,
        SEARCH_RADIUS_PADDING_FACTOR: 2
    }),
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(10),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            panorama: null,
                            cameraHeading: 0,
                            cameraLongLat: null,
                            features: []
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = this;
                        this.on("change:panorama", function() {
                            var t = e._getPanoramaLonLat();
                            e.set({
                                cameraLongLat: t
                            })
                        })
                    }
                }, {
                    key: "getPanoramaProjectedLonlat",
                    value: function() {
                        return g.default.project(this._getPanoramaLonLat())
                    }
                }, {
                    key: "_getPanoramaLonLat",
                    value: function() {
                        var e = this.get("panorama");
                        return e ? new OL.LonLat(e.location.latLng.lng(), e.location.latLng.lat()) : null
                    }
                }]),
                t
        }(Backbone.Model);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(10),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .close-button": "_closePanoramaView"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            panoramaEl: ".panorama"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.el = "#street-view-container",
                            this.panoramaView = null,
                            this._streetViewController = e.streetViewController,
                            this.scene = e.scene,
                            this.map = e.map,
                            W.accelerators.events.register("closeStreetView", this, this._closePanoramaView),
                            this._bindEvents()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        var e = this;
                        this.listenTo(this.scene, "change:panorama", function(t, i, n) {
                                n && n.ignore || e._updatePositionAndHeading()
                            }),
                            this.listenTo(this.scene, "change:cameraHeading", function(t, i, n) {
                                n && n.ignore || e._updatePositionAndHeading()
                            })
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        e ? this._onSVActivated() : this._onSVDeactivated()
                    }
                }, {
                    key: "_onSVActivated",
                    value: function() {
                        this._getPanoramaView({
                            forceNew: !1
                        }).setVisible(!0)
                    }
                }, {
                    key: "_onSVDeactivated",
                    value: function() {
                        this._getPanoramaView({
                            forceNew: !1
                        }).setVisible(!1)
                    }
                }, {
                    key: "_updatePositionAndHeading",
                    value: function() {
                        if (this._streetViewController.isActive()) {
                            var e = this.scene.get("panorama"),
                                t = this.scene.get("cameraHeading");
                            e && null != t && this._setLocationAndHeading(e.location, t)
                        }
                    }
                }, {
                    key: "_setLocationAndHeading",
                    value: function(e, t) {
                        this._getPanoramaView({
                                forceNew: !0
                            }).setPano(e.pano),
                            this._getPanoramaView({
                                forceNew: !1
                            }).setPov({
                                heading: t,
                                pitch: 0
                            }),
                            this._getPanoramaView({
                                forceNew: !1
                            }).setVisible(!0)
                    }
                }, {
                    key: "_getPanoramaView",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            i = t.forceNew,
                            n = void 0 !== i && i;
                        return null == this.panoramaView || n ? (this.panoramaView = new google.maps.StreetViewPanorama(this.ui.panoramaEl.get(0), {
                                panControl: !0,
                                panControlOptions: {
                                    position: google.maps.ControlPosition.TOP_RIGHT
                                },
                                zoomControl: !0,
                                zoomControlOptions: {
                                    position: google.maps.ControlPosition.TOP_RIGHT
                                },
                                enableCloseButton: !1,
                                addressControl: !1,
                                visible: !0
                            }),
                            google.maps.event.addListener(this.panoramaView, "position_changed", function() {
                                var t = e.panoramaView.getPosition();
                                if (t) {
                                    var i = new OL.LonLat(t.lng(), t.lat());
                                    e.scene.set({
                                        cameraLongLat: i
                                    }, {
                                        ignore: !0
                                    });
                                    var n = g.default.project(i.clone());
                                    if (!e.map.getExtent().containsLonLat(n))
                                        return e.map.setCenter(n)
                                }
                            }),
                            google.maps.event.addListener(this.panoramaView, "pov_changed", function() {
                                var t = e.panoramaView.getPov(),
                                    i = t.heading;
                                e.scene.set({
                                    cameraHeading: i
                                }, {
                                    ignore: !0
                                })
                            }),
                            google.maps.event.addListener(this.panoramaView, "visible_changed", function() {
                                if (!e.panoramaView.getVisible())
                                    return e._streetViewController.deactivateStreetView()
                            }),
                            this.panoramaView) : this.panoramaView
                    }
                }, {
                    key: "_closePanoramaView",
                    value: function() {
                        this.panoramaView.setVisible(!1)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/StreetView/templates/street-view"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(10),
        c = n(d),
        h = function() {
            function e() {
                (0,
                    o.default)(this, e)
            }
            return (0,
                    u.default)(e, [{
                    key: "find",
                    value: function(e, t, i) {
                        if (0 === t.length)
                            return this.DEFAULT_HEADING;
                        var n = void 0;
                        return n = "segment" === t[0].type ? this._getAngleOfClosestEdge(e, t, i) : this._getContentCentroidAngle(e, t),
                            null === n ? this.DEFAULT_HEADING : c.default.radToDeg(this._angleToHeading(n))
                    }
                }, {
                    key: "_getContentCentroidAngle",
                    value: function(e, t) {
                        var i = t[0].geometry.getCentroid();
                        return Math.atan2(e.lat - i.y, e.lon - i.x)
                    }
                }, {
                    key: "_getAngleOfClosestEdge",
                    value: function(e, t, i) {
                        var n = this._getClosestSegmentInfo(e, t);
                        if (n.distance > i)
                            return null;
                        var s = n.segment,
                            r = new OL.Geometry.Point(n.x0, n.y0),
                            a = c.default.getPointEdge(s.geometry.components, r),
                            o = s.geometry.components[a],
                            l = s.geometry.components[a + 1],
                            u = Math.atan2(o.y - l.y, o.x - l.x);
                        return s.isOneWay() && s.attributes.revDirection && (u += Math.PI),
                            u
                    }
                }, {
                    key: "_getClosestSegmentInfo",
                    value: function(e, t) {
                        var i = new OL.Geometry.Point(e.lon, e.lat),
                            n = t.map(function(e) {
                                var t = e.geometry.distanceTo(i, {
                                    details: !0
                                });
                                return t.segment = e,
                                    t
                            });
                        return _.min(n, function(e) {
                            return e.distance
                        })
                    }
                }, {
                    key: "_angleToHeading",
                    value: function(e) {
                        return 3 * Math.PI / 2 - e
                    }
                }]),
                e
        }();
    (0,
        r.default)(h.prototype, {
        DEFAULT_HEADING: 0
    }),
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(19),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(33),
        f = function() {
            function e(t) {
                (0,
                    u.default)(this, e),
                this.videos = ["intro", "segments", "attributes", "turns", "house_numbers", "permalinks", "places_points", "places_areas"],
                    this.player = null,
                    this.currentVideo = null;
                var i = this;
                this.$element = t,
                    this.videoDetails = I18n.t("tutorial.videos"),
                    this.$element.delegate(".video-menu .video-link", "click", function() {
                        i.onVideoSectionClicked(this.dataset.videoKey)
                    }),
                    this.$element.delegate(".dialog-close-button", "click", function() {
                        i.$element.modal("hide"),
                            i.onDialogClose()
                    }),
                    this.$element.on("show.bs.modal", function() {
                        i.initPlayer()
                    })
            }
            return (0,
                    c.default)(e, [{
                    key: "initPlayer",
                    value: function() {
                        var e = this,
                            t = this.videos[0],
                            i = this.videoDetails[t].video_id;
                        this.getYoutubePlayer().then(function(n) {
                            e.$element.find(".video-menu").show(),
                                e.setSelectedVideoLink(t),
                                e.$element.data("bs.modal").isShown ? n.loadVideoById(i) : n.cueVideoById(i)
                        })
                    }
                }, {
                    key: "onDialogClose",
                    value: function() {
                        this.player && this.player.stopVideo()
                    }
                }, {
                    key: "render",
                    value: function() {
                        return this.$element.html((0,
                            h.getHTML)("templates/tutorial-lightbox", {
                            videos: this.videos
                        }))
                    }
                }, {
                    key: "onVideoSectionClicked",
                    value: function(e) {
                        this.setSelectedVideoLink(e),
                            this.player.loadVideoById(this.videoDetails[e].video_id)
                    }
                }, {
                    key: "setSelectedVideoLink",
                    value: function(e) {
                        this.currentVideo = e,
                            this.$element.find(".video-link").removeClass("active"),
                            this.$element.find(".video-link[data-video-key=" + e + "]").addClass("active")
                    }
                }, {
                    key: "onPlayerStateChanged",
                    value: function(e) {
                        e.data === this.YoutubePlayerStates.End && this.playNextVideo()
                    }
                }, {
                    key: "playNextVideo",
                    value: function() {
                        var e = this.videos.indexOf(this.currentVideo) + 1;
                        e >= this.videos.length && (e = 0);
                        var t = this.videos[e],
                            i = this.videoDetails[t].video_id;
                        this.setSelectedVideoLink(t),
                            0 === e ? this.player.cueVideoById(i) : this.player.loadVideoById(i)
                    }
                }, {
                    key: "_loadScript",
                    value: function(e) {
                        var t = document.createElement("script");
                        document.body.appendChild(t),
                            t.async = !0,
                            t.src = e
                    }
                }, {
                    key: "getYoutubePlayer",
                    value: function() {
                        var e = this,
                            t = this;
                        return null !== this.player ? o.default.resolve(this.player) : (this.render(),
                            new o.default(function(i, n) {
                                e._loadScript("https://www.youtube.com/iframe_api"),
                                    window.onYouTubeIframeAPIReady = function() {
                                        delete window.onYouTubeIframeAPIReady,
                                            new window.YT.Player("tutorial-player", {
                                                height: "481",
                                                width: "800",
                                                playerVars: {
                                                    wmode: "transparent",
                                                    modestbranding: 1,
                                                    rel: 0,
                                                    showinfo: 0,
                                                    showsearch: 0
                                                },
                                                events: {
                                                    onReady: function(e) {
                                                        t.player = e.target,
                                                            i(t.player)
                                                    },
                                                    onStateChange: t.onPlayerStateChanged.bind(t)
                                                }
                                            })
                                    }
                            }))
                    }
                }]),
                e
        }();
    (0,
        r.default)(f.prototype, {
        YoutubePlayerStates: {
            End: 0
        },
        CLASS_NAME: "Waze.View.Tutorial"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(911),
        c = n(d),
        h = i(27),
        f = function() {
            function e(t, i) {
                (0,
                    o.default)(this, e),
                (0,
                    r.default)(this, i),
                this.model = t,
                    this.flashService = new c.default
            }
            return (0,
                    u.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this.flashService.destroy()
                    }
                }, {
                    key: "activate",
                    value: function() {
                        this.model.segments.on(h.CHANGED, this.onSegmentsChanged, this),
                            this.model.segments.on(h.ADDED, this.onSegmentsAdded, this)
                    }
                }, {
                    key: "deactivate",
                    value: function() {
                        this.model.segments.off(h.CHANGED, this.onSegmentsChanged, this),
                            this.model.segments.off(h.ADDED, this.onSegmentsAdded, this)
                    }
                }, {
                    key: "flash",
                    value: function(e) {
                        e instanceof Array ? this.flashService.addFeatures(e) : this.flashService.addFeature(e)
                    }
                }, {
                    key: "onSegmentsChanged",
                    value: function(e) {
                        for (var t = [], i = 0, n = e.length; i < n; i++)
                            e[i].state || t.push(e[i]);
                        t.length > 0 && this.flash(t)
                    }
                }, {
                    key: "onSegmentsAdded",
                    value: function(e) {
                        for (var t = [], i = 0; i < 2; i++)
                            for (var n = 0, s = e.length; n < s; n++)
                                e[n].state === OpenLayers.State.INSERT && e[n].attributes.origIDs && t.push(e[n]);
                        t.length > 0 && this.flash(t)
                    }
                }]),
                e
        }();
    (0,
        r.default)(f.prototype, {
        CLASS_NAME: "Waze.Service.Services"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this.currentIntent = null,
                    this.flashTimeMillis = 100,
                    this.flashIntent = "flash",
                    (0,
                        r.default)(this, t),
                    this.pendingFeatures = [],
                    this.current = null
            }
            return (0,
                    u.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this.pendingFeatures.splice(0, this.pendingFeatures.length)
                    }
                }, {
                    key: "addFeature",
                    value: function(e) {
                        this.pendingFeatures.push(e),
                            this.current || this.flash()
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this.pendingFeatures = this.pendingFeatures.concat(e),
                            this.current || this.flash()
                    }
                }, {
                    key: "flash",
                    value: function() {
                        if (this.current && this.current.layer && this.current.renderIntent === this.flashIntent && this.current.layer.drawFeature(this.current, this.currentIntent),
                            0 === this.pendingFeatures.length)
                            return void(this.current = null);
                        if (this.current = this.pendingFeatures.shift(),
                            this.current = W.map.segmentLayer.getVector(this.current),
                            this.current) {
                            this.currentIntent = this.current.renderIntent,
                                this.current.layer && this.current.layer.drawFeature(this.current, this.flashIntent);
                            var e = this;
                            window.setTimeout(function() {
                                e.flash()
                            }, this.flashTimeMillis)
                        }
                    }
                }]),
                e
        }();
    (0,
        r.default)(d.prototype, {
        CLASS_NAME: "Waze.Service.FlashService"
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(6),
        a = n(r),
        o = i(7),
        l = n(o),
        u = i(0),
        d = n(u),
        c = i(1),
        h = n(c),
        f = i(17),
        p = n(f),
        g = i(35),
        m = n(g),
        v = i(128),
        _ = n(v),
        y = i(22),
        b = n(y),
        w = i(121),
        E = n(w),
        k = i(230),
        M = n(k),
        S = i(913),
        T = n(S),
        C = i(168),
        I = n(C),
        A = i(914),
        D = n(A),
        R = i(179),
        O = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(R),
        L = i(930),
        x = n(L),
        P = (s = {},
            (0,
                p.default)(s, O.GROUP_ISSUES, !0),
            (0,
                p.default)(s, O.GROUP_MAP_ISSUES, !1),
            (0,
                p.default)(s, O.ITEM_MAP_PROBLEMS, !0),
            (0,
                p.default)(s, O.ITEM_CLOSED_MAP_PROBLEMS, !1),
            (0,
                p.default)(s, O.ITEM_UPDATE_REQUESTS, !0),
            (0,
                p.default)(s, O.ITEM_CLOSED_UPDATE_REQUESTS, !1),
            (0,
                p.default)(s, O.ITEM_PLACE_UPDATE_REQUESTS, !1),
            (0,
                p.default)(s, O.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, !1),
            (0,
                p.default)(s, O.GROUP_PARKING_ISSUES, !1),
            (0,
                p.default)(s, O.ITEM_PARKING_MAP_PROBLEMS, !0),
            (0,
                p.default)(s, O.ITEM_PARKING_CLOSED_MAP_PROBLEMS, !1),
            (0,
                p.default)(s, O.ITEM_PARKING_PLACE_UPDATE_REQUESTS, !0),
            (0,
                p.default)(s, O.GROUP_PLACES, !0),
            (0,
                p.default)(s, O.ITEM_VENUES, !0),
            (0,
                p.default)(s, O.ITEM_RESIDENTIAL_PLACES, !1),
            (0,
                p.default)(s, O.ITEM_PARKING_PLACES, !1),
            (0,
                p.default)(s, O.GROUP_ROAD, !0),
            (0,
                p.default)(s, O.ITEM_ROAD, !0),
            (0,
                p.default)(s, O.ITEM_JUNCTION_BOXES, !1),
            (0,
                p.default)(s, O.ITEM_CLOSURES, !1),
            (0,
                p.default)(s, O.ITEM_SPEED_CAMERAS, !1),
            (0,
                p.default)(s, O.GROUP_DISPLAY, !0),
            (0,
                p.default)(s, O.ITEM_SATELLITE_IMAGERY, !0),
            (0,
                p.default)(s, O.ITEM_AREA_MANAGERS, !1),
            (0,
                p.default)(s, O.ITEM_GPS_POINTS, !1),
            (0,
                p.default)(s, O.ITEM_LIVE_USERS, !1),
            (0,
                p.default)(s, O.ITEM_EDITABLE_AREAS, !1),
            (0,
                p.default)(s, O.ITEM_EDITABLE_AREAS, !1),
            s),
        N = function() {
            function e(t) {
                (0,
                    d.default)(this, e),
                this._LOCAL_STORAGE_KEY = "togglersState",
                    this._tree = t,
                    this._togglers = this._getTogglersMap(),
                    this._bitFieldSerializer = new x.default
            }
            return (0,
                    h.default)(e, [{
                    key: "_getTogglersMap",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t) {
                                e[t.getId()] = t
                            }),
                            e
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        var t = this;
                        (0,
                            l.default)(e).forEach(function(i) {
                                var n = e[i];
                                t._togglers[i].setState(n)
                            }),
                            this.trigger("change")
                    }
                }, {
                    key: "writeStateToApp",
                    value: function(e) {
                        this._eachToggler(this._tree, !0, function(t, i) {
                            t.writeStateToApp(i && t.getState(), e)
                        })
                    }
                }, {
                    key: "getState",
                    value: function() {
                        var e = (0,
                            a.default)({}, this._togglers);
                        return (0,
                                l.default)(e).forEach(function(t) {
                                e[t] = e[t].getState()
                            }),
                            e
                    }
                }, {
                    key: "append",
                    value: function(e, t) {
                        this._togglers[e].appendChild(t),
                            this._togglers = this._getTogglersMap()
                    }
                }, {
                    key: "_eachToggler",
                    value: function(e, t, i) {
                        var n = this;
                        e.getChildren().forEach(function(e) {
                            i(e, t),
                                e.isLeaf() || n._eachToggler(e, t && e.getState(), i)
                        })
                    }
                }, {
                    key: "getTreeState",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t, i) {
                                e[t.getId()] = i
                            }),
                            e
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return this._bitFieldSerializer.convertStateToBitfield(this.getState())
                    }
                }, {
                    key: "setStateFromBitfield",
                    value: function(e) {
                        var t = this._bitFieldSerializer.convertBitFieldToState(e);
                        this.setState(t)
                    }
                }, {
                    key: "readFromLocalStorage",
                    value: function() {
                        var e = b.default.localStorage.get(this._LOCAL_STORAGE_KEY);
                        null != e && this.setStateFromBitfield(e)
                    }
                }, {
                    key: "writeToLocalStorage",
                    value: function() {
                        b.default.localStorage.set(this._LOCAL_STORAGE_KEY, this.serialize())
                    }
                }], [{
                    key: "create",
                    value: function() {
                        var t = _.default.LAYER_UNIQUE_NAMES,
                            i = O,
                            n = new e(M.default.of("ROOT", [M.default.of(i.GROUP_ISSUES, [M.default.of(i.GROUP_MAP_ISSUES, [E.default.of(i.ITEM_MAP_PROBLEMS, new T.default("problems", "ALL", "OPEN")), E.default.of(i.ITEM_CLOSED_MAP_PROBLEMS, new T.default("problems", "ALL", "CLOSED")), E.default.of(i.ITEM_UPDATE_REQUESTS, new T.default("mapUpdateRequests", "ALL", "OPEN")), E.default.of(i.ITEM_CLOSED_UPDATE_REQUESTS, new T.default("mapUpdateRequests", "ALL", "CLOSED"))]), E.default.of(i.ITEM_PLACE_UPDATE_REQUESTS, [new T.default("venues", "ALL", "UPDATE_REQUEST"), new I.default(t.PLACE_UPDATES)]), E.default.of(i.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, [new T.default("venues", "RESIDENTIAL", "UPDATE_REQUEST"), new I.default("RESIDENTIAL_PLACE_UPDATES")]), M.default.of(i.GROUP_PARKING_ISSUES, [E.default.of(i.ITEM_PARKING_MAP_PROBLEMS, new T.default("problems", "PARKING", "OPEN")), E.default.of(i.ITEM_PARKING_CLOSED_MAP_PROBLEMS, new T.default("problems", "PARKING", "CLOSED")), E.default.of(i.ITEM_PARKING_PLACE_UPDATE_REQUESTS, [new T.default("venues", "PARKING", "UPDATE_REQUEST"), new I.default("PARKING_PLACE_UPDATES")])])]), M.default.of(i.GROUP_PLACES, [E.default.of(i.ITEM_VENUES, new T.default("venues", "ALL", "SHOW")), E.default.of(i.ITEM_RESIDENTIAL_PLACES, new T.default("venues", "RESIDENTIAL", "SHOW")), E.default.of(i.ITEM_PARKING_PLACES, new T.default("venues", "PARKING", "SHOW"))]), M.default.of(i.GROUP_ROAD, [E.default.of(i.ITEM_ROAD, new I.default(t.ROADS)), E.default.of(i.ITEM_JUNCTION_BOXES, new I.default(t.BIG_JUNCTIONS)), E.default.of(i.ITEM_CLOSURES, new I.default(t.CLOSURES)), E.default.of(i.ITEM_SPEED_CAMERAS, new I.default(t.SPEED_CAMERAS))]), M.default.of(i.GROUP_DISPLAY, [E.default.of(i.ITEM_SATELLITE_IMAGERY, new I.default(t.SATELLITE_IMAGERY)), E.default.of(i.ITEM_AREA_MANAGERS, new I.default(t.AREA_MANAGERS)), E.default.of(i.ITEM_GPS_POINTS, new I.default(t.GPS_POINTS)), E.default.of(i.ITEM_EDITABLE_AREAS, new I.default(t.EDITABLE_AREAS)), E.default.of(i.ITEM_LIVE_USERS, new I.default(t.LIVE_USERS)), E.default.of(i.ITEM_DISALLOWED_TURNS, new D.default)])])),
                            s = m.default.getLayerSwitcherConfig(),
                            r = (0,
                                a.default)({}, P);
                        return s.forEach(function(e) {
                                e.togglers.forEach(function(e) {
                                        return n.append(e.parent, e.toggler)
                                    }),
                                    (0,
                                        a.default)(r, e.defaultVisibility)
                            }),
                            n.setState(r),
                            n
                    }
                }]),
                e
        }();
    (0,
        a.default)(N.prototype, Backbone.Events),
    t.default = N,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._repoName = t,
                    this._categoryName = i,
                    this._attributeName = n
            }
            return (0,
                    o.default)(e, [{
                    key: "writeStateToApp",
                    value: function(e, t) {
                        t.dataModel[this._repoName].filter.setAttribute(this._categoryName, this._attributeName, e)
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(915),
        u = n(l),
        d = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._disallowedTurnsEditor = null
            }
            return (0,
                    o.default)(e, [{
                    key: "writeStateToApp",
                    value: function(e, t) {
                        !1 === e ? null !== this._disallowedTurnsEditor && (this._disallowedTurnsEditor.destroy(),
                            this._disallowedTurnsEditor = null) : null === this._disallowedTurnsEditor && (this._disallowedTurnsEditor = new u.default(t.map.getDrawingContext(), t.dataModel, W.prefs),
                            this._disallowedTurnsEditor.draw())
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(270),
        c = n(d),
        h = i(98),
        f = function() {
            function e(t, i, n) {
                (0,
                    o.default)(this, e),
                this._drawingContext = t,
                    this._dataModel = i,
                    this._appPreferences = n,
                    this._turnArrowViewGenerator = new c.default(this._drawingContext, this._dataModel, this._appPreferences, {
                        includeJunctionTurns: !1,
                        includeUturns: !1,
                        includeOnlyDisallowedTurns: !0
                    }),
                    this._drawingContext.on("zoomend", this.draw, this),
                    this._appPreferences.on("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                    this._dataModel.getTurnGraph().on(h.CHANGE_EVENT, this.draw, this)
            }
            return (0,
                    u.default)(e, [{
                    key: "draw",
                    value: function() {
                        var e, t = this;
                        this._drawingContext.clear();
                        var i = this._getAllVisibleSegment().map(function(e) {
                            return t._turnArrowViewGenerator.generate(e)
                        });
                        (e = []).concat.apply(e, (0,
                            r.default)(i)).forEach(function(e) {
                            return e.render()
                        })
                    }
                }, {
                    key: "_getAllVisibleSegment",
                    value: function() {
                        var e = this;
                        return this._dataModel.segments.getObjectArray(function(t) {
                            return !t.isDeleted() && t.isDrivable() && t.geometry.bounds.intersectsBounds(e._drawingContext.getMapExtent())
                        })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this._drawingContext.off("zoomend", this.draw, this),
                            this._drawingContext.destroy(),
                            this._appPreferences.off("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                            this._dataModel.getTurnGraph().off(h.CHANGE_EVENT, this.draw, this)
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(26),
        v = n(m),
        _ = i(37),
        y = n(_),
        b = i(271),
        w = n(b),
        E = i(917),
        k = n(E),
        M = i(927),
        S = n(M),
        T = i(274),
        C = i(275),
        I = n(C),
        A = i(10),
        D = n(A),
        R = function(e) {
            function t(e) {
                (0,
                    u.default)(this, t);
                var i = new v.default("turn-arrow disabled");
                e.el = i.div;
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, e));
                return n._divIcon = i,
                    n
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "initialize",
                    value: function() {
                        this._turnArrow = this.options.turnArrow,
                            this._drawingContext = this.options.drawingContext,
                            this._marker = null,
                            this._dataModel = this.options.dataModel,
                            this._offset = 0
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            arrow: ".arrow"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "mouseenter .arrow": "_onArrowMouseEnter",
                            "mouseleave .arrow": "_onArrowMouseLeave",
                            "click .arrow": "_onArrowClicked",
                            "click .restrictions": "_onRestrictionsClicked",
                            "click .instruction-override-button": "_onInstructionOverrideClicked",
                            "click .segment-path-button": "_onSegmentPathClicked"
                        }
                    }
                }, {
                    key: "setOffset",
                    value: function(e) {
                        this._offset = e
                    }
                }, {
                    key: "getTurnArrow",
                    value: function() {
                        return this._turnArrow
                    }
                }, {
                    key: "doOver",
                    value: function() {
                        this._onArrowMouseEnter(),
                            this.trigger("bigtooltip:show")
                    }
                }, {
                    key: "doOut",
                    value: function() {
                        this._onArrowMouseLeave(),
                            this.trigger("bigtooltip:hide")
                    }
                }, {
                    key: "_calculateArrowPixel",
                    value: function(e) {
                        var t = new OpenLayers.LonLat(e.getPoint().x, e.getPoint().y);
                        return W.map.getPixelFromLonLat(t)
                    }
                }, {
                    key: "calculateArrowLonlat",
                    value: function(e) {
                        var i = this._drawingContext.pixelToMapUnits(e.getDistanceFromPoint() + t.ARROW_HEIGHT_IN_PIXELS * this._offset),
                            n = D.default.degToRad(e.getAngle()),
                            s = new OpenLayers.LonLat(e.getPoint().x + Math.cos(n) * i, e.getPoint().y + Math.sin(n) * i);
                        if (e.getTurn().isUturn()) {
                            var r = n - Math.PI / 2,
                                a = this._drawingContext.pixelToMapUnits(t.UTURN_ARROW_OFFSET_IN_PIXELS);
                            this.options.isLeftHand && (r += Math.PI),
                                s.lon += Math.cos(r) * a,
                                s.lat += Math.sin(r) * a
                        }
                        return s
                    }
                }, {
                    key: "_onArrowMouseEnter",
                    value: function() {
                        this.ui.arrow.addClass("hover"),
                            this.$el.addClass("hover"),
                            this.trigger("mouseenter", this)
                    }
                }, {
                    key: "_onArrowMouseLeave",
                    value: function() {
                        this.ui.arrow.removeClass("hover"),
                            this.$el.removeClass("hover"),
                            this.trigger("mouseleave")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this._turnArrow,
                            t = e.getTurn(),
                            i = t.getTurnData().isNonDifficultTimeRestricted(),
                            n = t.getTurnData().isAllowed(),
                            s = [];
                        return this.options.transparent && s.push("disabled"),
                            this.options.isLeftHand && s.push("lefthand"),
                            t.getTurnData().isDifficult() && s.push("difficult"),
                            e.getTurn().isUturn() && s.push("uturn"),
                            n ? (s.push("open"),
                                i && s.push("restricted")) : s.push("closed"), {
                                angle: (450 - e.getAngle()) % 360,
                                turnAllowed: n,
                                arrowClasses: s.join(" ")
                            }
                    }
                }, {
                    key: "onTooltipEnter",
                    value: function() {
                        this.doOver()
                    }
                }, {
                    key: "onTooltipLeave",
                    value: function() {
                        this.doOut()
                    }
                }, {
                    key: "_createTooltipView",
                    value: function() {
                        var e = this.options.turnArrow,
                            t = {
                                turnArrow: e,
                                editable: e.isEditable(),
                                dataModel: this._dataModel
                            },
                            i = e.getTurn().getTurnData().isAllowed(),
                            n = null;
                        return i ? n = new k.default(t) : e.hasMultiplePaths() && (n = new k.default((0,
                                r.default)({}, t, {
                                pathSelectorOnly: !0
                            }))),
                            n
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        null === this._marker && (this._marker = new OL.Marker(this.calculateArrowLonlat(this._turnArrow), this._divIcon),
                            this._drawingContext.addMarkers([this._marker]))
                    }
                }, {
                    key: "_onArrowClicked",
                    value: function(e) {
                        if (e.stopPropagation(),
                            this._turnArrow.isEditable()) {
                            var t = new w.default(this._turnArrow.getTurn());
                            this._dataModel.actionManager.add(t)
                        }
                    }
                }, {
                    key: "_onSegmentPathClicked",
                    value: function(e) {
                        e.stopPropagation(),
                            this._dataModel.actionManager.add(new y.default(this._dataModel.getTurnGraph(), this._turnArrow.getNextPossibleTurn()))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/turn-arrow"
                    }
                }, {
                    key: "behaviors",
                    get: function() {
                        var e = this;
                        return [{
                            behaviorClass: S.default,
                            size: {
                                w: W.map.size.w,
                                h: W.map.size.h
                            },
                            padding: {
                                top: 30,
                                bottom: 30,
                                left: 50,
                                right: 50
                            },
                            hoverElement: ".arrow",
                            getView: this._createTooltipView.bind(this),
                            getPosition: function() {
                                return e._calculateArrowPixel(e.options.turnArrow)
                            },
                            getVerticalPlacement: function() {
                                var t = e.options.turnArrow;
                                if (t instanceof I.default) {
                                    var i = t.getAngle();
                                    if (i >= -135 && i <= -45)
                                        return T.BIG_TOOLTIP_VERT_PLACEMENTS.BOTTOM
                                }
                                return null
                            },
                            getHorizontalPlacement: function() {
                                var t = e.options.turnArrow;
                                if (t instanceof I.default) {
                                    var i = t.getAngle();
                                    if (i >= -45 && i <= 45)
                                        return T.BIG_TOOLTIP_HORIZ_PLACEMENTS.RIGHT;
                                    if (i >= 135 || i <= -135)
                                        return T.BIG_TOOLTIP_HORIZ_PLACEMENTS.LEFT
                                }
                                return null
                            }
                        }]
                    }
                }]),
                t
        }(Marionette.View);
    R.ARROW_HEIGHT_IN_PIXELS = 40,
        R.ARROW_DISTANCE_FROM_NODE_IN_PIXELS = 20,
        R.UTURN_ARROW_OFFSET_IN_PIXELS = 18,
        t.default = R,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(13),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(918),
        y = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(_),
        b = i(919),
        w = n(b),
        E = i(37),
        k = n(E),
        M = i(90),
        S = i(33),
        T = function(e) {
            function t(e) {
                (0,
                    c.default)(this, t);
                var i = (0,
                    g.default)(this, (t.__proto__ || (0,
                    u.default)(t)).call(this, e));
                i._turnArrow = e.turnArrow,
                    i._turn = i._turnArrow.getTurn(),
                    i._dataModel = i.options.dataModel,
                    i._editable = e.editable,
                    i._restrictions = i._turn.getTurnData().getRestrictions();
                var n = i._turnArrow.hasMultiplePaths();
                return i.model = new Backbone.Model({
                        opcode: i._turn.getTurnData().getInstructionOpcode(),
                        editable: i._editable,
                        hasRestrictions: i._turn.getTurnData().isNonDifficultTimeRestricted(),
                        hasMultiplePaths: n,
                        tbrTooltip: i._getTBRTooltip()
                    }),
                    n && i._updateCounts(),
                    i
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "templateContext",
                    value: function() {
                        var e = this._dataModel.segments.get(this._turn.getToVertex().getSegmentID()),
                            t = e.getAddress(),
                            i = null;
                        return null != t && (i = t.getStreetName()), {
                            toStreet: i,
                            pathSelectorOnly: Boolean(this.options.pathSelectorOnly),
                            canEditDifficultTurns: this._canEditDifficultTurn(),
                            canEditInstructionOverride: this._shouldAllowIOEditing(),
                            allowRestrictionEditing: this._shouldAllowRestrictionEditing()
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click @ui.editRestrictionsButton": "_editRestrictions",
                            "click @ui.prevPathButton": "_selectPrevPath",
                            "click @ui.nextPathButton": "_selectNextPath",
                            "click @ui.tbrButton": "_openTimeBasedRestrictions"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            editRestrictionsButton: ".edit-restrictions",
                            prevPathButton: ".prev-path-button",
                            nextPathButton: ".next-path-button",
                            tbrButton: ".time-based-restrictions-button",
                            difficultFalseLabel: "label[for=difficult_false]"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            ".opcode-select": {
                                observe: "opcode",
                                onGet: function() {
                                    return this._turn.getTurnData().getInstructionOpcode()
                                },
                                onSet: function(e) {
                                    var t = this._turn.getTurnData().withInstructionOpcode(e),
                                        i = new k.default(this._dataModel.getTurnGraph(), this._turn.withTurnData(t));
                                    this._dataModel.actionManager.add(i)
                                },
                                selectOptions: {
                                    collection: this._getOpcodeOptions,
                                    defaultOption: {
                                        label: I18n.t("turn_tooltip.instruction_override.no_opcode"),
                                        value: null
                                    }
                                }
                            },
                            "[name=isDifficult]": {
                                observe: "isDifficult",
                                onGet: function() {
                                    return this._turn.getTurnData().isDifficult() ? "true" : "false"
                                },
                                onSet: function(e) {
                                    this._updateIsTurnDifficult("true" === e)
                                },
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return !this._canEditDifficultTurn()
                                    }
                                }]
                            },
                            "#difficult_false": {
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return !e._canEditDifficultTurn() || e._hasDifficultTimeBasedRestrictions()
                                    }
                                }]
                            },
                            "#difficult_label": {
                                classes: {
                                    disabled: {
                                        onGet: function() {
                                            return !this._canEditDifficultTurn()
                                        }
                                    }
                                }
                            },
                            ".path-progress": {
                                observe: ["currentPathNum", "pathCount"],
                                onGet: function(e) {
                                    var t = (0,
                                        o.default)(e, 2);
                                    return t[0] + 1 + "/" + t[1]
                                }
                            },
                            ".time-based-restrictions-button": {
                                onGet: function() {
                                    return this._turn.getTurnData().isDifficult()
                                },
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.toggleClass("hidden", !t)
                                },
                                classes: {
                                    "has-tbrs": {
                                        onGet: function() {
                                            return this._hasDifficultTimeBasedRestrictions()
                                        }
                                    },
                                    disabled: {
                                        onGet: function() {
                                            return !this._canOpenTimeBasedRestrictionDialog()
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "_hasDifficultTimeBasedRestrictions",
                    value: function() {
                        return this._turn.getTurnData().isDifficultTimeRestricted()
                    }
                }, {
                    key: "_canOpenTimeBasedRestrictionDialog",
                    value: function() {
                        return this._canEditDifficultTurn() || this._hasDifficultTimeBasedRestrictions()
                    }
                }, {
                    key: "_canEditDifficultTurn",
                    value: function() {
                        return this._turnArrow.isEditable() && W.loginManager.user.canEditDifficultTurns() && !this.options.pathSelectorOnly
                    }
                }, {
                    key: "_getCantEditReason",
                    value: function() {
                        if (!this._turn.getTurnData().hasSegmentPath()) {
                            return this._turnArrow.isLockedByHigherRank() || !W.loginManager.user.canEditDifficultTurns() ? I18n.t("turn_tooltip.cant_edit_difficult_turn") : I18n.t("turn_tooltip.cant_edit_difficult_turn_area")
                        }
                        return null
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit();
                        var e = this._getCantEditReason();
                        e && this.$(".waze-lock-tooltip").tooltip({
                                container: "body",
                                title: e
                            }),
                            this._canEditDifficultTurn() && (this.ui.tbrButton.tooltip({
                                    container: "body",
                                    title: this._getTBRTooltip(),
                                    html: !0
                                }),
                                this._hasDifficultTimeBasedRestrictions() && this.ui.difficultFalseLabel.tooltip({
                                    container: "body",
                                    title: I18n.t("turn_tooltip.remove_tbrs_first")
                                }))
                    }
                }, {
                    key: "_getOpcodeOptions",
                    value: function() {
                        var e = I18n.t("turn_tooltip.instruction_override.opcodes");
                        return (0,
                            r.default)(y).map(function(t) {
                            return {
                                value: t,
                                label: e[t]
                            }
                        })
                    }
                }, {
                    key: "_editRestrictions",
                    value: function() {
                        W.app.layout.getRegion("dialogRegion").show(new w.default({
                            turn: this._turn,
                            dataModel: this._dataModel,
                            canEditRestrictions: this._editable
                        }))
                    }
                }, {
                    key: "_updateIsTurnDifficult",
                    value: function(e) {
                        var t = this._turn.getTurnData().withoutDifficultRestrictions().withSimpleDifficulty(e),
                            i = this._turn.withTurnData(t);
                        this._dataModel.actionManager.add(new k.default(this._dataModel.getTurnGraph(), i))
                    }
                }, {
                    key: "_shouldAllowRestrictionEditing",
                    value: function() {
                        return W.Config.restrictions.allowEditing && this._turnArrow.isEditable()
                    }
                }, {
                    key: "_shouldAllowIOEditing",
                    value: function() {
                        return this._turnArrow.isEditable()
                    }
                }, {
                    key: "_updateCounts",
                    value: function() {
                        this.model.set({
                            currentPathNum: this._turnArrow.getCurrentPossibleTurnIndex(),
                            pathCount: this._turnArrow.getPossibleTurnCount()
                        })
                    }
                }, {
                    key: "_selectPrevPath",
                    value: function() {
                        this._dataModel.actionManager.add(new k.default(this._dataModel.getTurnGraph(), this._turnArrow.getPrevPossibleTurn())),
                            this._updateCounts()
                    }
                }, {
                    key: "_selectNextPath",
                    value: function() {
                        this._dataModel.actionManager.add(new k.default(this._dataModel.getTurnGraph(), this._turnArrow.getNextPossibleTurn())),
                            this._updateCounts()
                    }
                }, {
                    key: "_openTimeBasedRestrictions",
                    value: function() {
                        if (this._canOpenTimeBasedRestrictionDialog()) {
                            var e = null,
                                t = this._turn.getTurnData().getRestrictions();
                            1 === t.length && t[0].isSimplyDifficult() && (e = t[0]),
                                W.app.layout.getRegion("dialogRegion").show(new w.default({
                                    turn: this._turn,
                                    dataModel: this._dataModel,
                                    canEditRestrictions: this._editable,
                                    editingDifficultTurn: !0,
                                    restrictionToEdit: e
                                }))
                        }
                    }
                }, {
                    key: "_getTBRTooltip",
                    value: function() {
                        if (!this._hasDifficultTimeBasedRestrictions())
                            return I18n.t("turn_tooltip.no_tbr_tooltip");
                        var e = this._turn.getTurnData().getRestrictions().filter(function(e) {
                            return e.isDifficult()
                        }).map(function(e) {
                            var t = new M.TimeFrameViewHelpers({
                                timeFrame: e.getTimeFrame()
                            });
                            return t.formatWeekdays() + " " + t.formatHours()
                        });
                        return (0,
                            S.getHTML)("templates/turn-arrow-tooltip-timeframes", {
                            timeFrames: e
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/turn-arrow-tooltip"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = T,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.NONE = "NONE",
        t.TURN_LEFT = "TURN_LEFT",
        t.TURN_RIGHT = "TURN_RIGHT",
        t.KEEP_LEFT = "KEEP_LEFT",
        t.KEEP_RIGHT = "KEEP_RIGHT",
        t.CONTINUE = "CONTINUE",
        t.EXIT_LEFT = "EXIT_LEFT",
        t.EXIT_RIGHT = "EXIT_RIGHT",
        t.UTURN = "UTURN"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(37),
        g = n(p),
        m = i(49),
        v = i(159),
        _ = n(v),
        y = i(39),
        b = n(y),
        w = i(90),
        E = i(272),
        k = n(E),
        M = i(926),
        S = n(M),
        T = i(174),
        C = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: {
                                el: ".modal-content",
                                regionClass: T.DialogContentRegion,
                                onEscapeKeydown: this._onEscapeKeydown.bind(this)
                            }
                        }
                    }
                }, {
                    key: "_onEscapeKeydown",
                    value: function(e) {
                        if (this.getChildView("contentRegion") instanceof k.default)
                            return e.preventDefault(),
                                this._showSummaryView(), !1
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._turn = e.turn,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._restrictions = this._turn.getTurnData().getRestrictions(),
                            this._viewHelpers = new w.TurnRestrictionViewHelpers({
                                turn: this._turn,
                                dataModel: this._dataModel
                            })
                    }
                }, {
                    key: "_restrictionDisplayFilter",
                    value: function(e) {
                        return this.options.editingDifficultTurn ? e.getDefaultType() === m.RESTRICTION_TYPE.DIFFICULT : e.getDefaultType() !== m.RESTRICTION_TYPE.DIFFICULT
                    }
                }, {
                    key: "_shouldShowSummaryView",
                    value: function() {
                        return !this.options.canEditRestrictions || null == this.options.restrictionToEdit && this._restrictions.some(this._restrictionDisplayFilter.bind(this))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.options.restrictionToEdit ? this._showEditView({
                            restriction: this.options.restrictionToEdit,
                            isNewRestriction: !1
                        }) : this._shouldShowSummaryView() ? this._showSummaryView() : this._showCreateTurnRestrictionView()
                    }
                }, {
                    key: "onChildviewRestrictionItemEdit",
                    value: function(e) {
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !1
                        })
                    }
                }, {
                    key: "onChildviewRestrictionItemDelete",
                    value: function(e) {
                        var t = this._restrictions.indexOf(e);
                        this._restrictions.splice(t, 1),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCancel",
                    value: function() {
                        this._shouldShowSummaryView() ? this._showSummaryView() : this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionEditUpdate",
                    value: function(e, t) {
                        var i = this._restrictions.indexOf(e);
                        this._restrictions.splice(i, 1, t),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCreate",
                    value: function(e) {
                        this._restrictions.every(function(t) {
                                return !t.equals(e)
                            }) && this._restrictions.push(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryClose",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryCreate",
                    value: function() {
                        this._showCreateTurnRestrictionView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryApply",
                    value: function(e) {
                        this._updateTurnGraph(),
                            this.destroy()
                    }
                }, {
                    key: "_showSummaryView",
                    value: function() {
                        var e = this._turn.getTurnData().withRestrictions(this._restrictions.filter(this._restrictionDisplayFilter.bind(this))),
                            t = this._turn.withTurnData(e);
                        this.showChildView("contentRegion", new S.default({
                            turn: t,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            title: this.options.editingDifficultTurn ? this._viewHelpers.getDifficultSummaryTitle() : this._viewHelpers.getSummaryTitle()
                        }))
                    }
                }, {
                    key: "_showEditView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.restriction,
                            i = e.isNewRestriction,
                            n = void 0 !== i && i;
                        this.showChildView("contentRegion", new k.default({
                            restriction: t,
                            isNewRestriction: n,
                            canEditRestrictions: this._canEditRestrictions,
                            canAddTollRestriction: !1,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            editingTitle: this._viewHelpers.getEditingTitle(t)
                        }))
                    }
                }, {
                    key: "_showCreateTurnRestrictionView",
                    value: function() {
                        var e = this._turn.getTurnData().hasSegmentPath(),
                            t = void 0,
                            i = this.options.editingDifficultTurn ? m.RESTRICTION_TYPE.DIFFICULT : m.RESTRICTION_TYPE.FREE;
                        t = e ? new b.default({
                                direction: null,
                                defaultType: i
                            }) : new _.default({
                                defaultType: i
                            }),
                            this._showEditView({
                                restriction: t,
                                isNewRestriction: !0
                            })
                    }
                }, {
                    key: "_updateTurnGraph",
                    value: function() {
                        var e = this._turn.getTurnData().withRestrictions(this._restrictions),
                            t = this._turn.withTurnData(e);
                        this._dataModel.actionManager.add(new g.default(this._dataModel.getTurnGraph(), t))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "template",
                    value: function(e) {
                        return e.message
                    }
                }, {
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "restriction-validation-error"
                    }
                }]),
                t
        }(Marionette.View),
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return p
                    }
                }]),
                t
        }(Marionette.CollectionView),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                errorMessages: []
                            },
                            t = e.errorMessages.map(function(e) {
                                return new Backbone.Model({
                                    message: e
                                })
                            });
                        this.collection = new Backbone.Collection(t)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("collectionRegion", new g({
                            collection: this.collection
                        }))
                    }
                }, {
                    key: "isValid",
                    value: function() {
                        return 0 === this.collection.length
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restriction_edit_validation"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(39),
        v = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getSegmentData",
                    value: function() {
                        var e = this.attributes;
                        return {
                            laneType: e.laneType,
                            disposition: e.disposition
                        }
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            disposition: e.getDisposition(),
                            laneType: e.getLaneType()
                        })
                    }
                }]),
                t
        }(Backbone.Model),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=laneType]": {
                                observe: "laneType",
                                selectOptions: {
                                    collection: "this._laneTypeOptions",
                                    defaultOption: {
                                        value: null,
                                        label: I18n.t("restrictions.editing.segment.laneType.NONE")
                                    }
                                }
                            },
                            "[name=disposition]": {
                                observe: "disposition",
                                selectOptions: {
                                    collection: "this._dispositionOptions"
                                }
                            },
                            select: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._laneTypeOptions = this._getLaneTypeOptions(),
                            this._dispositionOptions = this._getDispositionOptions()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.getSegmentData()
                    }
                }, {
                    key: "_getLaneTypeOptions",
                    value: function() {
                        var e = (0,
                            r.default)(m.RESTRICTION_SEGMENT_LANE_TYPE).map(function(e) {
                            return {
                                value: m.RESTRICTION_SEGMENT_LANE_TYPE[e],
                                label: I18n.t("restrictions.editing.segment.laneType." + e)
                            }
                        });
                        return _.sortBy(e, "label")
                    }
                }, {
                    key: "_getDispositionOptions",
                    value: function() {
                        return (0,
                            r.default)(m.RESTRICTION_SEGMENT_DISPOSITION).map(function(e) {
                            return {
                                value: m.RESTRICTION_SEGMENT_DISPOSITION[e],
                                label: I18n.t("restrictions.editing.segment.disposition." + e)
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restriction_edit_segment"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "segment-restriction-edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = v.for(e);
                        return r.set({
                                restrictionEditable: s
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ViewModel = void 0;
    var s = i(17),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(13),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(0),
        f = n(h),
        p = i(1),
        g = n(p),
        m = i(3),
        v = n(m),
        _ = i(4),
        y = n(_),
        b = i(49),
        w = i(112),
        E = n(w),
        k = function(e) {
            function t() {
                return (0,
                        f.default)(this, t),
                    (0,
                        v.default)(this, (t.__proto__ || (0,
                        c.default)(t)).apply(this, arguments))
            }
            return (0,
                    y.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "getDriveProfileData",
                    value: function() {
                        return {
                            vehicleTypes: this.isAllVehicles() ? [] : this.attributes.vehicleTypes
                        }
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return this.attributes.isAllVehicles
                    }
                }, {
                    key: "hasVehicleTypes",
                    value: function() {
                        return this.attributes.vehicleTypes.length > 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.isAllVehicles() || this.hasVehicleTypes() || e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            isAllVehicles: e.isAllVehicles(),
                            vehicleTypes: e.getVehicleTypes()
                        })
                    }
                }]),
                t
        }(Backbone.Model),
        M = function(e) {
            function t() {
                return (0,
                        f.default)(this, t),
                    (0,
                        v.default)(this, (t.__proto__ || (0,
                        c.default)(t)).apply(this, arguments))
            }
            return (0,
                    y.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "getHelpMessage",
                    value: function() {
                        return this.model.isAllVehicles() ? I18n.t("restrictions.editing.driving.no_vehicles_allowed") : I18n.t("restrictions.editing.driving.other_vehicles_allowed")
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:isAllVehicles": "_onAllVehiclesChange"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=isAllVehicles]": {
                                observe: "isAllVehicles",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".vehicle-type": {
                                observe: "vehicleTypes",
                                onGet: function(e) {
                                    return e.map(function(e) {
                                        return e.toString()
                                    })
                                },
                                onSet: function(e) {
                                    return e.map(function(e) {
                                        return parseInt(e, 10)
                                    })
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllVehicles", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                u.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return i || !n
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onAllVehiclesChange",
                    value: function() {
                        this.triggerMethod("change:helpMessage")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getVehicleTypes: function() {
                                return (0,
                                    o.default)(w.VEHICLE_TYPES).sort().map(function(e) {
                                    return {
                                        key: e,
                                        value: w.VEHICLE_TYPES[e]
                                    }
                                })
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.isAllVehicles() ? {
                            defaultType: b.RESTRICTION_TYPE.BLOCKED,
                            driveProfiles: {}
                        } : {
                            defaultType: b.RESTRICTION_TYPE.FREE,
                            driveProfiles: (0,
                                r.default)({}, b.RESTRICTION_TYPE.BLOCKED, [this.model.getDriveProfileData()])
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/drive_profile_blocked_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = e.getDriveProfileList(b.RESTRICTION_TYPE.BLOCKED),
                            a = r.getDriveProfiles(),
                            o = void 0;
                        if (0 === a.length)
                            o = new E.default;
                        else {
                            if (1 !== a.length)
                                throw new TypeError("Expected 1 driveProfile (got " + a.length + ")");
                            o = a[0]
                        }
                        var l = k.for(o);
                        return l.set({
                                restrictionEditable: s
                            }),
                            new t({
                                model: l
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = M,
        t.ViewModel = k
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DriveProfileItemViewModel = void 0;
    var s = i(17),
        r = n(s),
        a = i(13),
        o = n(a),
        l = i(7),
        u = n(l),
        d = i(6),
        c = n(d),
        h = i(9),
        f = n(h),
        p = i(2),
        g = n(p),
        m = i(0),
        v = n(m),
        y = i(1),
        b = n(y),
        w = i(3),
        E = n(w),
        k = i(4),
        M = n(k),
        S = i(49),
        T = i(112),
        C = T.VEHICLE_TYPES.PRIVATE,
        I = function(e) {
            function t() {
                return (0,
                        v.default)(this, t),
                    (0,
                        E.default)(this, (t.__proto__ || (0,
                        g.default)(t)).apply(this, arguments))
            }
            return (0,
                    M.default)(t, e),
                (0,
                    b.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            restrictionEditable: !1,
                            vehicleType: null,
                            numPassengers: null,
                            subscription: null
                        }
                    }
                }, {
                    key: "getDriveProfileData",
                    value: function() {
                        var e = this.attributes,
                            t = e.vehicleType,
                            i = e.numPassengers,
                            n = e.subscription,
                            s = {};
                        return null != t && (s.vehicleTypes = [t]),
                            null != i && (s.numPassengers = i),
                            null != n && (s.subscriptions = [n]),
                            s
                    }
                }, {
                    key: "hasVehicleType",
                    value: function() {
                        return null != this.attributes.vehicleType
                    }
                }, {
                    key: "hasNumPassengers",
                    value: function() {
                        var e = this.attributes.numPassengers;
                        return null != e && e > 0
                    }
                }, {
                    key: "hasSubscription",
                    value: function() {
                        return null != this.attributes.subscription
                    }
                }, {
                    key: "isBlank",
                    value: function() {
                        return !this.hasVehicleType() && !this.hasNumPassengers() && !this.hasSubscription()
                    }
                }, {
                    key: "isExhaustive",
                    value: function() {
                        return this.hasVehicleType() && this.hasNumPassengers() && this.hasSubscription()
                    }
                }], [{
                    key: "modelsFor",
                    value: function(e) {
                        var i, n = e.getNumPassengers(),
                            s = e.getVehicleTypes(),
                            r = e.getSubscriptions();
                        return 0 === n && (n = null),
                            0 === s.length && (s = [null]),
                            0 === r.length && (r = [null]),
                            (i = []).concat.apply(i, (0,
                                f.default)(s.map(function(e) {
                                return r.map(function(t) {
                                    return (0,
                                        c.default)({
                                        vehicleType: e,
                                        subscription: t,
                                        numPassengers: n
                                    })
                                })
                            }))).map(function(e) {
                                return new t(e)
                            })
                    }
                }]),
                t
        }(Backbone.Model),
        A = function(e) {
            function t() {
                return (0,
                        v.default)(this, t),
                    (0,
                        E.default)(this, (t.__proto__ || (0,
                        g.default)(t)).apply(this, arguments))
            }
            return (0,
                    M.default)(t, e),
                (0,
                    b.default)(t, [{
                    key: "className",
                    value: function() {
                        var e = ["drive-profile-item"];
                        return 0 === this.model.collection.indexOf(this.model) && e.push("drive-profile-item-sticky"),
                            e.join(" ")
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-init-vehicle-type": "_doInitVehicleType",
                            "click .do-init-num-passengers": "_doInitNumPassengers",
                            "click .do-init-subscription": "_doInitSubscription",
                            "click .do-set-vehicle-type": "_doSetVehicleType",
                            "click .do-set-num-passengers": "_doSetNumPassengers",
                            "click .do-set-subscription": "_doSetSubscription",
                            "click .do-delete-vehicle-type": "_doDeleteVehicleType",
                            "click .do-delete-num-passengers": "_doDeleteNumPassengers",
                            "click .do-delete-subscription": "_doDeleteSubscription"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-delete-item": "item:delete"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".drive-profile-item-action": {
                                observe: "restrictionEditable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {},
                            supportsNumPassengers: !1,
                            supportsSubscriptions: !1
                        };
                        this._subscriptions = e.subscriptions,
                            this._subscriptionsAvailable = !_.isEmpty(e.subscriptions),
                            this._supportsNumPassengers = e.supportsNumPassengers,
                            this._supportsSubscriptions = e.supportsSubscriptions
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.vehicleType,
                            i = e.numPassengers,
                            n = e.subscription,
                            s = void 0,
                            r = void 0,
                            a = void 0;
                        null == t ? s = "" : (r = _.invert(T.VEHICLE_TYPES)[t],
                            s = I18n.t("restrictions.vehicle_types." + r));
                        var o = _.omit(T.VEHICLE_TYPES, r);
                        a = this._subscriptions.hasOwnProperty(n) ? this._subscriptions[n] : n;
                        var l = _.reject(this._getSortedSubscriptionsArray(), function(e) {
                            var t = e.value;
                            e.name;
                            return t === n
                        });
                        return {
                            numPassengersRange: _.range(2, i).concat(_.range(i + 1, 5)),
                            subscriptionName: a,
                            vehicleName: s,
                            vehicleTypes: o,
                            vehicleTypesNames: (0,
                                u.default)(o).sort(function(e, t) {
                                return e.localeCompare(t)
                            }),
                            subscriptionOptions: l,
                            supportsSubscriptions: this._supportsSubscriptions,
                            subscriptionsAvailable: this._subscriptionsAvailable,
                            supportsNumPassengers: this._supportsNumPassengers,
                            isBlank: this.model.isBlank(),
                            isExhaustive: this.model.isExhaustive(),
                            hasVehicleType: this.model.hasVehicleType(),
                            hasNumPassengers: this.model.hasNumPassengers(),
                            hasSubscription: this.model.hasSubscription()
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            change: "render"
                        }
                    }
                }, {
                    key: "_getSortedSubscriptionsArray",
                    value: function() {
                        return _.pairs(this._subscriptions).map(function(e) {
                            var t = (0,
                                o.default)(e, 2);
                            return {
                                value: t[0],
                                name: t[1]
                            }
                        }).sort(function(e, t) {
                            var i = e.name,
                                n = void 0 === i ? "" : i,
                                s = t.name,
                                r = void 0 === s ? "" : s;
                            return n.localeCompare(r)
                        })
                    }
                }, {
                    key: "_doInitVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: C
                        })
                    }
                }, {
                    key: "_doInitNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: 2
                        })
                    }
                }, {
                    key: "_doInitSubscription",
                    value: function() {
                        if (this._supportsSubscriptions) {
                            var e = this._getSortedSubscriptionsArray()[0];
                            this.model.set({
                                subscription: e.value
                            })
                        }
                    }
                }, {
                    key: "_doSetVehicleType",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            vehicleType: t
                        })
                    }
                }, {
                    key: "_doSetNumPassengers",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            numPassengers: t
                        })
                    }
                }, {
                    key: "_doSetSubscription",
                    value: function(e) {
                        var t = e.target.dataset.value;
                        this.model.set({
                            subscription: t
                        })
                    }
                }, {
                    key: "_doDeleteVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: null
                        })
                    }
                }, {
                    key: "_doDeleteNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: null
                        })
                    }
                }, {
                    key: "_doDeleteSubscription",
                    value: function() {
                        this.model.set({
                            subscription: null
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/drive_profile_free_item"
                    }
                }]),
                t
        }(Marionette.View),
        D = function(e) {
            function t() {
                return (0,
                        v.default)(this, t),
                    (0,
                        E.default)(this, (t.__proto__ || (0,
                        g.default)(t)).apply(this, arguments))
            }
            return (0,
                    M.default)(t, e),
                (0,
                    b.default)(t, [{
                    key: "childView",
                    value: function() {
                        return A
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.collection.indexOf(e.model) > 0 && this.collection.remove(e.model)
                    }
                }]),
                t
        }(Marionette.CollectionView),
        R = function(e) {
            function t() {
                return (0,
                        v.default)(this, t),
                    (0,
                        E.default)(this, (t.__proto__ || (0,
                        g.default)(t)).apply(this, arguments))
            }
            return (0,
                    M.default)(t, e),
                (0,
                    b.default)(t, [{
                    key: "isBlank",
                    value: function() {
                        return this.models.every(function(e) {
                            return e.isBlank()
                        })
                    }
                }, {
                    key: "hasBlank",
                    value: function() {
                        return this.models.some(function(e) {
                            return e.isBlank()
                        })
                    }
                }]),
                t
        }(Backbone.Collection),
        O = function(e) {
            function t() {
                return (0,
                        v.default)(this, t),
                    (0,
                        E.default)(this, (t.__proto__ || (0,
                        g.default)(t)).apply(this, arguments))
            }
            return (0,
                    M.default)(t, e),
                (0,
                    b.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .do-add-item": "_doAddBlankItem"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add-drive-profile-item": {
                                observe: "canAddBlankItem",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e, t = this,
                            i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                driveProfileList: null,
                                restrictionEditable: !1,
                                subscriptions: {},
                                supportsNumPassengers: !1,
                                supportsSubscriptions: !1
                            };
                        this._driveProfileList = i.driveProfileList,
                            this._restrictionEditable = i.restrictionEditable,
                            this._subscriptions = i.subscriptions,
                            this._supportsSubscriptions = i.supportsSubscriptions,
                            this._supportsNumPassengers = i.supportsNumPassengers;
                        var n = (e = []).concat.apply(e, (0,
                            f.default)(this._driveProfileList.getDriveProfiles().map(function(e) {
                            return I.modelsFor(e)
                        })));
                        n.forEach(function(e) {
                                return e.set({
                                    restrictionEditable: t._restrictionEditable
                                })
                            }),
                            this.collection = new R(n),
                            0 === this.collection.length && this._doAddBlankItem(),
                            this.model = new Backbone.Model({
                                canAddBlankItem: this._canAddBlankItem()
                            }),
                            this.collection.on("all", function() {
                                return t.model.set({
                                    canAddBlankItem: t._canAddBlankItem()
                                })
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("collectionRegion", new D({
                                collection: this.collection,
                                subscriptions: this._subscriptions,
                                supportsNumPassengers: this._supportsNumPassengers,
                                supportsSubscriptions: this._supportsSubscriptions
                            }))
                    }
                }, {
                    key: "_canAddBlankItem",
                    value: function() {
                        return this._restrictionEditable && !this.collection.hasBlank()
                    }
                }, {
                    key: "_doAddBlankItem",
                    value: function() {
                        this._canAddBlankItem() && this.collection.push(new I({
                            restrictionEditable: this._restrictionEditable
                        }))
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            driveProfiles: (0,
                                r.default)({}, S.RESTRICTION_TYPE.FREE, this.collection.models.filter(function(e) {
                                return !e.isBlank()
                            }).map(function(e) {
                                return e.getDriveProfileData()
                            }))
                        }
                    }
                }, {
                    key: "getHelpMessage",
                    value: function(e) {
                        return e === S.RESTRICTION_MODALITY.DRIVING_ALLOWED ? I18n.t("restrictions.editing.driving.other_vehicles_restricted") : e === S.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? I18n.t("restrictions.editing.driving.other_vehicles_pay_toll") : void 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.collection.isBlank() && e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/drive_profile_free_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = i.subscriptions,
                            a = void 0 === r ? {} : r;
                        return new t({
                            driveProfileList: e.getDriveProfileList(S.RESTRICTION_TYPE.FREE),
                            restrictionEditable: s,
                            subscriptions: a,
                            supportsNumPassengers: e.supportsNumPassengers(),
                            supportsSubscriptions: e.supportsSubscriptions()
                        })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = O,
        t.DriveProfileItemViewModel = I
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "validate",
                    value: function() {
                        return []
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {}
                    }
                }, {
                    key: "getHelpMessage",
                    value: function() {
                        return ""
                    }
                }, {
                    key: "template",
                    get: function() {
                        return !1
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ViewModel = void 0;
    var s = i(13),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(209),
        y = n(_),
        b = i(160),
        w = i(94),
        E = n(w),
        k = i(16),
        M = n(k),
        S = moment(),
        T = moment().add(1, "month"),
        C = new y.default,
        I = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "toggleAllWeekdays",
                    value: function(e) {
                        var t = e ? (0,
                            o.default)(b.WEEKDAYS) : [];
                        this.set({
                            weekdays: t
                        })
                    }
                }, {
                    key: "getWeekdaysValue",
                    value: function() {
                        var e = b.RestrictionTimeFrame.getWeekdaysBitValue(this.attributes.weekdays);
                        return 0 === e ? null : e
                    }
                }, {
                    key: "getTimeFrameData",
                    value: function() {
                        var e = this.attributes,
                            t = e.fromTime,
                            i = e.toTime,
                            n = e.startDate,
                            s = e.endDate;
                        this.attributes.isAllDay && (t = i = null),
                            this.attributes.isDuringDates ? (n = n.format(b.DATE_FORMAT),
                                s = s.format(b.DATE_FORMAT)) : n = s = null;
                        var r = this.getWeekdaysValue();
                        return 0 === r && (r = null), {
                            weekdays: r,
                            fromTime: t,
                            toTime: i,
                            startDate: n,
                            endDate: s
                        }
                    }
                }, {
                    key: "isOvernight",
                    value: function() {
                        var e = this.attributes,
                            t = e.isAllDay,
                            i = e.fromTime,
                            n = e.toTime;
                        return !t && 1 === C.compareTimes(i, n)
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = this.attributes,
                            t = [];
                        return 0 === e.weekdays.length && t.push(I18n.t("restrictions.editing.validation.weekdays")), !1 === e.isAllDay && (C.isValidTime(e.fromTime) || t.push(I18n.t("restrictions.editing.validation.fromTime")),
                                C.isValidTime(e.toTime) || t.push(I18n.t("restrictions.editing.validation.toTime"))),
                            e.isDuringDates && (M.default.isBlank(e.startDate) ? t.push(I18n.t("restrictions.editing.validation.startDate")) : e.startDate.isBefore(moment(), "day") && t.push(I18n.t("restrictions.editing.validation.startDate_in_past")),
                                M.default.isBlank(e.endDate) && t.push(I18n.t("restrictions.editing.validation.endDate"))),
                            t
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = void 0,
                            n = void 0,
                            s = void 0,
                            r = void 0;
                        return e.isDuringDates() ? (i = moment(e.getStartDate(), b.DATE_FORMAT),
                                n = moment(e.getEndDate(), b.DATE_FORMAT)) : (i = S,
                                n = T),
                            e.isAllDay() ? (s = "8:00",
                                r = "17:00") : (s = e.getFromTime(),
                                r = e.getToTime()),
                            new t({
                                restrictionEditable: !1,
                                fromTime: s,
                                toTime: r,
                                startDate: i,
                                endDate: n,
                                weekdays: e.getWeekdays(),
                                isAllDay: e.isAllDay(),
                                isDuringDates: e.isDuringDates()
                            })
                    }
                }]),
                t
        }(Backbone.Model),
        A = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .do-toggle-weekdays-all": function() {
                                e.model.toggleAllWeekdays(!0)
                            },
                            "click .do-toggle-weekdays-none": function() {
                                e.model.toggleAllWeekdays(!1)
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            bootstrapTimepickers: ".bootstrap-timepicker input",
                            timepickerFromTime: ".timepicker-from-time",
                            timepickerToTime: ".timepicker-to-time",
                            datepicker: ".datepicker"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".weekday": "weekdays",
                            ".timeframe-overnight-message": {
                                observe: ["fromTime", "toTime", "isAllDay"],
                                onGet: "_isOvernight",
                                visible: !0
                            },
                            "[name=fromTime]": "fromTime",
                            "[name=toTime]": "toTime",
                            "[name=isAllDay]": "isAllDay",
                            "[name=isDuringDates]": {
                                observe: "isDuringDates",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".timepicker input": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllDay", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                r.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return i || !n
                                    }
                                }]
                            },
                            ".datepicker": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isDuringDates", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                r.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return !i || !n
                                    }
                                }]
                            },
                            ".timeframe-weekdays-toggle": {
                                observe: "restrictionEditable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._renderTimePickers(),
                            this._renderDatePickers(),
                            this.stickit()
                    }
                }, {
                    key: "onBeforeDetach",
                    value: function() {
                        this._detachTimePickers(),
                            this._detachDatePickers()
                    }
                }, {
                    key: "_renderTimePickers",
                    value: function() {
                        this.getUI("bootstrapTimepickers").timepicker(E.default.prototype.timepickerOptions);
                        var e = this.model.attributes,
                            t = e.fromTime,
                            i = e.toTime;
                        null != t && this.getUI("timepickerFromTime").timepicker("setTime", t),
                            null != i && this.getUI("timepickerToTime").timepicker("setTime", i)
                    }
                }, {
                    key: "_detachTimePickers",
                    value: function() {
                        this.getUI("timepickerFromTime").data("timepicker").remove(),
                            this.getUI("timepickerToTime").data("timepicker").remove()
                    }
                }, {
                    key: "_renderDatePickers",
                    value: function() {
                        var e = this;
                        this.getUI("datepicker").daterangepicker({
                            autoApply: !0,
                            startDate: this.model.attributes.startDate,
                            endDate: this.model.attributes.endDate
                        }, function(t, i) {
                            e.model.set({
                                startDate: t,
                                endDate: i
                            })
                        })
                    }
                }, {
                    key: "_detachDatePickers",
                    value: function() {
                        this.getUI("datepicker").data("daterangepicker").remove()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getWeekdayFromOrdinal: function(e) {
                                return b.WEEKDAY_ORDINALS[e]
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            timeFrames: [this.model.getTimeFrameData()]
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "_isOvernight",
                    value: function() {
                        return this.model.isOvernight()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/timeframe_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = I.for(e);
                        return r.set({
                                restrictionEditable: s
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = A,
        t.ViewModel = I
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(273),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-turn"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            listRegion: {
                                el: ".restrictions-list-region tbody",
                                replaceElement: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-apply": "_onApplyChanges"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-close": "restriction:summary:close",
                            "click .do-create": "restriction:summary:create"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".restrictions-list-region": {
                                observe: "hasRestrictions",
                                visible: !0
                            },
                            "input, .do-create, .do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditRestrictions",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            turn: null,
                            viewHelpers: null,
                            canEditRestrictions: !1,
                            subscriptions: {}
                        };
                        this._turn = e.turn,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._subscriptions = e.subscriptions,
                            this._title = e.title,
                            this._restrictions = this._turn.getTurnData().getRestrictions(),
                            this.model = new Backbone.Model({
                                hasRestrictions: this._restrictions.length > 0,
                                canEditRestrictions: this._canEditRestrictions
                            })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            summaryTitle: this._title
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("listRegion", new g.default({
                                restrictions: this._restrictions,
                                canEditRestrictions: this._canEditRestrictions,
                                subscriptions: this._subscriptions
                            }))
                    }
                }, {
                    key: "_onApplyChanges",
                    value: function() {
                        this.triggerMethod("restriction:summary:apply")
                    }
                }, {
                    key: "onChildviewItemEdit",
                    value: function(e) {
                        this.triggerMethod("restriction:item:edit", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.triggerMethod("restriction:item:delete", e.getRestriction())
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_summary_turn"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(17),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(274),
        y = n(_),
        b = _.BIG_TOOLTIP_VERT_PLACEMENTS.TOP,
        w = function(e) {
            function t(e, i) {
                (0,
                    c.default)(this, t);
                var n = (0,
                    g.default)(this, (t.__proto__ || (0,
                    u.default)(t)).call(this, e, i));
                return n.listenTo(i, "bigtooltip:show", function() {
                        n._actuallyShow()
                    }),
                    n.listenTo(i, "bigtooltip:hide", function() {
                        n._actuallyHide()
                    }),
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "events",
                    value: function() {
                        var e;
                        return e = {},
                            (0,
                                o.default)(e, "mouseover " + this.options.hoverElement, "_onHoverElementEnter"),
                            (0,
                                o.default)(e, "mouseout " + this.options.hoverElement, "_onHoverElementExit"),
                            e
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.view.addRegions({
                            bigTooltipRegion: {
                                regionClass: y.default
                            }
                        });
                        var e = this.view.getRegion("bigTooltipRegion");
                        this.listenTo(e, "tooltip:mouseenter", this._onElementEnter),
                            this.listenTo(e, "tooltip:mouseleave", this._onElementExit)
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this._clearAllTimers(),
                            this._actuallyHide(),
                            this.view.removeRegion("bigTooltipRegion")
                    }
                }, {
                    key: "_clearAllTimers",
                    value: function() {
                        clearTimeout(this._showTimeoutHandle),
                            clearTimeout(this._hideTimeoutHandle)
                    }
                }, {
                    key: "_calcVerticalPlacement",
                    value: function(e) {
                        var t = this.options,
                            i = t.getVerticalPlacement,
                            n = t.size,
                            s = t.padding,
                            r = t.hoverElement,
                            a = i(),
                            o = this.$(r),
                            l = 230 + this.tooltipView.$el.height() + o.height();
                        return e.y - l < s.top ? _.BIG_TOOLTIP_VERT_PLACEMENTS.BOTTOM : e.y + l > n.h - s.bottom ? _.BIG_TOOLTIP_VERT_PLACEMENTS.TOP : a || b
                    }
                }, {
                    key: "_calcHorizontalPlacement",
                    value: function(e) {
                        var t = this.options,
                            i = t.getHorizontalPlacement,
                            n = t.size,
                            s = i();
                        if (e.x + 157.5 > n.w)
                            return _.BIG_TOOLTIP_HORIZ_PLACEMENTS.LEFT;
                        if (e.x - 157.5 < 0)
                            return _.BIG_TOOLTIP_HORIZ_PLACEMENTS.RIGHT;
                        if (!s)
                            return _.BIG_TOOLTIP_HORIZ_PLACEMENTS.MIDDLE;
                        var r = e.x + 315 < n.w,
                            a = e.x - 315 > 0;
                        return s === _.BIG_TOOLTIP_HORIZ_PLACEMENTS.LEFT && a || s === _.BIG_TOOLTIP_HORIZ_PLACEMENTS.RIGHT && r ? s : void 0
                    }
                }, {
                    key: "_isOutOfBounds",
                    value: function(e) {
                        var t = this.options,
                            i = t.size,
                            n = t.padding;
                        return e.x < n.left || e.x > i.w - n.right || (e.y < n.top || e.y > i.h - n.bottom)
                    }
                }, {
                    key: "_actuallyShow",
                    value: function() {
                        if (!this._shown) {
                            var e = this.options,
                                t = e.getView,
                                i = e.getPosition,
                                n = i(),
                                s = t();
                            if (s) {
                                this.tooltipView = s;
                                var a = this.$(this.options.hoverElement),
                                    o = a.offset(),
                                    l = (0,
                                        r.default)({}, this.options);
                                if (l.screenPosition = {
                                        top: o.top + a.height() / 2,
                                        left: o.left + a.width() / 2
                                    }, !this._isOutOfBounds(n)) {
                                    var u = [],
                                        d = this._calcVerticalPlacement(n),
                                        c = this._calcHorizontalPlacement(n);
                                    d === _.BIG_TOOLTIP_VERT_PLACEMENTS.BOTTOM ? l.screenPosition.top += a.height() / 2 : l.screenPosition.top -= a.height() / 2,
                                        u.push(d),
                                        u.push(c),
                                        l.placements = u,
                                        this.view.showChildView("bigTooltipRegion", this.tooltipView, l),
                                        this._shown = !0
                                }
                            }
                        }
                    }
                }, {
                    key: "_actuallyHide",
                    value: function() {
                        this._shown = !1;
                        var e = this.view.getRegion("bigTooltipRegion");
                        e && e.empty()
                    }
                }, {
                    key: "_onHoverElementEnter",
                    value: function() {
                        var e = this;
                        this._showTimeoutHandle = setTimeout(function() {
                            e._actuallyShow(e.position, e.size),
                                e._showTimeoutHandle = null
                        }, 250)
                    }
                }, {
                    key: "_onHoverElementExit",
                    value: function() {
                        null != this._showTimeoutHandle && (clearTimeout(this._showTimeoutHandle),
                                this._showTimeoutHandle = null),
                            this._hide()
                    }
                }, {
                    key: "_onElementEnter",
                    value: function() {
                        this._hideTimeoutHandle && (clearTimeout(this._hideTimeoutHandle),
                                this._hideTimeoutHandle = null),
                            this.view.triggerMethod("tooltip:enter")
                    }
                }, {
                    key: "_onElementExit",
                    value: function() {
                        this._hide(),
                            this.view.triggerMethod("tooltip:leave")
                    }
                }, {
                    key: "_hide",
                    value: function() {
                        var e = this;
                        this._shown && (this._hideTimeoutHandle = setTimeout(function() {
                            e._actuallyHide(),
                                e.hideTimeoutHandle = null
                        }, 150))
                    }
                }]),
                t
        }(Marionette.Behavior);
    t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e(t, i, n, s) {
                (0,
                    r.default)(this, e),
                this._fromSegment = t,
                    this._toSegment = i,
                    this._node = n,
                    this._turn = s
            }
            return (0,
                    o.default)(e, [{
                    key: "getAngle",
                    value: function() {
                        return this._node.getAngleToSegment(this._toSegment)
                    }
                }, {
                    key: "getNode",
                    value: function() {
                        return this._node
                    }
                }, {
                    key: "getFromSegment",
                    value: function() {
                        return this._fromSegment
                    }
                }, {
                    key: "getToSegment",
                    value: function() {
                        return this._toSegment
                    }
                }, {
                    key: "getTurn",
                    value: function() {
                        return this._turn
                    }
                }, {
                    key: "getPoint",
                    value: function() {
                        return this._node.attributes.geometry
                    }
                }, {
                    key: "getDistanceFromPoint",
                    value: function() {
                        return 35
                    }
                }, {
                    key: "hasMultiplePaths",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "isLockedByHigherRank",
                    value: function() {
                        return this._fromSegment.isLockedByHigherRank()
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._fromSegment.isFromNode(this._node) && this._fromSegment.canEditFromConnections() || this._fromSegment.isToNode(this._node) && this._fromSegment.canEditToConnections()
                    }
                }, {
                    key: "getSegmentPathGeometry",
                    value: function() {
                        return new OL.Geometry.LineString([])
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = function() {
            function e() {
                (0,
                    r.default)(this, e)
            }
            return (0,
                    o.default)(e, [{
                    key: "calculate",
                    value: function(e, t) {
                        var i = t.isLeftHand,
                            n = void 0 !== i && i,
                            s = t.offsetRegularTurns,
                            r = void 0 !== s && s;
                        0 !== e.length && (this._calculateUturnOffset(e, n),
                            r && this._calculateTurnArrowOffsets(e))
                    }
                }, {
                    key: "_calculateMaxAngles",
                    value: function(e) {
                        var t = e[0].getTurnArrow().getNode(),
                            i = e[0].getTurnArrow().getFromSegment(),
                            n = t.getAngleToSegment(i),
                            s = null,
                            r = null;
                        return e.filter(function(e) {
                            return !e.getTurnArrow().getTurn().isUturn()
                        }).forEach(function(e) {
                            var a = e.getTurnArrow(),
                                o = Math.abs(n - a.getAngle());
                            o > 180 && o <= 360 && (o = 360 - o),
                                o < 90 && (t.getDirectionBetweenSegments(i, a.getToSegment()) ? (null === s || o < s) && (s = o) : (null === r || o < r) && (r = o))
                        }), {
                            maxLeftAngle: s,
                            maxRightAngle: r
                        }
                    }
                }, {
                    key: "_calculateTurnArrowOffsets",
                    value: function(t) {
                        var i = t.filter(function(e) {
                            return !e.getTurnArrow().getTurn().isUturn()
                        }).sort(function(e, t) {
                            return e.getTurnArrow().getAngle() - t.getTurnArrow().getAngle()
                        });
                        if (0 !== i.length) {
                            var n = 0,
                                s = 1 === i.length ? Number.MAX_VALUE : _.last(i).getTurnArrow().getAngle();
                            i.forEach(function(t, r) {
                                var a = t.getTurnArrow(),
                                    o = Math.abs(a.getAngle() - s);
                                o > 180 && o <= 360 && (o = 360 - o),
                                    o < e.MINIMAL_ARROW_ANGLE && (r !== i.length - 1 || 2 !== i.length) ? n++ : (n = 0,
                                        s = a.getAngle()),
                                    t.setOffset(n),
                                    s = a.getAngle()
                            })
                        }
                    }
                }, {
                    key: "_calculateUturnOffset",
                    value: function(e, t) {
                        var i = this._calculateMaxAngles(e),
                            n = i.maxLeftAngle,
                            s = i.maxRightAngle,
                            r = 0;
                        t && null !== s && (r = (90 - s) / 90),
                            t || null === n || (r = (90 - n) / 90),
                            e.filter(function(e) {
                                return e.getTurnArrow().getTurn().isUturn()
                            }).forEach(function(e) {
                                e.setOffset(r)
                            })
                    }
                }]),
                e
        }();
    l.MINIMAL_ARROW_ANGLE = 25,
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(7),
        a = n(r),
        o = i(6),
        l = n(o),
        u = i(0),
        d = n(u),
        c = i(1),
        h = n(c),
        f = i(17),
        p = n(f),
        g = i(35),
        m = n(g),
        v = i(179),
        _ = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(v),
        y = (s = {},
            (0,
                p.default)(s, _.GROUP_ISSUES, 0),
            (0,
                p.default)(s, _.GROUP_MAP_ISSUES, 1),
            (0,
                p.default)(s, _.ITEM_MAP_PROBLEMS, 2),
            (0,
                p.default)(s, _.ITEM_CLOSED_MAP_PROBLEMS, 3),
            (0,
                p.default)(s, _.ITEM_UPDATE_REQUESTS, 4),
            (0,
                p.default)(s, _.ITEM_CLOSED_UPDATE_REQUESTS, 5),
            (0,
                p.default)(s, _.ITEM_PLACE_UPDATE_REQUESTS, 6),
            (0,
                p.default)(s, _.GROUP_PARKING_ISSUES, 7),
            (0,
                p.default)(s, _.ITEM_PARKING_MAP_PROBLEMS, 8),
            (0,
                p.default)(s, _.ITEM_PARKING_CLOSED_MAP_PROBLEMS, 9),
            (0,
                p.default)(s, _.ITEM_PARKING_PLACE_UPDATE_REQUESTS, 10),
            (0,
                p.default)(s, _.GROUP_PLACES, 11),
            (0,
                p.default)(s, _.ITEM_VENUES, 12),
            (0,
                p.default)(s, _.ITEM_RESIDENTIAL_PLACES, 13),
            (0,
                p.default)(s, _.ITEM_PARKING_PLACES, 14),
            (0,
                p.default)(s, _.GROUP_ROAD, 15),
            (0,
                p.default)(s, _.ITEM_ROAD, 16),
            (0,
                p.default)(s, _.ITEM_JUNCTION_BOXES, 17),
            (0,
                p.default)(s, _.ITEM_CLOSURES, 18),
            (0,
                p.default)(s, _.ITEM_SPEED_CAMERAS, 19),
            (0,
                p.default)(s, _.GROUP_DISPLAY, 20),
            (0,
                p.default)(s, _.ITEM_SATELLITE_IMAGERY, 21),
            (0,
                p.default)(s, _.ITEM_AREA_MANAGERS, 22),
            (0,
                p.default)(s, _.ITEM_GPS_POINTS, 23),
            (0,
                p.default)(s, _.ITEM_LIVE_USERS, 24),
            (0,
                p.default)(s, _.ITEM_EDITABLE_AREAS, 25),
            (0,
                p.default)(s, _.ITEM_DISALLOWED_TURNS, 29),
            (0,
                p.default)(s, _.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, 30),
            s),
        b = function() {
            function e() {
                var t = this;
                (0,
                    d.default)(this, e),
                this._togglerBitNumber = (0,
                        l.default)({}, y),
                    m.default.getLayerSwitcherConfig().forEach(function(e) {
                        (0,
                            l.default)(t._togglerBitNumber, e.bitNumbers)
                    })
            }
            return (0,
                    h.default)(e, [{
                    key: "convertStateToBitfield",
                    value: function(e) {
                        var t = this;
                        return (0,
                            a.default)(e).reduce(function(i, n) {
                            return e[n] && (i |= 1 << t._togglerBitNumber[n]),
                                i
                        }, 0)
                    }
                }, {
                    key: "convertBitFieldToState",
                    value: function(e) {
                        var t = this;
                        return (0,
                            a.default)(this._togglerBitNumber).reduce(function(i, n) {
                            return i[n] = 0 != (e & 1 << t._togglerBitNumber[n]),
                                i
                        }, {})
                    }
                }]),
                e
        }();
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(276),
        v = n(m),
        _ = 27,
        y = function(e) {
            function t(e, i, n) {
                (0,
                    u.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this));
                return s._map = e,
                    s._layers = i,
                    s._rootContainerLayer = null,
                    s._listenToKeys = ["shiftKey", "metaKey", "ctrlKey", "altKey"],
                    s._xy = null,
                    s._downFeature = null,
                    s._hadMouseDown = !1,
                    s._hadMouseUp = !1,
                    s._lastOverFeature = null,
                    s._duringBoxSelection = !1,
                    s._boxHandler = null,
                    s._keyboardShortcuts = null,
                    s._downKeys = [],
                    s._deselectKey = _,
                    s._selectRenderIntent = "select",
                    s._highlightRenderIntent = "highlight",
                    s._highlightSelectedRenderIntent = "highlightselected",
                    s._deletedRenderIntent = "delete",
                    s._highlightDeletedRenderIntent = "highlightdeleted",
                    s._clickOut = !0,
                    s._multipleSelectMode = !1,
                    s.clickTolerance = 4,
                    s.stopClick = !0,
                    s.supportedGeometryTypes = null,
                    s.boxSelectionLayers = null,
                    s.multipleKeys = ["metaKey", "ctrlKey"],
                    s.pathKeys = ["altKey"],
                    (0,
                        r.default)(s, n),
                    s._initLayers(i),
                    s._bindEvents(),
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_initLayers",
                    value: function(e) {
                        this._rootContainerLayer = new OpenLayers.Layer.Vector.RootContainer(this.id + "_container", {
                                layers: e
                            }),
                            this._map.addLayer(this._rootContainerLayer),
                            this._moveContainerLayerToTop()
                    }
                }, {
                    key: "_moveContainerLayerToTop",
                    value: function() {
                        var e = Math.max(this._map.Z_INDEX_BASE.Feature - 1, this._rootContainerLayer.getZIndex()) + 1;
                        this._rootContainerLayer.setZIndex(e)
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._map.events.registerPriority("mousedown", this, this._onMouseDown),
                            this._map.events.registerPriority("mouseup", this, this._onMouseUp),
                            this._map.events.registerPriority("click", this, this._onMouseClick),
                            this._map.events.registerPriority("touchstart", this, this._onTouchStart),
                            this._map.events.registerPriority("mousemove", this, this._onMouseMove),
                            this._map.events.on({
                                removelayer: this._handleMapEvents,
                                changelayer: this._handleMapEvents,
                                scope: this
                            }),
                            this._boxHandler = new OpenLayers.Handler.Box(new OpenLayers.Control({
                                map: this._map,
                                layer: this._rootContainerLayer
                            }), {
                                down: this._onBoxSelectionStart.bind(this),
                                done: this._onBoxSelectionDone.bind(this)
                            }, {
                                boxDivClassName: "olHandlerBoxSelectFeature",
                                keyMask: OpenLayers.Handler.MOD_CTRL | OpenLayers.Handler.MOD_SHIFT
                            }),
                            this._boxHandler.activate(),
                            this._keyboardShortcuts = new v.default(this, {
                                keydown: this._onKeyDown
                            }),
                            this._keyboardShortcuts.activate()
                    }
                }, {
                    key: "_getSupportedFeatureFromEvent",
                    value: function(e) {
                        var t = this._rootContainerLayer.getFeatureFromEvent(e);
                        if (t) {
                            if (this._isGeometryTypeSupported(t))
                                return t
                        }
                        return null
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        this._deselectKey === e.keyCode && this._onDeselectKey()
                    }
                }, {
                    key: "_onMouseDown",
                    value: function(e) {
                        if (this._hadMouseDown = !0,
                            this._setDownKeysFromEvent(e),
                            this._xy = e.xy,
                            OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) {
                            this._xy = e.xy;
                            var t = this._getSupportedFeatureFromEvent(e);
                            t && (this._downFeature = t)
                        }
                    }
                }, {
                    key: "_onMouseUp",
                    value: function(e) {
                        this._setDownKeysFromEvent(e),
                            this._hadMouseUp = !0
                    }
                }, {
                    key: "_onMouseClick",
                    value: function(e) {
                        this._setDownKeysFromEvent(e);
                        var t = this._getSupportedFeatureFromEvent(e),
                            i = this._downFeature;
                        if (this._downFeature = null,
                            this._hadMouseDown && this._hadMouseUp) {
                            Math.sqrt(Math.pow(e.xy.x - this._xy.x, 2) + Math.pow(e.xy.y - this._xy.y, 2)) <= this.clickTolerance && (t ? i === t && this._onFeatureClick(t) : this._clickOut && this._onClickOut())
                        }
                        return this._resetMouseState(),
                            this._handleStopClick(t)
                    }
                }, {
                    key: "_resetMouseState",
                    value: function() {
                        this._hadMouseDown = !1,
                            this._hadMouseUp = !1,
                            this._downFeature = null
                    }
                }, {
                    key: "_onTouchStart",
                    value: function(e) {
                        var t = this._getSupportedFeatureFromEvent(e),
                            i = null != t,
                            n = this._clickOut;
                        i ? this._onFeatureClick(t) : n && this._onClickOut()
                    }
                }, {
                    key: "_handleStopClick",
                    value: function(e) {
                        if (this.stopClick && e)
                            return !1
                    }
                }, {
                    key: "_onMouseMove",
                    value: function(e) {
                        this._setDownKeysFromEvent(e);
                        var t = this._getSupportedFeatureFromEvent(e);
                        t && !t.layer && (t = null),
                            t ? (t !== this._lastOverFeature && (this._lastOverFeature && this._onFeatureOut(this._lastOverFeature),
                                    this._onFeatureIn(t)),
                                this._lastOverFeature = t) : this._lastOverFeature && (this._onFeatureOut(this._lastOverFeature),
                                this._lastOverFeature = null)
                    }
                }, {
                    key: "_onBoxSelectionStart",
                    value: function() {
                        this._duringBoxSelection = !0
                    }
                }, {
                    key: "_onBoxSelectionDone",
                    value: function(e) {
                        if (e instanceof OpenLayers.Bounds) {
                            for (var t = this._map.getLonLatFromPixel(new OpenLayers.Pixel(e.left, e.bottom)), i = this._map.getLonLatFromPixel(new OpenLayers.Pixel(e.right, e.top)), n = new OpenLayers.Bounds(t.lon, t.lat, i.lon, i.lat).toGeometry(), s = this.boxSelectionLayers || this._rootContainerLayer.layers || [this._rootContainerLayer], r = void 0, a = [], o = 0; o < s.length; ++o) {
                                r = s[o];
                                for (var l = 0, u = r.features.length; l < u; ++l) {
                                    var d = r.features[l];
                                    d.getVisibility() && this._isGeometryTypeSupported(d) && n.intersects(d.geometry) && a.push(d)
                                }
                            }
                            this._duringBoxSelection = !1,
                                this.triggerMethod("map:selection:featureBoxSelection", a)
                        }
                    }
                }, {
                    key: "_onDeselectKey",
                    value: function() {
                        this.triggerMethod("map:selection:deselectKey")
                    }
                }, {
                    key: "_onFeatureIn",
                    value: function(e) {
                        this.triggerMethod("map:selection:featureIn", e)
                    }
                }, {
                    key: "_onFeatureOut",
                    value: function(e) {
                        this.triggerMethod("map:selection:featureOut", e)
                    }
                }, {
                    key: "_onFeatureClick",
                    value: function(e) {
                        this._isPathSelect() ? this.triggerMethod("map:selection:pathSelect", {
                            feature: e
                        }) : this.triggerMethod("map:selection:featureClick", {
                            feature: e,
                            addSelection: this._isMultiSelect()
                        })
                    }
                }, {
                    key: "_onClickOut",
                    value: function() {
                        this._isMultiSelect() || this.triggerMethod("map:selection:clickOut", {
                            addSelection: this._isMultiSelect()
                        })
                    }
                }, {
                    key: "_setDownKeysFromEvent",
                    value: function(e) {
                        this._downKeys = this._listenToKeys.filter(function(t) {
                            return Boolean(e[t])
                        })
                    }
                }, {
                    key: "_isMultiSelect",
                    value: function() {
                        var e = this;
                        return this._multipleSelectMode || this._downKeys.some(function(t) {
                            return e.multipleKeys.indexOf(t) > -1
                        })
                    }
                }, {
                    key: "_isPathSelect",
                    value: function() {
                        var e = this;
                        return this._downKeys.some(function(t) {
                            return e.pathKeys.indexOf(t) > -1
                        })
                    }
                }, {
                    key: "highlight",
                    value: function(e, t, i) {
                        var n = e.layer,
                            s = this.selectStyle;
                        s || (s = i ? this._highlightDeletedRenderIntent : t ? this._duringBoxSelection ? this._selectRenderIntent : this._highlightSelectedRenderIntent : this._highlightRenderIntent),
                            n.drawFeature(e, s)
                    }
                }, {
                    key: "unhighlight",
                    value: function(e, t, i) {
                        var n = e.layer;
                        if (n) {
                            var s = this.selectStyle;
                            s || (s = i ? this._deletedRenderIntent : t ? this._selectRenderIntent : e.layer.style || "default"),
                                n.drawFeature(e, s)
                        }
                    }
                }, {
                    key: "_isGeometryTypeSupported",
                    value: function(e) {
                        return null === this.supportedGeometryTypes || this.supportedGeometryTypes.indexOf(e.geometry.CLASS_NAME) > -1
                    }
                }, {
                    key: "toggleMultipleSelection",
                    value: function() {
                        this._multipleSelectMode = !this._multipleSelectMode,
                            this._clickOut = !this._multipleSelectMode
                    }
                }, {
                    key: "getLayer",
                    value: function() {
                        return this._rootContainerLayer
                    }
                }, {
                    key: "resetState",
                    value: function() {
                        this._downKeys = [],
                            this._resetMouseState()
                    }
                }, {
                    key: "_handleMapEvents",
                    value: function() {
                        this._moveContainerLayerToTop()
                    }
                }]),
                t
        }(Marionette.Object);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(247),
        l = n(o),
        u = i(127),
        d = i(933),
        c = n(d),
        h = i(1071),
        f = n(h),
        p = Marionette.Object.extend({
            MODE_TO_CLASS: (s = {},
                (0,
                    a.default)(s, l.default.DEFAULT, c.default),
                (0,
                    a.default)(s, l.default.MTE, f.default),
                s),
            initialize: function(e) {
                this.model = e.model,
                    this.sidebarRegion = e.layout.getRegion("sidebarRegion"),
                    this.toolbarRegion = e.layout.getRegion("toolbarRegion"),
                    this.topbarRegion = e.layout.getRegion("topbarRegion")
            },
            activate: function() {
                return this.model.on("change:mode change:sandbox change:user", this._onModeChange, this),
                    W.prefs.on("change:isImperial", this._onModeChange, this),
                    this._onModeChange("activate")
            },
            restore: function(e) {
                this.mode.restore && this.mode.restore(e)
            },
            canExitMode: function() {
                return this.mode && !this.mode.blockingExit()
            },
            getExitError: function() {
                if (this.mode)
                    return this.mode.blockingExitReason()
            },
            getState: function() {
                if (this.mode && this.mode.getState)
                    return this.mode.getState()
            },
            _onModeChange: function() {
                return this._setMode(this.model.get("mode"))
            },
            _setMode: function(e) {
                this.mode && (this.mode.exit(),
                    this.mode.off(u.STATE_CHANGED, this._onModeStateChange, this));
                var t = this.MODE_TO_CLASS[e];
                return this.mode = new t,
                    this.toolbarRegion.show(this.mode.getToolbarLayout()),
                    this.topbarRegion.show(this.mode.getTopbarLayout()),
                    this.sidebarRegion.show(this.mode.getSidebarLayout()),
                    this.mode.enter(),
                    this.mode.on(u.STATE_CHANGED, this._onModeStateChange, this)
            },
            _onModeStateChange: function() {
                return this.trigger(u.STATE_CHANGED)
            }
        });
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(934),
        r = n(s),
        a = i(960),
        o = n(a),
        l = i(1043),
        u = n(l),
        d = i(1065),
        c = n(d),
        h = Marionette.Object.extend({
            sidebarLayout: null,
            feedControl: null,
            initialize: function() {
                this.feedControl = this._createFeed(),
                    this.sidebarLayout = new o.default({
                        model: W.app,
                        selectionManager: W.selectionManager,
                        editingMediator: W.editingMediator,
                        dataModel: W.model,
                        sandbox: W.app.isSandboxMode(),
                        loggedIn: W.app.isLoggedIn(),
                        feedControl: this.feedControl,
                        streetViewController: W.streetViewController
                    }),
                    this.toolbarController = new u.default({
                        actionManager: W.model.actionManager,
                        togglerTree: W.togglerTree,
                        app: W.app,
                        controller: W.controller,
                        dataModel: W.model,
                        loginManager: W.loginManager,
                        map: W.map,
                        mediator: W.editingMediator,
                        selectionManager: W.selectionManager
                    }),
                    this.topbarController = new c.default({
                        dataModel: W.model,
                        globalVent: W.vent,
                        managedAreasRepository: W.model.managedAreas,
                        map: W.map
                    })
            },
            _onEditingHouseNumbersChanged: function() {
                this.toolbarController.onEditingHouseNumbersChanged(),
                    this.sidebarLayout.onEditingHouseNumbersChanged()
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getTopbarLayout: function() {
                return this.topbarController.layout
            },
            enter: function() {
                this.feedControl && W.app.loginManager.isLoggedIn() && (W.app.loginManager.isFirstLogin() ? this.feedControl.startFirstTimePolling() : this.feedControl.refresh()),
                    W.editingMediator.on("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this)
            },
            exit: function() {
                return this.feedControl && this.feedControl.destroy(),
                    this.toolbarController.destroy(),
                    this.topbarController.destroy(),
                    W.editingMediator.off("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this),
                    W.selectionManager.unselectAll()
            },
            blockingExit: function() {
                return W.model.actionManager.canUndo()
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            _createFeed: function() {
                return this.feedControl = new r.default({
                        container: W.map.panelRegion,
                        startNotificationId: W.app._urlParams.notification,
                        app: W.app
                    }),
                    this.feedControl
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(935),
        r = n(s),
        a = i(941),
        o = n(a),
        l = i(942),
        u = n(l),
        d = i(278),
        c = n(d),
        h = i(949),
        f = n(h),
        p = i(951),
        g = n(p),
        m = i(955),
        v = n(m),
        y = i(958),
        b = n(y),
        w = Marionette.Object.extend({
            browser: null,
            initialize: function(e) {
                this.model = new r.default,
                    this.container = e.container,
                    this.app = e.app,
                    this.startNotificationId = e.startNotificationId
            },
            render: function(e) {
                this.layout = new o.default({
                        el: e.el,
                        model: this.model
                    }),
                    this.layout.render(),
                    this._createViews(),
                    this._bindEvents(),
                    this._showViews(),
                    this._loadAppState()
            },
            refresh: function() {
                return this.model.refresh()
            },
            startFirstTimePolling: function() {
                this.model.startFirstTimePolling()
            },
            destroy: function() {
                this.layout && this.layout.destroy(),
                    this.browser && this.browser.destroy()
            },
            _createViews: function() {
                this.views = {
                    notifications: new c.default({
                        collection: this.model.notifications
                    }),
                    messages: new f.default({
                        collection: this.model.messages
                    }),
                    issues: new g.default({
                        collection: this.model.issues
                    }),
                    firstTimeMessages: new v.default({
                        collection: this.model.firstTimeMessages
                    }),
                    mentoringMessages: new b.default({
                        collection: this.model.mentoringMessages
                    })
                }
            },
            _showViews: function() {
                this.layout.showChildView("firstTimeMessages", this.views.firstTimeMessages),
                    this.layout.showChildView("notifications", this.views.notifications),
                    this.layout.showChildView("mentoringMessages", this.views.mentoringMessages),
                    this.layout.showChildView("messages", this.views.messages),
                    this.layout.showChildView("issues", this.views.issues)
            },
            _loadAppState: function() {
                var e = this,
                    t = this.startNotificationId;
                if (t) {
                    var i = [this.model.messages, this.model.notifications, this.model.mentoringMessages];
                    this.listenTo(this.model, "change:loading", function(n, s) {
                        if (!s)
                            for (var r = 0, a = null, o = 0; r < i.length; r++)
                                if (a = i[r].models,
                                    (o = _.findIndex(a, function(e) {
                                        return e.get("id") === t
                                    })) > -1)
                                    return e._browseItemByIndex(i[r], o)
                    })
                }
            },
            _browseItemByIndex: function(e, t) {
                -1 !== t && (this._browseCollection(e),
                    this.browser.browse(t))
            },
            _browseCollection: function(e) {
                this.browser = new u.default({
                    collection: e,
                    container: this.container,
                    app: this.app
                })
            },
            _bindEvents: function() {
                return this.listenTo(this.views.issues, "issues:click", this._onItemClick),
                    this.listenTo(this.views.messages, "messages:click", this._onItemClick),
                    this.listenTo(this.views.mentoringMessages, "mentoring:click", this._onItemClick),
                    this.listenTo(this.views.notifications, "notifications:click", this._onItemClick)
            },
            _onItemClick: function(e) {
                this.browser && this.browser.destroy();
                var t = e.model,
                    i = t.collection,
                    n = i.indexOf(t);
                this._browseCollection(i),
                    this.browser.browse(n),
                    this.listenTo(this.browser, "destroy", function() {
                        this.browser = null
                    })
            }
        });
    t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(19),
        o = n(a),
        l = i(60),
        u = n(l),
        d = i(130),
        c = n(d),
        h = i(936),
        f = n(h),
        p = i(937),
        g = n(p),
        m = i(938),
        v = n(m),
        y = i(939),
        b = n(y),
        w = i(940),
        E = n(w),
        k = i(25),
        M = Backbone.Model.extend({
            defaults: {
                empty: !0,
                loading: !1,
                loadingMore: !1,
                lastIssueId: null,
                firstTimePolling: !1
            },
            initialize: function() {
                return this.serializer = new u.default,
                    this.notifications = new c.default,
                    this.notifications.on("all", this._updateSelf, this),
                    this.messages = new f.default,
                    this.messages.on("all", this._updateSelf, this),
                    this.firstTimeMessages = new g.default,
                    this.firstTimeMessages.on("all", this._updateSelf, this),
                    this.mentoringMessages = new v.default,
                    this.mentoringMessages.on("all", this._updateSelf, this),
                    this.issues = new b.default,
                    this.issues.on("all", this._updateSelf, this)
            },
            startFirstTimePolling: function() {
                var e = this;
                this.set("firstTimePolling", !0),
                    this.notificationsPolling = new E.default({
                        intervalTime: 3e3,
                        maxCount: 4,
                        task: function() {
                            return (0,
                                k.httpGet)(W.Config.paths.notifications).then(function(t) {
                                e._onNotificationsResponse(t)
                            })
                        },
                        repeatUntil: function() {
                            return e.firstTimeMessages.length > 0
                        }
                    }),
                    this.issuesPolling = new E.default({
                        intervalTime: 5e3,
                        maxCount: 4,
                        task: function() {
                            return e.issues.fetch({
                                reset: !0
                            })
                        },
                        repeatUntil: function() {
                            return e.issues.length > 0
                        }
                    });
                var t = this.notificationsPolling.startLoop(),
                    i = this.issuesPolling.startLoop();
                o.default.all([t, i]).then(function() {
                    e.set("firstTimePolling", !1)
                }, function() {
                    e.set("firstTimePolling", !1)
                })
            },
            refresh: function() {
                var e = this;
                if (!this.attributes.loading) {
                    this.set("loading", !0);
                    var t = (0,
                            k.httpGet)(W.Config.paths.notifications),
                        i = this.issues.fetch({
                            reset: !0
                        });
                    return o.default.all([t, i]).then(function(t) {
                        var i = (0,
                                r.default)(t, 2),
                            n = i[0],
                            s = i[1];
                        return e._onNotificationsResponse(n),
                            e.notificationsPolling && e.notificationsPolling.checkAndStopIfFinished(),
                            e.set("lastIssueId", s.lastIssueId)
                    }).finally(function() {
                        return e.set("loading", !1)
                    })
                }
            },
            _onNotificationsResponse: function(e) {
                var t = this;
                if (this.serializer.read(e),
                    e.notifications) {
                    var i = e.notifications.objects,
                        n = _.filter(i, function(e) {
                            return e.isNotification()
                        }),
                        s = _.filter(i, function(e) {
                            return e.isForumMessage()
                        }),
                        r = _.filter(i, function(e) {
                            return e.isMentoringMessage()
                        }),
                        a = i.filter(function(e) {
                            return e.isFirstTimeMessage()
                        }).filter(function(e) {
                            return e.attributes.type !== e.TYPE.CHECK_YOUR_NEIGHBORHOOD || t._hasHome(e)
                        });
                    this.notifications.reset(n),
                        this.messages.reset(s),
                        this.firstTimeMessages.reset(a),
                        this.mentoringMessages.reset(r)
                }
            },
            _hasHome: function(e) {
                return Boolean(e.attributes.parameters.address)
            },
            loadMore: function() {
                var e = this;
                if (!this.attributes.loadingMore)
                    return this.set("loadingMore", !0),
                        o.default.resolve(this.issues.fetch({
                            remove: !1,
                            data: {
                                lastIssueId: this.get("lastIssueId")
                            }
                        })).then(function(t) {
                            return e.set("lastIssueId", t.lastIssueId)
                        }).finally(function() {
                            return e.set("loadingMore", !1)
                        })
            },
            _updateSelf: function() {
                var e = this.notifications.length + this.messages.length + this.firstTimeMessages.length + this.issues.length === 0;
                return this.set("empty", e)
            }
        });
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(130),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            parse: function(e) {
                return this.serializer.read(e),
                    _.filter(e.notifications.objects, function(e) {
                        return e.isForumMessage()
                    })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(130),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "parse",
                    value: function(e) {
                        return this.serializer.read(e),
                            _.filter(e.notifications.objects, function(e) {
                                return e.isFirstTimeMessage()
                            })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(130),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "parse",
                    value: function(e) {
                        return this.serializer.read(e),
                            _.filter(e.notifications.objects, function(e) {
                                return e.isMentoringMessage()
                            })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(60),
        o = n(a),
        l = i(51),
        u = n(l),
        d = i(27),
        c = u.default.prototype.TYPE,
        h = Backbone.Collection.extend({
            model: u.default,
            initialize: function() {
                this.dataModel = W.model,
                    this.dataModelRefs = {},
                    this.serializer = new o.default
            },
            url: function() {
                return W.Config.paths.issues
            },
            parse: function(e) {
                if (!e.issues || !e.issues.objects)
                    return [];
                this.serializer.read(e),
                    this.dataModel.putPersistent(e);
                var t = this._setReferences(e.issues.objects);
                return this._setListeners(),
                    t
            },
            _setReferences: function(e) {
                for (var t = [], i = 0; i < e.length; i++) {
                    var n = e[i],
                        s = n.attributes.type,
                        r = void 0,
                        a = void 0,
                        o = void 0,
                        l = {};
                    switch (s) {
                        case c.MAP_PROBLEM:
                            r = this._getProblem(n),
                                a = null != r,
                                l = {
                                    problem: r
                                };
                            break;
                        case c.UPDATE_REQUEST:
                            r = this._getUpdateRequest(n),
                                a = null != r,
                                l = {
                                    updateRequest: r
                                };
                            break;
                        case c.VENUE_UPDATE_REQUEST:
                            r = this._getVenue(n),
                                o = this._getVenueUpdateRequest(n),
                                a = null != r && null != o,
                                l = {
                                    venue: r,
                                    updateRequest: o,
                                    initialApproved: o ? o.get("approved") : void 0
                                }
                    }
                    var u = this._getKey(r);
                    a && null != u ? (n.set(l),
                        this.dataModelRefs[u] || (this.dataModelRefs[u] = []),
                        this.dataModelRefs[u].push(n),
                        t.push(n)) : console.error("invalid issue: " + n.get("type") + " " + n.get("id"))
                }
                return t
            },
            _setListeners: function() {
                return this._bindRepositoryEvents(this.dataModel.problems),
                    this._bindRepositoryEvents(this.dataModel.mapUpdateRequests),
                    this._bindRepositoryEvents(this.dataModel.venues)
            },
            _bindRepositoryEvents: function(e) {
                var t = this,
                    i = {};
                i[d.CHANGED] = this._makeTrigger("onModelChanged"),
                    i[d.REMOVED] = this._makeTrigger("onModelRemoved"),
                    i[d.SYNCED] = this._makeTrigger("onModelSynced"),
                    (0,
                        r.default)(i).forEach(function(n) {
                        var s = i[n];
                        e.on(n, s, t)
                    })
            },
            _makeTrigger: function(e) {
                var t = this;
                return function(i) {
                    for (var n = 0; n < i.length; n++) {
                        var s = i[n],
                            r = t._getIssues(s);
                        null != r && r.forEach(function(t) {
                            return t[e].call(t)
                        })
                    }
                }
            },
            _getProblem: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.problems.get(t)
            },
            _getUpdateRequest: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.mapUpdateRequests.get(t)
            },
            _getVenue: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.venues.get(t)
            },
            _getVenueUpdateRequest: function(e) {
                var t = this._getVenue(e),
                    i = t.attributes.venueUpdateRequests,
                    n = e.attributes.venueUpdateRequestId;
                return _(i).findWhere({
                    id: n
                })
            },
            _getKey: function(e) {
                if (e)
                    return e.type + "_" + e.getID()
            },
            _getIssues: function(e) {
                var t = this._getKey(e);
                return this.dataModelRefs[t]
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = function() {
            function e(t) {
                var i = this;
                (0,
                    u.default)(this, e),
                this.intervalTime = 5e3,
                    this.count = 0,
                    this.maxCount = 3,
                    this.task = function() {},
                    this.repeatUntil = function() {
                        return !1
                    },
                    (0,
                        o.default)(this, t),
                    this._lastTaskResult = null,
                    this._timeout = 0,
                    this.reject = null,
                    this.resolve = null,
                    this._stopped = !1,
                    this._started = !1,
                    this._promise = new r.default(function(e, t) {
                        i.resolve = e,
                            i.reject = t
                    })
            }
            return (0,
                    c.default)(e, [{
                    key: "startLoop",
                    value: function() {
                        return this._started ? this._promise : (this._started = !0,
                            this._pollingLoop(),
                            this._promise)
                    }
                }, {
                    key: "_resolve",
                    value: function(e) {
                        this._stopPollingLoop(),
                            this._stopped || (this._stopped = !0,
                                this.resolve(e))
                    }
                }, {
                    key: "_reject",
                    value: function(e) {
                        this._stopPollingLoop(),
                            this._stopped || (this._stopped = !0,
                                this.reject(e))
                    }
                }, {
                    key: "breakLoop",
                    value: function() {
                        this._reject(!1)
                    }
                }, {
                    key: "_stopPollingLoop",
                    value: function() {
                        this._timeout && (window.clearTimeout(this._timeout),
                            this._timeout = 0)
                    }
                }, {
                    key: "_pollingLoop",
                    value: function() {
                        var e = this;
                        if (!this._stopped) {
                            if (this.count >= this.maxCount)
                                return void this._reject(!1);
                            var t = this.intervalTime;
                            0 === this.count && (t = 0),
                                this._timeout = window.setTimeout(function() {
                                    e.count++;
                                    var t = e.task();
                                    r.default.resolve(t).catch(function() {}).then(e._responseCallback.bind(e))
                                }, t)
                        }
                    }
                }, {
                    key: "_responseCallback",
                    value: function(e) {
                        this._lastTaskResult = e,
                            this._next()
                    }
                }, {
                    key: "_next",
                    value: function() {
                        this._stopPollingLoop(),
                            this.checkAndStopIfFinished() || this._pollingLoop()
                    }
                }, {
                    key: "checkAndStopIfFinished",
                    value: function() {
                        return !!this.repeatUntil(this._lastTaskResult) && (this._resolve(!0), !0)
                    }
                }]),
                e
        }();
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(13),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/Feed/templates/feed",
            events: {
                "click .feed-load-more": "_onLoadMoreClick"
            },
            regions: {
                notifications: ".feed-notifications",
                firstTimeMessages: ".feed-first-time-messages",
                messages: ".feed-messages",
                mentoringMessages: ".feed-mentoring",
                issues: ".feed-issues"
            },
            bindings: {
                ".feed-loading": {
                    observe: "loading",
                    visible: !0
                },
                ".feed-content": {
                    observe: "loading",
                    visible: function(e) {
                        return !e
                    }
                },
                ".feed-empty": {
                    observe: ["empty", "loading"],
                    visible: function(e) {
                        var t = (0,
                                s.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return i && !n
                    }
                },
                ".feed-load-more": {
                    observe: ["loading", "loadingMore"],
                    visible: function(e) {
                        var t = (0,
                                s.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return !i && !n
                    }
                },
                ".feed-loading-more": {
                    observe: "loadingMore",
                    visible: !0
                },
                ".feed-load-section": {
                    observe: "firstTimePolling",
                    visible: _.negate(_.identity)
                },
                ".feed-first-time-load": {
                    observe: "firstTimePolling",
                    visible: !0
                }
            },
            onRender: function() {
                return this.stickit()
            },
            _onLoadMoreClick: function() {
                return this.model.loadMore(),
                    W.Report.feedAction("load_more")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(117),
        r = n(s),
        a = i(277),
        o = n(a),
        l = i(948),
        u = n(l),
        d = i(51),
        c = n(d),
        h = r.default.prototype.TYPE,
        f = c.default.prototype.TYPE,
        p = Marionette.Object.extend({
            initialize: function(e) {
                return this.currentFeedItem = null,
                    this.collection = e.collection,
                    this.container = e.container,
                    this.app = e.app,
                    this.listenTo(this.container, "closeClicked", this.destroy),
                    W.accelerators.events.register("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.register("prevFeedItem", this, this._prevItemClicked)
            },
            browse: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return this._setCurrent(this.collection.at(e)),
                    this._show(this.currentFeedItem)
            },
            showNext: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_next", this.currentFeedItem),
                    this._setCurrent(this.collection.at(++e)),
                    this._show(this.currentFeedItem)
            },
            showPrev: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_prev", this.currentFeedItem),
                    this._setCurrent(this.collection.at(--e)),
                    this._show(this.currentFeedItem)
            },
            _reportEvent: function(e, t) {
                var i = t.get("type");
                return W.Report.feedAction(e, i)
            },
            _nextItemClicked: function() {
                if (!this._isDone())
                    return this.showNext()
            },
            _prevItemClicked: function() {
                if (!this._isAtBeginning())
                    return this.showPrev()
            },
            onDestroy: function() {
                return this._clearCurrent(),
                    W.accelerators.events.unregister("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.unregister("prevFeedItem", this, this._prevItemClicked)
            },
            _show: function(e) {
                return e instanceof r.default ? this._showNotification(e) : this._showIssue(e),
                    W.Report.feedAction("show", e.get("type"))
            },
            _showNotification: function(e) {
                var t = e.get("type"),
                    i = void 0;
                i = t === h.PRIVATE_FORUM_MESSAGE ? u.default : o.default;
                var n = new i({
                    model: e,
                    user: this.app.get("user"),
                    hasNext: !this._isDone()
                });
                return this.listenTo(n, "nextClicked", this.showNext),
                    this.container.show(n)
            },
            _showIssue: function(e) {
                var t = {
                        showNext: !this._isDone(),
                        nextButtonString: I18n.t("feed.issues.next")
                    },
                    i = e.get("type"),
                    n = void 0;
                switch (i) {
                    case f.MAP_PROBLEM:
                        n = W.reqres.request("problems:browse", _.extend(t, {
                            problem: e.get("problem")
                        }));
                        break;
                    case f.UPDATE_REQUEST:
                        n = W.reqres.request("problems:browse", _.extend(t, {
                            problem: e.get("updateRequest")
                        }));
                        break;
                    case f.VENUE_UPDATE_REQUEST:
                        n = W.reqres.request("updaterequests:browse", _.extend(t, {
                            updateRequest: e.get("updateRequest")
                        }))
                }
                return n.on("next", this.showNext.bind(this))
            },
            _isDone: function() {
                return this.currentFeedItem === this.collection.last()
            },
            _isAtBeginning: function() {
                return this.currentFeedItem === this.collection[0]
            },
            _onItemDestroy: function() {
                return this._isDone() ? (this._clearCurrent(),
                    this.container.empty()) : this.showNext()
            },
            _setCurrent: function(e) {
                return this._clearCurrent(),
                    this.currentFeedItem = e,
                    this.currentFeedItem.set("selected", !0),
                    this.currentFeedItem.on("destroy", this._onItemDestroy, this)
            },
            _clearCurrent: function() {
                this.currentFeedItem && (this.currentFeedItem.set("selected", !1),
                        this.currentFeedItem.off("destroy", this._onItemDestroy)),
                    this.currentFeedItem = null
            }
        });
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/level0233d12d7a41f4890f6dd1ee9088ac84e6.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level032896edee403d97e81128b54ed81cf668.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level0482dfdf79740aa5d92aae015abc6660fc.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level050754532211b9f1d2a6bef279e237217f.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level06d91ac1e234d4a0b11bec9fd0635882ca.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(277),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: "notification-detail notification-detail-pm",
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    type: "pm",
                    sender: this.model.getParameter("sender"),
                    senderURL: this.model.getParameter("senderURL")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(278),
        r = n(s),
        a = i(950),
        o = n(a),
        l = r.default.extend({
            childView: o.default,
            childViewEventPrefix: "messages",
            collapseItemsMessage: "feed.messages.collapsed_message"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(181),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: "feed-item feed-notification-pm",
            template: "Waze/Modules/Feed/templates/message_item",
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    title: this.model.getParameter("subject"),
                    sender: this.model.getParameter("sender")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        a = n(r),
        o = i(51),
        l = n(o),
        u = i(132),
        d = n(u),
        c = i(952),
        h = n(c),
        f = i(953),
        p = n(f),
        g = i(954),
        m = n(g),
        v = l.default.prototype.TYPE,
        _ = Marionette.CollectionView.extend({
            TYPE_TO_VIEW: (s = {},
                (0,
                    a.default)(s, v.MAP_PROBLEM, h.default),
                (0,
                    a.default)(s, v.UPDATE_REQUEST, p.default),
                (0,
                    a.default)(s, v.VENUE_UPDATE_REQUEST, m.default),
                s),
            tagName: "ul",
            className: "feed-list",
            childView: d.default,
            childViewEventPrefix: "issues",
            buildChildView: function(e, t, i) {
                var n = e.attributes.type;
                return new(0,
                    this.TYPE_TO_VIEW[n])({
                    model: e
                })
            }
        });
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(132),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "className", this).call(this) + " feed-issue-mp " + this._getSeverityClass()
                    }
                }, {
                    key: "getType",
                    value: function() {
                        var e = this.model.attributes.problem;
                        return I18n.t("problems.types." + e.attributes.subType + ".title")
                    }
                }]),
                t
        }(v.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(132),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "className", this).call(this) + " feed-issue-ur " + this._getSeverityClass()
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return this.model.attributes.updateRequest.getTypeText()
                    }
                }]),
                t
        }(v.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(132),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "className", this).call(this) + " feed-issue-pu " + this._getSeverityClass() + " " + this.getTypeClass()
                    }
                }, {
                    key: "getType",
                    value: function() {
                        var e = this.model.attributes.updateRequest,
                            t = e.get("subject"),
                            i = e.get("updateType");
                        return "flag" === i ? I18n.t("venues.update_requests.panel.flag_title." + t) : I18n.t("venues.update_requests.panel.title." + i)
                    }
                }, {
                    key: "getTypeClass",
                    value: function() {
                        return this.model.attributes.updateRequest.get("updateType").toLowerCase()
                    }
                }]),
                t
        }(v.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(956),
        r = n(s),
        a = i(957),
        o = n(a),
        l = Marionette.CollectionView.extend({
            className: "feed-group list-unstyled",
            tagName: "ul",
            childView: r.default,
            childViewEventPrefix: "first-time",
            initialize: function() {
                this.cyclesTimeout = new o.default({
                    numberOfCycles: 3,
                    cyclesIntervalTime: 3e4,
                    itemIntervalTime: 5e3,
                    startDelay: 3e3,
                    handler: this._cycleAnimationLoop.bind(this)
                })
            },
            _cycleAnimationLoop: function() {
                if (this.cyclesTimeout) {
                    var e = this.cyclesTimeout.getCurrentIndex(),
                        t = this.children.toArray();
                    if (e < this.children.length) {
                        t[this.cyclesTimeout.getCurrentIndex()].$el.addClass("animate").siblings().removeClass("animate")
                    } else
                        this.cyclesTimeout.stopCycle()
                }
            },
            onRender: function() {
                this.cyclesTimeout.start()
            },
            onDestroy: function() {
                this.cyclesTimeout.stop()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(131),
        v = n(m),
        y = i(10),
        b = n(y),
        w = i(267),
        E = n(w),
        k = I18n.t("internal.editing_local_forum_link"),
        M = I18n.t("internal.wiki_link"),
        S = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "className", this).call(this) + " feed-first-time type-" + this.model.attributes.type.toLowerCase()
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .inner": "_onClick",
                            "click .delete": "_onClickDelete"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.overlayRenderer = null
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return _.extend(v.default.prototype.serializeData.apply(this, arguments), {
                            title: this._getValueOrTemplate("title"),
                            shortMessage: this._getValueOrTemplate("shortMessage"),
                            linkUrl: this._getValueOrTemplate("linkUrl")
                        })
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        var e = this.model.TYPE,
                            t = this.model.attributes.type;
                        switch (W.Report.feedAction("show", t),
                            W.Report.feedAction("click_on_card", t),
                            t) {
                            case e.DISCOVER_COMMUNITY_FORUM:
                                this._openUrl(k);
                                break;
                            case e.DISCOVER_LOCAL_WIKI:
                                this._openUrl(M);
                                break;
                            case e.FIRST_TIME_VIDEOS:
                                this._openVideoTutorial();
                                break;
                            case e.CHECK_YOUR_NEIGHBORHOOD:
                                this._goToNeighborhood()
                        }
                    }
                }, {
                    key: "_openVideoTutorial",
                    value: function() {
                        $("#tutorial-dialog").modal("show")
                    }
                }, {
                    key: "_goToNeighborhood",
                    value: function() {
                        var e = this.model.attributes.parameters.address;
                        if (e) {
                            var t = Number(e.split(",")[0]),
                                i = Number(e.split(",")[1]),
                                n = new OL.LonLat(t, i);
                            b.default.project(n),
                                this._animateSpotLight(n)
                        }
                    }
                }, {
                    key: "_animateSpotLight",
                    value: function(e) {
                        this.overlayRenderer && this.overlayRenderer.destroy(),
                            this.overlayRenderer = new E.default(W.map),
                            this.overlayRenderer.drawOverlay(),
                            this.overlayRenderer.animateHome(e)
                    }
                }, {
                    key: "_openUrl",
                    value: function(e) {
                        e && window.open(e, "_blank")
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this.overlayRenderer && this.overlayRenderer.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Feed/templates/notification_item"
                    }
                }]),
                t
        }(v.default);
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this.startDelay = 0,
                    this.numberOfCycles = 3,
                    this.cyclesIntervalTime = 3e4,
                    this.itemIntervalTime = 5e3,
                    this.handler = null,
                    (0,
                        r.default)(this, t),
                    this._currentCycle = 0,
                    this._nextItemTimeout = 0,
                    this._cyclesTimeout = 0,
                    this._isRuning = !1,
                    this._currentIndex = -1
            }
            return (0,
                    u.default)(e, [{
                    key: "start",
                    value: function() {
                        this.stop(),
                            this._isRuning = !0,
                            this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.startDelay)
                    }
                }, {
                    key: "stop",
                    value: function() {
                        this._isRuning && (this._cyclesTimeout && window.clearTimeout(this._cyclesTimeout),
                            this.stopCycle(),
                            this._cyclesTimeout = 0,
                            this._isRuning = !1)
                    }
                }, {
                    key: "_animationLoop",
                    value: function() {
                        this._currentCycle < this.numberOfCycles ? (this._currentCycle++,
                            this._startCycle(),
                            this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.cyclesIntervalTime)) : this.stop()
                    }
                }, {
                    key: "_startCycle",
                    value: function() {
                        this.stopCycle(),
                            this._currentIndex = -1,
                            this._cycleAnimationLoop()
                    }
                }, {
                    key: "stopCycle",
                    value: function() {
                        this._nextItemTimeout && (window.clearTimeout(this._nextItemTimeout),
                            this._nextItemTimeout = 0)
                    }
                }, {
                    key: "_cycleAnimationLoop",
                    value: function() {
                        this._currentIndex++,
                            "function" == typeof this.handler && this.handler(),
                            this._nextItemTimeout = window.setTimeout(this._cycleAnimationLoop.bind(this), this.itemIntervalTime)
                    }
                }, {
                    key: "setHandler",
                    value: function(e) {
                        "function" == typeof e && (this.handler = e)
                    }
                }, {
                    key: "getCurrentIndex",
                    value: function() {
                        return this._currentIndex
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(959),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CollectionView.extend({
            className: "feed-group list-unstyled",
            tagName: "ul",
            childView: s.default,
            childViewEventPrefix: "mentoring",
            initialize: function() {}
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(131),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            f.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "className", this).call(this) + " feed-mentoring type-" + this.model.attributes.type.toLowerCase()
                    }
                }]),
                t
        }(v.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(961),
        r = n(s),
        a = i(1034),
        o = n(a),
        l = i(1042),
        u = n(l),
        d = Marionette.View.extend({
            template: "templates/sidebar/sidebar",
            className: "sidebar-layout",
            regions: {
                editRegion: "#edit-panel .contents",
                userRegion: "#user-info"
            },
            ui: {
                overlay: ".overlay"
            },
            bindings: {
                "#edit-panel": {
                    observe: "featureSelected",
                    visible: !0,
                    visibleFn: function(e, t, i) {
                        if (t && this._storeScroll(),
                            e.toggle(t),
                            t)
                            return this.$el.scrollTop(0)
                    }
                },
                "#user-info": {
                    observe: "featureSelected",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    },
                    visibleFn: function(e, t, i) {
                        if (e.toggle(t),
                            t)
                            return this._restoreScroll()
                    }
                }
            },
            scrollTop: null,
            initialize: function(e) {
                this.dataModel = e.dataModel,
                    this.selectionManager = e.selectionManager,
                    this.editingMediator = e.editingMediator,
                    this.streetViewController = e.streetViewController,
                    this.featureEditorFactory = new r.default({
                        selectionManager: this.selectionManager,
                        dataModel: this.dataModel,
                        streetViewController: this.streetViewController
                    }),
                    this.scrollTop = 0,
                    this.listenTo(this.model, "selectionChanged", this._onSelectionChanged),
                    this.editingMediator.on("change:editingEnabled", this._toggleEditing, this)
            },
            onDestroy: function() {
                this.editingMediator.off("change:editingEnabled", this._toggleEditing, this)
            },
            onRender: function() {
                this._renderUserInfo(),
                    this._toggleEditing(),
                    this._toggleHouseNumbers(),
                    this.stickit()
            },
            _onSelectionChanged: function(e) {
                return e.selection.length ? (this.editView = this.featureEditorFactory.create(),
                    this.showChildView("editRegion", this.editView),
                    this._toggleEditing()) : this.getRegion("editRegion").empty()
            },
            _toggleEditing: function() {
                var e = this.editingMediator.get("editingEnabled");
                this.ui.overlay.toggleClass("editingDisabled", !e),
                    this.getChildView("editRegion") && this.getChildView("editRegion").toggleEnabled(e)
            },
            _toggleHouseNumbers: function() {
                var e = this.editingMediator.get("editingHouseNumbers");
                this.ui.overlay.toggleClass("houseNumbersVisible", e)
            },
            onEditingHouseNumbersChanged: function() {
                this._toggleHouseNumbers()
            },
            _renderUserInfo: function() {
                return this.options.sandbox ? this.showChildView("userRegion", new u.default({
                    app: this.model
                })) : this.options.loggedIn ? this.showChildView("userRegion", new o.default({
                    model: this.model,
                    feedControl: this.options.feedControl
                })) : this.getRegion("userRegion").empty()
            },
            _storeScroll: function() {
                this.scrollTop = this.$el.scrollTop()
            },
            _restoreScroll: function() {
                return this.$el.scrollTop(this.scrollTop)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(17),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(962),
        c = n(d),
        h = i(977),
        f = n(h),
        p = i(978),
        g = n(p),
        m = i(1002),
        v = n(m),
        y = i(11),
        b = i(1003),
        w = n(b),
        E = i(1025),
        k = n(E),
        M = i(35),
        S = n(M),
        T = function() {
            function e(t) {
                var i = this;
                (0,
                    o.default)(this, e),
                this.options = t,
                    this.singleTypeToEditorClass = _.clone(this.SINGLE_SELECTION.TYPE_TO_EDITOR_CLASS),
                    this.multiTypeToEditorClass = _.clone(this.MULTI_SELECTION.TYPE_TO_EDITOR_CLASS),
                    S.default.getFeatureEditors().map(function(e) {
                        var t = e.featureType,
                            n = e.featureEditorClass;
                        return i.singleTypeToEditorClass[t] = n
                    })
            }
            return (0,
                    u.default)(e, [{
                    key: "SINGLE_SELECTION",
                    get: function() {
                        var e, t;
                        return {
                            TYPE_TO_EDITOR_CLASS: (e = {},
                                (0,
                                    r.default)(e, y.SEGMENT, w.default),
                                (0,
                                    r.default)(e, y.VENUE, g.default),
                                (0,
                                    r.default)(e, y.NODE, v.default),
                                (0,
                                    r.default)(e, y.SPEED_CAMERA, f.default),
                                (0,
                                    r.default)(e, y.BIG_JUNCTION, c.default),
                                e),
                            TYPE_TO_OPTIONS: (t = {},
                                (0,
                                    r.default)(t, y.SEGMENT, function() {
                                    return {
                                        selectionManager: this.options.selectionManager,
                                        reversedSegments: this.options.selectionManager.getReversedSegments()
                                    }
                                }),
                                (0,
                                    r.default)(t, y.VENUE, function() {
                                    return {
                                        streetViewController: this.options.streetViewController
                                    }
                                }),
                                (0,
                                    r.default)(t, y.BIG_JUNCTION, function() {
                                    return {
                                        selectionManager: this.options.selectionManager
                                    }
                                }),
                                t)
                        }
                    }
                }, {
                    key: "MULTI_SELECTION",
                    get: function() {
                        return {
                            TYPE_TO_EDITOR_CLASS: (0,
                                r.default)({}, y.VENUE, k.default),
                            TYPE_TO_OPTIONS: (0,
                                r.default)({}, y.VENUE, function() {
                                return {
                                    selectionManager: this.options.selectionManager
                                }
                            })
                        }
                    }
                }]),
                (0,
                    u.default)(e, [{
                    key: "create",
                    value: function() {
                        var e = this.options.selectionManager,
                            t = this.options.dataModel,
                            i = _(e.getSelectedFeatures()).pluck("model"),
                            n = i[0].type,
                            s = this.singleTypeToEditorClass[n],
                            r = {};
                        return this.SINGLE_SELECTION.TYPE_TO_OPTIONS[n] && (r = this.SINGLE_SELECTION.TYPE_TO_OPTIONS[n].call(this)),
                            i.length > 1 && this.multiTypeToEditorClass[n] && (s = this.multiTypeToEditorClass[n],
                                this.MULTI_SELECTION.TYPE_TO_OPTIONS && this.MULTI_SELECTION.TYPE_TO_OPTIONS[n] && (r = this.MULTI_SELECTION.TYPE_TO_OPTIONS[n].call(this))),
                            new s(_.defaults({
                                dataModel: t,
                                selection: i,
                                map: W.map
                            }, r))
                    }
                }]),
                e
        }();
    t.default = T,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(8),
        v = n(m),
        y = i(133),
        b = n(y),
        w = i(964),
        E = n(w),
        k = i(134),
        M = n(k),
        S = i(279),
        T = n(S),
        C = i(158),
        I = function(e) {
            function t() {
                (0,
                    u.default)(this, t);
                var e = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments));
                return e.selectionManager = e.options.selectionManager,
                    e
            }
            return (0,
                    g.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "events",
                    value: function() {
                        return (0,
                            o.default)({}, (0,
                            v.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "events", this).call(this), {
                            "click .select-short-segments": "_selectShortSegments"
                        })
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            addressEdit: ".address-edit",
                            lockEdit: ".lock-edit",
                            junctionEntryList: ".junction-entry-list-region"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return (0,
                            o.default)({}, (0,
                            v.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "templateContext", this).apply(this, arguments), {
                            MAX_POLYGON_SIZE_DEGREES: C.MAX_POLYGON_SIZE_DEGREES
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/big-junction-edit"
                    }
                }]),
                (0,
                    f.default)(t, [{
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            isSizeLegal: e.isPolygonAreaLegal(),
                            name: e.attributes.name,
                            segmentCount: e.getSegmentCount(),
                            rank: e.attributes.rank
                        }
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            name: this.simpleAttribute("name"),
                            lockEditable: !1
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return (0,
                            o.default)({}, (0,
                            v.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "bindings", this).call(this), {
                            ".size-alert": {
                                observe: "isSizeLegal",
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            "[name=name]": {
                                observe: "name",
                                events: ["blur"]
                            },
                            ".segment-count": {
                                observe: "segmentCount",
                                onGet: function(e) {
                                    return I18n.t("edit.big_junction.segments", {
                                        segments: e
                                    })
                                }
                            }
                        })
                    }
                }, {
                    key: "_selectShortSegments",
                    value: function() {
                        var e = this.getFeature(),
                            t = this._dataModel.segments.getByIds(e.attributes.segIDs);
                        return this.selectionManager.setSelectedModels(t)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.getFeature();
                        this.showChildView("addressEdit", new M.default({
                                addressModel: e.getAddress(),
                                dataModel: this._dataModel,
                                feature: e,
                                editable: e.arePropertiesEditable(),
                                editStreet: !1
                            })),
                            this.showChildView("junctionEntryList", new E.default({
                                junction: e,
                                drawingContext: this.options.map.getDrawingContext(),
                                selectionManager: this.selectionManager
                            })),
                            this.showChildView("lockEdit", new T.default({
                                model: this.viewModel,
                                propertiesEditableAttribute: "lockEditable"
                            })),
                            (0,
                                v.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "onRender", this).apply(this, arguments)
                    }
                }]),
                t
        }(b.default);
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(53),
        g = n(p),
        m = i(113),
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "generateDescription",
                    value: function() {
                        var e = this.subActions.length,
                            t = this.subActions[0];
                        this._description = (0,
                            m.generateUpdateActionDescription)(t, e)
                    }
                }]),
                t
        }(g.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(965),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return "junction-entry-view"
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._junction = this.options.junction,
                            this._drawingContext = this.options.drawingContext,
                            this._drawingContext.moveLayerToTop(),
                            this._selectionManager = this.options.selectionManager
                    }
                }, {
                    key: "_getEntryModels",
                    value: function() {
                        var e = this,
                            t = this._junction.getShortestTurns();
                        return t = _.uniq(t, !1, function(e) {
                                return e.getFromVertex().getID()
                            }),
                            t.map(function(t) {
                                return new Backbone.Model({
                                    vertex: t.getFromVertex(),
                                    junction: e._junction,
                                    segment: e._junction.model.segments.get(t.getFromVertex().getSegmentID())
                                })
                            })
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("list", new Marionette.CollectionView({
                            childView: g.default,
                            childViewOptions: {
                                dataModel: this._junction.model,
                                drawingContext: this._drawingContext
                            },
                            collection: new Backbone.Collection(this._getEntryModels()),
                            onChildviewClick: this._onItemClicked.bind(this)
                        }))
                    }
                }, {
                    key: "_onItemClicked",
                    value: function(e) {
                        this._selectionManager.setSelectedModels([e.getSegment()])
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/BigJunction/templates/junction-entry-layout"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(26),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function() {
                        var e = this.model.get("junction"),
                            t = this.model.get("segment").geometry,
                            i = new g.default("junction-entry-marker fa fa-arrow-right");
                        i.div.style = "transform: rotate(" + (180 - e.getAngleAtIntersection(t)) + "deg)";
                        var n = e.getIntersectionPoint(t);
                        this._marker = new OL.Marker(new OL.LonLat(n.x, n.y), i),
                            this._marker.events.on({
                                click: this._onMarkerClick,
                                mouseover: this._onMouseOver,
                                mouseout: this._onMouseOut,
                                scope: this
                            }),
                            this._drawingContext = this.options.drawingContext
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            mouseover: "_onMouseOver",
                            mouseout: "_onMouseOut"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            click: "click"
                        }
                    }
                }, {
                    key: "_onMarkerClick",
                    value: function() {
                        this.trigger("click", this)
                    }
                }, {
                    key: "_onMouseOver",
                    value: function() {
                        this._drawingContext.addFeatures([new OL.Feature.Vector(this.getSegment().geometry.clone(), {}, {
                            strokeColor: "#00ece3",
                            strokeWidth: 6
                        })])
                    }
                }, {
                    key: "_onMouseOut",
                    value: function() {
                        this._drawingContext.removeAllFeatures()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            streetName: this.model.get("segment").getAddress().getStreetName()
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._drawingContext.addMarkers([this._marker])
                    }
                }, {
                    key: "getSegment",
                    value: function() {
                        return this.model.get("segment")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/BigJunction/templates/junction-entry-item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.MAX_LENGTH = void 0;
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = {
            STREET_NAME: 100,
            CITY_NAME: 100,
            HOUSE_NUMBER: 20
        },
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            houseNumber: "",
                            streetName: "",
                            emptyStreet: !1,
                            cityName: "",
                            emptyCity: !1,
                            cityID: null,
                            stateID: null,
                            countryID: null,
                            addressFormShown: !1,
                            editable: !0,
                            fullAddress: "",
                            ttsLocales: [W.Config.tts.default_locale],
                            altStreets: new Backbone.Collection,
                            newAltStreets: new Backbone.Collection
                        }
                    }
                }, {
                    key: "_createAltStreetModel",
                    value: function(e) {
                        return new Backbone.Model({
                            id: e.getStreet().id,
                            streetName: e.getStreetName({
                                emptyString: ""
                            }),
                            cityName: e.getCityName({
                                emptyString: ""
                            })
                        })
                    }
                }, {
                    key: "populateFromAddressModel",
                    value: function(e) {
                        var t = this;
                        if (!e.isEmpty()) {
                            this.set({
                                streetName: e.getStreetName({
                                    emptyString: ""
                                }),
                                emptyStreet: e.isEmptyStreet(),
                                cityID: e.getCity() && e.getCity().getID(),
                                cityName: e.getCityName({
                                    emptyString: ""
                                }),
                                emptyCity: e.getCity() && e.getCity().isEmpty(),
                                stateID: e.getState() && e.getState().getID(),
                                countryID: e.getCountry() && e.getCountry().getID(),
                                houseNumber: e.attributes.houseNumber,
                                ttsDisabled: e.isEmptyStreet()
                            });
                            var i = e.get("altStreets");
                            if (null != i) {
                                var n = i.map(function(e) {
                                    return t._createAltStreetModel(e)
                                });
                                this.set({
                                    altStreets: new Backbone.Collection(n),
                                    newAltStreets: new Backbone.Collection
                                })
                            }
                            var s = e.getCountry();
                            return null != s && s.ttsLocales && this.set({
                                    ttsLocales: s.ttsLocales
                                }),
                                this
                        }
                    }
                }, {
                    key: "addNewAltStreet",
                    value: function(e) {
                        this.attributes.newAltStreets.add({
                            cityID: this.attributes.cityID,
                            cityName: this.attributes.cityName,
                            emptyCity: e,
                            streetName: ""
                        })
                    }
                }, {
                    key: "getTTSLocales",
                    value: function() {
                        return this.attributes.ttsLocales
                    }
                }], [{
                    key: "fromAddress",
                    value: function(e, i) {
                        if (e.isEmpty()) {
                            var n = i.segments.topCityID;
                            if (null != n) {
                                var s = i.cities.get(n),
                                    r = s.attributes.countryID,
                                    a = s.attributes.stateID;
                                return new t({
                                    cityID: n,
                                    cityName: s.attributes.name,
                                    countryID: r,
                                    stateID: a
                                })
                            }
                            var o = i.countries.top,
                                l = i.states.top;
                            return new t({
                                countryID: o ? o.getID() : void 0,
                                stateID: l ? l.getID() : void 0
                            })
                        }
                        var u = new t;
                        return u.populateFromAddressModel(e),
                            u
                    }
                }]),
                t
        }(Backbone.Model);
    t.MAX_LENGTH = p,
        t.default = g
}, function(e, t, i) {
    "use strict";

    function n(e, t, i) {
        return W.model.cities.getCityExists(e, t, i).then(function(t) {
            var i = !0;
            return t.isDistant ? i = window.confirm(I18n.t("edit.segment.city_confirm.distant", {
                    city_name: e
                })) : null === t.existingCity && (i = window.confirm(I18n.t("edit.segment.city_confirm.no_city", {
                    city_name: e
                }))),
                i
        })
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.getAndConfirmCityChange = n
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        sum: function(e, t) {
            return (e || 0) + (t || 0)
        },
        max: function(e, t) {
            return Math.max(e, t)
        },
        logical: {
            and: function(e, t) {
                return e && t
            },
            or: function(e, t) {
                return e || t
            }
        },
        bitwise: {
            and: function(e, t) {
                return e & t
            },
            or: function(e, t) {
                return e | t
            },
            xor: function(e, t) {
                return e ^ t
            }
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(72),
        o = n(a),
        l = i(210),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(50),
        y = n(_),
        b = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    i = arguments[1];
                (0,
                    c.default)(this, t);
                var n = new u.default,
                    s = new u.default,
                    a = new u.default,
                    l = new u.default,
                    d = [],
                    h = new u.default;
                e.forEach(function(e) {
                    e.isEmpty() || (n.add(e.getStreet().id),
                        s.add(e.getCity().attributes.id),
                        a.add(e.getState().id),
                        l.add(e.getCountry().id),
                        e.attributes.altStreets.forEach(function(e) {
                            var t = e.getStreet().id;
                            h.has(t) || (d.push(e),
                                h.add(t))
                        }))
                });
                var f = (0,
                        o.default)(n).map(function(e) {
                        return i.streets.get(e)
                    }),
                    p = (0,
                        o.default)(s).map(function(e) {
                        return i.cities.get(e)
                    }),
                    m = (0,
                        o.default)(a).map(function(e) {
                        return i.states.get(e)
                    }),
                    v = (0,
                        o.default)(l).map(function(e) {
                        return i.countries.get(e)
                    }),
                    _ = (0,
                        g.default)(this, (t.__proto__ || (0,
                        r.default)(t)).call(this, {
                        isEmpty: 0 === f.length,
                        street: f.length > 1 ? null : f[0],
                        city: p.length > 1 ? null : p[0],
                        state: m.length > 1 ? null : m[0],
                        country: v.length > 1 ? null : v[0],
                        altStreets: d
                    }));
                return _.streets = f,
                    _.cities = p,
                    _.states = m,
                    _.countries = v,
                    _.addresses = e,
                    _
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "hasMixedStreets",
                    value: function() {
                        return this.streets.length > 1
                    }
                }, {
                    key: "hasMixedCities",
                    value: function() {
                        return this.cities.length > 1
                    }
                }, {
                    key: "hasMixedStates",
                    value: function() {
                        return this.states.length > 1
                    }
                }, {
                    key: "hasMixedCountries",
                    value: function() {
                        return this.countries.length > 1
                    }
                }, {
                    key: "getStreetName",
                    value: function(e) {
                        return this.hasMixedStreets() ? null : this.addresses[0].getStreetName(e)
                    }
                }, {
                    key: "isEmptyStreet",
                    value: function() {
                        return !this.hasMixedStreets() && this.addresses[0].isEmptyStreet()
                    }
                }, {
                    key: "getCityName",
                    value: function(e) {
                        return this.hasMixedCities() ? null : this.addresses[0].getCityName(e)
                    }
                }, {
                    key: "getStateName",
                    value: function() {
                        return this.hasMixedStates() ? null : this.addresses[0].getStateName()
                    }
                }, {
                    key: "getCountryName",
                    value: function() {
                        return this.hasMixedCountries() ? null : this.addresses[0].getCountryName()
                    }
                }, {
                    key: "format",
                    value: function() {
                        if (this.isEmpty())
                            return I18n.t("edit.landmark.no_address");
                        var e = this.hasMixedStates() ? I18n.t("edit.segment.no_common.state") : this.getStateName(),
                            t = this.hasMixedCountries() ? I18n.t("edit.segment.no_common.country") : this.getCountryName();
                        return [this.hasMixedStreets() ? I18n.t("edit.segment.no_common.street") : this.getStreetName(), this.hasMixedCities() ? I18n.t("edit.segment.no_common.city") : this.getCityName(), this.hasState() ? e : t].join(", ")
                    }
                }, {
                    key: "hasSingleNonEmptyStreet",
                    value: function() {
                        return 1 === this.streets.length && !this.isEmptyStreet()
                    }
                }]),
                t
        }(y.default);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(971),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "childView",
                    value: function(e) {
                        return e.get("deleted") ? null : g.default
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .alt-street-delete": "onDeleteClick"
                        }
                    }
                }, {
                    key: "onDeleteClick",
                    value: function() {
                        var e = this;
                        this.$el.fadeOut("fast", function() {
                            e.model.set({
                                deleted: !0
                            })
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/address/alt-street"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(973),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "childView",
                    value: function() {
                        return g.default
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            dataModel: this.options.dataModel
                        }
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(100),
        g = n(p),
        m = i(27),
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .alt-street-delete": "onDeleteClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".street-name": {
                                observe: "streetName"
                            },
                            ".city-name": {
                                observe: "cityName",
                                attributes: g.default.requireAndEnableIfNot("emptyCity")
                            },
                            ".empty-city": "emptyCity"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            streetNameInput: ".street-name",
                            cityNameInput: ".city-name"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.ui.streetNameInput.typeahead({
                                source: this.streetNames
                            }),
                            this.ui.cityNameInput.typeahead({
                                source: this.cityNames
                            })
                    }
                }, {
                    key: "onDeleteClick",
                    value: function() {
                        this.model.collection.remove(this.model)
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._initStreetInput(),
                            this._initCityInput()
                    }
                }, {
                    key: "_generateStreetNames",
                    value: function() {
                        this.streetNames = _.chain(this.options.dataModel.streets.objects).pluck("name").compact().value()
                    }
                }, {
                    key: "_generateCityNames",
                    value: function() {
                        this.cityNames = this.options.dataModel.cities.getValidCities().map(function(e) {
                            return e.attributes.name
                        })
                    }
                }, {
                    key: "_initStreetInput",
                    value: function() {
                        var e = this;
                        return this._generateStreetNames(),
                            this.listenTo(this.options.dataModel.streets, m.UPDATED, function() {
                                e._generateStreetNames(),
                                    e.ui.streetNameInput.data && e.ui.streetNameInput.data("typeahead") && (e.ui.streetNameInput.data("typeahead").source = e.streetNames)
                            })
                    }
                }, {
                    key: "_initCityInput",
                    value: function() {
                        var e = this;
                        return this._generateCityNames(),
                            this.listenTo(this.options.dataModel.cities, m.UPDATED, function() {
                                e._generateCityNames(),
                                    e.ui.cityNameInput.data && e.ui.cityNameInput.data("typeahead") && (e.ui.cityNameInput.data("typeahead").source = e.cityNames)
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/address/edit-alt-street"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(975),
        g = n(p),
        m = i(33),
        v = function(e) {
            function t() {
                (0,
                    o.default)(this, t);
                var e = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments));
                return e._ttsPlayer = new g.default,
                    e
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return "tts-playback"
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            ttsButton: ".tts-button"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .play-button": "_playButtonClicked"
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:ttsDisabled": "render",
                            "change:country": "render"
                        }
                    }
                }, {
                    key: "_playButtonClicked",
                    value: function() {
                        var e = this._getSelectedTTSLocale();
                        return this._ttsPlayer.sayStreetName(this.model.attributes.streetName, this.options.lonlat, e)
                    }
                }, {
                    key: "_getSelectedTTSLocale",
                    value: function() {
                        return this.$el.find(".locale-select option:selected").val()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.model.getTTSLocales();
                        this.ui.ttsButton.popover({
                            html: !0,
                            content: (0,
                                m.getHTML)("templates/segment/tts-playback-popover", {
                                locales: e
                            }),
                            placement: "bottom"
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/tts-playback"
                    }
                }], [{
                    key: "fromAddress",
                    value: function(e, i) {
                        return new t({
                            model: e,
                            lonlat: i.toLonLat()
                        })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(10),
        u = n(l),
        d = function() {
            function e() {
                (0,
                    r.default)(this, e)
            }
            return (0,
                    o.default)(e, [{
                    key: "sayStreetName",
                    value: function(t, i, n) {
                        if (null === t || 0 !== t.length) {
                            var s = {
                                text: " " + t + " ",
                                lang: n
                            };
                            null != i && _.extend(s, this._getLocationOptions(i)),
                                s = _.defaults(s, W.Config.tts.options);
                            var r = W.Config.tts.url + "?" + $.param(s);
                            return e._getCachedAudioElement().attr("src", r)
                        }
                    }
                }, {
                    key: "_getLocationOptions",
                    value: function(e) {
                        return e = e.clone(),
                            u.default.unproject(e), {
                                lon: e.lon,
                                lat: e.lat
                            }
                    }
                }]),
                e
        }();
    d._cachedAudioElement = null,
        d._getCachedAudioElement = function() {
            return null != this._cachedAudioElement ? this._cachedAudioElement : this._cachedAudioElement = $("<audio />").attr("autoplay", !0)
        },
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(53),
        g = n(p),
        m = i(173),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "generateDescription",
                    value: function() {
                        var e = this.subActions[0].feature || this.subActions[0].segment,
                            t = e.type,
                            i = this.subActions.filter(function(e) {
                                return e instanceof v.default
                            }).length;
                        1 === i ? this._description = I18n.t("save.changes_log.actions.UpdateFeatureAddress", {
                            objectType: t
                        }) : i > 1 && (this._description = I18n.t("save.changes_log.actions.MultiUpdateFeatureAddress", {
                            count: i,
                            objectType: t
                        }))
                    }
                }]),
                t
        }(g.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(45),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(8),
        v = n(m),
        _ = i(4),
        y = n(_),
        b = i(133),
        w = n(b),
        E = i(167),
        k = n(E),
        M = i(16),
        S = n(M),
        T = i(59),
        C = n(T),
        I = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    y.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return (0,
                            o.default)({}, (0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "bindings", this).call(this), {
                            "[name=type]": {
                                observe: "type",
                                selectOptions: {
                                    collection: (0,
                                        r.default)(k.default.prototype.TYPES).map(function(e) {
                                        return {
                                            name: I18n.t("edit.camera.fields.type." + e),
                                            type: e
                                        }
                                    }),
                                    labelPath: "name",
                                    valuePath: "type"
                                }
                            },
                            "[name=speed]": {
                                observe: "speed",
                                events: ["blur"]
                            }
                        })
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            speed: function(e, t) {
                                t.speed = C.default.getOriginalValue(e, k.default.prototype.UNITS.speed)
                            },
                            type: this.simpleAttribute("type")
                        }
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            speed: S.default.getDisplayUnitValue(e.attributes.speed, k.default.prototype.UNITS.speed, !0),
                            type: e.attributes.type
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/camera-edit"
                    }
                }]),
                t
        }(w.default);
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(120),
        v = n(m),
        y = i(979),
        b = n(y),
        w = i(980),
        E = n(w),
        k = i(20),
        M = n(k),
        S = i(77),
        T = n(S),
        C = i(983),
        I = n(C),
        A = i(93),
        D = n(A),
        R = i(264),
        O = n(R),
        L = i(280),
        x = i(984),
        P = n(x),
        N = i(986),
        V = n(N),
        F = i(281),
        U = n(F),
        j = i(134),
        B = n(j),
        G = i(282),
        z = n(G),
        H = i(989),
        q = n(H),
        Y = i(283),
        K = n(Y),
        J = i(62),
        Z = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(J),
        X = i(996),
        Q = n(X),
        ee = i(16),
        te = n(ee),
        ie = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i.streetViewController = e.streetViewController,
                    i.previousGeometry = null,
                    i.model.isPoint() || (i.previousGeometry = i.model.geometry),
                    i.viewModel = new Backbone.Model({
                        streetViewAvailable: !1
                    }),
                    i._toggleStreetViewButton(),
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            restoreLastTab: {
                                behaviorClass: U.default
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            tooltips: ".tooltip",
                            residentialTooltip: ".residential-tooltip",
                            categoriesTooltip: ".categories-tooltip",
                            brandInput: ".form-control[name=brand]"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return _.extend({}, (0,
                            g.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "events", this).call(this), {
                            "click .image-delete-button": "_onDeleteImageClicked",
                            "click .image-preview-container": "_onImagePreviewClicked",
                            "click .pending-changes-alert": "_onPendingChangesAlertClicked",
                            "click .toggle-residential": "_onResidentialToggled",
                            "click .convert-to-polygon": "_onConvertToPolygonClicked",
                            "click .focus": "_onLocateButtonClicked",
                            "click .street-view-btn": "_onLocateStreetViewButtonClicked"
                        })
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            categoriesRegion: ".categories",
                            openingHoursRegion: ".opening-hours",
                            aliasesRegion: ".aliases-view",
                            externalProvidersRegion: ".external-providers-view",
                            moreInfoRegion: ".more-info",
                            addressEdit: ".address-edit",
                            historyRegion: ".element-history-region",
                            navigationPointRegion: ".navigation-point-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".street-view-btn": {
                                observe: "streetViewAvailable",
                                visible: !0
                            },
                            ".street-view-tooltip": {
                                observe: "streetViewAvailable",
                                visible: !0,
                                onGet: _.negate(Boolean)
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit"
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "_toggleStreetViewButton",
                    value: function() {
                        var e = this,
                            t = this.model;
                        this.streetViewController && this.streetViewController.hasPlacePanaorama(t).then(function(t) {
                            e.viewModel.set("streetViewAvailable", t)
                        })
                    }
                }, {
                    key: "_hasHouseNumber",
                    value: function() {
                        return this.model.getAddress().has("houseNumber")
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        var e = this._getApprovedImages();
                        return {
                            landmark: this.model,
                            dataModel: this.dataModel,
                            canEditType: this._canEditType(),
                            hasHouseNumber: this._hasHouseNumber(),
                            showStatesSelection: this.dataModel.hasStates(),
                            showExternalProviderView: this._isExternalProviderEditingAllowed(),
                            lockRankRange: this._getLockRankRange(),
                            imageCount: e.length,
                            hasImages: e.length > 0,
                            showUnapprovedAlert: !this.model.attributes.approved,
                            showPendingMergeNote: this.model.hasPendingMerge(),
                            showPendingChangesAlert: this.model.hasUpdateRequests(),
                            showRequiresModerationAlert: this.model.requiresModeration(),
                            showAdLockedAlert: this.model.attributes.adLocked,
                            brands: this._getBrands(),
                            categoryClass: this._getCategoryClassName(),
                            images: e
                        }
                    }
                }, {
                    key: "_getServiceTypes",
                    value: function() {
                        return this.model.isParkingLot() ? D.default.prototype.SERVICE_TYPES.PARKING_LOT : D.default.prototype.SERVICE_TYPES.GENERAL
                    }
                }, {
                    key: "_getBrands",
                    value: function() {
                        var e = void 0;
                        return this.model.isGasStation() && (e = this.dataModel.venues.categoryBrands.GAS_STATION),
                            this.model.isParkingLot() && (e = this.dataModel.venues.categoryBrands.PARKING_LOT),
                            Array.isArray(e) ? e.sort(function(e, t) {
                                return e.localeCompare(t)
                            }) : []
                    }
                }, {
                    key: "_getCategoryClassName",
                    value: function() {
                        var e = this.options.selection[0].getMainCategory() || "";
                        return "venue-category-" + te.default.categoryToClassName(e)
                    }
                }, {
                    key: "_canEditType",
                    value: function() {
                        return !this.model.isParkingLot() || this.model.isPoint()
                    }
                }, {
                    key: "_getApprovedImages",
                    value: function() {
                        return _.filter(this.model.attributes.images, function(e) {
                            return e.get("approved")
                        })
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank(),
                            t = this.model.attributes.lockRank,
                            i = Math.max(e, t);
                        return _.range(0, i + 1)
                    }
                }, {
                    key: "_isExternalProviderEditingAllowed",
                    value: function() {
                        return this.model.areExternalProvidersEditable()
                    }
                }, {
                    key: "_onPendingChangesAlertClicked",
                    value: function() {
                        return W.commands.execute("place_updates:list", this.model)
                    }
                }, {
                    key: "_onConvertToPolygonClicked",
                    value: function(e) {
                        return $(e.target).attr("disabled", !0),
                            this.isPointChanged(!1)
                    }
                }, {
                    key: "isPointChanged",
                    value: function(e) {
                        var t = this.model,
                            i = void 0;
                        i = "true" === e ? t.getPointGeometry() : this.previousGeometry ? this.previousGeometry.clone() : t.getPolygonGeometry();
                        var n = new T.default(t, this.dataModel.venues, t.geometry, i);
                        this.dataModel.actionManager.add(n)
                    }
                }, {
                    key: "categoriesChanged",
                    value: function(e) {
                        _.isArray(e) || (e = _(e.split(",")).compact()),
                            e = this._handleParkingLotCategoryLogic(e),
                            this.changed({
                                categories: e
                            }),
                            this.suggestedCategoriesView && this.suggestedCategoriesView.categoriesChanged(e)
                    }
                }, {
                    key: "_handleParkingLotCategoryLogic",
                    value: function(e) {
                        return this.model.isParkingLot() ? e.length > 1 && (e = e.filter(function(e) {
                                return e !== Z.PARKING_LOT
                            })) : _.contains(e, Z.PARKING_LOT) && (e = [Z.PARKING_LOT]),
                            e
                    }
                }, {
                    key: "onFeaturesChanged",
                    value: function(e) {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "onFeaturesChanged", this).call(this, e),
                            this.hasEditedModelChanged(e) && !this.model.isPoint() && (this.previousGeometry = this.model.geometry)
                    }
                }, {
                    key: "_onCategoryClicked",
                    value: function(e) {
                        var t = this.model.attributes.categories,
                            i = _.without(t.concat(), e.category);
                        if (e.isSuggested)
                            i.pop(),
                            i.push(e.category);
                        else {
                            if (t.length > 0 && t[0] === e.category)
                                return;
                            i.unshift(e.category)
                        }
                        return this.categoriesChanged(i)
                    }
                }, {
                    key: "onOpeningHoursChanged",
                    value: function() {
                        var e = {
                            openingHours: this.openingHoursLayout.collection.toJSON()
                        };
                        this.dataModel.actionManager.add(new M.default(this.model, e))
                    }
                }, {
                    key: "_onDeleteImageClicked",
                    value: function(e) {
                        var t = $(e.target).parent(".image-preview-container").data("id");
                        return this._deleteImageById(t), !1
                    }
                }, {
                    key: "_deleteImageById",
                    value: function(e) {
                        var t = _(this.model.attributes.images).reject(function(t) {
                                return t.id === e
                            }),
                            i = {
                                images: t
                            };
                        this.dataModel.actionManager.add(new M.default(this.model, i))
                    }
                }, {
                    key: "_onImagePreviewClicked",
                    value: function(e) {
                        var t = this,
                            i = $(e.currentTarget).data("id"),
                            n = new O.default({
                                venue: this.model,
                                imageId: i
                            });
                        n.on("deleteImageClicked", function(e) {
                                t._deleteImageById(e),
                                    0 === t.model.attributes.images.length && W.app.layout.getRegion("dialogRegion").empty()
                            }),
                            W.app.layout.getRegion("dialogRegion").show(n),
                            e.preventDefault && e.preventDefault()
                    }
                }, {
                    key: "_onAliasesChanged",
                    value: function() {
                        var e = this.aliasesLayout.collection.removeEmpty().map(function(e) {
                                return e.get("name")
                            }),
                            t = {
                                aliases: e
                            };
                        return this.dataModel.actionManager.add(new M.default(this.model, t))
                    }
                }, {
                    key: "_onResidentialToggled",
                    value: function(e) {
                        e.preventDefault();
                        var t = this.model.attributes.residential;
                        if (this._hasHouseNumber() || t)
                            return this.dataModel.actionManager.add(new I.default(this.model, !t))
                    }
                }, {
                    key: "_initAliasesView",
                    value: function() {
                        var e = this.model.attributes.aliases.map(function(e) {
                            return new L.Item({
                                name: e
                            })
                        });
                        return this.aliasesLayout = new P.default({
                                collection: new L.Collection(e),
                                editable: this.model.arePropertiesEditable()
                            }),
                            this.listenTo(this.aliasesLayout.collection, "remove change", this._onAliasesChanged),
                            this.showChildView("aliasesRegion", this.aliasesLayout)
                    }
                }, {
                    key: "_initExternalProvidersView",
                    value: function() {
                        this.showChildView("externalProvidersRegion", new V.default({
                            venue: this.model
                        }))
                    }
                }, {
                    key: "onChildviewExternalProvidersListChange",
                    value: function(e) {
                        this.changed({
                            externalProviderIDs: e
                        })
                    }
                }, {
                    key: "_initOpeningHoursView",
                    value: function() {
                        return this.openingHoursLayout = new E.default({
                                collection: this.model.getOpeningHours(),
                                editable: this.model.arePropertiesEditable()
                            }),
                            this.listenTo(this.openingHoursLayout.collection, "remove add change", this.onOpeningHoursChanged),
                            this.showChildView("openingHoursRegion", this.openingHoursLayout)
                    }
                }, {
                    key: "_initCategoriesView",
                    value: function() {
                        return this.suggestedCategoriesView = new b.default({
                                venue: this.model,
                                editable: this.model.arePropertiesEditable()
                            }),
                            this.listenTo(this.suggestedCategoriesView, "categoryClicked", this._onCategoryClicked),
                            this.showChildView("categoriesRegion", this.suggestedCategoriesView)
                    }
                }, {
                    key: "_initMoreInfoTab",
                    value: function() {
                        var e = this.model.isParkingLot() ? q.default : z.default;
                        return this.moreInfoView = new e({
                                model: this.model,
                                serviceTypes: this._getServiceTypes(),
                                serviceSet: this.model.getServiceSet()
                            }),
                            this.listenTo(this.moreInfoView, "change", this._onMoreInfoChanged),
                            this.showChildView("moreInfoRegion", this.moreInfoView)
                    }
                }, {
                    key: "_onMoreInfoChanged",
                    value: function(e) {
                        return this.changed(e.newAttributes)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.ui.categoriesTooltip.tooltip({
                                placement: "bottom",
                                title: I18n.t(this.model.isParkingLot() ? "edit.landmark.tooltip.parking_lot" : "edit.landmark.tooltip.categories")
                            }),
                            this.model.isResidential() || (this._initCategoriesView(),
                                this._initMoreInfoTab(),
                                this._initOpeningHoursView(),
                                this._initAliasesView(),
                                this._isExternalProviderEditingAllowed() && this._initExternalProvidersView()),
                            this._renderAddressEdit(),
                            this._renderElementHistory(),
                            (this.model.isParkingLot() || this.model.isGasStation()) && this._initBrandAutoComplete(),
                            this._renderNavigationPoints(),
                            this.stickit(this.viewModel),
                            this.ui.tooltips.tooltip(),
                            this._hasHouseNumber() || this.ui.residentialTooltip.tooltip(),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "onRender", this).call(this)
                    }
                }, {
                    key: "_initBrandAutoComplete",
                    value: function() {
                        this.ui.brandInput.select2({
                            allowClear: !0
                        })
                    }
                }, {
                    key: "_renderAddressEdit",
                    value: function() {
                        this.showChildView("addressEdit", new B.default({
                            addressModel: this.model.getAddress(),
                            dataModel: this.dataModel,
                            feature: this.model,
                            editable: this.model.arePropertiesEditable(),
                            editHouseNumber: !0
                        }))
                    }
                }, {
                    key: "_renderElementHistory",
                    value: function() {
                        this.showChildView("historyRegion", new K.default({
                            map: this.options.map,
                            model: this.options.selection[0]
                        }))
                    }
                }, {
                    key: "_renderNavigationPoints",
                    value: function() {
                        var e = new Q.default({
                            landmark: this.model,
                            drawingContext: this.options.map.getDrawingContext(),
                            actionManager: this.dataModel.actionManager
                        });
                        this.showChildView("navigationPointRegion", e)
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        if (this.model.isParkingLot() || this.model.isGasStation())
                            return this.ui.brandInput.select2("destroy")
                    }
                }, {
                    key: "_onLocateButtonClicked",
                    value: function() {
                        var e = W.map.getPannable(),
                            t = this.model.geometry.getCentroid().clone().toLonLat();
                        e.panTo(t),
                            W.Report.focusAction("locate", "venue_locate_clicked", this.model.attributes.categories[0])
                    }
                }, {
                    key: "_onLocateStreetViewButtonClicked",
                    value: function() {
                        this.streetViewController.lookAtPlace(this.model),
                            W.Report.focusAction("streetview", "venue_streetview_clicked", this.model.attributes.categories[0])
                    }
                }]),
                t
        }(v.default);
    t.default = ie,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(62),
        s = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(n),
        r = i(33),
        a = Marionette.View.extend({
            template: "templates/venue/venue-categories",
            events: {
                "click .category": "onSuggestCategoryClicked"
            },
            ui: {
                select: "[name=categories]",
                suggestedCategories: ".suggested-categories"
            },
            initialize: function(e) {
                this.venue = e.venue,
                    this.editable = e.editable,
                    this.mainCategories = s.mainCategories,
                    this.categoryMap = this.venue.getCategorySet()
            },
            serializeData: function() {
                return {
                    view: this,
                    categoryMap: this.categoryMap
                }
            },
            getSuggestedCategories: function() {
                if (!this.editable)
                    return [];
                var e = this.venue.attributes.categories;
                return _.isEmpty(e) ? this.mainCategories : 1 === e.length && this.isMainCategory(e[0]) ? W.Config.venues.subcategories[e[0]] : []
            },
            isMainCategory: function(e) {
                return s.mainCategoryMap[e]
            },
            categoriesChanged: function(e, t) {
                return this.categoryMap = this.venue.getCategorySet(),
                    this.setSelectedCategories(),
                    this.ui.suggestedCategories.hide(),
                    this.ui.suggestedCategories.html((0,
                        r.getHTML)("templates/venue/suggested-categories", this.serializeData())),
                    this.ui.suggestedCategories.fadeIn("fast")
            },
            onRender: function() {
                function e(e) {
                    return I18n.t("venues.categories." + e.id)
                }
                var t = this;
                this.ui.select.select2({
                        width: "100%",
                        formatResult: e,
                        formatSelection: function(e) {
                            return (0,
                                r.getHTML)("templates/venue/category-tag", {
                                category: e.id,
                                hideClose: !t.editable
                            })
                        },
                        data: {
                            results: s.allCategories,
                            text: e
                        },
                        multiple: !0,
                        sortResults: function(t, i, n) {
                            return t.sort(function(t, i) {
                                return e(t).localeCompare(e(i))
                            })
                        }
                    }),
                    this._bindCategoryClickEvent(),
                    this.setSelectedCategories()
            },
            _bindCategoryClickEvent: function() {
                this.$el.find(".select2-choices").on("click", ".category", this.onCategoryClicked.bind(this))
            },
            setSelectedCategories: function() {
                return this.ui.select.select2("data", _(this.venue.attributes.categories).map(function(e) {
                    return {
                        id: e
                    }
                }))
            },
            onSuggestCategoryClicked: function(e) {
                this._categoryClickHelper(e, !0)
            },
            onCategoryClicked: function(e) {
                this._categoryClickHelper(e, !1)
            },
            _categoryClickHelper: function(e, t) {
                e.preventDefault();
                var i = $(e.target).data("category");
                return this.trigger("categoryClicked", {
                    category: i,
                    isSuggested: t
                })
            }
        });
    t.default = a,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(981),
        r = n(s),
        a = i(982),
        o = n(a),
        l = Marionette.CompositeView.extend({
            template: "templates/opening_hours/layout",
            childView: r.default,
            childViewContainer: ".list",
            events: {
                "click .add": "onAddClicked"
            },
            childViewOptions: function() {
                return {
                    editable: this.options.editable
                }
            },
            onAddClicked: function(e) {
                return e.preventDefault(),
                    this.showAddDialog()
            },
            showAddDialog: function() {
                var e = new o.default({
                    collection: this.collection
                });
                return W.app.layout.getRegion("dialogRegion").show(e)
            },
            serializeData: function() {
                return {
                    isEditable: this.options.editable
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        tagName: "li",
        template: "templates/opening_hours/item",
        events: {
            "click .delete": "onDelete"
        },
        serializeData: function() {
            return {
                model: this.model,
                isEditable: this.options.editable
            }
        },
        onDelete: function() {
            return this.model.collection.remove(this.model)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(114),
        s = i(94),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s),
        a = Marionette.View.extend({
            template: "templates/opening_hours/add",
            ui: {
                form: "form",
                timeSelectors: ".time-selector",
                fromTime: "input[name=fromTime]",
                toTime: "input[name=toTime]",
                dayCheckboxes: "input[name=days]",
                validationErrors: ".validation-errors"
            },
            events: {
                submit: "onSubmit",
                "click .select-all": "selectAllDays",
                "click .select-none": "deselectAllDays",
                "change input[name=allDay]": "onTimeToggled"
            },
            HOUR_FORMAT: "H:mm",
            selectAllDays: function(e) {
                return e.preventDefault(),
                    this.toggleDayCheckboxes(!0)
            },
            deselectAllDays: function(e) {
                return e.preventDefault(),
                    this.toggleDayCheckboxes(!1)
            },
            onTimeToggled: function() {
                return this.toggleTimeSelectors(!this.isAllDaySelected())
            },
            isAllDaySelected: function() {
                return "on" === this.$("input[name=allDay]:checked").val()
            },
            toggleTimeSelectors: function(e) {
                return this.ui.timeSelectors.prop({
                    disabled: !e,
                    required: e
                })
            },
            toggleDayCheckboxes: function(e) {
                return this.ui.dayCheckboxes.prop("checked", e)
            },
            onRender: function() {
                return this.ui.timeSelectors.timepicker(r.default.prototype.timepickerOptions)
            },
            onBeforeDestroy: function() {
                return this.$el.remove(),
                    this.ui.timeSelectors.timepicker("remove")
            },
            serializeData: function() {
                var e = n.OpeningHour.prototype.defaults();
                return {
                    dayCallback: this.isDayCheckedByDefault,
                    defaultFromTime: e.fromHour,
                    defaultToTime: e.toHour
                }
            },
            isDayCheckedByDefault: function(e) {
                return n.OpeningHour.prototype.defaultDays.includes(e)
            },
            onSubmit: function(e) {
                e.preventDefault();
                var t = this.ui.fromTime.val(),
                    i = this.ui.toTime.val(),
                    s = this.readDays();
                if (this._clearValidationErrors(),
                    this._vaildate(t, i, s)) {
                    var r = new n.OpeningHour({
                        days: s,
                        fromHour: t,
                        toHour: i
                    });
                    return this.isAllDaySelected() && r.setAllDay(),
                        this.collection.add(r),
                        this.destroy()
                }
            },
            _vaildate: function(e, t, i) {
                var n = [];
                if (0 === i.length && n.push(I18n.t("edit.landmark.opening_hours.errors.days")),
                    e = Date.parseExact(e, this.HOUR_FORMAT),
                    t = Date.parseExact(t, this.HOUR_FORMAT),
                    this.isAllDaySelected() || (null === e && n.push(I18n.t("edit.landmark.opening_hours.errors.fromHour")),
                        null === t && n.push(I18n.t("edit.landmark.opening_hours.errors.toHour")),
                        Number(e) === Number(t) && n.push(I18n.t("edit.landmark.opening_hours.errors.same"))),
                    n.length > 0) {
                    var s = n.map(function(e) {
                        return $("<div/>").text(e)
                    });
                    this.ui.validationErrors.append(s)
                }
                return 0 === n.length
            },
            _clearValidationErrors: function() {
                return this.ui.validationErrors.empty()
            },
            readDays: function() {
                return this.ui.form.find("input[name=days]:checked").toArray().map(function(e) {
                    return parseInt($(e).val(), 10)
                })
            }
        });
    t.default = a,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(20),
        v = n(m),
        _ = i(77),
        y = n(_),
        b = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n));
                return s._venue = e,
                    s._toResidential = i,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._venue;
                        if (this._toResidential && !e.isPoint()) {
                            var t = e.getPointGeometry(),
                                i = new y.default(e, e.model.venues, e.geometry, t);
                            this.doSubAction(i)
                        }
                        return this.doSubAction(new v.default(this._venue, {
                            residential: this._toResidential
                        })), !0
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._venue]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.UpdateLandmarkResidential." + Boolean(this._toResidential))
                    }
                }]),
                t
        }(g.default);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(280),
        s = i(985),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s),
        a = Marionette.CompositeView.extend({
            MAX_ALIASES: 4,
            template: "templates/venue/aliases-layout",
            childView: r.default,
            childViewContainer: ".list",
            events: {
                "click .add": "_onAddClicked"
            },
            ui: {
                addButton: ".add"
            },
            initialize: function() {
                return this.collection.on("add remove", this._toggleAddButton, this)
            },
            serializeData: function() {
                return {
                    hideAddButton: this._shouldHideAddButton()
                }
            },
            _onAddClicked: function(e) {
                return e.preventDefault && e.preventDefault(),
                    this.collection.add(new n.Item({
                        name: ""
                    }))
            },
            _shouldHideAddButton: function() {
                return this.collection.length >= this.MAX_ALIASES || !this.options.editable
            },
            _toggleAddButton: function() {
                return this.ui.addButton.toggleClass("hidden", this._shouldHideAddButton())
            }
        });
    t.default = a,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/venue/alias",
        tagName: "li",
        ui: {
            name: ".alias-name"
        },
        events: {
            "click .delete": "_onDeleteClicked",
            "change .alias-name": "_onNameChanged"
        },
        _onNameChanged: function() {
            return this.model.set("name", this.ui.name.val())
        },
        _onDeleteClicked: function() {
            return this.model.collection.remove(this.model)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(987),
        g = n(p),
        m = i(988),
        v = n(m),
        _ = i(166),
        y = n(_),
        b = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .add": "_onAddClicked"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add": {
                                observe: "showAddButton",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "collectionEvents",
                    value: function() {
                        return {
                            "remove change:uuid": "_onCollectionChanged"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.venue = this.options.venue,
                            this.collection = new Backbone.Collection(this.venue.attributes.externalProviderIDs.map(function(e) {
                                return e.clone()
                            })),
                            this.viewModel = new v.default(null, {
                                collection: this.collection
                            })
                    }
                }, {
                    key: "_onCollectionChanged",
                    value: function() {
                        var e = this.collection.models.filter(function(e) {
                            return e.get("uuid").length
                        });
                        this.triggerMethod("externalProvidersList:change", e)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this.showChildView("list", new Marionette.CollectionView({
                                childView: g.default,
                                collection: this.collection,
                                childViewOptions: {
                                    venueCentroid: this.venue.geometry.getCentroid()
                                },
                                onChildviewExternalProviderItemDelete: function(t) {
                                    e.collection.remove(t.model)
                                }
                            })),
                            this.stickit(this.viewModel)
                    }
                }, {
                    key: "_onAddClicked",
                    value: function(e) {
                        return e.preventDefault && e.preventDefault(),
                            this.collection.add(new y.default({
                                uuid: ""
                            }))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/external-provider/list"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(10),
        g = n(p),
        m = {
            MIN_INPUT_LENGTH: 3,
            FETCH_DELAY_MS: 250
        },
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "external-provider-item"
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .delete": "externalProviderItem:delete"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "change .uuid": "_onUuidChanged"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            uuid: ".uuid"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".url": {
                                observe: "url",
                                update: function(e, t) {
                                    e.attr("href", t)
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._initAutoComplete()
                    }
                }, {
                    key: "_onUuidChanged",
                    value: function(e) {
                        e.stopPropagation(),
                            this.model.set({
                                uuid: this.ui.uuid.val(),
                                name: null,
                                url: null
                            }),
                            null !== this.model.get("uuid") && (this.model.getDetails(this._placesApiSessionToken),
                                this._generatePlacesApiSessionToken())
                    }
                }, {
                    key: "_initAutoComplete",
                    value: function() {
                        var e = this;
                        this._generatePlacesApiSessionToken();
                        var t = g.default.unproject(this.options.venueCentroid.clone()),
                            i = t.y + "," + t.x;
                        return this.ui.uuid.select2({
                            minimumInputLength: m.MIN_INPUT_LENGTH,
                            initSelection: this._getInitialSelection.bind(this),
                            ajax: {
                                url: W.Config.places_api.url.autocomplete,
                                data: function(t, n) {
                                    return {
                                        input: t,
                                        key: W.apiKeys.googleMapsApiKey,
                                        sessiontoken: e._placesApiSessionToken,
                                        location: i,
                                        radius: 5
                                    }
                                },
                                dataType: "json",
                                quietMillis: m.FETCH_DELAY_MS,
                                results: this._parseAutoCompleteResults
                            }
                        })
                    }
                }, {
                    key: "_generatePlacesApiSessionToken",
                    value: function() {
                        this._placesApiSessionToken = uuidGenerator.v1()
                    }
                }, {
                    key: "_parseAutoCompleteResults",
                    value: function(e) {
                        return {
                            results: e.predictions.map(function(e) {
                                return {
                                    id: e.place_id,
                                    text: e.description
                                }
                            })
                        }
                    }
                }, {
                    key: "_getInitialSelection",
                    value: function(e, t) {
                        var i = this;
                        return this.model.getDetails().then(function(e) {
                            return t({
                                id: i.model.get("uuid"),
                                text: e.name
                            })
                        })
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        return this.ui.uuid.select2("close")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/external-provider/item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        MAX_ITEMS: 4,
        defaults: {
            showAddButton: !0
        },
        initialize: function(e, t) {
            this.collection = t.collection,
                this.listenTo(this.collection, "add remove", this._onCollectionChanged),
                this.set({
                    showAddButton: this._shouldShowAddButton()
                })
        },
        _onCollectionChanged: function() {
            return this.set({
                showAddButton: this._shouldShowAddButton()
            })
        },
        _shouldShowAddButton: function() {
            return this.collection.length < this.MAX_ITEMS
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(282),
        r = n(s),
        a = i(100),
        o = n(a),
        l = i(116),
        u = i(115),
        d = n(u),
        c = r.default.extend({
            template: "templates/venue/venue-edit-more-info-parking-lot",
            ui: {
                parkingTypeTooltip: ".parkingType-tooltip",
                parkingTypeTooltipTemplate: ".parkingType-tooltip-template",
                hasTBRTooltip: ".hasTBR-tooltip"
            },
            bindings: {
                "[name=canExitWhileClosed]": "canExitWhileClosed",
                "[name=lotType]": "lotType",
                "[name=parkingType]": "parkingType",
                "[name=hasTBR]": "hasTBR",
                "[name=paymentType]": o.default.checkboxList("paymentType"),
                "[name=estimatedNumberOfSpots]": {
                    observe: "estimatedNumberOfSpots",
                    selectOptions: o.default.selectOptionsFromList(l.SPOTS_ESTIMATE.map(function(e) {
                        return e.value
                    }), function(e) {
                        return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots." + e)
                    })
                },
                "[name=costType]": {
                    observe: "costType",
                    selectOptions: {
                        collection: l.COST_TYPE.map(function(e) {
                            return {
                                value: e,
                                label: I18n.t("edit.landmark.parking.types.costType." + e)
                            }
                        }),
                        defaultOption: {
                            value: l.UNKNOWN,
                            label: ""
                        }
                    }
                }
            },
            initialize: function() {
                var e = $.extend(!0, {}, this.model.attributes.categoryAttributes.PARKING_LOT);
                this.viewModel = new d.default(e),
                    this.viewModel.on("change", this._onViewModelChange.bind(this))
            },
            onRender: function() {
                this.ui.hasTBRTooltip.tooltip(),
                    this.ui.parkingTypeTooltip.tooltip({
                        title: this.ui.parkingTypeTooltipTemplate.html(),
                        html: !0,
                        placement: "right"
                    }),
                    this.stickit(this.viewModel)
            },
            _onViewModelChange: function() {
                var e = $.extend(!0, {}, this.model.attributes.categoryAttributes);
                return e.PARKING_LOT = this.viewModel.attributes,
                    this.trigger("change", {
                        newAttributes: {
                            categoryAttributes: e
                        }
                    })
            }
        });
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(991),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "childView",
                    value: function() {
                        return g.default
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.collection = new Backbone.Collection
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "ul"
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(992),
        v = n(m),
        _ = i(36),
        y = i(11),
        b = i(119),
        w = n(b),
        E = i(284),
        k = n(E),
        M = i(993),
        S = n(M),
        T = i(994),
        C = n(T),
        I = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "element-history-item closed"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .tx-header": "_toggleClosed"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            mainObjectRegion: ".main-object-region",
                            relatedObjectsRegion: ".related-objects-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._map = this.options.map,
                            this._historyDataModel = this.options.historyDataModel,
                            this._historyChangesBuilder = new v.default(this._historyDataModel),
                            this._objectType = this.options.objectType,
                            this._objectID = this.options.objectID,
                            this._actionType = this.model.attributes.actionType;
                        var e = this._getMainObject(),
                            t = this._getRelatedObjects(),
                            i = null != e && this._actionType === w.default.ACTIONS.UPDATE;
                        if (this._hasRelated = t.length > 0,
                            this._hasContent = i || this._hasRelated,
                            i) {
                            var n = this._getMainObjectViewClass();
                            this._mainObjectView = new n({
                                map: this._map,
                                model: e,
                                historyChangesBuilder: this._historyChangesBuilder
                            })
                        }
                        t.length && (this._relatedObjectsView = new C.default({
                            historyChangesBuilder: this._historyChangesBuilder,
                            collection: new Backbone.Collection(t)
                        }))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.el.classList.toggle("tx-has-content", this._hasContent),
                            this.el.classList.toggle("tx-has-related", this._hasRelated),
                            this.el.dataset.transactionID = this.model.attributes.transactionID,
                            null != this._mainObjectView && this.showChildView("mainObjectRegion", this._mainObjectView),
                            null != this._relatedObjectsView && this.showChildView("relatedObjectsRegion", this._relatedObjectsView)
                    }
                }, {
                    key: "_toggleClosed",
                    value: function() {
                        this.el.classList.toggle("closed")
                    }
                }, {
                    key: "_getMainObjectViewClass",
                    value: function() {
                        switch (this._objectType) {
                            case y.VENUE:
                                return S.default;
                            default:
                                return k.default
                        }
                    }
                }, {
                    key: "_getMainObject",
                    value: function() {
                        return this.model.getObject(this._objectType, this._objectID)
                    }
                }, {
                    key: "_getRelatedObjects",
                    value: function() {
                        var e = this;
                        return this.model.attributes.objects.filter(function(t) {
                            return t.attributes.objectID !== e._objectID
                        })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.date,
                            i = e.userID;
                        return {
                            date: t,
                            userProfile: this._historyChangesBuilder.userProfile(i),
                            previewItems: this._serializeChangesPreview(),
                            mainObjectAction: this._serializeMainObjectAction()
                        }
                    }
                }, {
                    key: "_serializeChangesPreview",
                    value: function() {
                        var e = [];
                        if (null != this._mainObjectView && e.push.apply(e, (0,
                                r.default)(this._mainObjectView.getChangedAttributesNames())),
                            null != this._relatedObjectsView) {
                            var t = this._relatedObjectsView.collection.map(function(e) {
                                return (0,
                                    _.formatObjectName)(e.attributes.objectType)
                            });
                            e.push.apply(e, (0,
                                r.default)(t))
                        }
                        if (e.length > 1)
                            return I18n.t("element_history.multiple_changes");
                        if (1 === e.length) {
                            var i = "element_history.preview_actions." + this._actionType;
                            return I18n.t(i, {
                                field: e[0]
                            })
                        }
                        return null
                    }
                }, {
                    key: "_serializeMainObjectAction",
                    value: function() {
                        var e = this._getMainObject();
                        return null == e ? null : this._objectType === y.SEGMENT ? this._serializeSegmentAction(e) : this._objectType === y.VENUE ? this._serializeVenueAction(e) : this._serializeAction()
                    }
                }, {
                    key: "_serializeSegmentAction",
                    value: function(e) {
                        return e.isSegmentSplit() ? I18n.t("element_history.segment_created_by_split") : e.isSegmentMerge() ? I18n.t("element_history.segment_created_by_merge") : this._serializeAction()
                    }
                }, {
                    key: "_serializeVenueAction",
                    value: function(e) {
                        return e.isVenueMerge() ? I18n.t("element_history.venue_updated_by_merge") : this._serializeAction()
                    }
                }, {
                    key: "_serializeAction",
                    value: function() {
                        var e = void 0,
                            t = (0,
                                _.formatObjectName)(this._objectType);
                        return this._actionType === w.default.ACTIONS.ADD ? e = "element_history.object_created" : this._actionType === w.default.ACTIONS.DELETE && (e = "element_history.object_deleted"),
                            null != e ? I18n.t(e, {
                                object: t
                            }) : ""
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/tx_item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(36),
        u = i(113),
        d = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this.dataModel = t
            }
            return (0,
                    o.default)(e, [{
                    key: "buildChanges",
                    value: function(e, t, i) {
                        return (0,
                            u.buildChanges)(this.dataModel, e, t, i)
                    }
                }, {
                    key: "userProfile",
                    value: function(e) {
                        return (0,
                            l.userProfile)(e, this.dataModel)
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(10),
        v = n(m),
        y = i(284),
        b = n(y),
        w = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "events",
                    value: function() {
                        return (0,
                            r.default)({}, _.result(b.default.prototype, "events"), {
                            "mouseenter .ca-entryExitPoints .ca-value-new": this._showNewEntryExitPoints,
                            "mouseenter .ca-entryExitPoints .ca-value-old": this._showOldExtryExitPoints
                        })
                    }
                }, {
                    key: "_drawEntryExitPoints",
                    value: function(e) {
                        var t = e.filter(function(e) {
                            return null != e.point
                        }).map(function(e) {
                            return v.default.parse(e.point)
                        }).map(function(e) {
                            return new OL.Feature.Vector(e.clone())
                        });
                        this._getDrawingContext().addFeatures(t)
                    }
                }, {
                    key: "_showNewEntryExitPoints",
                    value: function() {
                        this._drawEntryExitPoints(this.model.attributes.newValue.entryExitPoints)
                    }
                }, {
                    key: "_showOldExtryExitPoints",
                    value: function() {
                        this._drawEntryExitPoints(this.model.attributes.oldValue.entryExitPoints)
                    }
                }]),
                t
        }(b.default);
    t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(2),
        a = n(r),
        o = i(0),
        l = n(o),
        u = i(1),
        d = n(u),
        c = i(3),
        h = n(c),
        f = i(4),
        p = n(f),
        g = i(17),
        m = n(g),
        v = i(11),
        _ = i(995),
        y = (s = {},
            (0,
                m.default)(s, v.HOUSE_NUMBER, _.HouseNumberChangeView),
            (0,
                m.default)(s, v.VENUE_UPDATE_REQUEST, _.VenueUpdateRequestView),
            s),
        b = function(e) {
            function t() {
                return (0,
                        l.default)(this, t),
                    (0,
                        h.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "childView",
                    value: function(e) {
                        var t = e.attributes.objectType,
                            i = y[t];
                        return null == i && (i = _.DefaultChangeView),
                            i
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.VenueUpdateRequestView = t.HouseNumberChangeView = t.DefaultChangeView = void 0;
    var s = i(6),
        r = n(s),
        a = i(8),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(119),
        y = n(_),
        b = i(36),
        w = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "tx-changed-ro"
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._actionType = this.model.attributes.actionType,
                            this._objectType = this.model.attributes.objectType,
                            this._historyChangesBuilder = this.options.historyChangesBuilder
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            displayName: (0,
                                b.formatObjectName)(this._objectType),
                            displayValue: null,
                            actionText: this._getActionText()
                        }
                    }
                }, {
                    key: "_getActionText",
                    value: function() {
                        var e = "element_history.actions." + this._objectType + "." + this._actionType;
                        return I18n.lookup(e) ? I18n.t(e) : I18n.t("element_history.actions.default." + this._actionType)
                    }
                }, {
                    key: "_getByActionType",
                    value: function(e) {
                        var t = null;
                        return this._actionType === y.default.ACTIONS.ADD && this.model.attributes.newValue ? t = this.model.attributes.newValue[e] : this._actionType === y.default.ACTIONS.DELETE && this.model.attributes.oldValue && (t = this.model.attributes.oldValue[e]),
                            t
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/tx_object_related"
                    }
                }]),
                t
        }(Marionette.View),
        E = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        return (0,
                            r.default)((0,
                            o.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "serializeData", this).call(this), {
                            displayValue: this._getByActionType("number")
                        })
                    }
                }]),
                t
        }(w),
        k = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        var e = (0,
                            o.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "serializeData", this).call(this);
                        return null != this.isApproved && (e.actionText = this.isApproved ? I18n.t("element_history.approved") : I18n.t("element_history.rejected")),
                            e
                    }
                }, {
                    key: "isApproved",
                    get: function() {
                        var e = null;
                        return this._actionType === y.default.ACTIONS.DELETE && this.model.attributes.oldValue && (e = this.model.attributes.oldValue.approve),
                            e
                    }
                }]),
                t
        }(w);
    t.DefaultChangeView = w,
        t.HouseNumberChangeView = E,
        t.VenueUpdateRequestView = k
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(997),
        g = n(p),
        m = i(1e3),
        v = n(m),
        y = i(285),
        b = i(223),
        w = n(b),
        E = i(1001),
        k = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        var t = e.landmark,
                            i = e.drawingContext,
                            n = e.actionManager;
                        this._landmark = t,
                            this._drawingContext = i,
                            this._actionManager = n,
                            this._navigationPointDecorators = this._createNavigationPointDecorators(this._landmark),
                            this._viewModel = new Backbone.Model({
                                enableAddButton: this._shouldEnableAddButton()
                            })
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "navigation-point-view"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .add-button": "_onAddClicked"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            listItemMouseEnter: "_onListItemMouseEnter",
                            listItemMouseLeave: "_onListItemMouseLeave",
                            listItemSubmitClicked: "_onNavigationPointChanged",
                            listItemDeleteClicked: "_onDeleteClicked"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            listRegion: ".list-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add-button": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "enableAddButton",
                                    onGet: _.negate(_.identity)
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this._viewModel),
                            this._showListView(),
                            this._drawNavigationPoints(null)
                    }
                }, {
                    key: "_shouldEnableAddButton",
                    value: function() {
                        var e = (this._landmark.isPoint(),
                            1);
                        return this._landmark.arePropertiesEditable() && this._navigationPointDecorators.every(function(e) {
                            return !e.isLocatedAtCentroid()
                        }) && this._landmark.getNavigationPoints().length < e
                    }
                }, {
                    key: "_createNavigationPointDecorators",
                    value: function(e) {
                        return e.getNavigationPoints().map(function(t, i) {
                            return new y.Decorator(t, e, i)
                        }).sort(function(e, t) {
                            return t.getNavigationPoint().isPrimary() - e.getNavigationPoint().isPrimary()
                        })
                    }
                }, {
                    key: "_showListView",
                    value: function() {
                        var e = new Backbone.Collection(this._navigationPointDecorators.map(function(e) {
                                return new Backbone.Model({
                                    decorator: e
                                })
                            })),
                            t = new g.default({
                                collection: e,
                                editable: this._landmark.arePropertiesEditable()
                            });
                        this.showChildView("listRegion", t)
                    }
                }, {
                    key: "_onListItemMouseEnter",
                    value: function(e) {
                        this._drawNavigationPoints(e)
                    }
                }, {
                    key: "_onListItemMouseLeave",
                    value: function() {
                        this._drawNavigationPoints(null)
                    }
                }, {
                    key: "_drawNavigationPoints",
                    value: function(e) {
                        var t = this;
                        this._drawingContext.clear(),
                            this._navigationPointDecorators.forEach(function(i, n) {
                                var s = {
                                    transparent: !1,
                                    highlight: !1
                                };
                                null !== e && (e.getIndex() === n ? s.highlight = !0 : s.transparent = !0),
                                    new v.default(i, t._drawingContext, s).on("navigationPointDragged", t._onNavigationPointChanged, t)
                            })
                    }
                }, {
                    key: "_onDeleteClicked",
                    value: function(e) {
                        var t = e.model.get("decorator"),
                            i = new E.DeleteNavigationPoint(this._landmark, t.getIndex());
                        this._actionManager.add(i)
                    }
                }, {
                    key: "_onAddClicked",
                    value: function() {
                        var e = new w.default({
                                point: this._landmark.geometry.getCentroid(),
                                primary: 0 === this._landmark.getNavigationPoints().length
                            }),
                            t = new E.AddNavigationPoint(e, this._landmark);
                        this._actionManager.add(t)
                    }
                }, {
                    key: "_onNavigationPointChanged",
                    value: function(e, t) {
                        var i = new E.UpdateNavigationPoint(t, this._landmark, e.getIndex());
                        this._actionManager.add(i)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/NavigationPoint/FeatureEditor/layout"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = k,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(998),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._editable = e.editable
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return g.default
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            editable: this._editable
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            mouseEnter: "listItemMouseEnter",
                            mouseLeave: "listItemMouseLeave",
                            submitClicked: "listItemSubmitClicked",
                            deleteClicked: "listItemDeleteClicked"
                        }
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(999),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._navigationPointDecorator = e.model.get("decorator"),
                            this._viewModel = new Backbone.Model({
                                showDeleteButton: e.editable,
                                showEditButton: !1,
                                arrowIconClass: this._navigationPointDecorator.getArrowIconClass(),
                                isPrimary: this._navigationPointDecorator.getNavigationPoint().isPrimary(),
                                name: this._navigationPointDecorator.getName()
                            })
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "navigation-point-list-item"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".name": "name",
                            ".edit-button": {
                                observe: "showEditButton",
                                visible: !0
                            },
                            ".delete-button": {
                                observe: "showDeleteButton",
                                visible: !0
                            },
                            ".arrow-icon": {
                                attributes: [{
                                    name: "class",
                                    observe: "arrowIconClass"
                                }]
                            },
                            ".preview": {
                                attributes: [{
                                    name: "class",
                                    observe: "isPrimary",
                                    onGet: function(e) {
                                        return e ? "primary" : ""
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            editRegion: ".edit-region"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .delete-button": "deleteClicked",
                            mouseleave: "mouseLeave"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            mouseenter: "_onMouseEnter"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            submit: "submitClicked"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onMouseEnter",
                    value: function() {
                        this.trigger("mouseEnter", this._navigationPointDecorator)
                    }
                }, {
                    key: "_onEditClicked",
                    value: function() {
                        this.showChildView("editRegion", new g.default({
                            navigationPointDecorator: this._navigationPointDecorator
                        }))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/NavigationPoint/FeatureEditor/item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(285),
        g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._navigationPointDecorator = e.navigationPointDecorator;
                        var t = this._navigationPointDecorator.getNavigationPoint();
                        this.model = new Backbone.Model({
                            name: t.getName(),
                            isPrimary: t.isPrimary(),
                            entry: t.getEntry(),
                            exit: t.getExit()
                        })
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=name]": "name",
                            "[name=is-primary]": "isPrimary",
                            "[name=type]": {
                                observe: ["entry", "exit"],
                                onGet: function(e, t) {
                                    return t.view._navigationPointDecorator.getType()
                                },
                                onSet: function(e) {
                                    var t = !0,
                                        i = !0;
                                    return e === p.NAVIGATION_POINT_TYPE.EXIT && (t = !1),
                                        e === p.NAVIGATION_POINT_TYPE.ENTRY && (i = !1), [t, i]
                                }
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "submit form": "_onFormSubmit",
                            "click .cancel-button": "destroy"
                        }
                    }
                }, {
                    key: "_onFormSubmit",
                    value: function(e) {
                        e.preventDefault();
                        var t = this._navigationPointDecorator.getNavigationPoint().with(this.model.toJSON());
                        this.trigger("submit", this._navigationPointDecorator, t)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            NAVIGATION_POINT_TYPE: p.NAVIGATION_POINT_TYPE,
                            isPrimaryInputId: "navigation-point-is-primary-" + this._navigationPointDecorator.getIndex()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/NavigationPoint/FeatureEditor/edit"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(97),
        y = n(_),
        b = i(26),
        w = n(b),
        E = function(e) {
            function t(e, i) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    s = n.transparent,
                    r = void 0 !== s && s,
                    a = n.highlight,
                    l = void 0 !== a && a;
                (0,
                    u.default)(this, t);
                var d = e.getNavigationPoint().getPoint().toLonLat(),
                    c = new w.default("navigation-point"),
                    h = (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).call(this, d, c));
                return h._navigationPointDecorator = e,
                    h._drawingContext = i,
                    h._highlight = l,
                    h._dragBounds = h._calcDragBounds(h._navigationPointDecorator.getLandmarkGeometry()),
                    h._dragHandler = null,
                    h._addMarkerClasses(),
                    h._navigationPointDecorator.isLocatedAtCentroid() || h._rotateToCentoid(),
                    h._lineToCentroid = h._createLineToCentroid(),
                    h._dragBoundaryVector = new OL.Feature.Vector(h._dragBounds.toGeometry(), null, {
                        fillOpacity: 0,
                        strokeDashstyle: "dash",
                        pointerEvents: "none"
                    }), !0 === r && h._makeTransparent(),
                    h._drawingContext.addMarkers([h]),
                    h._drawingContext.addFeatures([h._lineToCentroid]),
                    h
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_makeTransparent",
                    value: function() {
                        this._lineToCentroid.style.strokeOpacity = .06,
                            this.icon.$div.addClass("transparent")
                    }
                }, {
                    key: "_createLineToCentroid",
                    value: function() {
                        var e = this._navigationPointDecorator.getNavigationPoint().isPrimary();
                        return new OL.Feature.Vector(new OL.Geometry.LineString([this._navigationPointDecorator.getLandmarkCentroid(), this._navigationPointDecorator.getNavigationPoint().getPoint().clone()]), null, {
                            strokeWidth: 2,
                            strokeColor: "white",
                            strokeOpacity: e || this._highlight ? 1 : .24,
                            strokeLinecap: "square",
                            strokeDashstyle: "dash"
                        })
                    }
                }, {
                    key: "_addMarkerClasses",
                    value: function() {
                        this._navigationPointDecorator.isLocatedAtCentroid() ? (this.icon.$div.addClass("centered"),
                                this.icon.$div.append($("<div/>").addClass("arrow-up waze-icon-full-arrow-up"), $("<div/>").addClass("arrow-down waze-icon-full-arrow-up"), $("<div/>").addClass("arrow-left waze-icon-full-arrow-up"), $("<div/>").addClass("arrow-right waze-icon-full-arrow-up"))) : this.icon.$div.addClass(this._navigationPointDecorator.getArrowIconClass()),
                            this.icon.$div.toggleClass("primary", this._navigationPointDecorator.getNavigationPoint().isPrimary()),
                            this._navigationPointDecorator.isEditable() && this.icon.$div.addClass("draggable")
                    }
                }, {
                    key: "_calcDragBounds",
                    value: function(e) {
                        var t = e.getBounds().clone();
                        return t.left -= 500,
                            t.right += 500,
                            t.top += 500,
                            t.bottom -= 500,
                            t
                    }
                }, {
                    key: "draw",
                    value: function(e) {
                        return this._navigationPointDecorator.isEditable() && this._initDragHandler(),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "draw", this).call(this, e)
                    }
                }, {
                    key: "_rotateToCentoid",
                    value: function() {
                        var e = this._getAngleToCentroid();
                        this.icon.$div.css({
                            transform: "rotate(" + (Math.PI - e) + "rad)"
                        })
                    }
                }, {
                    key: "_initDragHandler",
                    value: function() {
                        this._dragHandler = new y.default(this.map),
                            this._dragHandler.down = this._onDragStart.bind(this),
                            this._dragHandler.move = this._onDragMove.bind(this),
                            this._dragHandler.done = this._onDragDone.bind(this),
                            this._dragHandler.activate(this.icon.$div)
                    }
                }, {
                    key: "_onDragStart",
                    value: function() {
                        this.icon.$div.addClass("dragging"),
                            this._drawingContext.addFeatures([this._dragBoundaryVector])
                    }
                }, {
                    key: "_onDragMove",
                    value: function(e) {
                        var t = this.map.getLonLatFromViewPortPx(e.xy);
                        this.icon.$div.removeClass("centered"),
                            t.lon = Math.max(t.lon, this._dragBounds.left),
                            t.lon = Math.min(t.lon, this._dragBounds.right),
                            t.lat = Math.max(t.lat, this._dragBounds.bottom),
                            t.lat = Math.min(t.lat, this._dragBounds.top),
                            this.lonlat = t,
                            this.layer.drawMarker(this),
                            this._rotateToCentoid(),
                            this._updateLineToCentroid()
                    }
                }, {
                    key: "_onDragDone",
                    value: function() {
                        this.icon.$div.removeClass("dragging");
                        var e = this._navigationPointDecorator.getNavigationPoint().with({
                            point: this.lonlat.toPoint()
                        });
                        this.trigger("navigationPointDragged", this._navigationPointDecorator, e)
                    }
                }, {
                    key: "_getAngleToCentroid",
                    value: function() {
                        var e = this._navigationPointDecorator.getLandmarkCentroid();
                        return Math.atan2(this.lonlat.lat - e.y, this.lonlat.lon - e.x)
                    }
                }, {
                    key: "_updateLineToCentroid",
                    value: function() {
                        this._lineToCentroid.geometry.components[1].x = this.lonlat.lon,
                            this._lineToCentroid.geometry.components[1].y = this.lonlat.lat,
                            this._drawingContext.redrawFeature(this._lineToCentroid)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "destroy", this).call(this),
                            null !== this._dragHandler && this._dragHandler.deactivate()
                    }
                }]),
                t
        }(OL.Marker);
    (0,
        r.default)(E.prototype, Backbone.Events),
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DeleteNavigationPoint = t.AddNavigationPoint = t.UpdateNavigationPoint = void 0;
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(12),
        g = n(p),
        m = i(20),
        v = n(m),
        y = i(113),
        b = function(e) {
            function t(e, i, n) {
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this));
                return s._navigationPoint = e,
                    s._landmark = i,
                    s._navigationPointIndex = n,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        this._navigationPoint.isPrimary() && this._makeAllPointsNonPrimary(e),
                            e[this._navigationPointIndex] = this._navigationPoint,
                            this.doSubAction(new v.default(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "_makeAllPointsNonPrimary",
                    value: function(e) {
                        e.forEach(function(t, i) {
                            t.isPrimary() && (e[i] = t.with({
                                primary: !1
                            }))
                        })
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name,
                            t = this.subActions[0],
                            i = t.newAttributes.entryExitPoints,
                            n = t.oldAttributes.entryExitPoints;
                        if (i.length === n.length) {
                            for (var s = null, r = null, a = 0, o = 0; o < i.length; o++)
                                _.isEqual(i[o], n[o]) || (s = i[o],
                                    r = n[o],
                                    a++);
                            if (1 === a) {
                                var l = (0,
                                    y.buildChanges)(this.model, "entryExitPoints", s.toJSON(), r.toJSON());
                                if (1 === l.length) {
                                    var u = l[0],
                                        d = u.name,
                                        c = u.newValue,
                                        h = u.displayName;
                                    this._description = "point" === d ? e ? I18n.t("save.changes_log.actions.UpdateNavigationPoint.moved.has_name", {
                                        venueName: e
                                    }) : I18n.t("save.changes_log.actions.UpdateNavigationPoint.moved.default") : I18n.t("save.changes_log.actions.UpdateNavigationPoint.single", {
                                        propertyName: h,
                                        value: c
                                    })
                                } else
                                    this._description = I18n.t("save.changes_log.actions.UpdateNavigationPoint.multiple")
                            }
                        }
                    }
                }]),
                t
        }(g.default),
        w = function(e) {
            function t(e, i) {
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this));
                return n._navigationPoint = e,
                    n._landmark = i,
                    n
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        e.push(this._navigationPoint),
                            this.doSubAction(new v.default(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name;
                        this._description = e ? I18n.t("save.changes_log.actions.AddNavigationPoint.has_name", {
                            venueName: e
                        }) : I18n.t("save.changes_log.actions.AddNavigationPoint.default")
                    }
                }]),
                t
        }(g.default),
        E = function(e) {
            function t(e, i) {
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this));
                return n._landmark = e,
                    n._navigationPointIndex = i,
                    n
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        e.splice(this._navigationPointIndex, 1),
                            this.doSubAction(new v.default(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name;
                        this._description = e ? I18n.t("save.changes_log.actions.DeleteNavigationPoint.has_name", {
                            venueName: e
                        }) : I18n.t("save.changes_log.actions.DeleteNavigationPoint.default")
                    }
                }]),
                t
        }(g.default);
    t.UpdateNavigationPoint = b,
        t.AddNavigationPoint = w,
        t.DeleteNavigationPoint = E
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(6),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(1),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(8),
        b = n(y),
        w = i(133),
        E = n(w),
        k = i(170),
        M = n(k),
        S = i(135),
        T = n(S),
        C = i(27),
        I = i(98),
        A = function(e) {
            function t(e) {
                var i = e.dataModel,
                    n = void 0 === i ? null : i;
                e.selection;
                (0,
                    c.default)(this, t);
                var s = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments));
                s.dataModel = n,
                    s.listenTo(s.dataModel.segments, C.CHANGED, s.onSegmentsChanged);
                var r = s.dataModel.getTurnGraph();
                return s.listenTo(r, I.CHANGE_EVENT, s.onTurnGraphChanged),
                    s
            }
            return (0,
                    v.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            accelerators: {
                                behaviorClass: T.default
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .disallow-connections": "_disallowAllConnections",
                            "click .allow-connections": "_allowAllConnections"
                        }
                    }
                }, {
                    key: "accelerators",
                    value: function() {
                        return {
                            disallowAllConnections: "_disallowAllConnections",
                            allowAllConnections: "_allowAllConnections"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return (0,
                            u.default)({}, (0,
                            b.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "bindings", this).call(this), {
                            ".big-junction-error": {
                                observe: "isInBigJunction",
                                visible: !0
                            },
                            ".connections-edit": {
                                observe: ["isConnectedToBigJunction", "connectionsExist"],
                                onGet: function(e) {
                                    var t = (0,
                                            r.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return !i && n
                                },
                                visible: !0
                            },
                            ".connectionStatus": {
                                observe: ["areAllConnectionsEnabled", "areAllConnectionsDisabled"],
                                onGet: function(e) {
                                    var t = (0,
                                            r.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return i ? I18n.t("edit.node.turns.all_allowed") : n ? I18n.t("edit.node.turns.all_disallowed") : void 0
                                }
                            },
                            "button.allow-connections": {
                                observe: "areAllConnectionsEnabled",
                                visible: !0,
                                onGet: _.negate(_.identity),
                                attributes: [{
                                    attributes: {
                                        name: "disabled",
                                        observe: "areConnectionsEditable",
                                        onGet: _.negate(_.identity)
                                    }
                                }]
                            },
                            "button.disallow-connections": {
                                observe: "areAllConnectionsDisabled",
                                visible: !0,
                                onGet: _.negate(_.identity),
                                attributes: [{
                                    attributes: {
                                        name: "disabled",
                                        observe: "areConnectionsEditable",
                                        onGet: _.negate(_.identity)
                                    }
                                }]
                            }
                        })
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            isConnectedToBigJunction: e.isConnectedToBigJunction(),
                            connectionsExist: e.connectionsExist(),
                            areAllConnectionsEnabled: e.areAllConnectionsEnabled(),
                            areAllConnectionsDisabled: e.areAllConnectionsDisabled()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/node-edit"
                    }
                }]),
                (0,
                    g.default)(t, [{
                    key: "onTurnGraphChanged",
                    value: function(e) {
                        if (e) {
                            var t = this.getFeature(),
                                i = t.attributes.segIDs;
                            (i.includes(e.getFromVertex().getSegmentID()) || i.includes(e.getToVertex().getSegmentID())) && this.onFeaturesChanged([t])
                        }
                    }
                }, {
                    key: "onSegmentsChanged",
                    value: function(e) {
                        var t = this.getFeature();
                        e.some(function(e) {
                            return t.isConnectedToSegment(e)
                        }) && this.onFeaturesChanged([t])
                    }
                }, {
                    key: "_setAllConnections",
                    value: function(e, t) {
                        e.areConnectionsEditable() && this.dataModel.actionManager.add(new M.default(e, t))
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        if ((0,
                                b.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "hasEditedModelChanged", this).apply(this, arguments))
                            return !0
                    }
                }, {
                    key: "_allowAllConnections",
                    value: function() {
                        var e = this.getFeature();
                        e.areAllConnectionsEnabled() || this._setAllConnections(e, !0)
                    }
                }, {
                    key: "_disallowAllConnections",
                    value: function() {
                        var e = this.getFeature();
                        e.areAllConnectionsDisabled() || this._setAllConnections(e, !1)
                    }
                }]),
                t
        }(E.default);
    t.default = A,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(9),
        o = n(a),
        l = i(13),
        u = n(l),
        d = i(17),
        c = n(d),
        h = i(2),
        f = n(h),
        p = i(6),
        g = n(p),
        m = i(0),
        v = n(m),
        y = i(3),
        b = n(y),
        w = i(1),
        E = n(w),
        k = i(4),
        M = n(k),
        S = i(8),
        T = n(S),
        C = i(133),
        I = n(C),
        A = i(182),
        D = n(A),
        R = i(30),
        O = n(R),
        L = i(16),
        x = n(L),
        P = i(286),
        N = n(P),
        V = i(281),
        F = n(V),
        U = i(135),
        j = n(U),
        B = i(1009),
        G = n(B),
        z = i(1011),
        H = n(z),
        q = i(288),
        Y = n(q),
        K = i(289),
        J = n(K),
        Z = i(89),
        X = n(Z),
        Q = i(283),
        ee = n(Q),
        te = i(1015),
        ie = n(te),
        ne = i(134),
        se = n(ne),
        re = i(100),
        ae = n(re),
        oe = i(59),
        le = n(oe),
        ue = i(279),
        de = n(ue),
        ce = i(1021),
        he = n(ce),
        fe = ["highways", "streets", "other_drivable", "non_drivable"],
        pe = {
            highways: R.HIGHWAY_ROAD_TYPES,
            streets: [R.ROAD_TYPES.PRIMARY_STREET, R.ROAD_TYPES.STREET, R.ROAD_TYPES.ALLEY],
            other_drivable: [R.ROAD_TYPES.OFF_ROAD, R.ROAD_TYPES.PARKING_LOT_ROAD, R.ROAD_TYPES.PRIVATE_ROAD, R.ROAD_TYPES.FERRY],
            non_drivable: [R.ROAD_TYPES.RAILROAD, R.ROAD_TYPES.RUNWAY_TAXIWAY]
        },
        ge = function(e) {
            function t(e) {
                var i = (e.dataModel,
                        e.selection),
                    n = void 0 === i ? [] : i;
                (0,
                    v.default)(this, t);
                var s = (0,
                    b.default)(this, (t.__proto__ || (0,
                    f.default)(t)).apply(this, arguments));
                return s.segmentIDs = n.map(function(e) {
                        return e.getID()
                    }),
                    s._toggleEvents(!0),
                    s.selectionManager = s.options.selectionManager,
                    s
            }
            return (0,
                    M.default)(t, e),
                (0,
                    E.default)(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            restoreLastTab: {
                                behaviorClass: F.default
                            },
                            accelerators: {
                                behaviorClass: j.default
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return (0,
                            g.default)({}, (0,
                            T.default)(t.prototype.__proto__ || (0,
                            f.default)(t.prototype), "events", this).call(this), {
                            "click .segment .select-entire-street": "selectEntireStreetClicked",
                            "click .segment .select-entire-roundabout": "selectEntireRoundaboutClicked",
                            "click .segment .edit-house-numbers": "editHouseNumbersClicked",
                            "click .segment .edit-restrictions": "editRestrictionsClicked",
                            "click .segment .restriction-count": "editRestrictionTypeClicked",
                            "click .verify-buttons .verify-btn": "verifySpeedButtonClicked",
                            "click .verify-buttons .edit-btn": "editSpeedButtonClicked"
                        })
                    }
                }, {
                    key: "accelerators",
                    value: function() {
                        return {
                            toggleSegmentDirection: "toggleDirection",
                            editSegmentAddress: "editSegmentShortcutClicked",
                            editHouseNumbers: "editHouseNumbersShortcutClicked",
                            editRestrictions: "editRestrictionsShortcutClicked",
                            selectEntireStreet: "selectEntireStreet",
                            increaseSegmentLevel: "increaseSegmentLevel",
                            decreaseSegmentLevel: "decreaseSegmentLevel",
                            editClosures: "editClosures"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            closuresRegion: ".closures",
                            lanesRegion: ".lanes",
                            historyRegion: ".element-history-region",
                            junctionExitListRegion: ".junction-exit-list-region",
                            addressEditRegion: ".address-edit",
                            lockEditRegion: ".lock-edit"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            closuresTab: "a[href='#segment-edit-closures']"
                        }
                    }
                }, {
                    key: "_getRegularRoadTypeOptions",
                    value: function() {
                        var e = fe.map(function(e) {
                                return I18n.t("segment.categories." + e)
                            }),
                            t = fe.reduce(function(e, t) {
                                var i = I18n.t("segment.categories." + t);
                                return (0,
                                    g.default)({}, e, (0,
                                    c.default)({}, i, pe[t].map(function(e) {
                                    return {
                                        label: I18n.t("segment.road_types." + e),
                                        value: e
                                    }
                                })))
                            }, {
                                opt_labels: e
                            });
                        return this.viewModel.attributes.mixedRoadType && (t[I18n.t("edit.multiple_values")] = [{
                                    label: I18n.t("edit.multiple_values"),
                                    value: -1
                                }],
                                t.opt_labels.unshift(I18n.t("edit.multiple_values"))),
                            t
                    }
                }, {
                    key: "_getWalkingRoadTypeOptions",
                    value: function() {
                        var e = R.WALKING_ROAD_TYPES.map(function(e) {
                            return {
                                label: I18n.t("segment.road_types." + e),
                                value: e
                            }
                        });
                        return this.viewModel.attributes.mixedRoadType && e.push([{
                                label: I18n.t("edit.multiple_values"),
                                value: -1
                            }]),
                            e
                    }
                }, {
                    key: "_getRoadTypeOptions",
                    value: function() {
                        return this.viewModel.attributes.isWalkingRoadType ? this._getWalkingRoadTypeOptions() : this._getRegularRoadTypeOptions()
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return (0,
                            g.default)({}, (0,
                            T.default)(t.prototype.__proto__ || (0,
                            f.default)(t.prototype), "bindings", this).call(this), {
                            ".segment": {
                                classes: {
                                    roundabout: "isEntireRoundabout"
                                }
                            },
                            ".inconsistent-direction": {
                                observe: "consistentDirection",
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            ".inconsistent-driving-types": {
                                observe: "consistentDrivability",
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            ".segment-details": {
                                visible: !0,
                                observe: ["segmentErrorTitle", "segmentErrorDescription"],
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return Boolean(i) || Boolean(n)
                                },
                                classes: {
                                    "junction-box-message": "isInBigJunction"
                                }
                            },
                            ".closures-tab": {
                                classes: {
                                    disabled: {
                                        observe: "isClosuresSupported",
                                        onGet: _.negate(_.identity)
                                    }
                                }
                            },
                            ".lanes-tab-list-item": {
                                observe: "supportsLanes",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "flex" : "none")
                                }
                            },
                            "select[name=roadType]": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["consistentDrivability", "propertiesEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                u.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return !i || !n
                                    }
                                }],
                                observe: "roadType",
                                selectOptions: {
                                    collection: this._getRoadTypeOptions
                                }
                            },
                            "button.select-entire-roundabout": {
                                observe: ["isInRoundabout", "isEntireRoundabout"],
                                visible: !0,
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return i && !n
                                }
                            },
                            "button.select-entire-street": {
                                observe: "showSelectEntireStreetButton",
                                visible: !0
                            },
                            ".edit-house-numbers-btn-wrapper": {
                                observe: "showHouseNumbersButton",
                                visible: !0,
                                attributes: [{
                                    name: "title",
                                    observe: "houseNumberTitle"
                                }]
                            },
                            "button.edit-house-numbers": {
                                observe: "canEditHouseNumbers",
                                onGet: function(e) {
                                    return e ? I18n.t("edit.segment.actions.edit_house_numbers") : I18n.t("edit.segment.actions.view_house_numbers")
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditHouseNumbers",
                                    onGet: _.negate(_.identity)
                                }]
                            },
                            ".length-attribute": {
                                visible: !0,
                                observe: "length"
                            },
                            ".length-attribute .value": {
                                observe: "length",
                                onGet: function(e) {
                                    return null != e && x.default.lengthString(e)
                                }
                            },
                            ".routing-road-type-message": (0,
                                g.default)({}, ae.default.contentsAndVisiblity("routingRoadTypeMessage", "shouldShowRoutingRoadTypeMessage"), {
                                updateMethod: "html"
                            }),
                            ".hide-walking-trail": {
                                observe: "isWalkingRoadType",
                                onGet: _.negate(_.identity),
                                visible: !0
                            }
                        }, this._checkboxBinding("unpaved", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditUnpaved",
                                onGet: _.negate(_.identity)
                            }]
                        }), this._checkboxBinding("tunnel", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditTunnel",
                                onGet: _.negate(_.identity)
                            }]
                        }), {
                            ".headlights-reminder": {
                                observe: "shouldShowHeadlightsReminder",
                                visible: !0
                            }
                        }, this._checkboxBinding("headlights", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditHeadlightsReminder",
                                onGet: _.negate(_.identity)
                            }]
                        }), this._checkboxBinding("nearbyHOV", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditNearbyHOV",
                                onGet: _.negate(_.identity)
                            }]
                        }), {
                            ".routing-road-type-select": {
                                observe: "shouldShowRoutingSelect",
                                visible: !0
                            },
                            "select[name=routingRoadType]": {
                                observe: "routingRoadType",
                                selectOptions: {
                                    collection: function() {
                                        var t = e.viewModel.get("routingRoadTypes"),
                                            i = [{
                                                label: I18n.t("edit.segment.routing.road_type.prev"),
                                                value: t.prev,
                                                disabled: null === t.prev
                                            }, {
                                                label: I18n.t("edit.segment.routing.road_type.current"),
                                                value: -1
                                            }, {
                                                label: I18n.t("edit.segment.routing.road_type.next"),
                                                value: t.next,
                                                disabled: null === t.next
                                            }];
                                        return e.viewModel.get("routingRoadTypeMixed") && i.unshift({
                                                label: I18n.t("edit.multiple_values"),
                                                value: ""
                                            }),
                                            i
                                    }
                                }
                            },
                            ".toll-road-message": {
                                observe: "isTollRoad",
                                visible: !0
                            },
                            ".restriction-editing": {
                                observe: "showRestrictionEditing",
                                visible: !0
                            },
                            "button.edit-restrictions": {
                                observe: ["allowRestrictionEditing", "restrictionCounts"],
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return i ? n.driving + n.pickup > 0 ? I18n.t("edit.segment.actions.restrictions.edit") : I18n.t("edit.segment.actions.restrictions.add") : I18n.t("edit.segment.actions.restrictions.view")
                                }
                            },
                            ".restriction-list": {
                                visible: !0,
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving + e.pickup > 0
                                }
                            },
                            "a.restriction-count[data-restriction-type='driving']": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving > 0
                                },
                                visible: !0
                            },
                            "a.restriction-count[data-restriction-type='driving'] .number": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving
                                }
                            },
                            "a.restriction-count[data-restriction-type='pickup']": {
                                observe: ["restrictionCounts", "supportsPickupRestrictions"],
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0];
                                    return t[1] && i.pickup > 0
                                },
                                visible: !0
                            },
                            "a.restriction-count[data-restriction-type='pickup'] .number": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.pickup
                                }
                            },
                            "input[name='direction']": {
                                observe: ["direction", "directionMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0];
                                    return t[1] ? -1 : i
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditDirection",
                                    onGet: _.negate(_.identity)
                                }]
                            },
                            "input[name='direction'][value='-1'] + label": {
                                observe: "directionMixed",
                                visible: !0
                            },
                            "input[name='direction'][value='0'] + label": {
                                observe: ["allowNoDirection", "allowNoDirectionMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return i && !n
                                },
                                visible: !0
                            },
                            ".speed-limits": {
                                observe: "allowSpeedLimit",
                                visible: !0
                            }
                        }, this._speedBindings("fwd"), this._speedBindings("rev"), {
                            "select[name=level]": {
                                observe: "level",
                                selectOptions: {
                                    collection: function() {
                                        var t = _.range(O.default.prototype.MaxLevel, O.default.prototype.MinLevel, -1).map(function(e) {
                                            return {
                                                label: I18n.t("edit.segment.levels")[e] || e,
                                                value: e
                                            }
                                        });
                                        return e.viewModel.attributes.levelMixed && t.unshift({
                                                label: I18n.t("edit.multiple_values"),
                                                value: null
                                            }),
                                            t
                                    }
                                }
                            }
                        })
                    }
                }, {
                    key: "_speedBindings",
                    value: function(e) {
                        var t, i, n = "fwd" === e ? "Fwd" : "Rev";
                        return (0,
                            g.default)((t = {},
                            (0,
                                c.default)(t, ".speed-limit-" + e, {
                                observe: [e + "Direction", e + "DirectionMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            u.default)(e, 2),
                                        i = t[0],
                                        n = t[1];
                                    return i || n
                                },
                                visible: !0
                            }),
                            (0,
                                c.default)(t, "input[name=" + e + "MaxSpeed]", {
                                observe: e + "MaxSpeed",
                                events: ["blur"],
                                onSet: function(e) {
                                    return "" === e ? null : Number(e)
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEdit" + n + "MaxSpeed",
                                    onGet: _.negate(_.identity)
                                }]
                            }),
                            (0,
                                c.default)(t, ".speed-limit-" + e + " .auto-speed-tooltip", {
                                observe: e + "MaxSpeedUnverified",
                                visible: !0
                            }),
                            (0,
                                c.default)(t, ".speed-limit-" + e + " .verify-buttons", {
                                observe: "canChange" + n + "MaxSpeedUnverified",
                                visible: !0
                            }),
                            (0,
                                c.default)(t, ".speed-limit-" + e + " .average-speed-camera", {
                                observe: "shouldShowAverageSpeedCamera",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "inline-block" : "none")
                                },
                                classes: {
                                    locked: {
                                        observe: "canEditAverageSpeedCamera",
                                        onGet: _.negate(_.identity)
                                    }
                                }
                            }),
                            t), this._checkboxBinding(e + "SpeedCamera", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditAverageSpeedCamera",
                                onGet: _.negate(_.identity)
                            }]
                        }), (i = {},
                            (0,
                                c.default)(i, "input[name=" + e + "SpeedCamera] + label", {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditAverageSpeedCamera",
                                    onGet: _.negate(_.identity)
                                }]
                            }),
                            (0,
                                c.default)(i, ".speed-limit-" + e + " .waze-camera-tooltip", {
                                observe: "canEditAverageSpeedCamera",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "inline-block" : "none")
                                },
                                onGet: _.negate(_.identity)
                            }),
                            i))
                    }
                }, {
                    key: "_checkboxBinding",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e + "Mixed";
                        return (0,
                            c.default)({}, "input[name='" + e + "']", (0,
                            g.default)({
                            observe: [e, i],
                            onGet: function(e) {
                                var t = (0,
                                        u.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i && !n
                            },
                            onSet: function(e) {
                                return [e, !1]
                            },
                            attributes: [{
                                name: "mixed",
                                observe: i
                            }].concat((0,
                                o.default)(t.attributes || []))
                        }, _.without(t, "attributes")))
                    }
                }, {
                    key: "_getSegmentError",
                    value: function(e) {
                        var t = void 0,
                            i = void 0;
                        return e.arePropertiesEditable() ? e.isInBigJunction() && (t = I18n.t("edit.segment.permissions.big_junction.title"),
                            i = I18n.t("edit.segment.permissions.big_junction.description")) : e.children.length > 1 ? (t = I18n.t("edit.segment.permissions.multiple.title"),
                            i = I18n.t("edit.segment.permissions.multiple.description")) : e.hasClosures() ? (t = I18n.t("edit.segment.permissions.has_closures.title"),
                            i = I18n.t("edit.segment.permissions.has_closures.description")) : e.isLockedByHigherRank() && e.canEditClosures() ? (t = I18n.t("edit.segment.permissions.locked_except_closures.title"),
                            i = I18n.t("edit.segment.permissions.locked_except_closures.description", {
                                lockLevel: x.default.formatRank(e.getLockRank())
                            })) : e.isLockedByHigherRank() ? (t = I18n.t("edit.segment.permissions.locked.title"),
                            i = I18n.t("edit.segment.permissions.locked.description", {
                                lockLevel: x.default.formatRank(e.getLockRank())
                            })) : (t = I18n.t("edit.segment.permissions.area.title"),
                            i = I18n.t("edit.segment.permissions.area.description")), {
                            segmentErrorTitle: t,
                            segmentErrorDescription: i
                        }
                    }
                }, {
                    key: "_getSegmentFlags",
                    value: function(e) {
                        return (0,
                            r.default)(e.FLAG_ATTRIBUTES).reduce(function(t, i) {
                            var n;
                            return (0,
                                g.default)({}, t, (n = {},
                                (0,
                                    c.default)(n, i + "Mixed", e.mixed[i]),
                                (0,
                                    c.default)(n, i, e.getFlagAttribute(i)),
                                n))
                        }, {})
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        var t = e.mixed.roadType;
                        return (0,
                            g.default)({
                            numSegments: e.children.length,
                            consistentDirection: 0 === this.options.reversedSegments.numReversed && !this.options.reversedSegments.multipleConnectedComponents,
                            consistentDrivability: e.hasConsistentDrivability(),
                            consistentWalkability: e.hasConsistentWalkability(),
                            isInBigJunction: e.isInBigJunction(),
                            isClosuresSupported: e.isClosuresSupported(),
                            isWalkingRoadType: e.isWalkingRoadType(),
                            mixedRoadType: e.mixed.roadType,
                            roadType: t ? -1 : e.getRoadType(),
                            isInRoundabout: e.isInRoundabout(),
                            isEntireRoundabout: e.isEntireRoundabout(),
                            showSelectEntireStreetButton: this.shouldShowSelectEntireStreetButton(e),
                            showHouseNumbersButton: this.shouldShowHouseNumbersButton(e),
                            canEditHouseNumbers: this.canEditHouseNumbers(e),
                            canEditUnpaved: e.canEditUnpaved(),
                            canEditTunnel: e.canEditTunnel(),
                            canEditNearbyHOV: e.canEditNearbyHOV(),
                            canEditDirection: e.canEditDirection(),
                            canEditFwdMaxSpeed: e.canEditMaxSpeed("fwd"),
                            canEditRevMaxSpeed: e.canEditMaxSpeed("rev"),
                            houseNumberTitle: this.getHouseNumberTitle(),
                            length: e.attributes.length,
                            mixedUpdatedBy: e.mixed.updatedBy,
                            mixedCreatedBy: e.mixed.createdBy,
                            shouldShowRoutingRoadTypeMessage: this._shouldShowRoutingRoadTypeMessage(e),
                            routingRoadTypeMessage: this.getRoutingRoadTypeMessage(e),
                            shouldShowHeadlightsReminder: this.shouldShowHeadlightsReminder(e),
                            canEditHeadlightsReminder: e.canEditHeadlightsReminder(),
                            shouldShowRoutingSelect: this.shouldShowRoutingSelect(e),
                            routingRoadTypes: e.getRoutingRoadTypes(),
                            routingRoadType: e.attributes.routingRoadType || -1,
                            routingRoadTypeMixed: e.mixed.routingRoadType,
                            isTollRoad: e.isTollRoad(),
                            showRestrictionEditing: this._shouldShowRestrictionEditing(),
                            allowRestrictionEditing: this._shouldAllowRestrictionEditing(e) && e.isDrivable(),
                            restrictionCounts: {
                                driving: e.getDrivingRestrictionCount(),
                                pickup: e.getPickupRestrictionCount()
                            },
                            supportsPickupRestrictions: e.supportsPickupRestrictions(),
                            supportsLanes: e.supportsLanes() && this._lanesEnabled(),
                            direction: e.attributes.direction,
                            directionMixed: e.mixed.direction,
                            fwdDirection: e.attributes.fwdDirection,
                            revDirection: e.attributes.revDirection,
                            fwdDirectionMixed: e.mixed.fwdDirection,
                            revDirectionMixed: e.mixed.revDirection,
                            allowNoDirection: e.attributes.allowNoDirection,
                            allowNoDirectionMixed: e.mixed.allowNoDirection,
                            allowSpeedLimit: W.Config.speed_limit.enable,
                            fwdMaxSpeed: x.default.getDisplayUnitValue(e.attributes.fwdMaxSpeed, D.default.prototype.UNITS.speed, !0),
                            revMaxSpeed: x.default.getDisplayUnitValue(e.attributes.revMaxSpeed, D.default.prototype.UNITS.speed, !0),
                            fwdMaxSpeedUnverified: e.isSpeedUnverified("fwdMaxSpeedUnverified"),
                            revMaxSpeedUnverified: e.isSpeedUnverified("revMaxSpeedUnverified"),
                            canChangeFwdMaxSpeedUnverified: e.canChangeMaxSpeedUnverified("fwdMaxSpeedUnverified"),
                            canChangeRevMaxSpeedUnverified: e.canChangeMaxSpeedUnverified("revMaxSpeedUnverified"),
                            shouldShowAverageSpeedCamera: this.shouldShowAverageSpeedCamera(e),
                            canEditAverageSpeedCamera: e.canEditAverageSpeedCamera(),
                            rank: e.attributes.rank,
                            lockRank: e.attributes.lockRank,
                            lockRankMixed: e.mixed.lockRank,
                            allowDefaultRank: e.canUserSetDefaultRank(W.model.loginManager.getUserRank()),
                            levelMixed: e.mixed.level,
                            level: e.attributes.level
                        }, this._getSegmentFlags(e), this._getSegmentError(e))
                    }
                }, {
                    key: "_flagsViewModelToFeature",
                    value: function() {
                        var e = this;
                        return (0,
                            r.default)(O.default.prototype.FLAG_ATTRIBUTES).reduce(function(t, i) {
                            var n;
                            return (0,
                                g.default)({}, t, (n = {},
                                (0,
                                    c.default)(n, i, function(t, n) {
                                    _.extend(n, e._getSegmentChangedFlagAttributes((0,
                                        c.default)({}, i, t)))
                                }),
                                (0,
                                    c.default)(n, i + "Mixed", function(t, n) {
                                    !1 === t && _.extend(n, e._getSegmentChangedFlagAttributes((0,
                                        c.default)({}, i, t)))
                                }),
                                n))
                        }, {})
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return (0,
                            g.default)({
                            roadType: function(e, t) {
                                -1 !== e && (t.roadType = e,
                                    t.routingRoadType = null)
                            }
                        }, this._flagsViewModelToFeature(), {
                            routingRoadType: function(e, t) {
                                t.routingRoadType = -1 === e ? null : e
                            },
                            isTollRoad: function(e, t) {
                                t.fwdToll = e,
                                    t.revToll = e
                            },
                            direction: function(e, t) {
                                e >= 0 && (t.fwdDirection = 0 != (1 & e),
                                    t.revDirection = 0 != (2 & e))
                            },
                            fwdMaxSpeed: function(e, t) {
                                t.fwdMaxSpeed = le.default.getOriginalValue(e, D.default.prototype.UNITS.speed)
                            },
                            revMaxSpeed: function(e, t) {
                                t.revMaxSpeed = le.default.getOriginalValue(e, D.default.prototype.UNITS.speed)
                            },
                            fwdMaxSpeedUnverified: this.simpleAttribute("fwdMaxSpeedUnverified"),
                            revMaxSpeedUnverified: this.simpleAttribute("revMaxSpeedUnverified"),
                            lockRank: this.simpleAttribute("lockRank"),
                            level: this.simpleAttribute("level")
                        })
                    }
                }, {
                    key: "getFeature",
                    value: function() {
                        var e = this.repository.getByIds(this.segmentIDs);
                        return new D.default(e, this._dataModel, this.options.reversedSegments)
                    }
                }, {
                    key: "_getRepositoryObjectsToUpdate",
                    value: function() {
                        var e = this.repository.getByIds(this.segmentIDs),
                            t = _.partition(e, function(e) {
                                return null == e
                            }),
                            i = (0,
                                u.default)(t, 2),
                            n = i[0],
                            s = i[1];
                        n.length > 0 && console.error("Cannot update a non-existing objects with ids [" + this.segmentIDs.join(",") + "] and type " + this.repository.objectType);
                        var r = this._makeModelAttributes(this.viewModel),
                            a = function() {
                                return !0
                            };
                        return r.hasOwnProperty("fwdMaxSpeedUnverified") ? a = function(e) {
                                return e.canChangeMaxSpeedUnverified("fwdMaxSpeedUnverified")
                            } :
                            r.hasOwnProperty("revMaxSpeedUnverified") && (a = function(e) {
                                return e.canChangeMaxSpeedUnverified("revMaxSpeedUnverified")
                            }),
                            s.filter(a)
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return (0,
                            g.default)({}, (0,
                            T.default)(t.prototype.__proto__ || (0,
                            f.default)(t.prototype), "templateContext", this).call(this), _.pick(this.viewModel.attributes, "segmentErrorTitle", "segmentErrorDescription", "numSegments", "length", "mixedUpdatedBy", "mixedCreatedBy"))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/edit-panel"
                    }
                }]),
                (0,
                    E.default)(t, [{
                    key: "_shouldShowBigJunctionExits",
                    value: function() {
                        var e = this.getFeature();
                        return !(e.children.length > 1) && e.children[0].isJunctionEntry()
                    }
                }, {
                    key: "_toggleEvents",
                    value: function(e) {
                        var t = e ? "on" : "off",
                            i = e ? "on" : "un";
                        this._dataModel.roadClosures[t]("change:active", this.renderOnceLater, this),
                            this._dataModel.actionManager.events[i]({
                                hasActions: this.onActionsChanged,
                                noActions: this.onActionsChanged,
                                scope: this
                            })
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._toggleEvents(!1)
                    }
                }, {
                    key: "selectEntireStreetClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.selectEntireStreet()
                    }
                }, {
                    key: "selectEntireStreet",
                    value: function() {
                        this.selectionManager.setSelectedModels(this.getFeature().children[0].getEntireStreet(this._dataModel))
                    }
                }, {
                    key: "isEntireStreetSelected",
                    value: function(e) {
                        return e.children[0].getEntireStreet(this._dataModel).every(function(e) {
                            return e.selected
                        })
                    }
                }, {
                    key: "selectEntireRoundaboutClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this._selectEntireRoundabout()
                    }
                }, {
                    key: "_selectEntireRoundabout",
                    value: function() {
                        var e = this.getFeature().children[0].getRoundabout();
                        null !== e && this.selectionManager.setSelectedModels(e.getAllSegments())
                    }
                }, {
                    key: "shouldShowHeadlightsReminder",
                    value: function(e) {
                        return null != (e.getAddress().getCountry() || {}).allowHeadlightsReminderRank
                    }
                }, {
                    key: "shouldShowAverageSpeedCamera",
                    value: function(e) {
                        return null != (e.getAddress().getCountry() || {}).allowAverageSpeedCamerasRank
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        (0,
                            T.default)(t.prototype.__proto__ || (0,
                            f.default)(t.prototype), "onRender", this).apply(this, arguments);
                        var e = this.getFeature();
                        this._renderAddressEdit(e),
                            this._initClosureEditing(e),
                            this._initLanesTab(e),
                            this._renderElementHistory(e),
                            this._renderTurnView(e),
                            this._renderLockEdit(e),
                            this.$(".waze-tooltip, .waze-lock-tooltip").tooltip({
                                container: "body"
                            })
                    }
                }, {
                    key: "_renderTurnView",
                    value: function(e) {
                        var t = new G.default({
                            selection: e.children,
                            map: this.options.map,
                            dataModel: this._dataModel,
                            showExitList: this._shouldShowBigJunctionExits()
                        });
                        this.showChildView("junctionExitListRegion", t)
                    }
                }, {
                    key: "_renderElementHistory",
                    value: function(e) {
                        this.showChildView("historyRegion", new ee.default({
                            map: this.options.map,
                            model: e.children[0]
                        }))
                    }
                }, {
                    key: "_initClosureEditing",
                    value: function(e) {
                        new N.default({
                            region: this.getRegion("closuresRegion"),
                            pannable: W.map.getPannable(),
                            compositeSegment: e,
                            repoActive: this._dataModel.roadClosures.active,
                            canSaveClosures: !this._dataModel.actionManager.canSave(),
                            canAdd: !0,
                            dataModel: this._dataModel,
                            editViewConfig: Y.default.SEGMENT,
                            listViewConfig: J.default.SEGMENT
                        }).showClosures()
                    }
                }, {
                    key: "_initLanesTab",
                    value: function(e) {
                        var t = new he.default({
                            dataModel: this._dataModel,
                            segmentId: e.children[0].getID()
                        });
                        this.showChildView("lanesRegion", t)
                    }
                }, {
                    key: "_renderAddressEdit",
                    value: function(e) {
                        var t = new se.default({
                            addressModel: e.getAddress(),
                            dataModel: this._dataModel,
                            feature: e,
                            editable: e.arePropertiesEditable(),
                            editStreet: !0,
                            streetIDField: "primaryStreetID",
                            editAltStreets: !0,
                            disableEmptyStreet: this.shouldDisableEmptyStreet(e),
                            disableEmptyCity: this.shouldDisableEmptyCity(e),
                            enableTTS: !0,
                            emptyCityForAltStreets: e.isHighway()
                        });
                        this.showChildView("addressEditRegion", t)
                    }
                }, {
                    key: "_renderLockEdit",
                    value: function(e) {
                        var t = new de.default({
                            model: this.viewModel
                        });
                        this.showChildView("lockEditRegion", t)
                    }
                }, {
                    key: "shouldShowSelectEntireStreetButton",
                    value: function(e) {
                        return e.hasSingleNonEmptyStreet() && !this.isEntireStreetSelected(e)
                    }
                }, {
                    key: "_maxSpeedChanged",
                    value: function(e, t) {
                        var i = {};
                        i[e] = t,
                            i[e + "Unverified"] = !1,
                            this.viewModel.set(i)
                    }
                }, {
                    key: "_maxSpeedUnverfiedChanged",
                    value: function(e, t) {
                        var i = e + "MaxSpeedUnverified";
                        this.viewModel.set((0,
                            c.default)({}, i, t))
                    }
                }, {
                    key: "verifySpeedButtonClicked",
                    value: function(e) {
                        var t = $(e.target).parent().data("direction");
                        this._maxSpeedUnverfiedChanged(t, !1),
                            e.preventDefault()
                    }
                }, {
                    key: "editSpeedButtonClicked",
                    value: function(e) {
                        var t = $(e.target).parent(),
                            i = t.data("direction"),
                            n = i + "MaxSpeed";
                        this._maxSpeedChanged(n, null),
                            e.preventDefault()
                    }
                }, {
                    key: "_shouldShowRoutingRoadTypeMessage",
                    value: function(e) {
                        if (e.mixed.routingRoadType)
                            return !1;
                        var t = e.attributes.routingRoadType,
                            i = e.attributes.roadType;
                        return null !== t && i !== t
                    }
                }, {
                    key: "getRoutingRoadTypeMessage",
                    value: function(e) {
                        var t = e.attributes.routingRoadType,
                            i = x.default.contentTag("strong", I18n.t("segment.road_types." + t));
                        return x.default.safe_t("edit.segment.routing.info", {
                            roadType: i
                        })
                    }
                }, {
                    key: "shouldDisableEmptyCity",
                    value: function(e) {
                        var t = e.getAddress(),
                            i = null == t.getCity() || t.getCity().isEmpty();
                        return e.attributes.hasHNs && !i
                    }
                }, {
                    key: "shouldDisableEmptyStreet",
                    value: function(e) {
                        var t = e.getAddress(),
                            i = t.isEmptyStreet();
                        return e.attributes.hasHNs && !i
                    }
                }, {
                    key: "shouldShowRoutingSelect",
                    value: function(e) {
                        return !e.mixed.roadType && e.isRoutable() && e.canEditRoutingRoadTypes()
                    }
                }, {
                    key: "shouldShowHouseNumbersButton",
                    value: function(e) {
                        return W.Config.houseNumbers.allowEditing && (1 === e.children.length || e.hasSingleNonEmptyStreet()) && e.supportsHouseNumbers()
                    }
                }, {
                    key: "canEditHouseNumbers",
                    value: function(e) {
                        return e.canEditHouseNumbers() && !this.shouldDisableHouseNumbersButtonDueToActions()
                    }
                }, {
                    key: "shouldDisableHouseNumbersButtonDueToActions",
                    value: function() {
                        return this._dataModel.actionManager.canSave()
                    }
                }, {
                    key: "getHouseNumberTitle",
                    value: function() {
                        return this.shouldDisableHouseNumbersButtonDueToActions() ? I18n.t("segment.house_number_disable_message") : ""
                    }
                }, {
                    key: "_getSegmentChangedFlagAttributes",
                    value: function(e) {
                        var t = this.getFeature(),
                            i = {},
                            n = (0,
                                r.default)(e),
                            s = n.reduce(function(i, n) {
                                var s = t.FLAG_ATTRIBUTES[n];
                                return i[s.mask] || (i[s.mask] = []),
                                    i[s.mask].push([s.flag, e[n]]),
                                    i
                            }, {});
                        return (0,
                                r.default)(s).forEach(function(e) {
                                var n = s[e],
                                    r = t.attributes[e],
                                    a = new X.default(r);
                                a.setBits(n),
                                    i[e] = a.value
                            }),
                            i
                    }
                }, {
                    key: "reverseAttributes",
                    value: function(e) {
                        var t = {};
                        return _.each(e, function(e, i) {
                                var n = D.default.prototype.reversableAttributes[i];
                                n ? t[n] = e : t[i] = e
                            }),
                            t
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        var t = e.map(function(e) {
                            return e.getID()
                        });
                        return _.intersection(t, this.segmentIDs).length > 0
                    }
                }, {
                    key: "_onFeatureChangedIDs",
                    value: function(e) {
                        var t = e.oldID,
                            i = e.newID,
                            n = this.segmentIDs.indexOf(t);
                        n > -1 && (this.segmentIDs[n] = i)
                    }
                }, {
                    key: "increaseSegmentLevel",
                    value: function() {
                        this.changeSegmentLevelBy(1)
                    }
                }, {
                    key: "decreaseSegmentLevel",
                    value: function() {
                        this.changeSegmentLevelBy(-1)
                    }
                }, {
                    key: "changeSegmentLevelBy",
                    value: function(e) {
                        if (!this.viewModel.attributes.levelMixed && this.viewModel.attributes.propertiesEditable) {
                            var t = this.viewModel.attributes.level || 0;
                            t += e,
                                t >= O.default.prototype.MinLevel && t <= O.default.prototype.MaxLevel && this.viewModel.set({
                                    level: t
                                })
                        }
                    }
                }, {
                    key: "toggleDirection",
                    value: function() {
                        if (!this.viewModel.attributes.directionMixed && !this.viewModel.attributes.isInBigJunction && this.viewModel.attributes.propertiesEditable) {
                            var e = (this.viewModel.attributes.direction + 1) % 4;
                            0 === e && e++,
                                this.viewModel.set({
                                    direction: e
                                })
                        }
                    }
                }, {
                    key: "editSegmentShortcutClicked",
                    value: function() {
                        this.getChildView("addressEditRegion").editAddress()
                    }
                }, {
                    key: "editHouseNumbersShortcutClicked",
                    value: function() {
                        this.viewModel.attributes.showHouseNumbersButton && this.viewModel.attributes.canEditHouseNumbers && this.editHouseNumbers()
                    }
                }, {
                    key: "editHouseNumbersClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.editHouseNumbers()
                    }
                }, {
                    key: "editHouseNumbers",
                    value: function() {
                        var e = this.getFeature().children[0],
                            t = e.getEntireStreet(this._dataModel);
                        new H.default({
                            model: this._dataModel,
                            map: W.map,
                            editable: e.canEditHouseNumbers(),
                            segments: t
                        })
                    }
                }, {
                    key: "editRestrictionsClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.editRestrictions()
                    }
                }, {
                    key: "editRestrictionsShortcutClicked",
                    value: function() {
                        this._shouldShowRestrictionEditing() && this.editRestrictions()
                    }
                }, {
                    key: "editRestrictionTypeClicked",
                    value: function(e) {
                        if (e.preventDefault(),
                            this._shouldShowRestrictionEditing()) {
                            var t = e.currentTarget.dataset.restrictionType;
                            this.editRestrictions(e, t)
                        }
                    }
                }, {
                    key: "editRestrictions",
                    value: function(e) {
                        var t = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "driving",
                            n = this.getFeature(),
                            s = n.isTollRoad(),
                            r = n.isTollRoadMixed(),
                            a = new ie.default({
                                dataModel: this._dataModel,
                                compositeSegment: n,
                                isTollRoad: s,
                                isTollRoadMixed: r,
                                showRestrictionType: i
                            });
                        a.on("restriction:summary:apply", function(e) {
                                var i = e.isTollRoad;
                                (r || s !== i) && t.viewModel.set({
                                    isTollRoad: i
                                })
                            }),
                            W.app.layout.getRegion("dialogRegion").show(a)
                    }
                }, {
                    key: "editClosures",
                    value: function(e) {
                        this.ui.closuresTab.tab("show")
                    }
                }, {
                    key: "onActionsChanged",
                    value: function() {
                        this.viewModel.set({
                            canEditHouseNumbers: this.canEditHouseNumbers(this.getFeature())
                        })
                    }
                }, {
                    key: "_shouldAllowRestrictionEditing",
                    value: function(e) {
                        return W.Config.restrictions.allowEditing && e.arePropertiesEditable() && !e.isInBigJunction()
                    }
                }, {
                    key: "_shouldShowRestrictionEditing",
                    value: function() {
                        return W.Config.restrictions.allowEditing
                    }
                }, {
                    key: "_lanesEnabled",
                    value: function() {
                        return W.Config.enable_lanes
                    }
                }]),
                t
        }(I.default);
    t.default = ge,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(65),
        u = n(l),
        d = i(1005),
        c = n(d),
        h = {
            getSharedClosures: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    s = _.indexBy(e, function(e) {
                        return e.getID()
                    });
                n || (n = this._getClosuresForSegments(s));
                var a = _(n).groupBy(function(e) {
                        return t._getClosureKey(e, i)
                    }),
                    l = new c.default,
                    d = !0,
                    h = !1,
                    f = void 0;
                try {
                    for (var p, g = (0,
                            o.default)((0,
                            r.default)(a)); !(d = (p = g.next()).done); d = !0) {
                        var m = p.value,
                            v = a[m],
                            y = _.chain(v).map(function(e) {
                                return s[e.segID]
                            }).uniq().value(),
                            b = new u.default({
                                closures: v,
                                segments: y,
                                partial: y.length !== e.length,
                                reverseSegments: this._getClosureReverseSegments(y, i)
                            }),
                            w = l.findOpposite(b);
                        null != w ? w.mergeWithOpposite(b) : l.push(b)
                    }
                } catch (e) {
                    h = !0,
                        f = e
                } finally {
                    try {
                        !d && g.return && g.return()
                    } finally {
                        if (h)
                            throw f
                    }
                }
                return l
            },
            _getClosuresForSegments: function(e) {
                return W.model.roadClosures.getObjectArray(function(t) {
                    return null != e[t.segID]
                })
            },
            _getClosureReverseSegments: function(e, t) {
                var i = _(e).invoke("getID");
                return _(t).pick(i)
            },
            _getClosureKey: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = e.forward || !1;
                return !0 === t[e.segID] && (i = !i), [e.startDate, e.endDate, e.reason, e.location, i, e.createdBy, e.eventId].join(":")
            }
        };
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(65),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default,
            findOpposite: function(e) {
                return this.find(function(t) {
                    return t.isOppositeTo(e)
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1007),
        r = n(s),
        a = i(287),
        o = n(a),
        l = Marionette.CompositeView.extend({
            template: "Waze/Modules/Closures/templates/list",
            className: "closures-list",
            childView: r.default,
            childViewOptions: function() {
                var e = _.pick(this.options, ["dataModel", "canEdit"]);
                return _.extend(e, this.options.extendedChildViewOptions)
            },
            ui: {
                message: ".message",
                partial: ".partial-closures",
                partialHeader: ".partial-closures-header",
                full: ".full-closures"
            },
            triggers: {
                "click .add-closure-button": "add"
            },
            initialize: function() {
                var e = this;
                return this.on("childview:edit", function(t) {
                        return e.trigger("edit", t.model)
                    }),
                    this.on("childview:delete", function(t) {
                        return e.trigger("delete", t.model)
                    }),
                    this.on("childview:locate", function(t) {
                        return e.trigger("locate", t.model)
                    }),
                    this.on("childview:applyToAll", function(t) {
                        return e.trigger("applyToAll", t.model)
                    })
            },
            attachHtml: function(e, t, i) {
                return t.model.get("partial") ? (this.ui.partial.append(t.el),
                    this.ui.partialHeader.show()) : this.ui.full.append(t.el)
            },
            viewComparator: function(e, t) {
                var i = Date.parse(e.get("startDate")),
                    n = Date.parse(t.get("startDate")),
                    s = Date.parse(e.get("endDate")),
                    r = Date.parse(t.get("endDate"));
                if (i > n)
                    return 1;
                if (i === n) {
                    if (s > r)
                        return 1;
                    if (s === r)
                        return 0
                }
                return -1
            },
            onRender: function() {
                return this.message = new o.default(this.ui.message),
                    null != this.options.successMessage ? this.message.showSuccess(this.options.successMessage) : null != this.options.errorMessage ? this.message.showError(this.options.errorMessage) : void 0
            },
            serializeData: function() {
                return {
                    canAdd: this.options.canAdd,
                    canEdit: this.options.canEdit,
                    lockLevel: this.options.lockLevel,
                    showActivateRepoMessage: this.options.showActivateRepoMessage,
                    showSaveMessage: this.options.showSaveMessage,
                    showPartialClosuresHeader: this.options.showPartialClosuresHeader
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(65),
        s = Marionette.View.extend({
            template: "Waze/Modules/Closures/templates/item",
            className: "closure-item",
            tagName: "li",
            triggers: {
                "click .edit": "edit",
                "click .delete": "delete",
                "click .locate": "locate",
                "click .apply-to-all": "applyToAll"
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments);
                return e.isStartDateSet = this.model.isStartDateSet(),
                    e.isEndDateSet = this.model.isEndDateSet(),
                    e.startDate = this.model.get("startDate"),
                    e.endDate = this.model.get("endDate"),
                    e.showApplyToAll = this.model.attributes.partial && this.options.allowApplyToAll,
                    e.description = this.options.getDescription(this.model),
                    e.canEdit = this.options.canEdit,
                    e.showLocateButton = this.options.showLocateButton,
                    e.eventName = this._getEventName(),
                    e.DIRECTION = n.DIRECTION,
                    e
            },
            _getEventName: function() {
                if (this.options.showEventName) {
                    var e = this.options.dataModel.majorTrafficEvents.get(this.model.get("eventId"));
                    return e ? e.getEnglishName() : null
                }
                return null
            },
            templateContext: {
                formatDate: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    return I18n.l("date.formats.default", e)
                },
                formatTime: function() {
                    return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "").split(" ")[1]
                }
            }
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(100),
        o = n(a),
        l = i(94),
        u = n(l),
        d = i(287),
        c = n(d),
        h = i(65),
        f = Marionette.View.extend({
            template: "Waze/Modules/Closures/templates/edit",
            behaviors: {
                dateTimePickers: {
                    behaviorClass: u.default
                }
            },
            bindings: {
                "[name=closure_event]": "event",
                "[name=closure_permanent]": "permanent",
                "[name=closure_reason]": "reason",
                "[name=closure_direction]": {
                    observe: "direction",
                    selectOptions: {
                        collection: [h.DIRECTION.A_TO_B, h.DIRECTION.B_TO_A, h.DIRECTION.TWO_WAY].map(function(e) {
                            return {
                                value: e,
                                label: I18n.t("segment.direction." + e)
                            }
                        })
                    }
                }
            },
            mteBindings: {
                ".mte-message-empty": {
                    observe: ["startDate", "endDate"],
                    visible: "_datesNotSet"
                },
                "[name=closure_eventId]": {
                    observe: "eventId",
                    update: function(e, t, i, n) {
                        if (Backbone.Stickit.getConfiguration(e).update.apply(this, arguments),
                            this.options.newClosure) {
                            var s = o.default.selectionRequiredOption(I18n.t("closures.choose_event"));
                            return e.prepend(s)
                        }
                    },
                    selectOptions: {
                        collection: "this.eventOptions",
                        defaultOption: {
                            label: "None",
                            value: null
                        }
                    }
                }
            },
            ui: {
                form: "form",
                formSubmit: "form input[type=submit]",
                message: ".message",
                mteTooltip: ".mte-tooltip",
                permanentTooltip: ".permanent-tooltip"
            },
            events: {
                "click .save-button": "save",
                "submit form": "save"
            },
            triggers: {
                "click .cancel-button": "editCancelled"
            },
            onRender: function() {
                return this.stickit(this.model, this.bindings),
                    this.options.canEditMTE && this._populateMTEOptions(),
                    this.message = new c.default(this.ui.message),
                    this.ui.mteTooltip.tooltip(),
                    this.ui.permanentTooltip.tooltip()
            },
            save: function(e) {
                e.preventDefault && e.preventDefault(),
                    this._hideErrors();
                var t = this.ui.form.get(0).checkValidity();
                return this.model.validate() && t ? this.trigger("save") : this._showErrors()
            },
            _datesNotSet: function() {
                return !this.model.get("startDate") || !this.model.get("endDate")
            },
            _showErrors: function() {
                var e = this;
                this.ui.formSubmit.click(),
                    (0,
                        r.default)(this.model.errors).forEach(function(t) {
                        var i = e.model.errors[t];
                        e._showError(t, i)
                    })
            },
            _showError: function(e, t) {
                e = this.$el.find("[name=closure_" + e + "]");
                var i = e.closest(".form-group");
                return i.addClass("has-error"),
                    $("<span>").addClass("help-block error-message").text(I18n.t("closures.validation." + t)).appendTo(i.find(".controls"))
            },
            _hideErrors: function() {
                return this.$el.find(".error-message").remove(),
                    this.$el.find(".form-group").removeClass("has-error")
            },
            _populateMTEOptions: function() {
                var e = this.options.availableEvents.map(function(e) {
                    return {
                        label: e.getEnglishName() || e.getID(),
                        value: e.getID()
                    }
                });
                this.eventOptions = _.sortBy(e, function(e) {
                        return e.label.toString().toLowerCase()
                    }),
                    this.stickit(this.model, this.mteBindings)
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments);
                return e.newClosure = this.options.newClosure,
                    e.canEditMTE = this.options.canEditMTE,
                    e
            },
            templateContext: {
                getProvider: function() {
                    return this.closures[0] ? this.closures[0].provider : null
                }
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(1010),
        g = n(p),
        m = i(178),
        v = n(m),
        y = i(271),
        b = n(y),
        w = i(98),
        E = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "triggers",
                    value: function() {
                        return {
                            mouseover: "over",
                            mouseout: "out",
                            click: "click"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.get("toSegment").getAddress(),
                            t = "";
                        return null != e && (t = e.getStreetName()), {
                            streetName: t,
                            isTurnAllowed: this.model.get("turn").getTurnData().isAllowed()
                        }
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "exit-item"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/junction-exit"
                    }
                }]),
                t
        }(Marionette.View),
        k = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._showExitList = e.showExitList,
                            this._selection = e.selection,
                            W.editingMediator.get("editingHouseNumbers") || this._createTurnEditor(),
                            W.editingMediator.on("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this),
                            this._dataModel.getTurnGraph().on(w.CHANGE_EVENT, this.render, this)
                    }
                }, {
                    key: "_createTurnEditor",
                    value: function() {
                        this._turnEditor = new g.default(this.options.selection, this.options.map.getDrawingContext(), new v.default(this.options.map.bigJunctionPathLayer), this.options.dataModel, W.prefs)
                    }
                }, {
                    key: "_destroyTurnEditor",
                    value: function() {
                        this._turnEditor && (this._turnEditor.destroy(),
                            this._turnEditor = null)
                    }
                }, {
                    key: "_onEditingHouseNumbersChanged",
                    value: function() {
                        W.editingMediator.get("editingHouseNumbers") ? this._destroyTurnEditor() : this._createTurnEditor(),
                            this.render()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyTurnEditor(),
                            this._dataModel.getTurnGraph().off("change", this.render, this)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this._turnEditor && this._turnEditor.draw(),
                            this._showExitList && this.showChildView("list", new Marionette.CollectionView({
                                collection: this._createTurnCollection(this._createTurnCollection()),
                                className: "junction-exit-view",
                                childView: E,
                                onChildviewOver: function(t) {
                                    e._highlightArrow(t.model.get("turn"))
                                },
                                onChildviewOut: function(t) {
                                    e._outArrow(t.model.get("turn"))
                                },
                                onChildviewClick: function(t) {
                                    e._toggleTurn(t.model.get("turn"))
                                }
                            }))
                    }
                }, {
                    key: "_toggleTurn",
                    value: function(e) {
                        var t = new b.default(e);
                        this._dataModel.actionManager.add(t)
                    }
                }, {
                    key: "_highlightArrow",
                    value: function(e) {
                        this._turnEditor.highlightArrowFor(e)
                    }
                }, {
                    key: "_outArrow",
                    value: function(e) {
                        this._turnEditor.outArrowFor(e)
                    }
                }, {
                    key: "_createTurnCollection",
                    value: function() {
                        var e = this,
                            t = this._selection[0],
                            i = t.getJunctionTurns(),
                            n = i.map(function(t) {
                                var i = e._dataModel.segments.get(t.getToVertex().getSegmentID());
                                return new Backbone.Model({
                                    turn: t,
                                    toSegment: i
                                })
                            });
                        return new Backbone.Collection(n)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return this._showExitList ? "templates/segment/junction-exit-layout" : _.noop
                    }
                }]),
                t
        }(Marionette.View);
    t.default = k,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(11),
        c = i(270),
        h = n(c),
        f = function() {
            function e(t, i, n, s, r) {
                (0,
                    o.default)(this, e),
                this._segments = t,
                    this._drawingContext = i,
                    this._driveRenderer = n,
                    this._dataModel = s,
                    this._appPreferences = r,
                    this._turnArrowViewGenerator = new h.default(this._drawingContext, this._dataModel, this._appPreferences, {
                        includeJunctionTurns: !0
                    }),
                    this._turnArrowViews = [],
                    this._lastHighlightedTurnArrow = null,
                    this._appPreferences.on("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                    this._drawingContext.on("zoomend", this.draw, this)
            }
            return (0,
                    u.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy(),
                            this._driveRenderer.clear(),
                            this._appPreferences.off("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                            this._drawingContext.off("zoomend", this.draw, this),
                            this._destroyTurnArrowViews()
                    }
                }, {
                    key: "draw",
                    value: function() {
                        if (this._drawingContext.clear(),
                            this._driveRenderer.clear(), !(this._segments.length > 1)) {
                            var e = this._segments[0];
                            e.type === d.SEGMENT && e.isDrivable() && (this._destroyTurnArrowViews(),
                                this._drawTurnArrowsForSegment(e))
                        }
                    }
                }, {
                    key: "_drawTurnArrowsForSegment",
                    value: function(e) {
                        var t = this;
                        if (this._turnArrowViews = this._turnArrowViewGenerator.generate(e),
                            this._turnArrowViews.forEach(function(e) {
                                e.on("mouseleave", t._onTurnArrowOut, t),
                                    e.on("mouseenter", t._onTurnArrowHover, t),
                                    e.render()
                            }),
                            null === this._lastHighlightedTurnArrow)
                            return void this._drawSegmentPaths();
                        var i = this._turnArrowViews.find(function(e) {
                            return e.getTurnArrow().getTurn().verticesEqual(t._lastHighlightedTurnArrow.getTurn())
                        });
                        void 0 === i ? this._drawSegmentPaths() : i.doOver()
                    }
                }, {
                    key: "highlightArrowFor",
                    value: function(e) {
                        var t = this._turnArrowViews.find(function(t) {
                            return t.getTurnArrow().getTurn().verticesEqual(e)
                        });
                        void 0 !== t && t.doOver()
                    }
                }, {
                    key: "outArrowFor",
                    value: function(e) {
                        var t = this._turnArrowViews.find(function(t) {
                            return t.getTurnArrow().getTurn().verticesEqual(e)
                        });
                        void 0 !== t && t.doOut()
                    }
                }, {
                    key: "_onTurnArrowHover",
                    value: function(e) {
                        this._lastHighlightedTurnArrow = e.getTurnArrow(),
                            this._driveRenderer.clear(),
                            this._drawSegmentPath(e)
                    }
                }, {
                    key: "_destroyTurnArrowViews",
                    value: function() {
                        var e = this;
                        this._turnArrowViews.forEach(function(t) {
                                t.off("mouseleave", e._onTurnArrowOut, e),
                                    t.off("mouseenter", e._onTurnArrowHover, e),
                                    t.destroy()
                            }),
                            this._turnArrowViews = []
                    }
                }, {
                    key: "_drawSegmentPath",
                    value: function(e) {
                        var t = e.getTurnArrow(),
                            i = t.getSegmentPathGeometry();
                        t.getTurn().getTurnData().isAllowed() ? this._driveRenderer.drawUserDrive(i) : this._driveRenderer.drawDisallowedPath(i)
                    }
                }, {
                    key: "_onTurnArrowOut",
                    value: function() {
                        this._lastHighlightedTurnArrow = null,
                            this._drawSegmentPaths()
                    }
                }, {
                    key: "_drawSegmentPaths",
                    value: function() {
                        var e = this;
                        this._driveRenderer.clear(),
                            this._turnArrowViews.forEach(function(t) {
                                return e._drawSegmentPath(t)
                            })
                    }
                }]),
                e
        }();
    (0,
        r.default)(f.prototype, Backbone.Events),
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(45),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(21),
        u = n(l),
        d = i(1012),
        c = n(d),
        h = i(225),
        f = n(h),
        p = i(244),
        g = n(p),
        m = i(171),
        v = n(m),
        y = i(242),
        b = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(y),
        w = i(53),
        E = n(w),
        k = i(1013),
        M = n(k),
        S = i(54),
        T = n(S),
        C = i(1014),
        I = n(C),
        A = i(99),
        D = Marionette.Object.extend({
            MIN_EDIT_ZOOM: 6,
            HOUSE_NUMBERS_SAVE_ERROR_CODE: 716,
            _editingLock: null,
            model: null,
            segments: null,
            houseNumberSets: null,
            layer: null,
            markerLayer: null,
            fractionPoint: null,
            fractionLine: null,
            originalGeometry: null,
            updating: !1,
            lightboxView: null,
            fogOfWar: null,
            selectedNumber: null,
            invalidHouseNumbers: null,
            failedLoading: !1,
            enabled: !0,
            active: !1,
            showingForceDialog: !1,
            segmentStyle: {
                fill: {
                    strokeColor: "#00ece3",
                    strokeWidth: 7,
                    graphicZIndex: 2
                }
            },
            editAreaStyle: {
                maskID: "HNAreaMask",
                fillColor: "black",
                graphicZIndex: 1
            },
            fractionLineStyle: {
                strokeWidth: 2,
                strokeColor: "white",
                strokeDashstyle: "dash",
                strokeDashArray: "8, 8"
            },
            fractionLinePaddingStyle: {
                strokeWidth: 4,
                strokeColor: "#000",
                strokeOpacity: .5,
                strokeDashstyle: "dash",
                strokeDashArray: "8, 8"
            },
            initialize: function() {
                var e = this;
                return this.model = this.options.model,
                    this.map = this.options.map,
                    this.editable = this.options.editable,
                    this.enabled = this.options.editable,
                    this.segments = this.options.segments,
                    this.lightboxView = new M.default({
                        model: this.model,
                        address: this.segments[0].getAddress(),
                        pm: this
                    }),
                    this.lightboxView.on("destroy", this.destroy, this),
                    this.lightboxView.onSave = function() {
                        return e.onSave()
                    },
                    this.lightboxView.onAdd = function() {
                        return e.onAddClicked()
                    },
                    this.lightboxView.disabled = !this.options.editable,
                    W.app.layout.getRegion("mapDialogRegion").show(this.lightboxView),
                    this._initLayers(),
                    this._setupSegments()
            },
            _initLayers: function() {
                return this.layer = new OL.Layer.Vector("houseNumbers", {
                        renderers: [T.default],
                        rendererOptions: {
                            zIndexing: !0
                        }
                    }),
                    this.markerLayer = new OL.Layer.Markers("houseNumberMarkers"),
                    this.map.addLayer(this.layer),
                    this.map.addLayer(this.markerLayer),
                    $(this.markerLayer.div).addClass("house-numbers-layer")
            },
            _setupSegments: function() {
                var e = this,
                    t = void 0,
                    i = this.segments.map(function(e) {
                        return t = e.geometry.clone(),
                            t.model = e,
                            t
                    });
                this.joinedGeometry = new OL.Geometry.MultiLineString(i);
                var n = this.segments.map(function(e) {
                    return e.getID()
                });
                return this.model.houseNumbers.get(n).then(function(t) {
                        if (e.active) {
                            e.houseNumberSets = {};
                            for (var i = 0; i < t.length; i++) {
                                var n = t[i];
                                e.houseNumberSets[n.id] = n
                            }
                            return e.render()
                        }
                    }).catch(function() {
                        return e.failedLoading = !0,
                            e.lightboxView.render(),
                            e.lightboxView.showErrorMessage()
                    }).finally(function() {
                        return e.lightboxView.setLoading(!1)
                    }),
                    this.activate(),
                    this.lightboxView.setLoading(!0)
            },
            onDrag: function(e) {
                return this.selectedNumber.model.calculateProjection(this.joinedGeometry),
                    this.fractionPoint.lonlat = this.selectedNumber.model.projectionLonLat,
                    this.selectedNumber.updateSide(),
                    this.markerLayer.drawMarker(this.fractionPoint),
                    this.selectedNumber.icon.forceReflow(),
                    this.fractionLine.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLine.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionLine.geometry.components[1].x = this.selectedNumber.lonlat.lon,
                    this.fractionLine.geometry.components[1].y = this.selectedNumber.lonlat.lat,
                    this.fractionLinePadding.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLinePadding.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionLinePadding.geometry.components[1].x = this.selectedNumber.lonlat.lon,
                    this.fractionLinePadding.geometry.components[1].y = this.selectedNumber.lonlat.lat,
                    this.layer.drawFeature(this.fractionLinePadding),
                    this.layer.drawFeature(this.fractionLine)
            },
            onDragEnd: function(e) {
                var t = this;
                if (!this.selectedNumber.isNew) {
                    var i = new OL.Geometry.Point(this.selectedNumber.lonlat.lon, this.selectedNumber.lonlat.lat),
                        n = new E.default;
                    this.model.actionManager.add(n),
                        this.ignoreUpdates(function() {
                            if (t.selectedNumber.model.changedSegment()) {
                                var e = t.houseNumberSets[t.selectedNumber.model.closestSegment.getID()],
                                    s = new b.ReplaceHouseNumberSegment(t.selectedNumber.model, e);
                                t.selectedNumber.model.geometry = t.originalGeometry.clone(),
                                    n.doSubAction(s),
                                    t.selectedNumber.model = s.newHouseNumber
                            }
                            return n.doSubAction(new g.default(t.selectedNumber.model, t.originalGeometry, i)),
                                n.doSubAction(new v.default(t.selectedNumber.model.parent, t.selectedNumber.model, {
                                    forced: !1,
                                    valid: !0
                                })),
                                t.selectedNumber.setValid(!0),
                                t.selectedNumber.setForced(!1)
                        }),
                        this.originalGeometry = i.clone()
                }
            },
            reset: function() {
                this.adding && null != this.selectedNumber && this.selectedNumber.dragging.forceEnd(),
                    this.adding = !1;
                for (var e = 0; e < this.markerLayer.markers.length; e++) {
                    this.markerLayer.markers[e].destroy()
                }
                this.markerLayer.clearMarkers(),
                    this.fractionPoint = null,
                    this.layer.destroyFeatures(this.layer.features),
                    this.editArea = null
            },
            render: function() {
                if (!this.updating && this.active && null !== this.houseNumberSets) {
                    this.reset();
                    var e = !0,
                        t = !1,
                        i = void 0;
                    try {
                        for (var n, s = (0,
                                u.default)((0,
                                o.default)(this.houseNumberSets)); !(e = (n = s.next()).done); e = !0)
                            for (var r = n.value, a = this.houseNumberSets[r], l = 0; l < a.numbers.length; l++) {
                                var d = a.numbers[l];
                                this.createHouseNumber(d)
                            }
                    } catch (e) {
                        t = !0,
                            i = e
                    } finally {
                        try {
                            !e && s.return && s.return()
                        } finally {
                            if (t)
                                throw i
                        }
                    }
                    return this.drawFogOfWar(),
                        this.drawEditArea(),
                        this.drawSegments()
                }
            },
            drawSegments: function() {
                var e = this,
                    t = this.segments.map(function(t) {
                        return new OL.Feature.Vector(t.geometry.clone(), {}, e.segmentStyle.fill)
                    });
                return this.layer.addFeatures(t)
            },
            drawEditArea: function() {
                var e = this;
                return this.editAreas = function() {
                        var t = [],
                            i = !0,
                            n = !1,
                            s = void 0;
                        try {
                            for (var r, a = (0,
                                    u.default)((0,
                                    o.default)(e.houseNumberSets)); !(i = (r = a.next()).done); i = !0) {
                                var l = r.value,
                                    d = e.houseNumberSets[l];
                                t.push(new OL.Feature.Vector(d.editArea, {}, e.editAreaStyle))
                            }
                        } catch (e) {
                            n = !0,
                                s = e
                        } finally {
                            try {
                                !i && a.return && a.return()
                            } finally {
                                if (n)
                                    throw s
                            }
                        }
                        return t
                    }(),
                    this.layer.addFeatures(this.editAreas)
            },
            createHouseNumber: function(e) {
                var t = this;
                e.calculateProjection(this.joinedGeometry);
                var i = new c.default(e, new OL.LonLat(e.geometry.x, e.geometry.y), this.map);
                return this.markerLayer.addMarker(i),
                    i.events.register("click:input", this, this.onMarkerClick),
                    i.events.register("change:number", this, this.onValueChanged),
                    i.events.register("delete", this, this.onMarkerDelete),
                    i.events.register("unselect", null, function() {
                        return t.unselectNumber(t.selectedNumber)
                    }),
                    i.events.register("drag", this, this.onDrag),
                    i.events.register("dragEnd", this, this.onDragEnd),
                    i.layer = this.markerLayer,
                    i
            },
            onValueChanged: function(e) {
                var t = e.number,
                    i = e.object;
                if (i.isNew && "" !== t)
                    i.model.number = t,
                    delete i.isNew,
                    i.model.geometry = new OL.Geometry.Point(i.lonlat.lon, i.lonlat.lat),
                    this.model.actionManager.add(new b.AddHouseNumber(i.model.parent, i.model));
                else if ("" !== t)
                    return this.model.actionManager.add(new v.default(i.model.parent, i.model, {
                        number: t,
                        forced: !1,
                        valid: !0
                    }))
            },
            onMarkerDelete: function(e) {
                var t = e.object;
                return this.unselectNumber(t),
                    t.isNew ? this.cancelAdd() : this.model.actionManager.add(new b.DeleteHouseNumber(t.model.parent, t.model))
            },
            onMarkerClick: function(e) {
                var t = e.object;
                return this.selectNumber(t)
            },
            selectNumber: function(e) {
                if (this.enabled && this.selectedNumber !== e) {
                    this.unselectNumber(this.selectedNumber),
                        this.selectedNumber = e;
                    var t = this.selectedNumber.model.fractionPoint.clone();
                    return this.fractionPoint = new I.default(new OL.LonLat(t.x, t.y), this.joinedGeometry, this.map),
                        this.markerLayer.addMarker(this.fractionPoint),
                        this.fractionPoint.dragging.activate(this.fractionPoint.icon.$div),
                        this.fractionPoint.layer = this.markerLayer,
                        this.selectedNumber.icon.bringToFront(),
                        this.selectedNumber.focus(),
                        this.selectedNumber.setActive(!0),
                        this.selectedNumber.dragging.activate(this.selectedNumber.icon.$div.find(".drag-handle")),
                        this.originalGeometry = this.selectedNumber.model.geometry.clone(),
                        this.fractionPoint.events.register("dragEnd", this, this.onFractionPointDragEnd),
                        this.fractionPoint.events.register("drag", this, this.onFractionPointDrag),
                        this.lightboxView.setLastEditedUser(this.selectedNumber.model.updatedBy),
                        this.fractionLine = new OL.Feature.Vector(new OL.Geometry.LineString([new OL.Geometry.Point(t.x, t.y), new OL.Geometry.Point(this.originalGeometry.x, this.originalGeometry.y)]), {}, this.fractionLineStyle),
                        this.fractionLinePadding = new OL.Feature.Vector(new OL.Geometry.LineString([new OL.Geometry.Point(t.x, t.y), new OL.Geometry.Point(this.originalGeometry.x, this.originalGeometry.y)]), {}, this.fractionLinePaddingStyle),
                        this.layer.addFeatures([this.fractionLinePadding, this.fractionLine])
                }
            },
            onFractionPointDrag: function() {
                return this.fractionLine.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLine.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionLinePadding.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLinePadding.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionPoint.icon.forceReflow(),
                    this.layer.drawFeature(this.fractionLinePadding),
                    this.layer.drawFeature(this.fractionLine)
            },
            onFractionPointDragEnd: function() {
                var e = this,
                    t = new OL.Geometry.Point(this.fractionPoint.lonlat.lon, this.fractionPoint.lonlat.lat);
                this.selectedNumber.isNew ? this.selectedNumber.model.fractionPoint = t : this.ignoreUpdates(function() {
                    var t = new E.default;
                    e.model.actionManager.add(t);
                    var i = e.houseNumberSets[e.fractionPoint.closestSegment.getID()],
                        n = new b.UpdateFractionPoint(e.selectedNumber.model, i, e.fractionPoint);
                    return t.doSubAction(n),
                        e.selectedNumber.model = n.newHouseNumber,
                        t.doSubAction(new v.default(e.selectedNumber.model.parent, e.selectedNumber.model, {
                            forced: !1,
                            valid: !0
                        })),
                        e.selectedNumber.setValid(!0),
                        e.selectedNumber.setForced(!1)
                })
            },
            ignoreUpdates: function(e) {
                this.updating = !0,
                    e(),
                    this.updating = !1
            },
            unselectNumber: function(e) {
                if (null != e) {
                    if (e.dragging.deactivate(),
                        e.setActive(!1),
                        this.selectedNumber = null,
                        this.lightboxView.setLastEditedUser(null),
                        this.fractionPoint && (this.fractionPoint.events.unregister("dragEnd", this, this.onFractionPointDragEnd),
                            this.fractionPoint.events.unregister("drag", this, this.onFractionPointDrag),
                            this.markerLayer.removeMarker(this.fractionPoint)),
                        this.fractionLine && this.layer.destroyFeatures([this.fractionLine, this.fractionLinePadding]),
                        "" === e.input.val()) {
                        if (e.isNew)
                            return this.markerLayer.removeMarker(e);
                        var t = e.input.get(0).valueAsNumber;
                        return isNaN(t) ? e.input.val(e.model.number) : this.model.actionManager.add(new b.DeleteHouseNumber(e.model.parent, e.model))
                    }
                    return e.isNew ? (e.model.number = e.input.val(),
                        delete e.isNew,
                        this.model.actionManager.add(new b.AddHouseNumber(e.model.parent, e.model))) : void 0
                }
            },
            onAddClicked: function() {
                if (!this.adding && this.enabled && !this.failedLoading) {
                    this.adding = !0;
                    var e = new f.default({
                            number: "",
                            geometry: new OL.Geometry.Point(0, 0),
                            fractionPoint: new OL.Geometry.Point(0, 0),
                            forced: !1
                        }),
                        t = this.createHouseNumber(e);
                    return e.parent = this.houseNumberSets[e.closestSegment.getID()],
                        t.setNew(!0),
                        t.isNew = !0,
                        t.dragging.forceStart(),
                        this.selectNumber(t),
                        t.events.register("click:input", this, this.onAddEnd)
                }
            },
            cancelAdd: function() {
                if (this.adding)
                    return this.adding = !1,
                        this.selectedNumber.dragging.forceEnd(),
                        this.unselectNumber(this.selectedNumber)
            },
            onAddEnd: function(e) {
                var t = e.object,
                    i = new OL.Geometry.Point(t.lonlat.lon, t.lonlat.lat);
                if (this.editAreas.some(function(e) {
                        return e.geometry.containsPoint(i)
                    }))
                    return this.adding = !1,
                        t.dragging.forceEnd(),
                        t.model.geometry = i,
                        t.model.fractionPoint = t.model.getFractionFromProjection(),
                        t.model.parent = this.houseNumberSets[t.model.closestSegment.getID()],
                        t.setNew(!1),
                        t.events.unregister("click:input", this, this.onAddEnd),
                        t.focus()
            },
            onMapClick: function(e) {
                if (null != this.selectedNumber)
                    return this.unselectNumber(this.selectedNumber)
            },
            activate: function() {
                if (!this.active) {
                    if (this.model.actionManager.canRedo()) {
                        if (!confirm(I18n.t("edit.house_numbers.confirm_clear_redo")))
                            return;
                        this.model.actionManager.clear()
                    }
                    this.active = !0,
                        this._editingLock = W.editingMediator.lockEditing(),
                        W.editingMediator.enterEditingHouseNumbers(),
                        this.map.events.register("click", this, this.onMapClick),
                        this.map.events.register("moveend", this, this.drawFogOfWar),
                        this.map.events.register("zoomend", this, this.onZoomChanged),
                        this.onZoomChanged(),
                        this.model.houseNumbers.on("objectschanged", this.render, this),
                        W.commands.execute("save:setHandler", this.saveChanges, this)
                }
            },
            onDestroy: function() {
                return this.deactivate(),
                    this.lightboxView.destroy(),
                    this.map.removeLayer(this.layer),
                    this.map.removeLayer(this.markerLayer)
            },
            deactivate: function() {
                if (this.active)
                    return this.active = !1,
                        W.editingMediator.releaseEditing(this._editingLock),
                        W.editingMediator.exitEditingHouseNumbers(),
                        this._editingLock = null,
                        this.model.actionManager.clear(),
                        this.map.events.unregister("click", this, this.onMapClick),
                        this.map.events.unregister("moveend", this, this.drawFogOfWar),
                        this.map.events.unregister("zoomend", this, this.onZoomChanged),
                        this.model.houseNumbers.off("objectschanged", this.render, this),
                        this.reset(),
                        W.commands.execute("save:restoreDefaultHandler")
            },
            drawFogOfWar: function() {
                return this.fogOfWar && this.layer.destroyFeatures(this.fogOfWar),
                    this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                        fillColor: "black",
                        fillOpacity: .5,
                        strokeWidth: 0,
                        mask: "url(#HNAreaMask)"
                    }),
                    this.layer.addFeatures(this.fogOfWar),
                    this.layer.redraw()
            },
            onSave: function() {
                return this.saveChanges()
            },
            saveChanges: function() {
                var e = this;
                if (!W.editingMediator.get("saving"))
                    return this.unselectNumber(this.selectedNumber),
                        this.enabled = !1,
                        this.lightboxView.disable(),
                        this.lightboxView.setLoading(!0),
                        W.editingMediator.set({
                            navigation: !1,
                            saving: !0
                        }),
                        W.controller.save().then(function() {
                            return e.onSaveSuccess()
                        }).catch(function(t) {
                            if (!(t instanceof A.SaveError))
                                throw t;
                            e.onSaveFail(t.errors)
                        }).finally(function() {
                            e.lightboxView.setLoading(!1),
                                W.editingMediator.set({
                                    navigation: !0,
                                    saving: !1
                                })
                        })
            },
            onSaveFail: function(e) {
                var t = e[0];
                if (t.get("code") === this.HOUSE_NUMBERS_SAVE_ERROR_CODE) {
                    if (this.invalidHouseNumbers = t.get("objects"),
                        this.showingForceDialog = !0,
                        this.lightboxView.showForceMessage(),
                        null != this.invalidHouseNumbers)
                        for (var i = 0; i < this.invalidHouseNumbers.length; i++) {
                            var n = this.invalidHouseNumbers[i],
                                s = this.houseNumberSets[n.segID].getNumber(n.id);
                            n.model = s,
                                s.valid = !1,
                                s.invalidCode = n.errorType
                        }
                } else
                    this.lightboxView.showSaveErrorMessage();
                return this.render()
            },
            onSaveSuccess: function() {
                return this.enabled = !0,
                    this.lightboxView.enable(),
                    this.lightboxView.showSuccessMessage(),
                    this._setupSegments()
            },
            editingAllowedInZoom: function() {
                return this.map.getZoom() >= W.Config.houseNumbers.minEditZoom
            },
            onZoomChanged: function() {
                return $(this.markerLayer.div).toggleClass("preview", !this.editingAllowedInZoom()),
                    this.editingAllowedInZoom() || (this.cancelAdd(),
                        this.unselectNumber(this.selectedNumber)),
                    this.lightboxView.render()
            },
            canForcedInvalid: function() {
                return !this.houseNumberSets || (0,
                    r.default)(this.houseNumberSets).every(function(e) {
                    var t = e.getSegment();
                    return null != t && t.canForceHouseNumbers()
                })
            },
            continueEditing: function() {
                return this.enabled = !0,
                    this.showingForceDialog = !1,
                    this.lightboxView.enable()
            },
            forceInvalid: function() {
                var e = this;
                return this.showingForceDialog = !1,
                    _.isEmpty(this.invalidHouseNumbers) || this.ignoreUpdates(function() {
                        var t = new E.default;
                        return e.model.actionManager.add(t),
                            e.invalidHouseNumbers.map(function(e) {
                                return t.doSubAction(new v.default(e.model.parent, e.model, {
                                    forced: !0
                                }))
                            })
                    }),
                    this.saveChanges()
            },
            CLASS_NAME: "W.Control.HouseNumbers"
        });
    t.default = D,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(26),
        r = n(s),
        a = i(97),
        o = n(a),
        l = i(33),
        u = OL.Class(OL.Marker, {
            model: null,
            input: null,
            ENTER: 13,
            ESC: 27,
            dragging: null,
            hasTooltip: !1,
            initialize: function(e, t, i) {
                var n = this;
                this.map = i,
                    this.model = e;
                var s = new r.default("house-number");
                OL.Marker.prototype.initialize.call(this, t, s),
                    this.render(),
                    this.input = this.icon.$div.find("input"),
                    this.inputWrapper = this.icon.$div.find(".input-wrapper"),
                    this.icon.$div.find(".input-wrapper, .drag-handle").on("click", function(e) {
                        return n.events.triggerEvent("click:input"), !1
                    }),
                    this.input.on("click", function() {
                        return n.input.focus()
                    }),
                    this.input.on("dblclick", function(e) {
                        return e.stopPropagation()
                    }),
                    this.input.on("mousedown", function(e) {
                        return e.stopPropagation()
                    }),
                    this.input.on("keyup", function(e) {
                        if (e.which === n.ESC)
                            return e.stopPropagation(),
                                n.input.blur(),
                                n.events.triggerEvent("unselect")
                    }),
                    this.input.on("change", function() {
                        return n.events.triggerEvent("change:number", {
                            number: n.input.val()
                        })
                    }),
                    this.inputWrapper.find(".delete-button").on("click", function() {
                        return n.events.triggerEvent("delete")
                    });
                for (var a = ["change:number", "delete", "drag", "dragEnd", "unselect", "click:input"], l = 0; l < a.length; l++) {
                    var u = a[l];
                    this.events.addEventType(u)
                }
                this.dragging = new o.default(this.map),
                    this.dragging.move = function(e) {
                        return n.destroyTooltip(),
                            n.lonlat = n.map.getLonLatFromViewPortPx(e.xy),
                            n.layer.drawMarker(n),
                            n.model.geometry.x = n.lonlat.lon,
                            n.model.geometry.y = n.lonlat.lat,
                            n.events.triggerEvent("drag", {
                                xy: e.xy,
                                marker: n
                            })
                    },
                    this.dragging.done = function(e) {
                        return n.createTooltip(),
                            n.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: n
                            })
                    },
                    this.createTooltip()
            },
            createTooltip: function() {
                if (!1 === this.model.valid && !this.hasTooltip)
                    return this.hasTooltip = !0,
                        this.inputWrapper.tooltip({
                            title: I18n.t("edit.house_numbers.errors")[this.model.invalidCode],
                            placement: "bottom"
                        })
            },
            destroyTooltip: function() {
                this.hasTooltip && this.inputWrapper.tooltip("destroy"),
                    this.hasTooltip = !1
            },
            destroy: function() {
                return this.destroyTooltip()
            },
            focus: function() {
                return this.input.focus(),
                    this.input.val(this.input.val())
            },
            select: function(e) {
                e.stopPropagation(),
                    this.input.focus()
            },
            render: function() {
                return this.icon.$div.html((0,
                    l.getHTML)("templates/house-number", this.model))
            },
            setActive: function(e) {
                return this.icon.$div.find(".content").toggleClass("active", e)
            },
            setNew: function(e) {
                return this.icon.$div.find(".content").toggleClass("new", e)
            },
            setValid: function(e) {
                e && this.destroyTooltip();
                var t = this.icon.$div.find(".content");
                return t.removeClass("valid-" + !e),
                    t.addClass("valid-" + e)
            },
            setForced: function(e) {
                var t = this.icon.$div.find(".content");
                return t.removeClass("forced-" + !e),
                    t.addClass("forced-" + e)
            },
            updateSide: function() {
                return this.inputWrapper.toggleClass("side-left", this.model.isLeft)
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(16),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .continue-editing": "onContinueEditingClicked",
                            "click .force-invalid": "onForceInvalidClicked"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.model = e.model,
                            this.pm = e.pm,
                            this.address = e.address,
                            this.loadingAnimation = null,
                            this.toolbar = null,
                            this.disabled = !1,
                            this.registerEvents()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            address: this.address.format(),
                            pm: this.pm
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        if (this.toolbar = this.$el.find(".toolbar"),
                            this.loadingAnimation = this.$el.find(".loading-animation"),
                            this.zoomMessage = this.$el.find(".zoom-message"),
                            this.lastEditedUsername = this.$el.find(".last-edited"),
                            null !== this.pm.selectedNumber ? this.setLastEditedUser(this.pm.selectedNumber.model.updatedBy) : this.setLastEditedUser(null),
                            this.pm.showingForceDialog)
                            return this.showForceMessage()
                    }
                }, {
                    key: "registerEvents",
                    value: function() {
                        var e = this;
                        return this.model.actionManager.events.on({
                                afteraction: this.render,
                                afterundoaction: this.render,
                                afterclearactions: this.render,
                                scope: this
                            }),
                            W.accelerators.events.register("editHouseNumbers", this, this.addHouseNumbersShortcutClicked),
                            W.accelerators.events.register("exitHouseNumbers", this, this.exitHouseNumbersClicked),
                            W.accelerators.events.register("save", this, this.saveClicked),
                            $(document).on("keyup.house-numbers-lightbox", function(t) {
                                if (27 === t.which)
                                    return e.confirmClose()
                            })
                    }
                }, {
                    key: "unregisterEvents",
                    value: function() {
                        return this.model.actionManager.events.un({
                                afteraction: this.render,
                                afterundoaction: this.render,
                                afterclearactions: this.render,
                                scope: this
                            }),
                            W.accelerators.events.unregister("editHouseNumbers", this, this.addHouseNumbersShortcutClicked),
                            W.accelerators.events.unregister("exitHouseNumbers", this, this.exitHouseNumbersClicked),
                            W.accelerators.events.unregister("save", this, this.saveClicked),
                            $(document).off("keyup.house-numbers-lightbox")
                    }
                }, {
                    key: "saveClicked",
                    value: function() {
                        return this.onSave()
                    }
                }, {
                    key: "addHouseNumbersShortcutClicked",
                    value: function(e) {
                        return this.onAdd()
                    }
                }, {
                    key: "exitHouseNumbersClicked",
                    value: function(e) {
                        this.confirmClose()
                    }
                }, {
                    key: "confirmClose",
                    value: function() {
                        var e = !0;
                        if (this.model.actionManager.canSave() && (e = window.confirm(I18n.t("edit.unsaved_changes"))),
                            e)
                            return this.destroy()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this.unregisterEvents()
                    }
                }, {
                    key: "onSave",
                    value: function() {}
                }, {
                    key: "onAdd",
                    value: function() {}
                }, {
                    key: "setLoading",
                    value: function(e) {
                        return this.toolbar.toggle(!e),
                            this.loadingAnimation.toggle(e)
                    }
                }, {
                    key: "showSuccessMessage",
                    value: function() {
                        return this.$el.find(".success-message").fadeIn().delay(3e3).fadeOut()
                    }
                }, {
                    key: "showErrorMessage",
                    value: function() {
                        return this.$el.find(".error-message").show()
                    }
                }, {
                    key: "showSaveErrorMessage",
                    value: function() {
                        return this.$el.find(".save-error-message").show()
                    }
                }, {
                    key: "showForceMessage",
                    value: function() {
                        return this.$el.find(".force-message").show()
                    }
                }, {
                    key: "setLastEditedUser",
                    value: function(e) {
                        e ? (this.lastEditedUsername.show(),
                            this.lastEditedUsername.find(".username").text(g.default.formatUserName(e))) : this.lastEditedUsername.hide()
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.disabled = !0,
                            this.render()
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.disabled = !1,
                            this.render()
                    }
                }, {
                    key: "onForceInvalidClicked",
                    value: function() {
                        return this.pm.forceInvalid()
                    }
                }, {
                    key: "onContinueEditingClicked",
                    value: function() {
                        return this.pm.continueEditing()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/house-numbers-lightbox"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(26),
        r = n(s),
        a = i(97),
        o = n(a),
        l = OL.Class(OL.Marker, {
            dragging: null,
            dragConstraint: null,
            closestSegment: null,
            initialize: function(e, t, i) {
                var n = this;
                this.map = i;
                var s = new r.default("fraction-point");
                OL.Marker.prototype.initialize.call(this, e, s),
                    this.dragConstraint = t;
                for (var a = ["drag", "dragEnd"], l = 0; l < a.length; l++) {
                    var u = a[l];
                    this.events.addEventType(u)
                }
                this.dragging = new o.default(this.map),
                    this.dragging.down = function(e) {
                        return n.icon.$div.addClass("dragging")
                    },
                    this.dragging.move = function(t) {
                        e = n.map.getLonLatFromViewPortPx(t.xy);
                        var i = n.dragConstraint.distanceTo(new OL.Geometry.Point(e.lon, e.lat), {
                            details: !0
                        });
                        return n.lonlat = new OL.LonLat(i.x0, i.y0),
                            n.closestSegment = i.model,
                            n.layer.drawMarker(n),
                            n.events.triggerEvent("drag", {
                                xy: t.xy,
                                marker: n
                            })
                    },
                    this.dragging.done = function(e) {
                        return n.icon.$div.removeClass("dragging"),
                            n.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: n
                            })
                    },
                    this.icon.$div.on("click", function() {
                        return !1
                    })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(20),
        g = n(p),
        m = i(39),
        v = n(m),
        _ = i(1016),
        y = n(_),
        b = i(272),
        w = n(b),
        E = i(1017),
        k = n(E),
        M = i(90),
        S = i(174),
        T = i(1020),
        C = n(T),
        I = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: {
                                el: ".modal-content",
                                regionClass: S.DialogContentRegion,
                                onEscapeKeydown: this._onEscapeKeydown.bind(this)
                            }
                        }
                    }
                }, {
                    key: "_onEscapeKeydown",
                    value: function(e) {
                        if (this.getChildView("contentRegion") instanceof w.default)
                            return e.preventDefault(),
                                this._showSummaryView(), !1
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this,
                            i = e.compositeSegment,
                            n = i.children[0];
                        this._dataModel = e.dataModel,
                            this._segments = i.children,
                            this._canEditRestrictions = i.allowRestrictionEditing(),
                            this._viewHelpers = new M.SegmentRestrictionViewHelpers({
                                segment: n,
                                dataModel: this._dataModel
                            }),
                            this._drivingRestrictionsBuilder = new y.default({
                                segments: this._segments,
                                getRestrictions: function(e) {
                                    return e.getDrivingRestrictions()
                                }
                            }),
                            this._pickupRestrictionsBuilder = new y.default({
                                segments: this._segments,
                                getRestrictions: function(e) {
                                    return e.getPickupRestrictions()
                                }
                            }),
                            this._tollRoadModel = new Backbone.Model({
                                isTollRoad: e.isTollRoad,
                                isTollRoadMixed: e.isTollRoadMixed,
                                hasTollRestriction: this._drivingRestrictionsBuilder.hasTollRestriction()
                            }),
                            this._tollRoadModel.on("change isTollRoad", function() {
                                return t._tollRoadModel.set({
                                    isTollRoadMixed: !1
                                })
                            }),
                            this._showRestrictionType = e.showRestrictionType
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemEdit",
                    value: function(e) {
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !1
                        })
                    }
                }, {
                    key: "onChildviewRestrictionItemDelete",
                    value: function(e) {
                        this._drivingRestrictionsBuilder.deleteRestriction(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemApplyToAll",
                    value: function(e) {
                        this._drivingRestrictionsBuilder.addRestriction(e),
                            e.isTollFreeModality() && this._tollRoadModel.set({
                                isTollRoad: !1,
                                isTollRoadMixed: !1
                            }),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCancel",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditUpdate",
                    value: function(e, t) {
                        this._drivingRestrictionsBuilder.updateRestriction(e, t),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCreate",
                    value: function(e) {
                        this._drivingRestrictionsBuilder.addRestriction(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryClose",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryCreate",
                    value: function(e) {
                        this._showCreateSegmentsRestrictionView({
                            direction: e.direction
                        })
                    }
                }, {
                    key: "onChildviewRestrictionSummaryApply",
                    value: function() {
                        this.trigger("restriction:summary:apply", {
                                isTollRoad: this._tollRoadModel.attributes.isTollRoad
                            }),
                            this._applyChanges(),
                            this.destroy()
                    }
                }, {
                    key: "_shouldShowPickupRestrictions",
                    value: function() {
                        return this.options.compositeSegment.supportsPickupRestrictions()
                    }
                }, {
                    key: "_showSummaryView",
                    value: function() {
                        this._tollRoadModel.set({
                                hasTollRestriction: this._drivingRestrictionsBuilder.hasTollRestriction()
                            }),
                            this.showChildView("contentRegion", new k.default({
                                viewHelpers: this._viewHelpers,
                                subscriptions: this._dataModel.getRestrictionSubscriptions(),
                                drivingRestrictionsBuilder: this._drivingRestrictionsBuilder,
                                pickupRestrictionsBuilder: this._pickupRestrictionsBuilder,
                                canEditRestrictions: this._canEditRestrictions,
                                tollRoadModel: this._tollRoadModel,
                                enablePickupRestrictions: this._shouldShowPickupRestrictions(),
                                showRestrictionType: this._showRestrictionType
                            }))
                    }
                }, {
                    key: "_showEditView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.restriction,
                            i = e.isNewRestriction,
                            n = void 0 !== i && i;
                        this.showChildView("contentRegion", new w.default({
                            restriction: t,
                            isNewRestriction: n,
                            canEditRestrictions: this._canEditRestrictions,
                            canAddTollRestriction: !this._tollRoadModel.attributes.isTollRoad,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            editingTitle: this._viewHelpers.getEditingDrivingTitle(t)
                        }))
                    }
                }, {
                    key: "_showCreateSegmentsRestrictionView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.direction,
                            i = void 0 === t ? m.RESTRICTION_SEGMENT_DIRECTION.FWD : t,
                            n = new v.default({
                                direction: i
                            });
                        this._showEditView({
                            restriction: n,
                            isNewRestriction: !0
                        })
                    }
                }, {
                    key: "_applyChanges",
                    value: function() {
                        var e = this,
                            t = new C.default(this._segments.map(function(t) {
                                var i = {
                                    restrictions: e._drivingRestrictionsBuilder.getRestrictions(t.getID())
                                };
                                return e._shouldShowPickupRestrictions() && (i.pickupRestrictions = e._pickupRestrictionsBuilder.getRestrictions(t.getID())),
                                    new g.default(t, i)
                            }));
                        this._dataModel.actionManager.add(t)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(7),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(180),
        f = n(h),
        p = i(216),
        g = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(p),
        m = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.segments,
                    n = void 0 === i ? [] : i,
                    s = t.getRestrictions,
                    r = void 0 === s ? function() {
                        return []
                    } :
                    s;
                (0,
                    u.default)(this, e),
                this._reversedSegmentsIDs = f.default.getReversedSegments(n),
                    this._segmentIDs = n.map(function(e) {
                        return e.getID()
                    }),
                    this._restrictionsBySegmentID = n.reduce(function(e, t) {
                        return e[t.getID()] = r(t),
                            e
                    }, {})
            }
            return (0,
                    c.default)(e, [{
                    key: "hasMultipleSegments",
                    value: function() {
                        return (0,
                            o.default)(this._segmentIDs).length > 1
                    }
                }, {
                    key: "hasTollRestriction",
                    value: function() {
                        var e = this;
                        return this._segmentIDs.some(function(t) {
                            return e.getRestrictions(t).some(function(e) {
                                return e.isTollFreeModality()
                            })
                        })
                    }
                }, {
                    key: "appliesToAllSegments",
                    value: function(e) {
                        var t = this;
                        return this._segmentIDs.every(function(i) {
                            return t.getRestrictions(i).some(function(n) {
                                return t._withCorrectDirection(i, n).equals(e)
                            })
                        })
                    }
                }, {
                    key: "_addRestrictionToSegment",
                    value: function(e, t) {
                        var i = this.getRestrictions(t),
                            n = this._withCorrectDirection(t, e);
                        i.some(function(e) {
                            return e.equals(n)
                        }) || i.push(n)
                    }
                }, {
                    key: "_updateRestrictionInSegment",
                    value: function(e, t, i) {
                        var n = this,
                            s = this.getRestrictions(i),
                            r = _.findIndex(s, function(t) {
                                return t.equals(n._withCorrectDirection(i, e))
                            }),
                            a = this._withCorrectDirection(i, t);
                        return r > -1 && (s.splice(r, 1, a), !0)
                    }
                }, {
                    key: "addRestriction",
                    value: function(e) {
                        var t = this;
                        this._segmentIDs.forEach(function(i) {
                            t._addRestrictionToSegment(e, i)
                        })
                    }
                }, {
                    key: "updateRestriction",
                    value: function(e, t) {
                        var i = this;
                        this._segmentIDs.forEach(function(n) {
                            i._updateRestrictionInSegment(e, t, n)
                        })
                    }
                }, {
                    key: "deleteRestriction",
                    value: function(e) {
                        this.deleteRestrictionsIf(function(t) {
                            return t.equals(e)
                        })
                    }
                }, {
                    key: "deleteRestrictionsIf",
                    value: function(e) {
                        var t = this;
                        this._segmentIDs.forEach(function(i) {
                            var n = t.getRestrictions(i);
                            t._setRestrictions(i, _.reject(n, function(n) {
                                return e(t._withCorrectDirection(i, n))
                            }))
                        })
                    }
                }, {
                    key: "getRestrictions",
                    value: function(e) {
                        return this._restrictionsBySegmentID[e]
                    }
                }, {
                    key: "_setRestrictions",
                    value: function(e, t) {
                        this._restrictionsBySegmentID[e] = t
                    }
                }, {
                    key: "getForwardRestrictions",
                    value: function() {
                        var e, t = this,
                            i = (e = []).concat.apply(e, (0,
                                r.default)(this._segmentIDs.map(function(e) {
                                return t._getForwardRestrictions(e)
                            })));
                        return g.dedupRestrictions(i)
                    }
                }, {
                    key: "getReverseRestrictions",
                    value: function() {
                        var e, t = this,
                            i = (e = []).concat.apply(e, (0,
                                r.default)(this._segmentIDs.map(function(e) {
                                return t._getReverseRestrictions(e)
                            })));
                        return g.dedupRestrictions(i)
                    }
                }, {
                    key: "getBidiRestrictions",
                    value: function() {
                        var e, t = this,
                            i = (e = []).concat.apply(e, (0,
                                r.default)(this._segmentIDs.map(function(e) {
                                return t._getBidiRestrictions(e)
                            })));
                        return g.dedupRestrictions(i)
                    }
                }, {
                    key: "_getForwardRestrictions",
                    value: function(e) {
                        var t = this;
                        return this.getRestrictions(e).map(function(i) {
                            return t._withCorrectDirection(e, i)
                        }).filter(function(e) {
                            return e.isForward()
                        })
                    }
                }, {
                    key: "_getReverseRestrictions",
                    value: function(e) {
                        var t = this;
                        return this.getRestrictions(e).map(function(i) {
                            return t._withCorrectDirection(e, i)
                        }).filter(function(e) {
                            return e.isReverse()
                        })
                    }
                }, {
                    key: "_getBidiRestrictions",
                    value: function(e) {
                        return this.getRestrictions(e).filter(function(e) {
                            return e.isBidi()
                        })
                    }
                }, {
                    key: "_isReversed",
                    value: function(e) {
                        return !0 === this._reversedSegmentsIDs[e]
                    }
                }, {
                    key: "_withCorrectDirection",
                    value: function(e, t) {
                        return this._isReversed(e) ? t.withReverseDirection() : t
                    }
                }]),
                e
        }();
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(6),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(1018),
        b = i(1019),
        w = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-segment"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        var e = {
                            drivingRegion: "#driving-restrictions"
                        };
                        return this.options.enablePickupRestrictions && (e.pickupRegion = "#pickup-restrictions"),
                            e
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            drivingTab: ".restriction-tabs a[href='#driving-restrictions']",
                            pickupTab: ".restriction-tabs a[href='#pickup-restrictions']"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".driving-controls": {
                                observe: "currentTab",
                                onGet: function(e) {
                                    return "driving" === e
                                },
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            enablePickupRestrictions: this.options.enablePickupRestrictions
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e,
                            i = t.drivingRestrictionsBuilder,
                            n = t.pickupRestrictionsBuilder;
                        e = _.omit(e, "drivingRestrictionsBuilder", "pickupRestrictionsBuilder"),
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._showRestrictionType = e.showRestrictionType,
                            this._drivingView = new y.SegmentRestrictionDrivingView((0,
                                o.default)({}, e, {
                                restrictionBuilder: i
                            })),
                            this._pickupView = (0,
                                b.createPickupView)((0,
                                o.default)({}, e, {
                                restrictionBuilder: n
                            })),
                            this.model = new Backbone.Model({
                                canEditRestrictions: this._canEditRestrictions,
                                editingMultipleSegments: i.hasMultipleSegments(),
                                currentTab: "driving"
                            }),
                            this._tollRoadModel = e.tollRoadModel
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "restriction:summary:create": "restriction:summary:create",
                            "restriction:item:edit": "restriction:item:edit",
                            "restriction:item:delete": "restriction:item:delete"
                        }
                    }
                }, {
                    key: "_showDrivingTab",
                    value: function() {
                        this.ui.drivingTab.tab("show")
                    }
                }, {
                    key: "_showPickupTab",
                    value: function() {
                        this.ui.pickupTab.tab("show")
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-close": "restriction:summary:close"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-apply": "_onApplyChanges",
                            "shown.bs.tab @ui.drivingTab": "_onDrivingTabShown",
                            "shown.bs.tab @ui.pickupTab": "_onPickupTabShown"
                        }
                    }
                }, {
                    key: "_onApplyChanges",
                    value: function() {
                        this.triggerMethod("restriction:summary:apply", {})
                    }
                }, {
                    key: "_onDrivingTabShown",
                    value: function() {
                        this.model.set({
                            currentTab: "driving"
                        })
                    }
                }, {
                    key: "_onPickupTabShown",
                    value: function() {
                        this.model.set({
                            currentTab: "pickup"
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("drivingRegion", this._drivingView),
                            this.options.enablePickupRestrictions && this.showChildView("pickupRegion", this._pickupView),
                            this.stickit(),
                            this.stickit(this._tollRoadModel, this.tollRoadBindings)
                    }
                }, {
                    key: "onChildviewRestrictionItemApplyToAll",
                    value: function(e) {
                        this.triggerMethod("restriction:item:applyToAll", e)
                    }
                }, {
                    key: "onAttach",
                    value: function() {
                        switch (this._showRestrictionType) {
                            case "driving":
                                this._showDrivingTab();
                                break;
                            case "pickup":
                                this._showPickupTab()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_summary_segments"
                    }
                }, {
                    key: "tollRoadBindings",
                    get: function() {
                        return {
                            ".toll-road-tooltip": {
                                observe: "hasTollRestriction",
                                visible: !0
                            },
                            "[name=tollRoad]": {
                                observe: "isTollRoad",
                                update: _.noop,
                                attributes: [{
                                    name: "disabled",
                                    observe: "hasTollRestriction"
                                }, {
                                    name: "mixed",
                                    observe: "isTollRoadMixed"
                                }, {
                                    name: "checked",
                                    observe: ["isTollRoad", "isTollRoadMixed"],
                                    onGet: function(e) {
                                        var t = (0,
                                                r.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return i && !n
                                    }
                                }]
                            }
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SegmentRestrictionDrivingView = void 0;
    var s = i(13),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(273),
        v = n(m),
        y = i(39),
        b = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-segment"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".do-create, .do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditRestrictions",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".forward-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasFwdAll",
                                visible: !0
                            },
                            ".forward-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasFwdSome",
                                visible: !0
                            },
                            ".reverse-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasRevAll",
                                visible: !0
                            },
                            ".reverse-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasRevSome",
                                visible: !0
                            },
                            ".bidi-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasBidiAll",
                                visible: !0
                            },
                            ".bidi-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasBidiSome",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            forwardAllListRegion: {
                                el: ".forward-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            forwardSomeListRegion: {
                                el: ".forward-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            },
                            reverseAllListRegion: {
                                el: ".reverse-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            reverseSomeListRegion: {
                                el: ".reverse-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            },
                            bidiAllListRegion: {
                                el: ".bidi-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            bidiSomeListRegion: {
                                el: ".bidi-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .forward-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(y.RESTRICTION_SEGMENT_DIRECTION.FWD)
                            },
                            "click .reverse-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(y.RESTRICTION_SEGMENT_DIRECTION.REV)
                            },
                            "click .bidi-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(y.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            viewHelpers: null,
                            restrictionBuilder: null,
                            canEditRestrictions: !1,
                            subscriptions: {},
                            tollRoadModel: null
                        };
                        this._viewHelpers = e.viewHelpers,
                            this._restrictionsBuilder = e.restrictionBuilder,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._subscriptions = e.subscriptions;
                        var t = _.partition(this._restrictionsBuilder.getForwardRestrictions(), this._appliesToAll.bind(this)),
                            i = (0,
                                r.default)(t, 2);
                        this._fwdAll = i[0],
                            this._fwdSome = i[1];
                        var n = _.partition(this._restrictionsBuilder.getReverseRestrictions(), this._appliesToAll.bind(this)),
                            s = (0,
                                r.default)(n, 2);
                        this._revAll = s[0],
                            this._revSome = s[1];
                        var a = _.partition(this._restrictionsBuilder.getBidiRestrictions(), this._appliesToAll.bind(this)),
                            o = (0,
                                r.default)(a, 2);
                        this._bidiAll = o[0],
                            this._bidiSome = o[1],
                            this.model = new Backbone.Model({
                                canEditRestrictions: this._canEditRestrictions,
                                hasFwdAll: this._fwdAll.length > 0,
                                hasFwdSome: this._fwdSome.length > 0,
                                hasRevAll: this._revAll.length > 0,
                                hasRevSome: this._revSome.length > 0,
                                hasBidiAll: this._bidiAll.length > 0,
                                hasBidiSome: this._bidiSome.length > 0
                            })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            forwardTitle: this._viewHelpers.getDrivingRestrictedTitle(y.RESTRICTION_SEGMENT_DIRECTION.FWD),
                            reverseTitle: this._viewHelpers.getDrivingRestrictedTitle(y.RESTRICTION_SEGMENT_DIRECTION.REV),
                            bidiTitle: this._viewHelpers.getDrivingRestrictedTitle(y.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.$(".waze-tooltip").tooltip(),
                            this.showChildView("forwardAllListRegion", this._createListView(this._fwdAll)),
                            this.showChildView("forwardSomeListRegion", this._createListView(this._fwdSome, !0)),
                            this.showChildView("reverseAllListRegion", this._createListView(this._revAll)),
                            this.showChildView("reverseSomeListRegion", this._createListView(this._revSome, !0)),
                            this.showChildView("bidiAllListRegion", this._createListView(this._bidiAll)),
                            this.showChildView("bidiSomeListRegion", this._createListView(this._bidiSome, !0))
                    }
                }, {
                    key: "_createListView",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        return new v.default({
                            restrictions: e,
                            canApplyToAll: t,
                            subscriptions: this._subscriptions,
                            canEditRestrictions: this._canEditRestrictions
                        })
                    }
                }, {
                    key: "_onCreateRestriction",
                    value: function(e) {
                        this.triggerMethod("restriction:summary:create", {
                            direction: e
                        })
                    }
                }, {
                    key: "onChildviewItemEdit",
                    value: function(e) {
                        this.triggerMethod("restriction:item:edit", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.triggerMethod("restriction:item:delete", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemApplyToAll",
                    value: function(e) {
                        this.triggerMethod("restriction:item:applyToAll", e.getRestriction())
                    }
                }, {
                    key: "_appliesToAll",
                    value: function(e) {
                        return this._restrictionsBuilder.appliesToAllSegments(e)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_driving_segments"
                    }
                }]),
                t
        }(Marionette.View);
    t.SegmentRestrictionDrivingView = b
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function s(e, t) {
        if (0 === t.length)
            return w.UNKNOWN;
        if (t.every(function(t) {
                return e.appliesToAllSegments(t)
            })) {
            if (t.every(function(e) {
                    return e.isAllowed()
                }))
                return w.ALLOWED;
            if (t.every(function(e) {
                    return e.isNotAllowed()
                }))
                return w.NOT_ALLOWED
        }
        return w.MULTIPLE
    }

    function r(e) {
        var t = s(e.restrictionBuilder, e.restrictionBuilder.getForwardRestrictions()),
            i = s(e.restrictionBuilder, e.restrictionBuilder.getReverseRestrictions());
        return new E((0,
            o.default)({
            model: new Backbone.Model({
                forwardConstraint: t,
                reverseConstraint: i
            })
        }, e))
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.createPickupView = void 0;
    var a = i(6),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(163),
        y = n(_),
        b = i(39),
        w = {
            MULTIPLE: 0,
            UNKNOWN: 1,
            ALLOWED: 2,
            NOT_ALLOWED: 3
        },
        E = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            viewHelpers: null,
                            restrictionBuilder: null
                        };
                        this._restrictionsBuilder = e.restrictionBuilder,
                            this._viewHelpers = e.viewHelpers,
                            this._forwardPickupConstraints = this._getPickupConstraints(this.model.get("forwardConstraint") !== w.MULTIPLE),
                            this._reversePickupConstraints = this._getPickupConstraints(this.model.get("reverseConstraint") !== w.MULTIPLE)
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".constraint-select-fwd": {
                                observe: "forwardConstraint",
                                selectOptions: {
                                    collection: this._forwardPickupConstraints
                                }
                            },
                            ".constraint-select-rev": {
                                observe: "reverseConstraint",
                                selectOptions: {
                                    collection: this._reversePickupConstraints
                                }
                            }
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            forwardTitle: this._viewHelpers.getPickupTitle(b.RESTRICTION_SEGMENT_DIRECTION.FWD),
                            reverseTitle: this._viewHelpers.getPickupTitle(b.RESTRICTION_SEGMENT_DIRECTION.REV)
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:forwardConstraint": "_onFwdConstraintChange",
                            "change:reverseConstraint": "_onRevConstraintChange"
                        }
                    }
                }, {
                    key: "_pickupRestrictionForConstraint",
                    value: function(e, t) {
                        return t === w.UNKNOWN ? null : new y.default({
                            direction: e,
                            defaultType: {
                                allowed: t === w.ALLOWED
                            }
                        })
                    }
                }, {
                    key: "_onFwdConstraintChange",
                    value: function(e, t) {
                        this._onConstraintChange("forwardConstraint", b.RESTRICTION_SEGMENT_DIRECTION.FWD, e, t)
                    }
                }, {
                    key: "_onRevConstraintChange",
                    value: function(e, t) {
                        this._onConstraintChange("reverseConstraint", b.RESTRICTION_SEGMENT_DIRECTION.REV, e, t)
                    }
                }, {
                    key: "_onConstraintChange",
                    value: function(e, t, i, n) {
                        t === b.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._restrictionsBuilder.deleteRestrictionsIf(function(e) {
                            return e.isForward()
                        }) : t === b.RESTRICTION_SEGMENT_DIRECTION.REV && this._restrictionsBuilder.deleteRestrictionsIf(function(e) {
                            return e.isReverse()
                        });
                        var s = this._pickupRestrictionForConstraint(t, n);
                        s && this._restrictionsBuilder.addRestriction(s)
                    }
                }, {
                    key: "_getPickupConstraints",
                    value: function(e) {
                        var t = [{
                            value: w.UNKNOWN,
                            label: I18n.t("restrictions.editing.pickup.unknown")
                        }, {
                            value: w.ALLOWED,
                            label: I18n.t("restrictions.editing.pickup.allowed")
                        }, {
                            value: w.NOT_ALLOWED,
                            label: I18n.t("restrictions.editing.pickup.not_allowed")
                        }];
                        return e || t.push({
                                value: w.MULTIPLE,
                                label: I18n.t("restrictions.editing.pickup.multiple"),
                                disabled: !0
                            }),
                            t
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_pickup"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = E,
        t.createPickupView = r
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(53),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "generateDescription",
                    value: function() {
                        if (1 === this.subActions.length) {
                            var e = this.subActions[0];
                            e.generateDescription(),
                                this._description = e.getDescription()
                        } else
                            this._description = I18n.t("save.changes_log.actions.UpdateSegmentsRestrictions.multi_segments", {
                                count: this.subActions.length
                            })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(1022),
        g = n(p),
        m = i(164),
        v = n(m),
        _ = function(e) {
            function t(e) {
                var i = e.dataModel,
                    n = e.segmentId;
                (0,
                    o.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments));
                return s._segmentId = n,
                    s._dataModel = i,
                    s
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            fwdLanesRegion: ".fwd-lanes",
                            revLanesRegion: ".rev-lanes"
                        }
                    }
                }, {
                    key: "_createDirectionView",
                    value: function(e, t) {
                        return new g.default({
                            dataModel: this._dataModel,
                            segmentLanes: v.default.forSegment(this._dataModel, e, t)
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this._dataModel.segments.get(this._segmentId);
                        e.attributes.fwdDirection && this.showChildView("fwdLanesRegion", this._createDirectionView(e, m.SEGMENT_LANE_DIRECTION.FWD)),
                            e.attributes.revDirection && this.showChildView("revLanesRegion", this._createDirectionView(e, m.SEGMENT_LANE_DIRECTION.REV))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Lanes/templates/segment_lanes"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(1023),
        g = n(p),
        m = i(164),
        v = function(e) {
            function t(e) {
                var i = (e.dataModel,
                    e.segmentLanes);
                (0,
                    o.default)(this, t);
                var n = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments));
                return n.model = n._createViewModel(i),
                    n
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            arrowRegion: ".lane-arrows"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".lane-instruction-from .instruction .heading": {
                                observe: "heading",
                                onGet: function(e) {
                                    return I18n.t("lanes.instruction", {
                                        heading: I18n.t("segment.heading")[e]
                                    })
                                }
                            },
                            ".lane-instruction-from .instruction .street-name": {
                                observe: "streetName"
                            },
                            ".edit-lane-guidance": {
                                observe: "laneCount",
                                onGet: function(e) {
                                    return e > 0 ? I18n.t("lanes.edit_lanes") : I18n.t("lanes.add_lanes")
                                }
                            },
                            ".lane-arrows": {
                                visible: !0,
                                observe: "laneCount",
                                onGet: function(e) {
                                    return e > 0
                                }
                            },
                            ".lane-instruction-from .letter-circle": {
                                observe: "direction",
                                onGet: function(e) {
                                    return e === m.SEGMENT_LANE_DIRECTION.FWD ? "A" : "B"
                                }
                            },
                            ".lane-instruction-to .letter-circle": {
                                observe: "direction",
                                onGet: function(e) {
                                    return e === m.SEGMENT_LANE_DIRECTION.FWD ? "B" : "A"
                                }
                            }
                        }
                    }
                }, {
                    key: "_createViewModel",
                    value: function(e) {
                        var t = e.getSegment(),
                            i = e.getDirection(),
                            n = e.getLanes(),
                            s = new Backbone.Collection(n.map(function(e) {
                                return new Backbone.Model({
                                    angles: e.getAngles()
                                })
                            }));
                        return new Backbone.Model({
                            direction: i,
                            heading: i === m.SEGMENT_LANE_DIRECTION.FWD ? t.getFwdHeading() : t.getRevHeading(),
                            streetName: t.getAddress().getStreetName(),
                            laneCount: e.getLaneCount(),
                            lanes: s
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("arrowRegion", new Marionette.CollectionView({
                                childView: g.default,
                                collection: this.model.attributes.lanes
                            }))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Lanes/templates/direction_lanes"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(1024),
        g = n(p),
        m = function(e) {
            function t() {
                (0,
                    o.default)(this, t);
                var e = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments));
                return e.ARROW_POINTS = {
                        0: e._straightArrow.bind(e),
                        45: e._slightRightArrow.bind(e),
                        90: e._rightArrow.bind(e),
                        135: e._hardRightArrow.bind(e),
                        315: e._slightLeftArrow.bind(e),
                        270: e._leftArrow.bind(e),
                        225: e._hardLeftArrow.bind(e)
                    },
                    e
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "className",
                    value: function() {
                        return "lane-arrow"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return !1
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "onRender",
                    value: function() {
                        var e = (0,
                                g.default)(this.el).size(26, 34),
                            t = this.model.attributes.angles;
                        this._drawArrows(e, t),
                            this._alignArrows(e, t)
                    }
                }, {
                    key: "_drawArrows",
                    value: function(e, t) {
                        var i = this;
                        t.forEach(function(n) {
                            var s = i.ARROW_POINTS[n](t),
                                r = s.finalPoint,
                                a = s.bendingPoint,
                                o = i._drawArrowLine(e, a, r);
                            i._drawArrowTip(o)
                        })
                    }
                }, {
                    key: "_drawArrowLine",
                    value: function(e, t, i) {
                        return e.polyline(_.compact([
                            [13, 28], t, i
                        ])).stroke({
                            width: 3,
                            color: "#fff",
                            linecap: "round",
                            linejoin: "round",
                            fill: "transparent"
                        }).fill("none")
                    }
                }, {
                    key: "_drawArrowTip",
                    value: function(e) {
                        e.marker("end", 2, 2, function(e) {
                            e.polygon("0,0 0,2 2,1").fill("#fff").stroke({
                                linejoin: "round"
                            })
                        })
                    }
                }, {
                    key: "_alignArrows",
                    value: function(e, t) {
                        var i = 0;
                        t.some(function(e) {
                                return 0 !== e
                            }) && (t.every(function(e) {
                                return e < 180
                            }) ? i = -4 : t.every(function(e) {
                                return e > 180 || 0 === e
                            }) && (i = 4)),
                            e.translate(i, 0)
                    }
                }, {
                    key: "_straightArrow",
                    value: function() {
                        return {
                            finalPoint: [13, 9],
                            bendingPoint: null
                        }
                    }
                }, {
                    key: "_slightRightArrow",
                    value: function(e) {
                        return {
                            finalPoint: e.includes(0) ? [20, 11] : [21, 9],
                            bendingPoint: [13, 18]
                        }
                    }
                }, {
                    key: "_rightArrow",
                    value: function() {
                        return {
                            finalPoint: [21, 17],
                            bendingPoint: [13, 17]
                        }
                    }
                }, {
                    key: "_hardRightArrow",
                    value: function() {
                        return {
                            finalPoint: [21, 24],
                            bendingPoint: [13, 17]
                        }
                    }
                }, {
                    key: "_slightLeftArrow",
                    value: function(e) {
                        return {
                            finalPoint: e.includes(0) ? [6, 11] : [5, 9],
                            bendingPoint: [13, 18]
                        }
                    }
                }, {
                    key: "_leftArrow",
                    value: function() {
                        return {
                            finalPoint: [5, 17],
                            bendingPoint: [13, 17]
                        }
                    }
                }, {
                    key: "_hardLeftArrow",
                    value: function() {
                        return {
                            finalPoint: [5, 24],
                            bendingPoint: [13, 17]
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    var n;
    ! function(s, r) {
        void 0 !== (n = function() {
                return r(s, s.document)
            }
            .call(t, i, t, e)) && (e.exports = n)
    }("undefined" != typeof window ? window : this, function(e, t) {
        function i(e, t, i, n) {
            return i + n.replace(b.regex.dots, " .")
        }

        function n(e) {
            for (var t = e.slice(0), i = t.length; i--;)
                Array.isArray(t[i]) && (t[i] = n(t[i]));
            return t
        }

        function s(e, t) {
            return e instanceof t
        }

        function r(e, t) {
            return (e.matches || e.matchesSelector || e.msMatchesSelector || e.mozMatchesSelector || e.webkitMatchesSelector || e.oMatchesSelector).call(e, t)
        }

        function a(e) {
            return e.toLowerCase().replace(/-(.)/g, function(e, t) {
                return t.toUpperCase()
            })
        }

        function o(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        }

        function l(e) {
            return 4 == e.length ? ["#", e.substring(1, 2), e.substring(1, 2), e.substring(2, 3), e.substring(2, 3), e.substring(3, 4), e.substring(3, 4)].join("") : e
        }

        function u(e) {
            var t = e.toString(16);
            return 1 == t.length ? "0" + t : t
        }

        function d(e, t, i) {
            if (null == t || null == i) {
                var n = e.bbox();
                null == t ? t = n.width / n.height * i : null == i && (i = n.height / n.width * t)
            }
            return {
                width: t,
                height: i
            }
        }

        function c(e, t, i) {
            return {
                x: t * e.a + i * e.c + 0,
                y: t * e.b + i * e.d + 0
            }
        }

        function h(e) {
            return {
                a: e[0],
                b: e[1],
                c: e[2],
                d: e[3],
                e: e[4],
                f: e[5]
            }
        }

        function f(e) {
            return e instanceof b.Matrix || (e = new b.Matrix(e)),
                e
        }

        function p(e, t) {
            e.cx = null == e.cx ? t.bbox().cx : e.cx,
                e.cy = null == e.cy ? t.bbox().cy : e.cy
        }

        function g(e) {
            for (var t = 0, i = e.length, n = ""; t < i; t++)
                n += e[t][0],
                null != e[t][1] && (n += e[t][1],
                    null != e[t][2] && (n += " ",
                        n += e[t][2],
                        null != e[t][3] && (n += " ",
                            n += e[t][3],
                            n += " ",
                            n += e[t][4],
                            null != e[t][5] && (n += " ",
                                n += e[t][5],
                                n += " ",
                                n += e[t][6],
                                null != e[t][7] && (n += " ",
                                    n += e[t][7])))));
            return n + " "
        }

        function m(t) {
            for (var i = t.childNodes.length - 1; i >= 0; i--)
                t.childNodes[i] instanceof e.SVGElement && m(t.childNodes[i]);
            return b.adopt(t).id(b.eid(t.nodeName))
        }

        function v(e) {
            return null == e.x && (e.x = 0,
                    e.y = 0,
                    e.width = 0,
                    e.height = 0),
                e.w = e.width,
                e.h = e.height,
                e.x2 = e.x + e.width,
                e.y2 = e.y + e.height,
                e.cx = e.x + e.width / 2,
                e.cy = e.y + e.height / 2,
                e
        }

        function _(e) {
            var t = (e || "").toString().match(b.regex.reference);
            if (t)
                return t[1]
        }

        function y(e) {
            return Math.abs(e) > 1e-37 ? e : 0
        }
        var b = this.SVG = function(e) {
            if (b.supported)
                return e = new b.Doc(e),
                    b.parser.draw || b.prepare(),
                    e
        };
        if (b.ns = "http://www.w3.org/2000/svg",
            b.xmlns = "http://www.w3.org/2000/xmlns/",
            b.xlink = "http://www.w3.org/1999/xlink",
            b.svgjs = "http://svgjs.com/svgjs",
            b.supported = function() {
                return !!t.createElementNS && !!t.createElementNS(b.ns, "svg").createSVGRect
            }(), !b.supported)
            return !1;
        b.did = 1e3,
            b.eid = function(e) {
                return "Svgjs" + o(e) + b.did++
            },
            b.create = function(e) {
                var i = t.createElementNS(this.ns, e);
                return i.setAttribute("id", this.eid(e)),
                    i
            },
            b.extend = function() {
                var e, t, i, n;
                for (e = [].slice.call(arguments),
                    t = e.pop(),
                    n = e.length - 1; n >= 0; n--)
                    if (e[n])
                        for (i in t)
                            e[n].prototype[i] = t[i];
                b.Set && b.Set.inherit && b.Set.inherit()
            },
            b.invent = function(e) {
                var t = "function" == typeof e.create ? e.create : function() {
                    this.constructor.call(this, b.create(e.create))
                };
                return e.inherit && (t.prototype = new e.inherit),
                    e.extend && b.extend(t, e.extend),
                    e.construct && b.extend(e.parent || b.Container, e.construct),
                    t
            },
            b.adopt = function(t) {
                if (!t)
                    return null;
                if (t.instance)
                    return t.instance;
                var i;
                return i = "svg" == t.nodeName ? t.parentNode instanceof e.SVGElement ? new b.Nested : new b.Doc : "linearGradient" == t.nodeName ? new b.Gradient("linear") : "radialGradient" == t.nodeName ? new b.Gradient("radial") : b[o(t.nodeName)] ? new(b[o(t.nodeName)]) : new b.Element(t),
                    i.type = t.nodeName,
                    i.node = t,
                    t.instance = i,
                    i instanceof b.Doc && i.namespace().defs(),
                    i.setData(JSON.parse(t.getAttribute("svgjs:data")) || {}),
                    i
            },
            b.prepare = function() {
                var e = t.getElementsByTagName("body")[0],
                    i = (e ? new b.Doc(e) : b.adopt(t.documentElement).nested()).size(2, 0);
                b.parser = {
                    body: e || t.documentElement,
                    draw: i.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                    poly: i.polyline().node,
                    path: i.path().node,
                    native: b.create("svg")
                }
            },
            b.parser = {
                native: b.create("svg")
            },
            t.addEventListener("DOMContentLoaded", function() {
                b.parser.draw || b.prepare()
            }, !1),
            b.regex = {
                numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                reference: /#([a-z0-9\-_]+)/i,
                transforms: /\)\s*,?\s*/,
                whitespace: /\s/g,
                isHex: /^#[a-f0-9]{3,6}$/i,
                isRgb: /^rgb\(/,
                isCss: /[^:]+:[^;]+;?/,
                isBlank: /^(\s+)?$/,
                isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                isPercent: /^-?[\d\.]+%$/,
                isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                delimiter: /[\s,]+/,
                hyphen: /([^e])\-/gi,
                pathLetters: /[MLHVCSQTAZ]/gi,
                isPathLetter: /[MLHVCSQTAZ]/i,
                numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                dots: /\./g
            },
            b.utils = {
                map: function(e, t) {
                    var i, n = e.length,
                        s = [];
                    for (i = 0; i < n; i++)
                        s.push(t(e[i]));
                    return s
                },
                filter: function(e, t) {
                    var i, n = e.length,
                        s = [];
                    for (i = 0; i < n; i++)
                        t(e[i]) && s.push(e[i]);
                    return s
                },
                radians: function(e) {
                    return e % 360 * Math.PI / 180
                },
                degrees: function(e) {
                    return 180 * e / Math.PI % 360
                },
                filterSVGElements: function(t) {
                    return this.filter(t, function(t) {
                        return t instanceof e.SVGElement
                    })
                }
            },
            b.defaults = {
                attrs: {
                    "fill-opacity": 1,
                    "stroke-opacity": 1,
                    "stroke-width": 0,
                    "stroke-linejoin": "miter",
                    "stroke-linecap": "butt",
                    fill: "#000000",
                    stroke: "#000000",
                    opacity: 1,
                    x: 0,
                    y: 0,
                    cx: 0,
                    cy: 0,
                    width: 0,
                    height: 0,
                    r: 0,
                    rx: 0,
                    ry: 0,
                    offset: 0,
                    "stop-opacity": 1,
                    "stop-color": "#000000",
                    "font-size": 16,
                    "font-family": "Helvetica, Arial, sans-serif",
                    "text-anchor": "start"
                }
            },
            b.Color = function(e) {
                var t;
                this.r = 0,
                    this.g = 0,
                    this.b = 0,
                    e && ("string" == typeof e ? b.regex.isRgb.test(e) ? (t = b.regex.rgb.exec(e.replace(b.regex.whitespace, "")),
                        this.r = parseInt(t[1]),
                        this.g = parseInt(t[2]),
                        this.b = parseInt(t[3])) : b.regex.isHex.test(e) && (t = b.regex.hex.exec(l(e)),
                        this.r = parseInt(t[1], 16),
                        this.g = parseInt(t[2], 16),
                        this.b = parseInt(t[3], 16)) : "object" == typeof e && (this.r = e.r,
                        this.g = e.g,
                        this.b = e.b))
            },
            b.extend(b.Color, {
                toString: function() {
                    return this.toHex()
                },
                toHex: function() {
                    return "#" + u(this.r) + u(this.g) + u(this.b)
                },
                toRgb: function() {
                    return "rgb(" + [this.r, this.g, this.b].join() + ")"
                },
                brightness: function() {
                    return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
                },
                morph: function(e) {
                    return this.destination = new b.Color(e),
                        this
                },
                at: function(e) {
                    return this.destination ? (e = e < 0 ? 0 : e > 1 ? 1 : e,
                        new b.Color({
                            r: ~~(this.r + (this.destination.r - this.r) * e),
                            g: ~~(this.g + (this.destination.g - this.g) * e),
                            b: ~~(this.b + (this.destination.b - this.b) * e)
                        })) : this
                }
            }),
            b.Color.test = function(e) {
                return e += "",
                    b.regex.isHex.test(e) || b.regex.isRgb.test(e)
            },
            b.Color.isRgb = function(e) {
                return e && "number" == typeof e.r && "number" == typeof e.g && "number" == typeof e.b
            },
            b.Color.isColor = function(e) {
                return b.Color.isRgb(e) || b.Color.test(e)
            },
            b.Array = function(e, t) {
                e = (e || []).valueOf(),
                    0 == e.length && t && (e = t.valueOf()),
                    this.value = this.parse(e)
            },
            b.extend(b.Array, {
                morph: function(e) {
                    if (this.destination = this.parse(e),
                        this.value.length != this.destination.length) {
                        for (var t = this.value[this.value.length - 1], i = this.destination[this.destination.length - 1]; this.value.length > this.destination.length;)
                            this.destination.push(i);
                        for (; this.value.length < this.destination.length;)
                            this.value.push(t)
                    }
                    return this
                },
                settle: function() {
                    for (var e = 0, t = this.value.length, i = []; e < t; e++)
                        -
                        1 == i.indexOf(this.value[e]) && i.push(this.value[e]);
                    return this.value = i
                },
                at: function(e) {
                    if (!this.destination)
                        return this;
                    for (var t = 0, i = this.value.length, n = []; t < i; t++)
                        n.push(this.value[t] + (this.destination[t] - this.value[t]) * e);
                    return new b.Array(n)
                },
                toString: function() {
                    return this.value.join(" ")
                },
                valueOf: function() {
                    return this.value
                },
                parse: function(e) {
                    return e = e.valueOf(),
                        Array.isArray(e) ? e : this.split(e)
                },
                split: function(e) {
                    return e.trim().split(b.regex.delimiter).map(parseFloat)
                },
                reverse: function() {
                    return this.value.reverse(),
                        this
                },
                clone: function() {
                    var e = new this.constructor;
                    return e.value = n(this.value),
                        e
                }
            }),
            b.PointArray = function(e, t) {
                b.Array.call(this, e, t || [
                    [0, 0]
                ])
            },
            b.PointArray.prototype = new b.Array,
            b.PointArray.prototype.constructor = b.PointArray,
            b.extend(b.PointArray, {
                toString: function() {
                    for (var e = 0, t = this.value.length, i = []; e < t; e++)
                        i.push(this.value[e].join(","));
                    return i.join(" ")
                },
                toLine: function() {
                    return {
                        x1: this.value[0][0],
                        y1: this.value[0][1],
                        x2: this.value[1][0],
                        y2: this.value[1][1]
                    }
                },
                at: function(e) {
                    if (!this.destination)
                        return this;
                    for (var t = 0, i = this.value.length, n = []; t < i; t++)
                        n.push([this.value[t][0] + (this.destination[t][0] - this.value[t][0]) * e, this.value[t][1] + (this.destination[t][1] - this.value[t][1]) * e]);
                    return new b.PointArray(n)
                },
                parse: function(e) {
                    var t = [];
                    if (e = e.valueOf(),
                        Array.isArray(e)) {
                        if (Array.isArray(e[0]))
                            return e.map(function(e) {
                                return e.slice()
                            });
                        if (null != e[0].x)
                            return e.map(function(e) {
                                return [e.x, e.y]
                            })
                    } else
                        e = e.trim().split(b.regex.delimiter).map(parseFloat);
                    e.length % 2 != 0 && e.pop();
                    for (var i = 0, n = e.length; i < n; i += 2)
                        t.push([e[i], e[i + 1]]);
                    return t
                },
                move: function(e, t) {
                    var i = this.bbox();
                    if (e -= i.x,
                        t -= i.y, !isNaN(e) && !isNaN(t))
                        for (var n = this.value.length - 1; n >= 0; n--)
                            this.value[n] = [this.value[n][0] + e, this.value[n][1] + t];
                    return this
                },
                size: function(e, t) {
                    var i, n = this.bbox();
                    for (i = this.value.length - 1; i >= 0; i--)
                        n.width && (this.value[i][0] = (this.value[i][0] - n.x) * e / n.width + n.x),
                        n.height && (this.value[i][1] = (this.value[i][1] - n.y) * t / n.height + n.y);
                    return this
                },
                bbox: function() {
                    return b.parser.poly.setAttribute("points", this.toString()),
                        b.parser.poly.getBBox()
                }
            });
        for (var w = {
                M: function(e, t, i) {
                    return t.x = i.x = e[0],
                        t.y = i.y = e[1], ["M", t.x, t.y]
                },
                L: function(e, t) {
                    return t.x = e[0],
                        t.y = e[1], ["L", e[0], e[1]]
                },
                H: function(e, t) {
                    return t.x = e[0], ["H", e[0]]
                },
                V: function(e, t) {
                    return t.y = e[0], ["V", e[0]]
                },
                C: function(e, t) {
                    return t.x = e[4],
                        t.y = e[5], ["C", e[0], e[1], e[2], e[3], e[4], e[5]]
                },
                S: function(e, t) {
                    return t.x = e[2],
                        t.y = e[3], ["S", e[0], e[1], e[2], e[3]]
                },
                Q: function(e, t) {
                    return t.x = e[2],
                        t.y = e[3], ["Q", e[0], e[1], e[2], e[3]]
                },
                T: function(e, t) {
                    return t.x = e[0],
                        t.y = e[1], ["T", e[0], e[1]]
                },
                Z: function(e, t, i) {
                    return t.x = i.x,
                        t.y = i.y, ["Z"]
                },
                A: function(e, t) {
                    return t.x = e[5],
                        t.y = e[6], ["A", e[0], e[1], e[2], e[3], e[4], e[5], e[6]]
                }
            }, E = "mlhvqtcsaz".split(""), k = 0, M = E.length; k < M; ++k)
            w[E[k]] = function(e) {
                return function(t, i, n) {
                    if ("H" == e)
                        t[0] = t[0] + i.x;
                    else if ("V" == e)
                        t[0] = t[0] + i.y;
                    else if ("A" == e)
                        t[5] = t[5] + i.x,
                        t[6] = t[6] + i.y;
                    else
                        for (var s = 0, r = t.length; s < r; ++s)
                            t[s] = t[s] + (s % 2 ? i.y : i.x);
                    return w[e](t, i, n)
                }
            }(E[k].toUpperCase());
        b.PathArray = function(e, t) {
                b.Array.call(this, e, t || [
                    ["M", 0, 0]
                ])
            },
            b.PathArray.prototype = new b.Array,
            b.PathArray.prototype.constructor = b.PathArray,
            b.extend(b.PathArray, {
                toString: function() {
                    return g(this.value)
                },
                move: function(e, t) {
                    var i = this.bbox();
                    if (e -= i.x,
                        t -= i.y, !isNaN(e) && !isNaN(t))
                        for (var n, s = this.value.length - 1; s >= 0; s--)
                            n = this.value[s][0],
                            "M" == n || "L" == n || "T" == n ? (this.value[s][1] += e,
                                this.value[s][2] += t) : "H" == n ? this.value[s][1] += e : "V" == n ? this.value[s][1] += t : "C" == n || "S" == n || "Q" == n ? (this.value[s][1] += e,
                                this.value[s][2] += t,
                                this.value[s][3] += e,
                                this.value[s][4] += t,
                                "C" == n && (this.value[s][5] += e,
                                    this.value[s][6] += t)) : "A" == n && (this.value[s][6] += e,
                                this.value[s][7] += t);
                    return this
                },
                size: function(e, t) {
                    var i, n, s = this.bbox();
                    for (i = this.value.length - 1; i >= 0; i--)
                        n = this.value[i][0],
                        "M" == n || "L" == n || "T" == n ? (this.value[i][1] = (this.value[i][1] - s.x) * e / s.width + s.x,
                            this.value[i][2] = (this.value[i][2] - s.y) * t / s.height + s.y) : "H" == n ? this.value[i][1] = (this.value[i][1] - s.x) * e / s.width + s.x : "V" == n ? this.value[i][1] = (this.value[i][1] - s.y) * t / s.height + s.y : "C" == n || "S" == n || "Q" == n ? (this.value[i][1] = (this.value[i][1] - s.x) * e / s.width + s.x,
                            this.value[i][2] = (this.value[i][2] - s.y) * t / s.height + s.y,
                            this.value[i][3] = (this.value[i][3] - s.x) * e / s.width + s.x,
                            this.value[i][4] = (this.value[i][4] - s.y) * t / s.height + s.y,
                            "C" == n && (this.value[i][5] = (this.value[i][5] - s.x) * e / s.width + s.x,
                                this.value[i][6] = (this.value[i][6] - s.y) * t / s.height + s.y)) : "A" == n && (this.value[i][1] = this.value[i][1] * e / s.width,
                            this.value[i][2] = this.value[i][2] * t / s.height,
                            this.value[i][6] = (this.value[i][6] - s.x) * e / s.width + s.x,
                            this.value[i][7] = (this.value[i][7] - s.y) * t / s.height + s.y);
                    return this
                },
                equalCommands: function(e) {
                    var t, i, n;
                    for (e = new b.PathArray(e),
                        n = this.value.length === e.value.length,
                        t = 0,
                        i = this.value.length; n && t < i; t++)
                        n = this.value[t][0] === e.value[t][0];
                    return n
                },
                morph: function(e) {
                    return e = new b.PathArray(e),
                        this.equalCommands(e) ? this.destination = e : this.destination = null,
                        this
                },
                at: function(e) {
                    if (!this.destination)
                        return this;
                    var t, i, n, s, r = this.value,
                        a = this.destination.value,
                        o = [],
                        l = new b.PathArray;
                    for (t = 0,
                        i = r.length; t < i; t++) {
                        for (o[t] = [r[t][0]],
                            n = 1,
                            s = r[t].length; n < s; n++)
                            o[t][n] = r[t][n] + (a[t][n] - r[t][n]) * e;
                        "A" === o[t][0] && (o[t][4] = +(0 != o[t][4]),
                            o[t][5] = +(0 != o[t][5]))
                    }
                    return l.value = o,
                        l
                },
                parse: function(e) {
                    if (e instanceof b.PathArray)
                        return e.valueOf();
                    var t, n, s = {
                        M: 2,
                        L: 2,
                        H: 1,
                        V: 1,
                        C: 6,
                        S: 4,
                        Q: 4,
                        T: 2,
                        A: 7,
                        Z: 0
                    };
                    e = "string" == typeof e ? e.replace(b.regex.numbersWithDots, i).replace(b.regex.pathLetters, " $& ").replace(b.regex.hyphen, "$1 -").trim().split(b.regex.delimiter) : e.reduce(function(e, t) {
                        return [].concat.call(e, t)
                    }, []);
                    var n = [],
                        r = new b.Point,
                        a = new b.Point,
                        o = 0,
                        l = e.length;
                    do {
                        b.regex.isPathLetter.test(e[o]) ? (t = e[o],
                                ++o) : "M" == t ? t = "L" : "m" == t && (t = "l"),
                            n.push(w[t].call(null, e.slice(o, o += s[t.toUpperCase()]).map(parseFloat), r, a))
                    } while (l > o);
                    return n
                },
                bbox: function() {
                    return b.parser.path.setAttribute("d", this.toString()),
                        b.parser.path.getBBox()
                }
            }),
            b.Number = b.invent({
                create: function(e, t) {
                    this.value = 0,
                        this.unit = t || "",
                        "number" == typeof e ? this.value = isNaN(e) ? 0 : isFinite(e) ? e : e < 0 ? -3.4e38 : 3.4e38 : "string" == typeof e ? (t = e.match(b.regex.numberAndUnit)) && (this.value = parseFloat(t[1]),
                            "%" == t[5] ? this.value /= 100 : "s" == t[5] && (this.value *= 1e3),
                            this.unit = t[5]) : e instanceof b.Number && (this.value = e.valueOf(),
                            this.unit = e.unit)
                },
                extend: {
                    toString: function() {
                        return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
                    },
                    toJSON: function() {
                        return this.toString()
                    },
                    valueOf: function() {
                        return this.value
                    },
                    plus: function(e) {
                        return e = new b.Number(e),
                            new b.Number(this + e, this.unit || e.unit)
                    },
                    minus: function(e) {
                        return e = new b.Number(e),
                            new b.Number(this - e, this.unit || e.unit)
                    },
                    times: function(e) {
                        return e = new b.Number(e),
                            new b.Number(this * e, this.unit || e.unit)
                    },
                    divide: function(e) {
                        return e = new b.Number(e),
                            new b.Number(this / e, this.unit || e.unit)
                    },
                    to: function(e) {
                        var t = new b.Number(this);
                        return "string" == typeof e && (t.unit = e),
                            t
                    },
                    morph: function(e) {
                        return this.destination = new b.Number(e),
                            e.relative && (this.destination.value += this.value),
                            this
                    },
                    at: function(e) {
                        return this.destination ? new b.Number(this.destination).minus(this).times(e).plus(this) : this
                    }
                }
            }),
            b.Element = b.invent({
                create: function(e) {
                    this._stroke = b.defaults.attrs.stroke,
                        this._event = null,
                        this.dom = {},
                        (this.node = e) && (this.type = e.nodeName,
                            this.node.instance = this,
                            this._stroke = e.getAttribute("stroke") || this._stroke)
                },
                extend: {
                    x: function(e) {
                        return this.attr("x", e)
                    },
                    y: function(e) {
                        return this.attr("y", e)
                    },
                    cx: function(e) {
                        return null == e ? this.x() + this.width() / 2 : this.x(e - this.width() / 2)
                    },
                    cy: function(e) {
                        return null == e ? this.y() + this.height() / 2 : this.y(e - this.height() / 2)
                    },
                    move: function(e, t) {
                        return this.x(e).y(t)
                    },
                    center: function(e, t) {
                        return this.cx(e).cy(t)
                    },
                    width: function(e) {
                        return this.attr("width", e)
                    },
                    height: function(e) {
                        return this.attr("height", e)
                    },
                    size: function(e, t) {
                        var i = d(this, e, t);
                        return this.width(new b.Number(i.width)).height(new b.Number(i.height))
                    },
                    clone: function(e) {
                        this.writeDataToDom();
                        var t = m(this.node.cloneNode(!0));
                        return e ? e.add(t) : this.after(t),
                            t
                    },
                    remove: function() {
                        return this.parent() && this.parent().removeElement(this),
                            this
                    },
                    replace: function(e) {
                        return this.after(e).remove(),
                            e
                    },
                    addTo: function(e) {
                        return e.put(this)
                    },
                    putIn: function(e) {
                        return e.add(this)
                    },
                    id: function(e) {
                        return this.attr("id", e)
                    },
                    inside: function(e, t) {
                        var i = this.bbox();
                        return e > i.x && t > i.y && e < i.x + i.width && t < i.y + i.height
                    },
                    show: function() {
                        return this.style("display", "")
                    },
                    hide: function() {
                        return this.style("display", "none")
                    },
                    visible: function() {
                        return "none" != this.style("display")
                    },
                    toString: function() {
                        return this.attr("id")
                    },
                    classes: function() {
                        var e = this.attr("class");
                        return null == e ? [] : e.trim().split(b.regex.delimiter)
                    },
                    hasClass: function(e) {
                        return -1 != this.classes().indexOf(e)
                    },
                    addClass: function(e) {
                        if (!this.hasClass(e)) {
                            var t = this.classes();
                            t.push(e),
                                this.attr("class", t.join(" "))
                        }
                        return this
                    },
                    removeClass: function(e) {
                        return this.hasClass(e) && this.attr("class", this.classes().filter(function(t) {
                                return t != e
                            }).join(" ")),
                            this
                    },
                    toggleClass: function(e) {
                        return this.hasClass(e) ? this.removeClass(e) : this.addClass(e)
                    },
                    reference: function(e) {
                        return b.get(this.attr(e))
                    },
                    parent: function(t) {
                        var i = this;
                        if (!i.node.parentNode)
                            return null;
                        if (i = b.adopt(i.node.parentNode), !t)
                            return i;
                        for (; i && i.node instanceof e.SVGElement;) {
                            if ("string" == typeof t ? i.matches(t) : i instanceof t)
                                return i;
                            if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName)
                                return null;
                            i = b.adopt(i.node.parentNode)
                        }
                    },
                    doc: function() {
                        return this instanceof b.Doc ? this : this.parent(b.Doc)
                    },
                    parents: function(e) {
                        var t = [],
                            i = this;
                        do {
                            if (!(i = i.parent(e)) || !i.node)
                                break;
                            t.push(i)
                        } while (i.parent);
                        return t
                    },
                    matches: function(e) {
                        return r(this.node, e)
                    },
                    native: function() {
                        return this.node
                    },
                    svg: function(e) {
                        var i = t.createElement("svg");
                        if (!(e && this instanceof b.Parent))
                            return i.appendChild(e = t.createElement("svg")),
                                this.writeDataToDom(),
                                e.appendChild(this.node.cloneNode(!0)),
                                i.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                        i.innerHTML = "<svg>" + e.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                        for (var n = 0, s = i.firstChild.childNodes.length; n < s; n++)
                            this.node.appendChild(i.firstChild.firstChild);
                        return this
                    },
                    writeDataToDom: function() {
                        if (this.each || this.lines) {
                            (this.each ? this : this.lines()).each(function() {
                                this.writeDataToDom()
                            })
                        }
                        return this.node.removeAttribute("svgjs:data"),
                            Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)),
                            this
                    },
                    setData: function(e) {
                        return this.dom = e,
                            this
                    },
                    is: function(e) {
                        return s(this, e)
                    }
                }
            }),
            b.easing = {
                "-": function(e) {
                    return e
                },
                "<>": function(e) {
                    return -Math.cos(e * Math.PI) / 2 + .5
                },
                ">": function(e) {
                    return Math.sin(e * Math.PI / 2)
                },
                "<": function(e) {
                    return 1 - Math.cos(e * Math.PI / 2)
                }
            },
            b.morph = function(e) {
                return function(t, i) {
                    return new b.MorphObj(t, i).at(e)
                }
            },
            b.Situation = b.invent({
                create: function(e) {
                    this.init = !1,
                        this.reversed = !1,
                        this.reversing = !1,
                        this.duration = new b.Number(e.duration).valueOf(),
                        this.delay = new b.Number(e.delay).valueOf(),
                        this.start = +new Date + this.delay,
                        this.finish = this.start + this.duration,
                        this.ease = e.ease,
                        this.loop = 0,
                        this.loops = !1,
                        this.animations = {},
                        this.attrs = {},
                        this.styles = {},
                        this.transforms = [],
                        this.once = {}
                }
            }),
            b.FX = b.invent({
                create: function(e) {
                    this._target = e,
                        this.situations = [],
                        this.active = !1,
                        this.situation = null,
                        this.paused = !1,
                        this.lastPos = 0,
                        this.pos = 0,
                        this.absPos = 0,
                        this._speed = 1
                },
                extend: {
                    animate: function(e, t, i) {
                        "object" == typeof e && (t = e.ease,
                            i = e.delay,
                            e = e.duration);
                        var n = new b.Situation({
                            duration: e || 1e3,
                            delay: i || 0,
                            ease: b.easing[t || "-"] || t
                        });
                        return this.queue(n),
                            this
                    },
                    delay: function(e) {
                        var t = new b.Situation({
                            duration: e,
                            delay: 0,
                            ease: b.easing["-"]
                        });
                        return this.queue(t)
                    },
                    target: function(e) {
                        return e && e instanceof b.Element ? (this._target = e,
                            this) : this._target
                    },
                    timeToAbsPos: function(e) {
                        return (e - this.situation.start) / (this.situation.duration / this._speed)
                    },
                    absPosToTime: function(e) {
                        return this.situation.duration / this._speed * e + this.situation.start
                    },
                    startAnimFrame: function() {
                        this.stopAnimFrame(),
                            this.animationFrame = e.requestAnimationFrame(function() {
                                    this.step()
                                }
                                .bind(this))
                    },
                    stopAnimFrame: function() {
                        e.cancelAnimationFrame(this.animationFrame)
                    },
                    start: function() {
                        return !this.active && this.situation && (this.active = !0,
                                this.startCurrent()),
                            this
                    },
                    startCurrent: function() {
                        return this.situation.start = +new Date + this.situation.delay / this._speed,
                            this.situation.finish = this.situation.start + this.situation.duration / this._speed,
                            this.initAnimations().step()
                    },
                    queue: function(e) {
                        return ("function" == typeof e || e instanceof b.Situation) && this.situations.push(e),
                            this.situation || (this.situation = this.situations.shift()),
                            this
                    },
                    dequeue: function() {
                        return this.stop(),
                            this.situation = this.situations.shift(),
                            this.situation && (this.situation instanceof b.Situation ? this.start() : this.situation.call(this)),
                            this
                    },
                    initAnimations: function() {
                        var e, t, i, n = this.situation;
                        if (n.init)
                            return this;
                        for (e in n.animations)
                            for (i = this.target()[e](),
                                Array.isArray(i) || (i = [i]),
                                Array.isArray(n.animations[e]) || (n.animations[e] = [n.animations[e]]),
                                t = i.length; t--;)
                                n.animations[e][t] instanceof b.Number && (i[t] = new b.Number(i[t])),
                                n.animations[e][t] = i[t].morph(n.animations[e][t]);
                        for (e in n.attrs)
                            n.attrs[e] = new b.MorphObj(this.target().attr(e), n.attrs[e]);
                        for (e in n.styles)
                            n.styles[e] = new b.MorphObj(this.target().style(e), n.styles[e]);
                        return n.initialTransformation = this.target().matrixify(),
                            n.init = !0,
                            this
                    },
                    clearQueue: function() {
                        return this.situations = [],
                            this
                    },
                    clearCurrent: function() {
                        return this.situation = null,
                            this
                    },
                    stop: function(e, t) {
                        var i = this.active;
                        return this.active = !1,
                            t && this.clearQueue(),
                            e && this.situation && (!i && this.startCurrent(),
                                this.atEnd()),
                            this.stopAnimFrame(),
                            this.clearCurrent()
                    },
                    reset: function() {
                        if (this.situation) {
                            var e = this.situation;
                            this.stop(),
                                this.situation = e,
                                this.atStart()
                        }
                        return this
                    },
                    finish: function() {
                        for (this.stop(!0, !1); this.dequeue().situation && this.stop(!0, !1);)
                        ;
                        return this.clearQueue().clearCurrent(),
                            this
                    },
                    atStart: function() {
                        return this.at(0, !0)
                    },
                    atEnd: function() {
                        return !0 === this.situation.loops && (this.situation.loops = this.situation.loop + 1),
                            "number" == typeof this.situation.loops ? this.at(this.situation.loops, !0) : this.at(1, !0)
                    },
                    at: function(e, t) {
                        var i = this.situation.duration / this._speed;
                        return this.absPos = e,
                            t || (this.situation.reversed && (this.absPos = 1 - this.absPos),
                                this.absPos += this.situation.loop),
                            this.situation.start = +new Date - this.absPos * i,
                            this.situation.finish = this.situation.start + i,
                            this.step(!0)
                    },
                    speed: function(e) {
                        return 0 === e ? this.pause() : e ? (this._speed = e,
                            this.at(this.absPos, !0)) : this._speed
                    },
                    loop: function(e, t) {
                        var i = this.last();
                        return i.loops = null == e || e,
                            i.loop = 0,
                            t && (i.reversing = !0),
                            this
                    },
                    pause: function() {
                        return this.paused = !0,
                            this.stopAnimFrame(),
                            this
                    },
                    play: function() {
                        return this.paused ? (this.paused = !1,
                            this.at(this.absPos, !0)) : this
                    },
                    reverse: function(e) {
                        var t = this.last();
                        return t.reversed = void 0 === e ? !t.reversed : e,
                            this
                    },
                    progress: function(e) {
                        return e ? this.situation.ease(this.pos) : this.pos
                    },
                    after: function(e) {
                        var t = this.last(),
                            i = function i(n) {
                                n.detail.situation == t && (e.call(this, t),
                                    this.off("finished.fx", i))
                            };
                        return this.target().on("finished.fx", i),
                            this._callStart()
                    },
                    during: function(e) {
                        var t = this.last(),
                            i = function(i) {
                                i.detail.situation == t && e.call(this, i.detail.pos, b.morph(i.detail.pos), i.detail.eased, t)
                            };
                        return this.target().off("during.fx", i).on("during.fx", i),
                            this.after(function() {
                                this.off("during.fx", i)
                            }),
                            this._callStart()
                    },
                    afterAll: function(e) {
                        var t = function t(i) {
                            e.call(this),
                                this.off("allfinished.fx", t)
                        };
                        return this.target().off("allfinished.fx", t).on("allfinished.fx", t),
                            this._callStart()
                    },
                    duringAll: function(e) {
                        var t = function(t) {
                            e.call(this, t.detail.pos, b.morph(t.detail.pos), t.detail.eased, t.detail.situation)
                        };
                        return this.target().off("during.fx", t).on("during.fx", t),
                            this.afterAll(function() {
                                this.off("during.fx", t)
                            }),
                            this._callStart()
                    },
                    last: function() {
                        return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                    },
                    add: function(e, t, i) {
                        return this.last()[i || "animations"][e] = t,
                            this._callStart()
                    },
                    step: function(e) {
                        if (e || (this.absPos = this.timeToAbsPos(+new Date)), !1 !== this.situation.loops) {
                            var t, i, n;
                            t = Math.max(this.absPos, 0),
                                i = Math.floor(t), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = t - i,
                                    n = this.situation.loop,
                                    this.situation.loop = i) : (this.absPos = this.situation.loops,
                                    this.pos = 1,
                                    n = this.situation.loop - 1,
                                    this.situation.loop = this.situation.loops),
                                this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - n) % 2))
                        } else
                            this.absPos = Math.min(this.absPos, 1),
                            this.pos = this.absPos;
                        this.pos < 0 && (this.pos = 0),
                            this.situation.reversed && (this.pos = 1 - this.pos);
                        var s = this.situation.ease(this.pos);
                        for (var r in this.situation.once)
                            r > this.lastPos && r <= s && (this.situation.once[r].call(this.target(), this.pos, s),
                                delete this.situation.once[r]);
                        return this.active && this.target().fire("during", {
                                pos: this.pos,
                                eased: s,
                                fx: this,
                                situation: this.situation
                            }),
                            this.situation ? (this.eachAt(),
                                1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(),
                                    this.target().fire("finished", {
                                        fx: this,
                                        situation: this.situation
                                    }),
                                    this.situations.length || (this.target().fire("allfinished"),
                                        this.situations.length || (this.target().off(".fx"),
                                            this.active = !1)),
                                    this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(),
                                this.lastPos = s,
                                this) : this
                    },
                    eachAt: function() {
                        var e, t, i, n = this,
                            s = this.target(),
                            r = this.situation;
                        for (e in r.animations)
                            i = [].concat(r.animations[e]).map(function(e) {
                                return "string" != typeof e && e.at ? e.at(r.ease(n.pos), n.pos) : e
                            }),
                            s[e].apply(s, i);
                        for (e in r.attrs)
                            i = [e].concat(r.attrs[e]).map(function(e) {
                                return "string" != typeof e && e.at ? e.at(r.ease(n.pos), n.pos) : e
                            }),
                            s.attr.apply(s, i);
                        for (e in r.styles)
                            i = [e].concat(r.styles[e]).map(function(e) {
                                return "string" != typeof e && e.at ? e.at(r.ease(n.pos), n.pos) : e
                            }),
                            s.style.apply(s, i);
                        if (r.transforms.length) {
                            for (i = r.initialTransformation,
                                e = 0,
                                t = r.transforms.length; e < t; e++) {
                                var a = r.transforms[e];
                                a instanceof b.Matrix ? i = a.relative ? i.multiply((new b.Matrix).morph(a).at(r.ease(this.pos))) : i.morph(a).at(r.ease(this.pos)) : (a.relative || a.undo(i.extract()),
                                    i = i.multiply(a.at(r.ease(this.pos))))
                            }
                            s.matrix(i)
                        }
                        return this
                    },
                    once: function(e, t, i) {
                        var n = this.last();
                        return i || (e = n.ease(e)),
                            n.once[e] = t,
                            this
                    },
                    _callStart: function() {
                        return setTimeout(function() {
                                    this.start()
                                }
                                .bind(this), 0),
                            this
                    }
                },
                parent: b.Element,
                construct: {
                    animate: function(e, t, i) {
                        return (this.fx || (this.fx = new b.FX(this))).animate(e, t, i)
                    },
                    delay: function(e) {
                        return (this.fx || (this.fx = new b.FX(this))).delay(e)
                    },
                    stop: function(e, t) {
                        return this.fx && this.fx.stop(e, t),
                            this
                    },
                    finish: function() {
                        return this.fx && this.fx.finish(),
                            this
                    },
                    pause: function() {
                        return this.fx && this.fx.pause(),
                            this
                    },
                    play: function() {
                        return this.fx && this.fx.play(),
                            this
                    },
                    speed: function(e) {
                        if (this.fx) {
                            if (null == e)
                                return this.fx.speed();
                            this.fx.speed(e)
                        }
                        return this
                    }
                }
            }),
            b.MorphObj = b.invent({
                create: function(e, t) {
                    return b.Color.isColor(t) ? new b.Color(e).morph(t) : b.regex.delimiter.test(e) ? b.regex.pathLetters.test(e) ? new b.PathArray(e).morph(t) : new b.Array(e).morph(t) : b.regex.numberAndUnit.test(t) ? new b.Number(e).morph(t) : (this.value = e,
                        void(this.destination = t))
                },
                extend: {
                    at: function(e, t) {
                        return t < 1 ? this.value : this.destination
                    },
                    valueOf: function() {
                        return this.value
                    }
                }
            }),
            b.extend(b.FX, {
                attr: function(e, t, i) {
                    if ("object" == typeof e)
                        for (var n in e)
                            this.attr(n, e[n]);
                    else
                        this.add(e, t, "attrs");
                    return this
                },
                style: function(e, t) {
                    if ("object" == typeof e)
                        for (var i in e)
                            this.style(i, e[i]);
                    else
                        this.add(e, t, "styles");
                    return this
                },
                x: function(e, t) {
                    if (this.target() instanceof b.G)
                        return this.transform({
                                x: e
                            }, t),
                            this;
                    var i = new b.Number(e);
                    return i.relative = t,
                        this.add("x", i)
                },
                y: function(e, t) {
                    if (this.target() instanceof b.G)
                        return this.transform({
                                y: e
                            }, t),
                            this;
                    var i = new b.Number(e);
                    return i.relative = t,
                        this.add("y", i)
                },
                cx: function(e) {
                    return this.add("cx", new b.Number(e))
                },
                cy: function(e) {
                    return this.add("cy", new b.Number(e))
                },
                move: function(e, t) {
                    return this.x(e).y(t)
                },
                center: function(e, t) {
                    return this.cx(e).cy(t)
                },
                size: function(e, t) {
                    if (this.target() instanceof b.Text)
                        this.attr("font-size", e);
                    else {
                        var i;
                        e && t || (i = this.target().bbox()),
                            e || (e = i.width / i.height * t),
                            t || (t = i.height / i.width * e),
                            this.add("width", new b.Number(e)).add("height", new b.Number(t))
                    }
                    return this
                },
                width: function(e) {
                    return this.add("width", new b.Number(e))
                },
                height: function(e) {
                    return this.add("height", new b.Number(e))
                },
                plot: function(e, t, i, n) {
                    return 4 == arguments.length ? this.plot([e, t, i, n]) : this.add("plot", new(this.target().morphArray)(e))
                },
                leading: function(e) {
                    return this.target().leading ? this.add("leading", new b.Number(e)) : this
                },
                viewbox: function(e, t, i, n) {
                    return this.target() instanceof b.Container && this.add("viewbox", new b.ViewBox(e, t, i, n)),
                        this
                },
                update: function(e) {
                    if (this.target() instanceof b.Stop) {
                        if ("number" == typeof e || e instanceof b.Number)
                            return this.update({
                                offset: arguments[0],
                                color: arguments[1],
                                opacity: arguments[2]
                            });
                        null != e.opacity && this.attr("stop-opacity", e.opacity),
                            null != e.color && this.attr("stop-color", e.color),
                            null != e.offset && this.attr("offset", e.offset)
                    }
                    return this
                }
            }),
            b.Box = b.invent({
                create: function(e, t, i, n) {
                    if (!("object" != typeof e || e instanceof b.Element))
                        return b.Box.call(this, null != e.left ? e.left : e.x, null != e.top ? e.top : e.y, e.width, e.height);
                    4 == arguments.length && (this.x = e,
                            this.y = t,
                            this.width = i,
                            this.height = n),
                        v(this)
                },
                extend: {
                    merge: function(e) {
                        var t = new this.constructor;
                        return t.x = Math.min(this.x, e.x),
                            t.y = Math.min(this.y, e.y),
                            t.width = Math.max(this.x + this.width, e.x + e.width) - t.x,
                            t.height = Math.max(this.y + this.height, e.y + e.height) - t.y,
                            v(t)
                    },
                    transform: function(e) {
                        var t, i = 1 / 0,
                            n = -1 / 0,
                            s = 1 / 0,
                            r = -1 / 0;
                        return [new b.Point(this.x, this.y), new b.Point(this.x2, this.y), new b.Point(this.x, this.y2), new b.Point(this.x2, this.y2)].forEach(function(t) {
                                t = t.transform(e),
                                    i = Math.min(i, t.x),
                                    n = Math.max(n, t.x),
                                    s = Math.min(s, t.y),
                                    r = Math.max(r, t.y)
                            }),
                            t = new this.constructor,
                            t.x = i,
                            t.width = n - i,
                            t.y = s,
                            t.height = r - s,
                            v(t),
                            t
                    }
                }
            }),
            b.BBox = b.invent({
                create: function(e) {
                    if (b.Box.apply(this, [].slice.call(arguments)),
                        e instanceof b.Element) {
                        var i;
                        try {
                            if (t.documentElement.contains) {
                                if (!t.documentElement.contains(e.node))
                                    throw new Exception("Element not in the dom")
                            } else {
                                for (var n = e.node; n.parentNode;)
                                    n = n.parentNode;
                                if (n != t)
                                    throw new Exception("Element not in the dom")
                            }
                            i = e.node.getBBox()
                        } catch (t) {
                            if (e instanceof b.Shape) {
                                var s = e.clone(b.parser.draw.instance).show();
                                i = s.node.getBBox(),
                                    s.remove()
                            } else
                                i = {
                                    x: e.node.clientLeft,
                                    y: e.node.clientTop,
                                    width: e.node.clientWidth,
                                    height: e.node.clientHeight
                                }
                        }
                        b.Box.call(this, i)
                    }
                },
                inherit: b.Box,
                parent: b.Element,
                construct: {
                    bbox: function() {
                        return new b.BBox(this)
                    }
                }
            }),
            b.BBox.prototype.constructor = b.BBox,
            b.extend(b.Element, {
                tbox: function() {
                    return console.warn("Use of TBox is deprecated and mapped to RBox. Use .rbox() instead."),
                        this.rbox(this.doc())
                }
            }),
            b.RBox = b.invent({
                create: function(e) {
                    b.Box.apply(this, [].slice.call(arguments)),
                        e instanceof b.Element && b.Box.call(this, e.node.getBoundingClientRect())
                },
                inherit: b.Box,
                parent: b.Element,
                extend: {
                    addOffset: function() {
                        return this.x += e.pageXOffset,
                            this.y += e.pageYOffset,
                            this
                    }
                },
                construct: {
                    rbox: function(e) {
                        return e ? new b.RBox(this).transform(e.screenCTM().inverse()) : new b.RBox(this).addOffset()
                    }
                }
            }),
            b.RBox.prototype.constructor = b.RBox,
            b.Matrix = b.invent({
                create: function(e) {
                    var t, i = h([1, 0, 0, 1, 0, 0]);
                    for (e = e instanceof b.Element ? e.matrixify() : "string" == typeof e ? h(e.split(b.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? h([].slice.call(arguments)) : Array.isArray(e) ? h(e) : "object" == typeof e ? e : i,
                        t = T.length - 1; t >= 0; --t)
                        this[T[t]] = null != e[T[t]] ? e[T[t]] : i[T[t]]
                },
                extend: {
                    extract: function() {
                        var e = c(this, 0, 1),
                            t = c(this, 1, 0),
                            i = 180 / Math.PI * Math.atan2(e.y, e.x) - 90;
                        return {
                            x: this.e,
                            y: this.f,
                            transformedX: (this.e * Math.cos(i * Math.PI / 180) + this.f * Math.sin(i * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                            transformedY: (this.f * Math.cos(i * Math.PI / 180) + this.e * Math.sin(-i * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                            skewX: -i,
                            skewY: 180 / Math.PI * Math.atan2(t.y, t.x),
                            scaleX: Math.sqrt(this.a * this.a + this.b * this.b),
                            scaleY: Math.sqrt(this.c * this.c + this.d * this.d),
                            rotation: i,
                            a: this.a,
                            b: this.b,
                            c: this.c,
                            d: this.d,
                            e: this.e,
                            f: this.f,
                            matrix: new b.Matrix(this)
                        }
                    },
                    clone: function() {
                        return new b.Matrix(this)
                    },
                    morph: function(e) {
                        return this.destination = new b.Matrix(e),
                            this
                    },
                    at: function(e) {
                        return this.destination ? new b.Matrix({
                            a: this.a + (this.destination.a - this.a) * e,
                            b: this.b + (this.destination.b - this.b) * e,
                            c: this.c + (this.destination.c - this.c) * e,
                            d: this.d + (this.destination.d - this.d) * e,
                            e: this.e + (this.destination.e - this.e) * e,
                            f: this.f + (this.destination.f - this.f) * e
                        }) : this
                    },
                    multiply: function(e) {
                        return new b.Matrix(this.native().multiply(f(e).native()))
                    },
                    inverse: function() {
                        return new b.Matrix(this.native().inverse())
                    },
                    translate: function(e, t) {
                        return new b.Matrix(this.native().translate(e || 0, t || 0))
                    },
                    scale: function(e, t, i, n) {
                        return 1 == arguments.length ? t = e : 3 == arguments.length && (n = i,
                                i = t,
                                t = e),
                            this.around(i, n, new b.Matrix(e, 0, 0, t, 0, 0))
                    },
                    rotate: function(e, t, i) {
                        return e = b.utils.radians(e),
                            this.around(t, i, new b.Matrix(Math.cos(e), Math.sin(e), -Math.sin(e), Math.cos(e), 0, 0))
                    },
                    flip: function(e, t) {
                        return "x" == e ? this.scale(-1, 1, t, 0) : "y" == e ? this.scale(1, -1, 0, t) : this.scale(-1, -1, e, null != t ? t : e)
                    },
                    skew: function(e, t, i, n) {
                        return 1 == arguments.length ? t = e : 3 == arguments.length && (n = i,
                                i = t,
                                t = e),
                            e = b.utils.radians(e),
                            t = b.utils.radians(t),
                            this.around(i, n, new b.Matrix(1, Math.tan(t), Math.tan(e), 1, 0, 0))
                    },
                    skewX: function(e, t, i) {
                        return this.skew(e, 0, t, i)
                    },
                    skewY: function(e, t, i) {
                        return this.skew(0, e, t, i)
                    },
                    around: function(e, t, i) {
                        return this.multiply(new b.Matrix(1, 0, 0, 1, e || 0, t || 0)).multiply(i).multiply(new b.Matrix(1, 0, 0, 1, -e || 0, -t || 0))
                    },
                    native: function() {
                        for (var e = b.parser.native.createSVGMatrix(), t = T.length - 1; t >= 0; t--)
                            e[T[t]] = this[T[t]];
                        return e
                    },
                    toString: function() {
                        return "matrix(" + y(this.a) + "," + y(this.b) + "," + y(this.c) + "," + y(this.d) + "," + y(this.e) + "," + y(this.f) + ")"
                    }
                },
                parent: b.Element,
                construct: {
                    ctm: function() {
                        return new b.Matrix(this.node.getCTM())
                    },
                    screenCTM: function() {
                        if (this instanceof b.Nested) {
                            var e = this.rect(1, 1),
                                t = e.node.getScreenCTM();
                            return e.remove(),
                                new b.Matrix(t)
                        }
                        return new b.Matrix(this.node.getScreenCTM())
                    }
                }
            }),
            b.Point = b.invent({
                create: function(e, t) {
                    var i, n = {
                        x: 0,
                        y: 0
                    };
                    i = Array.isArray(e) ? {
                            x: e[0],
                            y: e[1]
                        } : "object" == typeof e ? {
                            x: e.x,
                            y: e.y
                        } : null != e ? {
                            x: e,
                            y: null != t ? t : e
                        } : n,
                        this.x = i.x,
                        this.y = i.y
                },
                extend: {
                    clone: function() {
                        return new b.Point(this)
                    },
                    morph: function(e, t) {
                        return this.destination = new b.Point(e, t),
                            this
                    },
                    at: function(e) {
                        return this.destination ? new b.Point({
                            x: this.x + (this.destination.x - this.x) * e,
                            y: this.y + (this.destination.y - this.y) * e
                        }) : this
                    },
                    native: function() {
                        var e = b.parser.native.createSVGPoint();
                        return e.x = this.x,
                            e.y = this.y,
                            e
                    },
                    transform: function(e) {
                        return new b.Point(this.native().matrixTransform(e.native()))
                    }
                }
            }),
            b.extend(b.Element, {
                point: function(e, t) {
                    return new b.Point(e, t).transform(this.screenCTM().inverse())
                }
            }),
            b.extend(b.Element, {
                attr: function(e, t, i) {
                    if (null == e) {
                        for (e = {},
                            t = this.node.attributes,
                            i = t.length - 1; i >= 0; i--)
                            e[t[i].nodeName] = b.regex.isNumber.test(t[i].nodeValue) ? parseFloat(t[i].nodeValue) : t[i].nodeValue;
                        return e
                    }
                    if ("object" == typeof e)
                        for (t in e)
                            this.attr(t, e[t]);
                    else if (null === t)
                        this.node.removeAttribute(e);
                    else {
                        if (null == t)
                            return t = this.node.getAttribute(e),
                                null == t ? b.defaults.attrs[e] : b.regex.isNumber.test(t) ? parseFloat(t) : t;
                        "stroke-width" == e ? this.attr("stroke", parseFloat(t) > 0 ? this._stroke : null) : "stroke" == e && (this._stroke = t),
                            "fill" != e && "stroke" != e || (b.regex.isImage.test(t) && (t = this.doc().defs().image(t, 0, 0)),
                                t instanceof b.Image && (t = this.doc().defs().pattern(0, 0, function() {
                                    this.add(t)
                                }))),
                            "number" == typeof t ? t = new b.Number(t) : b.Color.isColor(t) ? t = new b.Color(t) : Array.isArray(t) && (t = new b.Array(t)),
                            "leading" == e ? this.leading && this.leading(t) : "string" == typeof i ? this.node.setAttributeNS(i, e, t.toString()) : this.node.setAttribute(e, t.toString()), !this.rebuild || "font-size" != e && "x" != e || this.rebuild(e, t)
                    }
                    return this
                }
            }),
            b.extend(b.Element, {
                transform: function(e, t) {
                    var i, n, s = this;
                    if ("object" != typeof e)
                        return i = new b.Matrix(s).extract(),
                            "string" == typeof e ? i[e] : i;
                    if (i = new b.Matrix(s),
                        t = !!t || !!e.relative,
                        null != e.a)
                        i = t ? i.multiply(new b.Matrix(e)) : new b.Matrix(e);
                    else if (null != e.rotation)
                        p(e, s),
                        i = t ? i.rotate(e.rotation, e.cx, e.cy) : i.rotate(e.rotation - i.extract().rotation, e.cx, e.cy);
                    else if (null != e.scale || null != e.scaleX || null != e.scaleY) {
                        if (p(e, s),
                            e.scaleX = null != e.scale ? e.scale : null != e.scaleX ? e.scaleX : 1,
                            e.scaleY = null != e.scale ? e.scale : null != e.scaleY ? e.scaleY : 1, !t) {
                            var r = i.extract();
                            e.scaleX = 1 * e.scaleX / r.scaleX,
                                e.scaleY = 1 * e.scaleY / r.scaleY
                        }
                        i = i.scale(e.scaleX, e.scaleY, e.cx, e.cy)
                    } else if (null != e.skew || null != e.skewX || null != e.skewY) {
                        if (p(e, s),
                            e.skewX = null != e.skew ? e.skew : null != e.skewX ? e.skewX : 0,
                            e.skewY = null != e.skew ? e.skew : null != e.skewY ? e.skewY : 0, !t) {
                            var r = i.extract();
                            i = i.multiply((new b.Matrix).skew(r.skewX, r.skewY, e.cx, e.cy).inverse())
                        }
                        i = i.skew(e.skewX, e.skewY, e.cx, e.cy)
                    } else
                        e.flip ? ("x" == e.flip || "y" == e.flip ? e.offset = null == e.offset ? s.bbox()["c" + e.flip] : e.offset : null == e.offset ? (n = s.bbox(),
                                e.flip = n.cx,
                                e.offset = n.cy) : e.flip = e.offset,
                            i = (new b.Matrix).flip(e.flip, e.offset)) : null == e.x && null == e.y || (t ? i = i.translate(e.x, e.y) : (null != e.x && (i.e = e.x),
                            null != e.y && (i.f = e.y)));
                    return this.attr("transform", i)
                }
            }),
            b.extend(b.FX, {
                transform: function(e, t) {
                    var i, n, s = this.target();
                    return "object" != typeof e ? (i = new b.Matrix(s).extract(),
                        "string" == typeof e ? i[e] : i) : (t = !!t || !!e.relative,
                        null != e.a ? i = new b.Matrix(e) : null != e.rotation ? (p(e, s),
                            i = new b.Rotate(e.rotation, e.cx, e.cy)) : null != e.scale || null != e.scaleX || null != e.scaleY ? (p(e, s),
                            e.scaleX = null != e.scale ? e.scale : null != e.scaleX ? e.scaleX : 1,
                            e.scaleY = null != e.scale ? e.scale : null != e.scaleY ? e.scaleY : 1,
                            i = new b.Scale(e.scaleX, e.scaleY, e.cx, e.cy)) : null != e.skewX || null != e.skewY ? (p(e, s),
                            e.skewX = null != e.skewX ? e.skewX : 0,
                            e.skewY = null != e.skewY ? e.skewY : 0,
                            i = new b.Skew(e.skewX, e.skewY, e.cx, e.cy)) : e.flip ? ("x" == e.flip || "y" == e.flip ? e.offset = null == e.offset ? s.bbox()["c" + e.flip] : e.offset : null == e.offset ? (n = s.bbox(),
                                e.flip = n.cx,
                                e.offset = n.cy) : e.flip = e.offset,
                            i = (new b.Matrix).flip(e.flip, e.offset)) : null == e.x && null == e.y || (i = new b.Translate(e.x, e.y)),
                        i ? (i.relative = t,
                            this.last().transforms.push(i),
                            this._callStart()) : this)
                }
            }),
            b.extend(b.Element, {
                untransform: function() {
                    return this.attr("transform", null)
                },
                matrixify: function() {
                    return (this.attr("transform") || "").split(b.regex.transforms).slice(0, -1).map(function(e) {
                        var t = e.trim().split("(");
                        return [t[0], t[1].split(b.regex.delimiter).map(function(e) {
                            return parseFloat(e)
                        })]
                    }).reduce(function(e, t) {
                        return "matrix" == t[0] ? e.multiply(h(t[1])) : e[t[0]].apply(e, t[1])
                    }, new b.Matrix)
                },
                toParent: function(e) {
                    if (this == e)
                        return this;
                    var t = this.screenCTM(),
                        i = e.screenCTM().inverse();
                    return this.addTo(e).untransform().transform(i.multiply(t)),
                        this
                },
                toDoc: function() {
                    return this.toParent(this.doc())
                }
            }),
            b.Transformation = b.invent({
                create: function(e, t) {
                    if (arguments.length > 1 && "boolean" != typeof t)
                        return this.constructor.call(this, [].slice.call(arguments));
                    if (Array.isArray(e))
                        for (var i = 0, n = this.arguments.length; i < n; ++i)
                            this[this.arguments[i]] = e[i];
                    else if ("object" == typeof e)
                        for (var i = 0, n = this.arguments.length; i < n; ++i)
                            this[this.arguments[i]] = e[this.arguments[i]];
                    this.inversed = !1, !0 === t && (this.inversed = !0)
                },
                extend: {
                    arguments: [],
                    method: "",
                    at: function(e) {
                        for (var t = [], i = 0, n = this.arguments.length; i < n; ++i)
                            t.push(this[this.arguments[i]]);
                        var s = this._undo || new b.Matrix;
                        return s = (new b.Matrix).morph(b.Matrix.prototype[this.method].apply(s, t)).at(e),
                            this.inversed ? s.inverse() : s
                    },
                    undo: function(e) {
                        for (var t = 0, i = this.arguments.length; t < i; ++t)
                            e[this.arguments[t]] = void 0 === this[this.arguments[t]] ? 0 : e[this.arguments[t]];
                        return e.cx = this.cx,
                            e.cy = this.cy,
                            this._undo = new(b[o(this.method)])(e, !0).at(1),
                            this
                    }
                }
            }),
            b.Translate = b.invent({
                parent: b.Matrix,
                inherit: b.Transformation,
                create: function(e, t) {
                    this.constructor.apply(this, [].slice.call(arguments))
                },
                extend: {
                    arguments: ["transformedX", "transformedY"],
                    method: "translate"
                }
            }),
            b.Rotate = b.invent({
                parent: b.Matrix,
                inherit: b.Transformation,
                create: function(e, t) {
                    this.constructor.apply(this, [].slice.call(arguments))
                },
                extend: {
                    arguments: ["rotation", "cx", "cy"],
                    method: "rotate",
                    at: function(e) {
                        var t = (new b.Matrix).rotate((new b.Number).morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(e), this.cx, this.cy);
                        return this.inversed ? t.inverse() : t
                    },
                    undo: function(e) {
                        return this._undo = e,
                            this
                    }
                }
            }),
            b.Scale = b.invent({
                parent: b.Matrix,
                inherit: b.Transformation,
                create: function(e, t) {
                    this.constructor.apply(this, [].slice.call(arguments))
                },
                extend: {
                    arguments: ["scaleX", "scaleY", "cx", "cy"],
                    method: "scale"
                }
            }),
            b.Skew = b.invent({
                parent: b.Matrix,
                inherit: b.Transformation,
                create: function(e, t) {
                    this.constructor.apply(this, [].slice.call(arguments))
                },
                extend: {
                    arguments: ["skewX", "skewY", "cx", "cy"],
                    method: "skew"
                }
            }),
            b.extend(b.Element, {
                style: function(e, t) {
                    if (0 == arguments.length)
                        return this.node.style.cssText || "";
                    if (arguments.length < 2)
                        if ("object" == typeof e)
                            for (t in e)
                                this.style(t, e[t]);
                        else {
                            if (!b.regex.isCss.test(e))
                                return this.node.style[a(e)];
                            for (e = e.split(/\s*;\s*/).filter(function(e) {
                                    return !!e
                                }).map(function(e) {
                                    return e.split(/\s*:\s*/)
                                }); t = e.pop();)
                                this.style(t[0], t[1])
                        }
                    else
                        this.node.style[a(e)] = null === t || b.regex.isBlank.test(t) ? "" : t;
                    return this
                }
            }),
            b.Parent = b.invent({
                create: function(e) {
                    this.constructor.call(this, e)
                },
                inherit: b.Element,
                extend: {
                    children: function() {
                        return b.utils.map(b.utils.filterSVGElements(this.node.childNodes), function(e) {
                            return b.adopt(e)
                        })
                    },
                    add: function(e, t) {
                        return null == t ? this.node.appendChild(e.node) : e.node != this.node.childNodes[t] && this.node.insertBefore(e.node, this.node.childNodes[t]),
                            this
                    },
                    put: function(e, t) {
                        return this.add(e, t),
                            e
                    },
                    has: function(e) {
                        return this.index(e) >= 0
                    },
                    index: function(e) {
                        return [].slice.call(this.node.childNodes).indexOf(e.node)
                    },
                    get: function(e) {
                        return b.adopt(this.node.childNodes[e])
                    },
                    first: function() {
                        return this.get(0)
                    },
                    last: function() {
                        return this.get(this.node.childNodes.length - 1)
                    },
                    each: function(e, t) {
                        var i, n, s = this.children();
                        for (i = 0,
                            n = s.length; i < n; i++)
                            s[i] instanceof b.Element && e.apply(s[i], [i, s]),
                            t && s[i] instanceof b.Container && s[i].each(e, t);
                        return this
                    },
                    removeElement: function(e) {
                        return this.node.removeChild(e.node),
                            this
                    },
                    clear: function() {
                        for (; this.node.hasChildNodes();)
                            this.node.removeChild(this.node.lastChild);
                        return delete this._defs,
                            this
                    },
                    defs: function() {
                        return this.doc().defs()
                    }
                }
            }),
            b.extend(b.Parent, {
                ungroup: function(e, t) {
                    return 0 === t || this instanceof b.Defs || this.node == b.parser.draw ? this : (e = e || (this instanceof b.Doc ? this : this.parent(b.Parent)),
                        t = t || 1 / 0,
                        this.each(function() {
                            return this instanceof b.Defs ? this : this instanceof b.Parent ? this.ungroup(e, t - 1) : this.toParent(e)
                        }),
                        this.node.firstChild || this.remove(),
                        this)
                },
                flatten: function(e, t) {
                    return this.ungroup(e, t)
                }
            }),
            b.Container = b.invent({
                create: function(e) {
                    this.constructor.call(this, e)
                },
                inherit: b.Parent
            }),
            b.ViewBox = b.invent({
                create: function(e) {
                    var t, i, n, s, r, a, o, l = [0, 0, 0, 0],
                        u = 1,
                        d = 1,
                        c = /[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?/gi;
                    if (e instanceof b.Element) {
                        for (a = e,
                            o = e,
                            r = (e.attr("viewBox") || "").match(c),
                            e.bbox,
                            n = new b.Number(e.width()),
                            s = new b.Number(e.height());
                            "%" == n.unit;)
                            u *= n.value,
                            n = new b.Number(a instanceof b.Doc ? a.parent().offsetWidth : a.parent().width()),
                            a = a.parent();
                        for (;
                            "%" == s.unit;)
                            d *= s.value,
                            s = new b.Number(o instanceof b.Doc ? o.parent().offsetHeight : o.parent().height()),
                            o = o.parent();
                        this.x = 0,
                            this.y = 0,
                            this.width = n * u,
                            this.height = s * d,
                            this.zoom = 1,
                            r && (t = parseFloat(r[0]),
                                i = parseFloat(r[1]),
                                n = parseFloat(r[2]),
                                s = parseFloat(r[3]),
                                this.zoom = this.width / this.height > n / s ? this.height / s : this.width / n,
                                this.x = t,
                                this.y = i,
                                this.width = n,
                                this.height = s)
                    } else
                        e = "string" == typeof e ? e.match(c).map(function(e) {
                            return parseFloat(e)
                        }) : Array.isArray(e) ? e : "object" == typeof e ? [e.x, e.y, e.width, e.height] : 4 == arguments.length ? [].slice.call(arguments) : l,
                        this.x = e[0],
                        this.y = e[1],
                        this.width = e[2],
                        this.height = e[3]
                },
                extend: {
                    toString: function() {
                        return this.x + " " + this.y + " " + this.width + " " + this.height
                    },
                    morph: function(e, t, i, n) {
                        return this.destination = new b.ViewBox(e, t, i, n),
                            this
                    },
                    at: function(e) {
                        return this.destination ? new b.ViewBox([this.x + (this.destination.x - this.x) * e, this.y + (this.destination.y - this.y) * e, this.width + (this.destination.width - this.width) * e, this.height + (this.destination.height - this.height) * e]) : this
                    }
                },
                parent: b.Container,
                construct: {
                    viewbox: function(e, t, i, n) {
                        return 0 == arguments.length ? new b.ViewBox(this) : this.attr("viewBox", new b.ViewBox(e, t, i, n))
                    }
                }
            }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function(e) {
                b.Element.prototype[e] = function(t) {
                    return b.on(this.node, e, t),
                        this
                }
            }),
            b.listeners = [],
            b.handlerMap = [],
            b.listenerId = 0,
            b.on = function(e, t, i, n, s) {
                var r = i.bind(n || e.instance || e),
                    a = (b.handlerMap.indexOf(e) + 1 || b.handlerMap.push(e)) - 1,
                    o = t.split(".")[0],
                    l = t.split(".")[1] || "*";
                b.listeners[a] = b.listeners[a] || {},
                    b.listeners[a][o] = b.listeners[a][o] || {},
                    b.listeners[a][o][l] = b.listeners[a][o][l] || {},
                    i._svgjsListenerId || (i._svgjsListenerId = ++b.listenerId),
                    b.listeners[a][o][l][i._svgjsListenerId] = r,
                    e.addEventListener(o, r, s || !1)
            },
            b.off = function(e, t, i) {
                var n = b.handlerMap.indexOf(e),
                    s = t && t.split(".")[0],
                    r = t && t.split(".")[1],
                    a = "";
                if (-1 != n)
                    if (i) {
                        if ("function" == typeof i && (i = i._svgjsListenerId), !i)
                            return;
                        b.listeners[n][s] && b.listeners[n][s][r || "*"] && (e.removeEventListener(s, b.listeners[n][s][r || "*"][i], !1),
                            delete b.listeners[n][s][r || "*"][i])
                    } else if (r && s) {
                    if (b.listeners[n][s] && b.listeners[n][s][r]) {
                        for (i in b.listeners[n][s][r])
                            b.off(e, [s, r].join("."), i);
                        delete b.listeners[n][s][r]
                    }
                } else if (r)
                    for (t in b.listeners[n])
                        for (a in b.listeners[n][t])
                            r === a && b.off(e, [t, r].join("."));
                else if (s) {
                    if (b.listeners[n][s]) {
                        for (a in b.listeners[n][s])
                            b.off(e, [s, a].join("."));
                        delete b.listeners[n][s]
                    }
                } else {
                    for (t in b.listeners[n])
                        b.off(e, t);
                    delete b.listeners[n],
                        delete b.handlerMap[n]
                }
            },
            b.extend(b.Element, {
                on: function(e, t, i, n) {
                    return b.on(this.node, e, t, i, n),
                        this
                },
                off: function(e, t) {
                    return b.off(this.node, e, t),
                        this
                },
                fire: function(t, i) {
                    return t instanceof e.Event ? this.node.dispatchEvent(t) : this.node.dispatchEvent(t = new b.CustomEvent(t, {
                            detail: i,
                            cancelable: !0
                        })),
                        this._event = t,
                        this
                },
                event: function() {
                    return this._event
                }
            }),
            b.Defs = b.invent({
                create: "defs",
                inherit: b.Container
            }),
            b.G = b.invent({
                create: "g",
                inherit: b.Container,
                extend: {
                    x: function(e) {
                        return null == e ? this.transform("x") : this.transform({
                            x: e - this.x()
                        }, !0)
                    },
                    y: function(e) {
                        return null == e ? this.transform("y") : this.transform({
                            y: e - this.y()
                        }, !0)
                    },
                    cx: function(e) {
                        return null == e ? this.gbox().cx : this.x(e - this.gbox().width / 2)
                    },
                    cy: function(e) {
                        return null == e ? this.gbox().cy : this.y(e - this.gbox().height / 2)
                    },
                    gbox: function() {
                        var e = this.bbox(),
                            t = this.transform();
                        return e.x += t.x,
                            e.x2 += t.x,
                            e.cx += t.x,
                            e.y += t.y,
                            e.y2 += t.y,
                            e.cy += t.y,
                            e
                    }
                },
                construct: {
                    group: function() {
                        return this.put(new b.G)
                    }
                }
            }),
            b.Doc = b.invent({
                create: function(e) {
                    e && (e = "string" == typeof e ? t.getElementById(e) : e,
                        "svg" == e.nodeName ? this.constructor.call(this, e) : (this.constructor.call(this, b.create("svg")),
                            e.appendChild(this.node),
                            this.size("100%", "100%")),
                        this.namespace().defs())
                },
                inherit: b.Container,
                extend: {
                    namespace: function() {
                        return this.attr({
                            xmlns: b.ns,
                            version: "1.1"
                        }).attr("xmlns:xlink", b.xlink, b.xmlns).attr("xmlns:svgjs", b.svgjs, b.xmlns)
                    },
                    defs: function() {
                        if (!this._defs) {
                            var e;
                            (e = this.node.getElementsByTagName("defs")[0]) ? this._defs = b.adopt(e): this._defs = new b.Defs,
                                this.node.appendChild(this._defs.node)
                        }
                        return this._defs
                    },
                    parent: function() {
                        return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null
                    },
                    spof: function() {
                        var e = this.node.getScreenCTM();
                        return e && this.style("left", -e.e % 1 + "px").style("top", -e.f % 1 + "px"),
                            this
                    },
                    remove: function() {
                        return this.parent() && this.parent().removeChild(this.node),
                            this
                    },
                    clear: function() {
                        for (; this.node.hasChildNodes();)
                            this.node.removeChild(this.node.lastChild);
                        return delete this._defs,
                            b.parser.draw.parentNode || this.node.appendChild(b.parser.draw),
                            this
                    },
                    clone: function(e) {
                        this.writeDataToDom();
                        var t = this.node,
                            i = m(t.cloneNode(!0));
                        return e ? (e.node || e).appendChild(i.node) : t.parentNode.insertBefore(i.node, t.nextSibling),
                            i
                    }
                }
            }),
            b.extend(b.Element, {
                siblings: function() {
                    return this.parent().children()
                },
                position: function() {
                    return this.parent().index(this)
                },
                next: function() {
                    return this.siblings()[this.position() + 1]
                },
                previous: function() {
                    return this.siblings()[this.position() - 1]
                },
                forward: function() {
                    var e = this.position() + 1,
                        t = this.parent();
                    return t.removeElement(this).add(this, e),
                        t instanceof b.Doc && t.node.appendChild(t.defs().node),
                        this
                },
                backward: function() {
                    var e = this.position();
                    return e > 0 && this.parent().removeElement(this).add(this, e - 1),
                        this
                },
                front: function() {
                    var e = this.parent();
                    return e.node.appendChild(this.node),
                        e instanceof b.Doc && e.node.appendChild(e.defs().node),
                        this
                },
                back: function() {
                    return this.position() > 0 && this.parent().removeElement(this).add(this, 0),
                        this
                },
                before: function(e) {
                    e.remove();
                    var t = this.position();
                    return this.parent().add(e, t),
                        this
                },
                after: function(e) {
                    e.remove();
                    var t = this.position();
                    return this.parent().add(e, t + 1),
                        this
                }
            }),
            b.Mask = b.invent({
                create: function() {
                    this.constructor.call(this, b.create("mask")),
                        this.targets = []
                },
                inherit: b.Container,
                extend: {
                    remove: function() {
                        for (var e = this.targets.length - 1; e >= 0; e--)
                            this.targets[e] && this.targets[e].unmask();
                        return this.targets = [],
                            b.Element.prototype.remove.call(this),
                            this
                    }
                },
                construct: {
                    mask: function() {
                        return this.defs().put(new b.Mask)
                    }
                }
            }),
            b.extend(b.Element, {
                maskWith: function(e) {
                    return this.masker = e instanceof b.Mask ? e : this.parent().mask().add(e),
                        this.masker.targets.push(this),
                        this.attr("mask", 'url("#' + this.masker.attr("id") + '")')
                },
                unmask: function() {
                    return delete this.masker,
                        this.attr("mask", null)
                }
            }),
            b.ClipPath = b.invent({
                create: function() {
                    this.constructor.call(this, b.create("clipPath")),
                        this.targets = []
                },
                inherit: b.Container,
                extend: {
                    remove: function() {
                        for (var e = this.targets.length - 1; e >= 0; e--)
                            this.targets[e] && this.targets[e].unclip();
                        return this.targets = [],
                            this.parent().removeElement(this),
                            this
                    }
                },
                construct: {
                    clip: function() {
                        return this.defs().put(new b.ClipPath)
                    }
                }
            }),
            b.extend(b.Element, {
                clipWith: function(e) {
                    return this.clipper = e instanceof b.ClipPath ? e : this.parent().clip().add(e),
                        this.clipper.targets.push(this),
                        this.attr("clip-path", 'url("#' + this.clipper.attr("id") + '")')
                },
                unclip: function() {
                    return delete this.clipper,
                        this.attr("clip-path", null)
                }
            }),
            b.Gradient = b.invent({
                create: function(e) {
                    this.constructor.call(this, b.create(e + "Gradient")),
                        this.type = e
                },
                inherit: b.Container,
                extend: {
                    at: function(e, t, i) {
                        return this.put(new b.Stop).update(e, t, i)
                    },
                    update: function(e) {
                        return this.clear(),
                            "function" == typeof e && e.call(this, this),
                            this
                    },
                    fill: function() {
                        return "url(#" + this.id() + ")"
                    },
                    toString: function() {
                        return this.fill()
                    },
                    attr: function(e, t, i) {
                        return "transform" == e && (e = "gradientTransform"),
                            b.Container.prototype.attr.call(this, e, t, i)
                    }
                },
                construct: {
                    gradient: function(e, t) {
                        return this.defs().gradient(e, t)
                    }
                }
            }),
            b.extend(b.Gradient, b.FX, {
                from: function(e, t) {
                    return "radial" == (this._target || this).type ? this.attr({
                        fx: new b.Number(e),
                        fy: new b.Number(t)
                    }) : this.attr({
                        x1: new b.Number(e),
                        y1: new b.Number(t)
                    })
                },
                to: function(e, t) {
                    return "radial" == (this._target || this).type ? this.attr({
                        cx: new b.Number(e),
                        cy: new b.Number(t)
                    }) : this.attr({
                        x2: new b.Number(e),
                        y2: new b.Number(t)
                    })
                }
            }),
            b.extend(b.Defs, {
                gradient: function(e, t) {
                    return this.put(new b.Gradient(e)).update(t)
                }
            }),
            b.Stop = b.invent({
                create: "stop",
                inherit: b.Element,
                extend: {
                    update: function(e) {
                        return ("number" == typeof e || e instanceof b.Number) && (e = {
                                offset: arguments[0],
                                color: arguments[1],
                                opacity: arguments[2]
                            }),
                            null != e.opacity && this.attr("stop-opacity", e.opacity),
                            null != e.color && this.attr("stop-color", e.color),
                            null != e.offset && this.attr("offset", new b.Number(e.offset)),
                            this
                    }
                }
            }),
            b.Pattern = b.invent({
                create: "pattern",
                inherit: b.Container,
                extend: {
                    fill: function() {
                        return "url(#" + this.id() + ")"
                    },
                    update: function(e) {
                        return this.clear(),
                            "function" == typeof e && e.call(this, this),
                            this
                    },
                    toString: function() {
                        return this.fill()
                    },
                    attr: function(e, t, i) {
                        return "transform" == e && (e = "patternTransform"),
                            b.Container.prototype.attr.call(this, e, t, i)
                    }
                },
                construct: {
                    pattern: function(e, t, i) {
                        return this.defs().pattern(e, t, i)
                    }
                }
            }),
            b.extend(b.Defs, {
                pattern: function(e, t, i) {
                    return this.put(new b.Pattern).update(i).attr({
                        x: 0,
                        y: 0,
                        width: e,
                        height: t,
                        patternUnits: "userSpaceOnUse"
                    })
                }
            }),
            b.Shape = b.invent({
                create: function(e) {
                    this.constructor.call(this, e)
                },
                inherit: b.Element
            }),
            b.Bare = b.invent({
                create: function(e, t) {
                    if (this.constructor.call(this, b.create(e)),
                        t)
                        for (var i in t.prototype)
                            "function" == typeof t.prototype[i] && (this[i] = t.prototype[i])
                },
                inherit: b.Element,
                extend: {
                    words: function(e) {
                        for (; this.node.hasChildNodes();)
                            this.node.removeChild(this.node.lastChild);
                        return this.node.appendChild(t.createTextNode(e)),
                            this
                    }
                }
            }),
            b.extend(b.Parent, {
                element: function(e, t) {
                    return this.put(new b.Bare(e, t))
                }
            }),
            b.Symbol = b.invent({
                create: "symbol",
                inherit: b.Container,
                construct: {
                    symbol: function() {
                        return this.put(new b.Symbol)
                    }
                }
            }),
            b.Use = b.invent({
                create: "use",
                inherit: b.Shape,
                extend: {
                    element: function(e, t) {
                        return this.attr("href", (t || "") + "#" + e, b.xlink)
                    }
                },
                construct: {
                    use: function(e, t) {
                        return this.put(new b.Use).element(e, t)
                    }
                }
            }),
            b.Rect = b.invent({
                create: "rect",
                inherit: b.Shape,
                construct: {
                    rect: function(e, t) {
                        return this.put(new b.Rect).size(e, t)
                    }
                }
            }),
            b.Circle = b.invent({
                create: "circle",
                inherit: b.Shape,
                construct: {
                    circle: function(e) {
                        return this.put(new b.Circle).rx(new b.Number(e).divide(2)).move(0, 0)
                    }
                }
            }),
            b.extend(b.Circle, b.FX, {
                rx: function(e) {
                    return this.attr("r", e)
                },
                ry: function(e) {
                    return this.rx(e)
                }
            }),
            b.Ellipse = b.invent({
                create: "ellipse",
                inherit: b.Shape,
                construct: {
                    ellipse: function(e, t) {
                        return this.put(new b.Ellipse).size(e, t).move(0, 0)
                    }
                }
            }),
            b.extend(b.Ellipse, b.Rect, b.FX, {
                rx: function(e) {
                    return this.attr("rx", e)
                },
                ry: function(e) {
                    return this.attr("ry", e)
                }
            }),
            b.extend(b.Circle, b.Ellipse, {
                x: function(e) {
                    return null == e ? this.cx() - this.rx() : this.cx(e + this.rx())
                },
                y: function(e) {
                    return null == e ? this.cy() - this.ry() : this.cy(e + this.ry())
                },
                cx: function(e) {
                    return null == e ? this.attr("cx") : this.attr("cx", e)
                },
                cy: function(e) {
                    return null == e ? this.attr("cy") : this.attr("cy", e)
                },
                width: function(e) {
                    return null == e ? 2 * this.rx() : this.rx(new b.Number(e).divide(2))
                },
                height: function(e) {
                    return null == e ? 2 * this.ry() : this.ry(new b.Number(e).divide(2))
                },
                size: function(e, t) {
                    var i = d(this, e, t);
                    return this.rx(new b.Number(i.width).divide(2)).ry(new b.Number(i.height).divide(2))
                }
            }),
            b.Line = b.invent({
                create: "line",
                inherit: b.Shape,
                extend: {
                    array: function() {
                        return new b.PointArray([
                            [this.attr("x1"), this.attr("y1")],
                            [this.attr("x2"), this.attr("y2")]
                        ])
                    },
                    plot: function(e, t, i, n) {
                        return null == e ? this.array() : (e = void 0 !== t ? {
                                x1: e,
                                y1: t,
                                x2: i,
                                y2: n
                            } : new b.PointArray(e).toLine(),
                            this.attr(e))
                    },
                    move: function(e, t) {
                        return this.attr(this.array().move(e, t).toLine())
                    },
                    size: function(e, t) {
                        var i = d(this, e, t);
                        return this.attr(this.array().size(i.width, i.height).toLine())
                    }
                },
                construct: {
                    line: function(e, t, i, n) {
                        return b.Line.prototype.plot.apply(this.put(new b.Line), null != e ? [e, t, i, n] : [0, 0, 0, 0])
                    }
                }
            }),
            b.Polyline = b.invent({
                create: "polyline",
                inherit: b.Shape,
                construct: {
                    polyline: function(e) {
                        return this.put(new b.Polyline).plot(e || new b.PointArray)
                    }
                }
            }),
            b.Polygon = b.invent({
                create: "polygon",
                inherit: b.Shape,
                construct: {
                    polygon: function(e) {
                        return this.put(new b.Polygon).plot(e || new b.PointArray)
                    }
                }
            }),
            b.extend(b.Polyline, b.Polygon, {
                array: function() {
                    return this._array || (this._array = new b.PointArray(this.attr("points")))
                },
                plot: function(e) {
                    return null == e ? this.array() : this.clear().attr("points", "string" == typeof e ? e : this._array = new b.PointArray(e))
                },
                clear: function() {
                    return delete this._array,
                        this
                },
                move: function(e, t) {
                    return this.attr("points", this.array().move(e, t))
                },
                size: function(e, t) {
                    var i = d(this, e, t);
                    return this.attr("points", this.array().size(i.width, i.height))
                }
            }),
            b.extend(b.Line, b.Polyline, b.Polygon, {
                morphArray: b.PointArray,
                x: function(e) {
                    return null == e ? this.bbox().x : this.move(e, this.bbox().y)
                },
                y: function(e) {
                    return null == e ? this.bbox().y : this.move(this.bbox().x, e)
                },
                width: function(e) {
                    var t = this.bbox();
                    return null == e ? t.width : this.size(e, t.height)
                },
                height: function(e) {
                    var t = this.bbox();
                    return null == e ? t.height : this.size(t.width, e)
                }
            }),
            b.Path = b.invent({
                create: "path",
                inherit: b.Shape,
                extend: {
                    morphArray: b.PathArray,
                    array: function() {
                        return this._array || (this._array = new b.PathArray(this.attr("d")))
                    },
                    plot: function(e) {
                        return null == e ? this.array() : this.clear().attr("d", "string" == typeof e ? e : this._array = new b.PathArray(e))
                    },
                    clear: function() {
                        return delete this._array,
                            this
                    },
                    move: function(e, t) {
                        return this.attr("d", this.array().move(e, t))
                    },
                    x: function(e) {
                        return null == e ? this.bbox().x : this.move(e, this.bbox().y)
                    },
                    y: function(e) {
                        return null == e ? this.bbox().y : this.move(this.bbox().x, e)
                    },
                    size: function(e, t) {
                        var i = d(this, e, t);
                        return this.attr("d", this.array().size(i.width, i.height))
                    },
                    width: function(e) {
                        return null == e ? this.bbox().width : this.size(e, this.bbox().height)
                    },
                    height: function(e) {
                        return null == e ? this.bbox().height : this.size(this.bbox().width, e)
                    }
                },
                construct: {
                    path: function(e) {
                        return this.put(new b.Path).plot(e || new b.PathArray)
                    }
                }
            }),
            b.Image = b.invent({
                create: "image",
                inherit: b.Shape,
                extend: {
                    load: function(t) {
                        if (!t)
                            return this;
                        var i = this,
                            n = new e.Image;
                        return b.on(n, "load", function() {
                                b.off(n);
                                var e = i.parent(b.Pattern);
                                null !== e && (0 == i.width() && 0 == i.height() && i.size(n.width, n.height),
                                    e && 0 == e.width() && 0 == e.height() && e.size(i.width(), i.height()),
                                    "function" == typeof i._loaded && i._loaded.call(i, {
                                        width: n.width,
                                        height: n.height,
                                        ratio: n.width / n.height,
                                        url: t
                                    }))
                            }),
                            b.on(n, "error", function(e) {
                                b.off(n),
                                    "function" == typeof i._error && i._error.call(i, e)
                            }),
                            this.attr("href", n.src = this.src = t, b.xlink)
                    },
                    loaded: function(e) {
                        return this._loaded = e,
                            this
                    },
                    error: function(e) {
                        return this._error = e,
                            this
                    }
                },
                construct: {
                    image: function(e, t, i) {
                        return this.put(new b.Image).load(e).size(t || 0, i || t || 0)
                    }
                }
            }),
            b.Text = b.invent({
                create: function() {
                    this.constructor.call(this, b.create("text")),
                        this.dom.leading = new b.Number(1.3),
                        this._rebuild = !0,
                        this._build = !1,
                        this.attr("font-family", b.defaults.attrs["font-family"])
                },
                inherit: b.Shape,
                extend: {
                    x: function(e) {
                        return null == e ? this.attr("x") : this.attr("x", e)
                    },
                    y: function(e) {
                        var t = this.attr("y"),
                            i = "number" == typeof t ? t - this.bbox().y : 0;
                        return null == e ? "number" == typeof t ? t - i : t : this.attr("y", "number" == typeof e.valueOf() ? e + i : e)
                    },
                    cx: function(e) {
                        return null == e ? this.bbox().cx : this.x(e - this.bbox().width / 2)
                    },
                    cy: function(e) {
                        return null == e ? this.bbox().cy : this.y(e - this.bbox().height / 2)
                    },
                    text: function(e) {
                        if (void 0 === e) {
                            for (var e = "", t = this.node.childNodes, i = 0, n = t.length; i < n; ++i)
                                0 != i && 3 != t[i].nodeType && 1 == b.adopt(t[i]).dom.newLined && (e += "\n"),
                                e += t[i].textContent;
                            return e
                        }
                        if (this.clear().build(!0),
                            "function" == typeof e)
                            e.call(this, this);
                        else {
                            e = e.split("\n");
                            for (var i = 0, s = e.length; i < s; i++)
                                this.tspan(e[i]).newLine()
                        }
                        return this.build(!1).rebuild()
                    },
                    size: function(e) {
                        return this.attr("font-size", e).rebuild()
                    },
                    leading: function(e) {
                        return null == e ? this.dom.leading : (this.dom.leading = new b.Number(e),
                            this.rebuild())
                    },
                    lines: function() {
                        var e = (this.textPath && this.textPath() || this).node,
                            t = b.utils.map(b.utils.filterSVGElements(e.childNodes), function(e) {
                                return b.adopt(e)
                            });
                        return new b.Set(t)
                    },
                    rebuild: function(e) {
                        if ("boolean" == typeof e && (this._rebuild = e),
                            this._rebuild) {
                            var t = this,
                                i = 0,
                                n = this.dom.leading * new b.Number(this.attr("font-size"));
                            this.lines().each(function() {
                                    this.dom.newLined && (t.textPath() || this.attr("x", t.attr("x")),
                                        "\n" == this.text() ? i += n : (this.attr("dy", n + i),
                                            i = 0))
                                }),
                                this.fire("rebuild")
                        }
                        return this
                    },
                    build: function(e) {
                        return this._build = !!e,
                            this
                    },
                    setData: function(e) {
                        return this.dom = e,
                            this.dom.leading = new b.Number(e.leading || 1.3),
                            this
                    }
                },
                construct: {
                    text: function(e) {
                        return this.put(new b.Text).text(e)
                    },
                    plain: function(e) {
                        return this.put(new b.Text).plain(e)
                    }
                }
            }),
            b.Tspan = b.invent({
                create: "tspan",
                inherit: b.Shape,
                extend: {
                    text: function(e) {
                        return null == e ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof e ? e.call(this, this) : this.plain(e),
                            this)
                    },
                    dx: function(e) {
                        return this.attr("dx", e)
                    },
                    dy: function(e) {
                        return this.attr("dy", e)
                    },
                    newLine: function() {
                        var e = this.parent(b.Text);
                        return this.dom.newLined = !0,
                            this.dy(e.dom.leading * e.attr("font-size")).attr("x", e.x())
                    }
                }
            }),
            b.extend(b.Text, b.Tspan, {
                plain: function(e) {
                    return !1 === this._build && this.clear(),
                        this.node.appendChild(t.createTextNode(e)),
                        this
                },
                tspan: function(e) {
                    var t = (this.textPath && this.textPath() || this).node,
                        i = new b.Tspan;
                    return !1 === this._build && this.clear(),
                        t.appendChild(i.node),
                        i.text(e)
                },
                clear: function() {
                    for (var e = (this.textPath && this.textPath() || this).node; e.hasChildNodes();)
                        e.removeChild(e.lastChild);
                    return this
                },
                length: function() {
                    return this.node.getComputedTextLength()
                }
            }),
            b.TextPath = b.invent({
                create: "textPath",
                inherit: b.Parent,
                parent: b.Text,
                construct: {
                    morphArray: b.PathArray,
                    path: function(e) {
                        for (var t = new b.TextPath, i = this.doc().defs().path(e); this.node.hasChildNodes();)
                            t.node.appendChild(this.node.firstChild);
                        return this.node.appendChild(t.node),
                            t.attr("href", "#" + i, b.xlink),
                            this
                    },
                    array: function() {
                        var e = this.track();
                        return e ? e.array() : null
                    },
                    plot: function(e) {
                        var t = this.track(),
                            i = null;
                        return t && (i = t.plot(e)),
                            null == e ? i : this
                    },
                    track: function() {
                        var e = this.textPath();
                        if (e)
                            return e.reference("href")
                    },
                    textPath: function() {
                        if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName)
                            return b.adopt(this.node.firstChild)
                    }
                }
            }),
            b.Nested = b.invent({
                create: function() {
                    this.constructor.call(this, b.create("svg")),
                        this.style("overflow", "visible")
                },
                inherit: b.Container,
                construct: {
                    nested: function() {
                        return this.put(new b.Nested)
                    }
                }
            }),
            b.A = b.invent({
                create: "a",
                inherit: b.Container,
                extend: {
                    to: function(e) {
                        return this.attr("href", e, b.xlink)
                    },
                    show: function(e) {
                        return this.attr("show", e, b.xlink)
                    },
                    target: function(e) {
                        return this.attr("target", e)
                    }
                },
                construct: {
                    link: function(e) {
                        return this.put(new b.A).to(e)
                    }
                }
            }),
            b.extend(b.Element, {
                linkTo: function(e) {
                    var t = new b.A;
                    return "function" == typeof e ? e.call(t, t) : t.to(e),
                        this.parent().put(t).put(this)
                }
            }),
            b.Marker = b.invent({
                create: "marker",
                inherit: b.Container,
                extend: {
                    width: function(e) {
                        return this.attr("markerWidth", e)
                    },
                    height: function(e) {
                        return this.attr("markerHeight", e)
                    },
                    ref: function(e, t) {
                        return this.attr("refX", e).attr("refY", t)
                    },
                    update: function(e) {
                        return this.clear(),
                            "function" == typeof e && e.call(this, this),
                            this
                    },
                    toString: function() {
                        return "url(#" + this.id() + ")"
                    }
                },
                construct: {
                    marker: function(e, t, i) {
                        return this.defs().marker(e, t, i)
                    }
                }
            }),
            b.extend(b.Defs, {
                marker: function(e, t, i) {
                    return this.put(new b.Marker).size(e, t).ref(e / 2, t / 2).viewbox(0, 0, e, t).attr("orient", "auto").update(i)
                }
            }),
            b.extend(b.Line, b.Polyline, b.Polygon, b.Path, {
                marker: function(e, t, i, n) {
                    var s = ["marker"];
                    return "all" != e && s.push(e),
                        s = s.join("-"),
                        e = arguments[1] instanceof b.Marker ? arguments[1] : this.doc().marker(t, i, n),
                        this.attr(s, e)
                }
            });
        var S = {
            stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
            fill: ["color", "opacity", "rule"],
            prefix: function(e, t) {
                return "color" == t ? e : e + "-" + t
            }
        };
        ["fill", "stroke"].forEach(function(e) {
                var t, i = {};
                i[e] = function(i) {
                        if (void 0 === i)
                            return this;
                        if ("string" == typeof i || b.Color.isRgb(i) || i && "function" == typeof i.fill)
                            this.attr(e, i);
                        else
                            for (t = S[e].length - 1; t >= 0; t--)
                                null != i[S[e][t]] && this.attr(S.prefix(e, S[e][t]), i[S[e][t]]);
                        return this
                    },
                    b.extend(b.Element, b.FX, i)
            }),
            b.extend(b.Element, b.FX, {
                rotate: function(e, t, i) {
                    return this.transform({
                        rotation: e,
                        cx: t,
                        cy: i
                    })
                },
                skew: function(e, t, i, n) {
                    return 1 == arguments.length || 3 == arguments.length ? this.transform({
                        skew: e,
                        cx: t,
                        cy: i
                    }) : this.transform({
                        skewX: e,
                        skewY: t,
                        cx: i,
                        cy: n
                    })
                },
                scale: function(e, t, i, n) {
                    return 1 == arguments.length || 3 == arguments.length ? this.transform({
                        scale: e,
                        cx: t,
                        cy: i
                    }) : this.transform({
                        scaleX: e,
                        scaleY: t,
                        cx: i,
                        cy: n
                    })
                },
                translate: function(e, t) {
                    return this.transform({
                        x: e,
                        y: t
                    })
                },
                flip: function(e, t) {
                    return t = "number" == typeof e ? e : t,
                        this.transform({
                            flip: e || "both",
                            offset: t
                        })
                },
                matrix: function(e) {
                    return this.attr("transform", new b.Matrix(6 == arguments.length ? [].slice.call(arguments) : e))
                },
                opacity: function(e) {
                    return this.attr("opacity", e)
                },
                dx: function(e) {
                    return this.x(new b.Number(e).plus(this instanceof b.FX ? 0 : this.x()), !0)
                },
                dy: function(e) {
                    return this.y(new b.Number(e).plus(this instanceof b.FX ? 0 : this.y()), !0)
                },
                dmove: function(e, t) {
                    return this.dx(e).dy(t)
                }
            }),
            b.extend(b.Rect, b.Ellipse, b.Circle, b.Gradient, b.FX, {
                radius: function(e, t) {
                    var i = (this._target || this).type;
                    return "radial" == i || "circle" == i ? this.attr("r", new b.Number(e)) : this.rx(e).ry(null == t ? e : t)
                }
            }),
            b.extend(b.Path, {
                length: function() {
                    return this.node.getTotalLength()
                },
                pointAt: function(e) {
                    return this.node.getPointAtLength(e)
                }
            }),
            b.extend(b.Parent, b.Text, b.Tspan, b.FX, {
                font: function(e, t) {
                    if ("object" == typeof e)
                        for (t in e)
                            this.font(t, e[t]);
                    return "leading" == e ? this.leading(t) : "anchor" == e ? this.attr("text-anchor", t) : "size" == e || "family" == e || "weight" == e || "stretch" == e || "variant" == e || "style" == e ? this.attr("font-" + e, t) : this.attr(e, t)
                }
            }),
            b.Set = b.invent({
                create: function(e) {
                    Array.isArray(e) ? this.members = e : this.clear()
                },
                extend: {
                    add: function() {
                        var e, t, i = [].slice.call(arguments);
                        for (e = 0,
                            t = i.length; e < t; e++)
                            this.members.push(i[e]);
                        return this
                    },
                    remove: function(e) {
                        var t = this.index(e);
                        return t > -1 && this.members.splice(t, 1),
                            this
                    },
                    each: function(e) {
                        for (var t = 0, i = this.members.length; t < i; t++)
                            e.apply(this.members[t], [t, this.members]);
                        return this
                    },
                    clear: function() {
                        return this.members = [],
                            this
                    },
                    length: function() {
                        return this.members.length
                    },
                    has: function(e) {
                        return this.index(e) >= 0
                    },
                    index: function(e) {
                        return this.members.indexOf(e)
                    },
                    get: function(e) {
                        return this.members[e]
                    },
                    first: function() {
                        return this.get(0)
                    },
                    last: function() {
                        return this.get(this.members.length - 1)
                    },
                    valueOf: function() {
                        return this.members
                    },
                    bbox: function() {
                        if (0 == this.members.length)
                            return new b.RBox;
                        var e = this.members[0].rbox(this.members[0].doc());
                        return this.each(function() {
                                e = e.merge(this.rbox(this.doc()))
                            }),
                            e
                    }
                },
                construct: {
                    set: function(e) {
                        return new b.Set(e)
                    }
                }
            }),
            b.FX.Set = b.invent({
                create: function(e) {
                    this.set = e
                }
            }),
            b.Set.inherit = function() {
                var e, t = [];
                for (var e in b.Shape.prototype)
                    "function" == typeof b.Shape.prototype[e] && "function" != typeof b.Set.prototype[e] && t.push(e);
                t.forEach(function(e) {
                        b.Set.prototype[e] = function() {
                            for (var t = 0, i = this.members.length; t < i; t++)
                                this.members[t] && "function" == typeof this.members[t][e] && this.members[t][e].apply(this.members[t], arguments);
                            return "animate" == e ? this.fx || (this.fx = new b.FX.Set(this)) : this
                        }
                    }),
                    t = [];
                for (var e in b.FX.prototype)
                    "function" == typeof b.FX.prototype[e] && "function" != typeof b.FX.Set.prototype[e] && t.push(e);
                t.forEach(function(e) {
                    b.FX.Set.prototype[e] = function() {
                        for (var t = 0, i = this.set.members.length; t < i; t++)
                            this.set.members[t].fx[e].apply(this.set.members[t].fx, arguments);
                        return this
                    }
                })
            },
            b.extend(b.Element, {
                data: function(e, t, i) {
                    if ("object" == typeof e)
                        for (t in e)
                            this.data(t, e[t]);
                    else if (arguments.length < 2)
                        try {
                            return JSON.parse(this.attr("data-" + e))
                        } catch (t) {
                            return this.attr("data-" + e)
                        }
                    else
                        this.attr("data-" + e, null === t ? null : !0 === i || "string" == typeof t || "number" == typeof t ? t : JSON.stringify(t));
                    return this
                }
            }),
            b.extend(b.Element, {
                remember: function(e, t) {
                    if ("object" == typeof arguments[0])
                        for (var t in e)
                            this.remember(t, e[t]);
                    else {
                        if (1 == arguments.length)
                            return this.memory()[e];
                        this.memory()[e] = t
                    }
                    return this
                },
                forget: function() {
                    if (0 == arguments.length)
                        this._memory = {};
                    else
                        for (var e = arguments.length - 1; e >= 0; e--)
                            delete this.memory()[arguments[e]];
                    return this
                },
                memory: function() {
                    return this._memory || (this._memory = {})
                }
            }),
            b.get = function(e) {
                var i = t.getElementById(_(e) || e);
                return b.adopt(i)
            },
            b.select = function(e, i) {
                return new b.Set(b.utils.map((i || t).querySelectorAll(e), function(e) {
                    return b.adopt(e)
                }))
            },
            b.extend(b.Parent, {
                select: function(e) {
                    return b.select(e, this.node)
                }
            });
        var T = "abcdef".split("");
        if ("function" != typeof e.CustomEvent) {
            var C = function(e, i) {
                i = i || {
                    bubbles: !1,
                    cancelable: !1,
                    detail: void 0
                };
                var n = t.createEvent("CustomEvent");
                return n.initCustomEvent(e, i.bubbles, i.cancelable, i.detail),
                    n
            };
            C.prototype = e.Event.prototype,
                b.CustomEvent = C
        } else
            b.CustomEvent = e.CustomEvent;
        return function(t) {
                for (var i = 0, n = ["moz", "webkit"], s = 0; s < n.length && !e.requestAnimationFrame; ++s)
                    t.requestAnimationFrame = t[n[s] + "RequestAnimationFrame"],
                    t.cancelAnimationFrame = t[n[s] + "CancelAnimationFrame"] || t[n[s] + "CancelRequestAnimationFrame"];
                t.requestAnimationFrame = t.requestAnimationFrame || function(e) {
                        var n = (new Date).getTime(),
                            s = Math.max(0, 16 - (n - i)),
                            r = t.setTimeout(function() {
                                e(n + s)
                            }, s);
                        return i = n + s,
                            r
                    },
                    t.cancelAnimationFrame = t.cancelAnimationFrame || t.clearTimeout
            }(e),
            b
    })
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(1026),
        g = n(p),
        m = i(120),
        v = n(m),
        y = i(1028),
        b = n(y),
        w = i(176),
        E = i(250),
        k = n(E),
        M = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i.map = i.options.map,
                    i.selectionManager = i.options.selectionManager,
                    i.landmarks = i.options.selection.concat(),
                    i.dataModel = e.dataModel,
                    i.highlightedVenue = null,
                    i.drawingContext = null,
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            landmarksCollection: "#mergeLandmarksCollection"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/merge_venues/feature_editor/merge-venues"
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this.landmarksCollection = new Backbone.Collection(this.landmarks.map(function(t) {
                                return {
                                    lockedForMerge: e._isLockedForMerge(),
                                    venue: t
                                }
                            })),
                            this.showChildView("landmarksCollection", new g.default({
                                collection: this.landmarksCollection
                            }))
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        var t = this.landmarks.map(function(e) {
                                return e.getID()
                            }),
                            i = e.map(function(e) {
                                return e.getID()
                            });
                        return _.intersection(t, i).length > 0
                    }
                }, {
                    key: "_hasUpdateRequests",
                    value: function() {
                        return _.some(this.landmarks, function(e) {
                            return e.hasUpdateRequests()
                        })
                    }
                }, {
                    key: "_hasAdLockAlert",
                    value: function() {
                        return _.some(this.landmarks, function(e) {
                            return e.isAdLocked()
                        })
                    }
                }, {
                    key: "_isLockedForLevel",
                    value: function() {
                        return _.some(this.landmarks, function(e) {
                            return e.requiresModeration()
                        })
                    }
                }, {
                    key: "_hasMixedParkingCategory",
                    value: function() {
                        var e = _.some(this.landmarks, function(e) {
                                return e.isParkingLot()
                            }),
                            t = _.some(this.landmarks, function(e) {
                                return !e.isParkingLot()
                            });
                        return e && t
                    }
                }, {
                    key: "_isLockedForMerge",
                    value: function() {
                        return this._isLockedForLevel() || this._hasUpdateRequests() || this._hasAdLockAlert() || this._hasCountLock() || this._isPlacesTooFar()
                    }
                }, {
                    key: "_hasCountLock",
                    value: function() {
                        return this.landmarks.length > 5
                    }
                }, {
                    key: "onChildviewMergeClick",
                    value: function(e) {
                        var t = this,
                            i = new b.default({
                                venues: this.landmarks,
                                dataModel: this.dataModel,
                                mainVenue: e
                            });
                        i.on("doMerge", function(e) {
                                var i = new k.default(e.sourceVenues, e.targetVenues, e.attributes);
                                t.dataModel.actionManager.add(i)
                            }),
                            W.app.layout.getRegion("dialogRegion").show(i)
                    }
                }, {
                    key: "onChildviewRemoveClick",
                    value: function(e) {
                        this.selectionManager.setSelectedModels(_.reject(this.landmarks, function(t) {
                            return t.getID() === e.getID()
                        }))
                    }
                }, {
                    key: "onChildviewCardMouseOver",
                    value: function(e) {
                        this._highlightVenue(e)
                    }
                }, {
                    key: "onChildviewCardMouseLeave",
                    value: function(e) {
                        this._unHighlightVenue(e)
                    }
                }, {
                    key: "_highlightVenue",
                    value: function(e) {
                        this.highlightedVenue !== e && (this.highlightedVenue = e,
                            this._drawGeometry(e.attributes.geometry))
                    }
                }, {
                    key: "_unHighlightVenue",
                    value: function(e) {
                        this.highlightedVenue === e && (this.highlightedVenue = null,
                            this.drawingContext && (this.drawingContext.clear(),
                                this._destroyDrawingContext()))
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this.drawingContext && (this.drawingContext = this.map.getDrawingContext(),
                                this.drawingContext.setStyleMap(w.MergeHGighlightStyleMap),
                                this.drawingContext.moveLayerToTop()),
                            this.drawingContext
                    }
                }, {
                    key: "_drawGeometry",
                    value: function(e) {
                        this._getDrawingContext().addFeatures([new OL.Feature.Vector(e.clone())])
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        null != this.drawingContext && (this.drawingContext.destroy(),
                            this.drawingContext = null)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "_isPlacesTooFar",
                    value: function() {
                        for (var e = 0; e < this.landmarks.length; e++)
                            for (var t = 0; t < e; t++)
                                if (this._isLandmarksTooFar(this.landmarks[e], this.landmarks[t], 400))
                                    return !0;
                        return !1
                    }
                }, {
                    key: "_isLandmarksTooFar",
                    value: function(e, t, i) {
                        return e.geometry.distanceTo(t.geometry) > 400
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            numVenues: this.options.selection.length,
                            showPendingUpdateRequestAlert: this._hasUpdateRequests(),
                            showAdLockAlert: this._hasAdLockAlert(),
                            showLockLevelAlert: this._isLockedForLevel(),
                            showParkingAlert: this._hasMixedParkingCategory(),
                            showCountAlert: this._hasCountLock(),
                            showDistanceAlert: this._isPlacesTooFar(),
                            maxLandmarksCount: 5
                        }
                    }
                }]),
                t
        }(v.default);
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(1027),
        g = n(p),
        m = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "childView",
                    value: function() {
                        return g.default
                    }
                }, {
                    key: "onChildviewMergeClick",
                    value: function(e) {
                        this.trigger("mergeClick", e)
                    }
                }, {
                    key: "onChildviewRemoveClick",
                    value: function(e) {
                        this.trigger("removeClick", e)
                    }
                }, {
                    key: "onChildviewCardMouseOver",
                    value: function(e) {
                        this.trigger("cardMouseOver", e)
                    }
                }, {
                    key: "onChildviewCardMouseLeave",
                    value: function(e) {
                        this.trigger("cardMouseLeave", e)
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(4),
        f = n(h),
        p = i(16),
        g = n(p),
        m = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return i._venue = i.model.get("venue"),
                    i.viewModel = new Backbone.Model({
                        lockedForMerge: i.model.get("lockedForMerge"),
                        venue: i._venue,
                        lockedForLevel: i._isLockedForLevel(),
                        hasPURs: i._venue.hasUpdateRequests()
                    }),
                    i
            }
            return (0,
                    f.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .do-merge": "_onDoMergeButtonClick",
                            "click .do-remove": "_onCardRemoveButtonClick",
                            "mouseover .merge-item": "_onCardMouseOver",
                            "mouseleave .merge-item": "_onCardMouseLeave",
                            "click .purs": "_onPURsBadgeClicked"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            mergeClick: "mergeClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".merge-item": {
                                classes: {
                                    disabled: {
                                        observe: "lockedForMerge"
                                    }
                                }
                            },
                            ".lock": {
                                observe: "lockedForLevel",
                                visible: !0
                            },
                            ".purs": {
                                observe: "hasPURs",
                                visible: !0
                            },
                            ".icon-container": {
                                classes: {
                                    disabled: {
                                        observe: ["hasPURs", "lockedForLevel"],
                                        onGet: function(e) {
                                            return _.some(e)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            pursIcon: ".purs",
                            lockIcon: ".lock"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/merge_venues/feature_editor/landmark-item-view"
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "onRender",
                    value: function() {
                        this.stickit(this.viewModel, this.bindings()),
                            this._createToolTip()
                    }
                }, {
                    key: "_createToolTip",
                    value: function() {
                        this.ui.pursIcon.tooltip(),
                            this.ui.lockIcon.tooltip()
                    }
                }, {
                    key: "_onDoMergeButtonClick",
                    value: function() {
                        this.viewModel.get("lockedForMerge") || this.trigger("mergeClick", this._venue)
                    }
                }, {
                    key: "_onCardRemoveButtonClick",
                    value: function() {
                        this.trigger("removeClick", this._venue)
                    }
                }, {
                    key: "_onCardMouseOver",
                    value: function() {
                        this.trigger("cardMouseOver", this._venue)
                    }
                }, {
                    key: "_onCardMouseLeave",
                    value: function() {
                        this.trigger("cardMouseLeave", this._venue)
                    }
                }, {
                    key: "_onPURsBadgeClicked",
                    value: function() {
                        return W.commands.execute("place_updates:list", this.viewModel.get("venue"))
                    }
                }, {
                    key: "_getCategoryClassName",
                    value: function() {
                        var e = this._venue.attributes.categories,
                            t = this._venue.getMainCategory();
                        return (e[0] + " " + t).toLowerCase()
                    }
                }, {
                    key: "_isLockedForLevel",
                    value: function() {
                        return this._venue.requiresModeration()
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this.ui.pursIcon.tooltip("destroy"),
                            this.ui.lockIcon.tooltip("destroy")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this._venue;
                        return {
                            categoryClass: this._getCategoryClassName(),
                            name: e.attributes.name,
                            createdBy: e.attributes.createdBy,
                            createdOn: e.attributes.createdOn,
                            lockRank: g.default.formatRank(e.attributes.lockRank),
                            pursCount: e.attributes.venueUpdateRequests.length
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(17),
        o = n(a),
        l = i(2),
        u = n(l),
        d = i(0),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(3),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(183),
        b = n(y),
        w = i(136),
        E = n(w),
        k = i(1029),
        M = n(k),
        S = i(1030),
        T = n(S),
        C = i(1031),
        I = n(C),
        A = i(1032),
        D = n(A),
        R = i(1033),
        O = n(R),
        L = i(291),
        x = i(16),
        P = n(x),
        N = i(76),
        V = n(N),
        F = i(50),
        U = n(F),
        j = i(62),
        B = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "className",
                    value: function() {
                        return "merge-landmark-view"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-close": "_onCloseClicked",
                            "click .do-apply": "_onApplyClicked"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            ".parking-attributes": {
                                observe: L.VENUE_FIELDS.CATEGORIES,
                                visible: function(e) {
                                    return e.indexOf(j.PARKING_LOT) > -1
                                }
                            },
                            ".parking-message": {
                                observe: L.VENUE_FIELDS.CATEGORIES,
                                visible: function(t) {
                                    return e._hasParkingLot() && -1 === t.indexOf(j.PARKING_LOT)
                                }
                            },
                            ".brand-region": {
                                observe: L.VENUE_FIELDS.CATEGORIES,
                                visible: function(e) {
                                    return e.indexOf(j.GAS_STATION) > -1
                                }
                            },
                            ".brand-message": {
                                observe: L.VENUE_FIELDS.CATEGORIES,
                                visible: function(t) {
                                    return e._hasGasStation() && -1 === t.indexOf(j.GAS_STATION)
                                }
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        var e;
                        return e = {},
                            (0,
                                o.default)(e, L.VENUE_FIELDS.NAME, ".name-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.DESCRIPTION, ".description-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.STREET_ID, ".address-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.LOCK_RANK, ".lockRank-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.BRAND, ".brand-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.CATEGORIES, ".categories-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.EXTERNAL_PROVIDER_IDS, ".externalProviderIDs-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.OPENING_HOURS, ".openingHours-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.URL, ".url-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.PHONE, ".phone-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.SERVICES, ".services-region"),
                            (0,
                                o.default)(e, L.VENUE_FIELDS.IMAGES, ".images-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.PARKING_TYPE, ".parkingType-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.HAS_TBR, ".hasTBR-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.CAN_EXIT_WHILE_CLOSED, ".canExitWhileClosed-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.COST_TYPE, ".costType-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.PAYMENT_TYPE, ".paymentType-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.EXTIMATED_NUMBER_OF_SPOTS, ".estimatedNumberOfSpots-region"),
                            (0,
                                o.default)(e, L.PARKING_FIELDS.LOT_TYPE, ".lotType-region"),
                            e
                    }
                }, {
                    key: "fieldsConfig",
                    value: function(e, t) {
                        var i, n, s = this;
                        return {
                            VENUE_FIELDS: (i = {
                                    DEFAULT: {
                                        title: function(e) {
                                            return I18n.t("edit.landmark.fields." + e)
                                        },
                                        optionsList: t.getPropertyOptions.bind(t),
                                        minLength: 2,
                                        view: E.default,
                                        observeAttribute: _.identity,
                                        model: e,
                                        allowNull: !1,
                                        labels: this._optionsListToLabels
                                    }
                                },
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.NAME, {
                                    view: O.default,
                                    observeAttribute: L.VENUE_FIELDS.ALIASES,
                                    mainAttribute: L.VENUE_FIELDS.NAME
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.DESCRIPTION, {
                                    view: I.default,
                                    minLength: 0,
                                    allowNull: !0
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.STREET_ID, {
                                    view: b.default,
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            if (!e)
                                                return I18n.t("merge_places.empty");
                                            var t = U.default.fromStreetID(e, s.dataModel);
                                            return P.default.formatAddress(t)
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.LOCK_RANK, {
                                    view: b.default,
                                    minLength: 0,
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return P.default.formatRank(e)
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.BRAND, {
                                    view: b.default,
                                    allowNull: !0,
                                    style: "single-line"
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.CATEGORIES, {
                                    view: M.default,
                                    minLength: 1,
                                    minSelectionCount: 1,
                                    mainAttribute: L.MAIN_CATEGORY,
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return I18n.t("venues.categories." + e)
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.EXTERNAL_PROVIDER_IDS, {
                                    view: D.default,
                                    minLength: 1,
                                    labels: this._createProviderIdLabels
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.OPENING_HOURS, {
                                    minLength: 1
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.URL, {
                                    view: b.default,
                                    minLength: 2,
                                    style: "single-line"
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.PHONE, {
                                    view: b.default,
                                    minLength: 2,
                                    style: "single-line",
                                    allowNull: !0
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.SERVICES, {
                                    minLength: 1,
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return I18n.t("venues.services." + e)
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(i, L.VENUE_FIELDS.IMAGES, {
                                    view: T.default,
                                    imagesUrls: function() {
                                        var e = t.createImagesList(L.VENUE_FIELDS.IMAGES).filter(function(e) {
                                            return e.attributes.approved
                                        });
                                        return _.compact(e.map(function(e) {
                                            return e.getUrl(V.default.SIZE.WEB)
                                        }))
                                    },
                                    minLength: 1,
                                    style: "waze-checkbox-select"
                                }),
                                i),
                            PARKING_FIELDS: (n = {
                                    DEFAULT: {
                                        title: function(e) {
                                            return I18n.t("edit.landmark.parking.fields." + e)
                                        },
                                        optionsList: t.getParkingPropertyOptions.bind(t),
                                        minLength: 2,
                                        view: b.default,
                                        observeAttribute: _.identity,
                                        model: e,
                                        allowNull: !1,
                                        labels: function(e, t) {
                                            return t.map(function(t) {
                                                return t ? I18n.t("edit.landmark.parking.types." + e + "." + t) : I18n.t("merge_places.empty")
                                            })
                                        }
                                    }
                                },
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.PARKING_TYPE, {
                                    allowNull: !0,
                                    style: "single-line"
                                }),
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.HAS_TBR, {
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return e ? I18n.t("edit.landmark.parking.general.yes") : I18n.t("edit.landmark.parking.general.no")
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.CAN_EXIT_WHILE_CLOSED, {
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return e ? I18n.t("edit.landmark.parking.general.yes") : I18n.t("edit.landmark.parking.general.no")
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.COST_TYPE, {
                                    style: "single-line"
                                }),
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.PAYMENT_TYPE, {
                                    view: E.default,
                                    minLength: 1
                                }),
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.EXTIMATED_NUMBER_OF_SPOTS, {
                                    style: "single-line",
                                    allowNull: !0,
                                    labels: function(e, t) {
                                        return t.map(function(t) {
                                            return t ? I18n.t("edit.landmark.parking.types." + e + "." + t) : I18n.t("merge_places.estimate")
                                        })
                                    }
                                }),
                                (0,
                                    o.default)(n, L.PARKING_FIELDS.LOT_TYPE, {
                                    view: E.default,
                                    minLength: 1,
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return I18n.t("edit.landmark.parking.types.lotType." + e)
                                        })
                                    }
                                }),
                                n)
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.venues = e.venues,
                            this.mainVenue = e.mainVenue,
                            this.dataModel = e.dataModel,
                            this.merger = new L.LandmarkMerger({
                                venues: this.venues,
                                mainVenue: this.mainVenue,
                                dataModel: this.dataModel
                            }),
                            this.model = this.merger.getModel()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._createAttributes(),
                            this.stickit()
                    }
                }, {
                    key: "_createAttributes",
                    value: function() {
                        var e = this.fieldsConfig(this.model, this.merger),
                            t = e.VENUE_FIELDS,
                            i = e.PARKING_FIELDS;
                        this._createSelectionFields(t),
                            this._hasParkingLot() && this._createSelectionFields(i)
                    }
                }, {
                    key: "_createSelectionFields",
                    value: function(e) {
                        var t = this;
                        _.without((0,
                            r.default)(e), "DEFAULT").forEach(function(i) {
                            var n = _.extend({}, e.DEFAULT, e[i]);
                            t._createSelectionView(i, n)
                        })
                    }
                }, {
                    key: "_createSelectionView",
                    value: function(e, t) {
                        var i = this;
                        if (t.optionsList = this._getOrCAll(t, "optionsList", e, t.allowNull),
                            _.without((0,
                                r.default)(t), "view", "optionsList").forEach(function(n) {
                                t[n] = i._getOrCAll(t, n, e, t.optionsList)
                            }),
                            t.optionsList.length >= t.minLength) {
                            var n = t.view;
                            this.showChildView(e, new n(t), t.optionsList)
                        }
                    }
                }, {
                    key: "_getOrCAll",
                    value: function(e, t, i, n) {
                        return "function" == typeof e[t] ? e[t].call(this, i, n) : e[t]
                    }
                }, {
                    key: "_optionsListToLabels",
                    value: function(e, t) {
                        return t.map(function(e) {
                            return null === e || "" === e ? I18n.t("merge_places.empty") : e
                        })
                    }
                }, {
                    key: "_hasParkingLot",
                    value: function() {
                        return _.some(this.venues, function(e) {
                            return e.isParkingLot()
                        })
                    }
                }, {
                    key: "_hasGasStation",
                    value: function() {
                        return _.some(this.venues, function(e) {
                            return e.isGasStation()
                        })
                    }
                }, {
                    key: "_onCloseClicked",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "_createProviderIdLabels",
                    value: function() {
                        return this.merger.getPropertyOptions(L.VENUE_FIELDS.EXTERNAL_PROVIDER_IDS)
                    }
                }, {
                    key: "_onApplyClicked",
                    value: function() {
                        var e = this.merger.getNewAttributes(),
                            t = this.merger.getSourceVenues(),
                            i = this.merger.getTargetVenue();
                        this.trigger("doMerge", {
                                attributes: e,
                                sourceVenues: t,
                                targetVenues: i
                            }),
                            this.destroy()
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank();
                        return _.range(0, e + 1)
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            placesCount: this.venues.length,
                            mainPlaceName: this.mainVenue.attributes.name
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/layout"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = B,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(290),
        v = n(m),
        y = i(62),
        b = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "_onModelChange",
                    value: function(e, i) {
                        var n = e.previous(this.observeAttribute),
                            s = n.indexOf(y.PARKING_LOT) > -1,
                            a = i.indexOf(y.PARKING_LOT) > -1;
                        s ? a && i.length > 1 && (i = _.without(i, y.PARKING_LOT),
                                this.model.set(this.observeAttribute, i)) : a && i.length > 1 && this.model.set(this.observeAttribute, [y.PARKING_LOT]),
                            (0,
                                f.default)(t.prototype.__proto__ || (0,
                                r.default)(t.prototype), "_onModelChange", this).call(this, e, i)
                    }
                }, {
                    key: "_onMainChange",
                    value: function(e, t) {
                        var i = this.getSelected(); -
                        1 === i.indexOf(t) && (t === y.PARKING_LOT || i.indexOf(y.PARKING_LOT) > -1 ? i = [t] : i.push(t),
                            this.setSelection(i))
                    }
                }]),
                t
        }(v.default);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(8),
        f = n(h),
        p = i(1),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(136),
        y = n(_),
        b = function(e) {
            function t(e) {
                (0,
                    u.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, e));
                return i.imagesUrls = e.imagesUrls,
                    i
            }
            return (0,
                    v.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/images_selection_view"
                    }
                }]),
                (0,
                    g.default)(t, [{
                    key: "_getUrlById",
                    value: function(e) {
                        var t = this.optionsList.indexOf(e);
                        return this.imagesUrls[t]
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return (0,
                            r.default)((0,
                            f.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "templateContext", this).call(this), {
                            getUrlById: this._getUrlById.bind(this)
                        })
                    }
                }]),
                t
        }(y.default);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(8),
        v = n(m),
        y = i(183),
        b = n(y),
        w = i(291),
        E = function(e) {
            function t(e) {
                (0,
                    u.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, e));
                return i.model.set(w.CUSTOM_DESCRIPTION, ""),
                    i
            }
            return (0,
                    g.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return _.extend((0,
                            v.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "bindings", this).call(this), {
                            textarea: w.CUSTOM_DESCRIPTION,
                            ".text-container": {
                                observe: this.observeAttribute,
                                visible: function(e) {
                                    return e === w.CUSTOM_DESCRIPTION
                                }
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/description_selection_view"
                    }
                }]),
                (0,
                    f.default)(t, [{
                    key: "_optionToValue",
                    value: function(e) {
                        return e === w.CUSTOM_DESCRIPTION ? e : this.optionsList.indexOf(e)
                    }
                }, {
                    key: "_valueToOption",
                    value: function(e) {
                        return e === w.CUSTOM_DESCRIPTION ? e : this.optionsList[e]
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return (0,
                            r.default)((0,
                            v.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "templateContext", this).call(this), {
                            CUSTOM_DESCRIPTION: w.CUSTOM_DESCRIPTION
                        })
                    }
                }]),
                t
        }(b.default);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(1),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(136),
        v = n(m),
        _ = i(166),
        y = n(_),
        b = function(e) {
            function t(e) {
                (0,
                    u.default)(this, t);
                var i = (0,
                    c.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, e));
                return i.selectionOptions = e,
                    i.model = new Backbone.Model({
                        loading: !0
                    }),
                    i
            }
            return (0,
                    g.default)(t, e),
                (0,
                    f.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            externalProviders: ".selection-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".loader": {
                                observe: "loading",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/MergeLandmark/templates/external_providers_view"
                    }
                }]),
                (0,
                    f.default)(t, [{
                    key: "_loadExternalProvidersData",
                    value: function() {
                        var e = this;
                        this.externalProviders = this.selectionOptions.optionsList.map(function(e) {
                            return new y.default({
                                uuid: e
                            })
                        });
                        var t = this.externalProviders.map(function(e) {
                            return e.getDetails()
                        });
                        r.default.all(t).finally(function() {
                            e.model.set("loading", !1)
                        })
                    }
                }, {
                    key: "_showSelectionView",
                    value: function() {
                        this.selectionOptions.labels = this.externalProviders.map(function(e) {
                                return e.get("name")
                            }),
                            this.showChildView("externalProviders", new v.default(this.selectionOptions))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._loadExternalProvidersData()
                    }
                }]),
                t
        }(Marionette.View);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(3),
        u = n(l),
        d = i(4),
        c = n(d),
        h = i(290),
        f = n(h),
        p = function(e) {
            function t(e) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e));
                return -1 === i.optionsList.indexOf("") && (i.minSelectionCount = 1),
                    i
            }
            return (0,
                    c.default)(t, e),
                t
        }(f.default);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1035),
        r = n(s),
        a = i(1039),
        o = n(a),
        l = i(1040),
        u = n(l),
        d = Marionette.View.extend({
            template: "templates/sidebar/user-info",
            className: "flex-parent",
            ui: {
                feedContainer: "#sidepanel-feed",
                feedRefresh: ".feed-refresh"
            },
            regions: {
                userDetailsRegion: "#user-details",
                preferencesRegion: "#sidepanel-prefs"
            },
            initialize: function(e) {
                this.user = this.model.get("user"),
                    this.feedControl = e.feedControl
            },
            onRender: function() {
                var e = this;
                return this.showChildView("preferencesRegion", new u.default({
                        model: W.prefs
                    })),
                    this.showChildView("userDetailsRegion", new o.default({
                        model: this.user
                    })),
                    this.feedControl.render({
                        el: this.ui.feedContainer
                    }),
                    $(this.ui.feedRefresh).click(function() {
                        return e.feedControl.refresh()
                    })
            },
            onAttach: function() {
                this.archiveControl = new r.default,
                    W.map.addControl(this.archiveControl),
                    this.archiveControl.activate(),
                    this.archiveControl.reset()
            },
            onDestroy: function() {
                this.archiveControl = null,
                    this.preferencesView && this.preferencesView.destroy(),
                    this.preferencesView = null
            },
            serializeData: function() {
                return {
                    user: this.user
                }
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(19),
        o = n(a),
        l = i(40),
        u = n(l),
        d = i(1036),
        c = n(d),
        h = i(1037),
        f = n(h),
        p = i(1038),
        g = n(p),
        m = OpenLayers.Class(OpenLayers.Control, u.default, {
            sidePanelView: null,
            editableAreasListView: null,
            layerView: null,
            panelView: null,
            editableAreasLayer: null,
            model: null,
            currentSessionList: null,
            currentSessionData: null,
            currentSession: null,
            currentUser: null,
            editableAreas: null,
            initialize: function() {
                OpenLayers.Control.prototype.initialize.apply(this, arguments),
                    this.sidePanelView = new c.default($("#sidepanel-drives")),
                    this.editableAreasListView = new g.default($("#sidepanel-areas")),
                    this.layerView = W.map.archiveLayer,
                    this.editableAreasLayer = W.map.userLayer,
                    this.layerView.pm = this,
                    this.model = W.model,
                    this._createEditableAreas()
            },
            _createEditableAreas: function() {
                var e = this.model.loginManager.user;
                this.editableAreas = e.areas.map(function(e, t) {
                    var i = _.extend({}, e, {
                        num: t
                    });
                    return new Backbone.Model(i)
                })
            },
            registerListeners: function() {
                this.sidePanelView.events.on({
                        shown: this.onSessionsListShown,
                        sessionClicked: this.onSessionClicked,
                        paginationLinkClicked: this.onPaginationLinkClicked,
                        searchSubmitted: this.onSearchSubmitted,
                        scope: this
                    }),
                    this.editableAreasListView.events.on({
                        areaClicked: this.onAreaClicked,
                        areasPaginationLinkClicked: this.onAreasPaginationLinkClicked,
                        scope: this
                    })
            },
            reset: function(e) {
                this.currentSessionList = null,
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.loadSessions(-1),
                    this.sidePanelView.reset(),
                    this.loadEditableAreas(),
                    this.layerView.clearDrive()
            },
            activate: function() {
                OpenLayers.Control.prototype.activate.apply(this, arguments),
                    this.registerListeners()
            },
            show: function() {
                this.sidePanelView.events.triggerEvent("shown")
            },
            onSessionsListShown: function(e) {
                null === this.currentSessionList && (this.loadSessions(0),
                    W.Report.generalAction("userdrive_clicked"))
            },
            onPaginationLinkClicked: function(e) {
                this.loadSessions(e.index)
            },
            onAreasPaginationLinkClicked: function(e) {
                var t = this.editableAreasListView.ResultsPerPage,
                    i = e.index,
                    n = this.editableAreas.slice(i * t, (i + 1) * t);
                this.editableAreasListView.setEditableAreasPage(n)
            },
            loadEditableAreas: function() {
                var e = this.model.loginManager.user,
                    t = [];
                e && (t = e.areas || []),
                    this.editableAreasListView.setEditableAreas(t.length),
                    this.onAreasPaginationLinkClicked({
                        index: 0
                    })
            },
            loadSessions: function(e) {
                var t = this;
                if (!this.model.loginManager.user || -1 === e)
                    return void this.sidePanelView.setSessions(0);
                this.sidePanelView.setLoading(!0);
                var i = {
                    minDistance: 1e3,
                    offset: e * this.sidePanelView.ResultsPerPage,
                    count: this.sidePanelView.ResultsPerPage
                };
                null !== this.currentUser && (i.username = this.currentUser),
                    this.model.archives.get(null, i).then(function(e) {
                        var i = t.model.archives.additionalInfo.totalSessions;
                        null === t.currentSessionList && t.sidePanelView.setSessions(i),
                            t.sidePanelView.setSessionsPage(e, t.currentUser, t.model.loginManager.user.isStaff),
                            t.currentSessionList = e
                    }).catch(function() {
                        t.sidePanelView.showError()
                    }).finally(function() {
                        t.sidePanelView.setLoading(!1)
                    })
            },
            onAreaClicked: function(e) {
                var t = this.model.loginManager.user.areas[e.areaIndex];
                this.editableAreasLayer.setVisibility(!0),
                    this.ZoomToEditableArea(t)
            },
            ZoomToEditableArea: function(e) {
                var t = e.geometry.getBounds(),
                    i = this.map.getZoomForExtent(t);
                this.map.setCenter(t.getCenterLonLat(), i)
            },
            onSessionClicked: function(e) {
                var t = this;
                o.default.all([this.model.archives.get(e.id), this.model.archiveSessions.get(e.id)]).then(function(i) {
                    var n = (0,
                            r.default)(i, 2),
                        s = n[0],
                        a = n[1];
                    t.currentSession = s,
                        t.sidePanelView.setSelectedSession(e.id),
                        $.isArray(a) && (a = a[0]),
                        t.currentSessionData = a,
                        null !== t.panelView && (t.panelView.off(),
                            t.panelView.destroy()),
                        t.panelView = new f.default({
                            model: a
                        }),
                        t.panelView.on("destroy", t.onPanelClosed, t),
                        W.map.panelRegion.show(t.panelView),
                        t.layerView.drawDrive(),
                        t.layerView.zoomToDrive()
                })
            },
            onSearchSubmitted: function(e) {
                e.username ? this.currentUser = e.username : this.currentUser = null,
                    this.currentSessionList = null,
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.loadSessions(0),
                    this.sidePanelView.reset(),
                    this.loadEditableAreas(),
                    this.layerView.clearDrive()
            },
            onPanelClosed: function() {
                this.sidePanelView.setSelectedSession(null),
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.layerView.clearDrive()
            },
            disable: function() {
                u.default.prototype.disable.apply(this, arguments),
                    this.onPanelClosed()
            },
            CLASS_NAME: "Waze.Control.Archive"
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(33),
        c = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this.events = new OpenLayers.Events(this),
                    this.$element = t,
                    this.render()
            }
            return (0,
                    u.default)(e, [{
                    key: "render",
                    value: function() {
                        var e = this;
                        this.$element.delegate(".result", "click", function() {
                                var t = this.dataset.id;
                                $(this).hasClass("session-available") && e.events.triggerEvent("sessionClicked", {
                                    id: t
                                })
                            }),
                            $('a[href="#' + this.$element.attr("id") + '"]').on("show.bs.tab", function() {
                                e.events.triggerEvent("shown")
                            })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.events.destroy()
                    }
                }, {
                    key: "setLoading",
                    value: function(e) {
                        e ? (this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").addClass("loading"),
                            this.$element.find(".loading-animation").removeClass("hide")) : (this.$element.find(".pagination").removeClass("loading"),
                            this.$element.find(".loading-animation").addClass("hide"))
                    }
                }, {
                    key: "setSessions",
                    value: function(e) {
                        this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                            this.$element.find(".pagination").pagination(e, {
                                callback: this.onPaginationLinkClicked.bind(this),
                                items_per_page: this.ResultsPerPage,
                                num_display_entries: this.ResultsPerPage - 1,
                                next_text: "",
                                prev_text: "",
                                num_edge_entries: 1,
                                ellipse_text: "..."
                            })
                    }
                }, {
                    key: "setSessionsPage",
                    value: function(e, t, i) {
                        var n = this;
                        this.$element.find(".result-list-container").html((0,
                                d.getHTML)("templates/archive-sessions", {
                                sessions: e,
                                username: t,
                                isStaff: i
                            })),
                            this.$element.find(".sessions-search form").on("submit", function(e) {
                                e.preventDefault();
                                var t = $(e.target);
                                n.events.triggerEvent("searchSubmitted", {
                                    username: t.find("input[name=username]").val()
                                })
                            })
                    }
                }, {
                    key: "setSelectedSession",
                    value: function(e) {
                        this.$element.find("#archive-sessions .result").removeClass("selected"),
                            null !== e && this.$element.find("#archive-sessions .result[data-id=" + e + "]").addClass("selected")
                    }
                }, {
                    key: "onPaginationLinkClicked",
                    value: function(e) {
                        this.events.triggerEvent("paginationLinkClicked", {
                            index: e
                        })
                    }
                }, {
                    key: "onAreaPaginationLinkClicked",
                    value: function(e) {
                        this.events.triggerEvent("areasPaginationLinkClicked", {
                            index: e
                        })
                    }
                }, {
                    key: "showError",
                    value: function() {
                        this.$element.find(".error").removeClass("hide")
                    }
                }, {
                    key: "reset",
                    value: function() {}
                }, {
                    key: "show",
                    value: function() {}
                }, {
                    key: "hide",
                    value: function() {}
                }]),
                e
        }();
    (0,
        r.default)(c.prototype, {
        ResultsPerPage: 15,
        CLASS_NAME: "Waze.View.Archive"
    }),
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/archive-panel",
        serializeData: function() {
            return {
                fromAddress: this.model.fromLocation,
                toAddress: this.model.toLocation
            }
        },
        templateContext: {
            formatAddress: function(e) {
                var t = [e.city, e.street];
                return t = _.compact(t),
                    t.join(", ")
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(33),
        c = function() {
            function e(t) {
                (0,
                    o.default)(this, e),
                this.events = new OpenLayers.Events(this),
                    this.$element = t,
                    this.render()
            }
            return (0,
                    u.default)(e, [{
                    key: "render",
                    value: function() {
                        var e = this;
                        this.$element.delegate(".result", "click", function() {
                            var t = $(this).data("index");
                            e.events.triggerEvent("areaClicked", {
                                areaIndex: t
                            })
                        })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.events.destroy()
                    }
                }, {
                    key: "setLoading",
                    value: function(e) {
                        e ? (this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").addClass("loading")) : this.$element.find(".pagination").removeClass("loading")
                    }
                }, {
                    key: "setEditableAreas",
                    value: function(e) {
                        this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                            this.$element.find(".pagination").pagination(e, {
                                callback: this.onAreaPaginationLinkClicked.bind(this),
                                items_per_page: this.ResultsPerPage,
                                num_display_entries: this.ResultsPerPage - 1,
                                next_text: "",
                                prev_text: "",
                                num_edge_entries: 1,
                                ellipse_text: "..."
                            })
                    }
                }, {
                    key: "setEditableAreasPage",
                    value: function(e) {
                        this.$element.find(".result-list-container").html((0,
                            d.getHTML)("templates/editable-areas", {
                            areas: e
                        }))
                    }
                }, {
                    key: "onAreaPaginationLinkClicked",
                    value: function(e) {
                        this.events.triggerEvent("areasPaginationLinkClicked", {
                            index: e
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {}
                }, {
                    key: "show",
                    value: function() {}
                }, {
                    key: "hide",
                    value: function() {}
                }]),
                e
        }();
    (0,
        r.default)(c.prototype, {
        ResultsPerPage: 15,
        CLASS_NAME: "Waze.View.EditableAreas"
    }),
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(33),
        s = Marionette.View.extend({
            template: "templates/sidebar/user-details",
            events: {
                "click .logout-link": "_onLogoutClicked"
            },
            onRender: function() {
                return this.$el.find("#permissions-info").tooltip({
                    placement: "bottom",
                    title: (0,
                        n.getHTML)("templates/sidebar/user-permissions-tooltip", {
                        editableMiles: this.model.editableMiles,
                        isCountryManager: this.model.isCountryManager(),
                        isAreaManager: this.model.isAreaManager
                    }),
                    html: !0
                })
            },
            serializeData: function() {
                return this.model.getAttributes()
            },
            _onLogoutClicked: function() {
                return W.loginManager.logout()
            }
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1041),
        r = n(s),
        a = i(135),
        o = n(a),
        l = Backbone.Marionette.View.extend({
            template: "templates/prefs-panel",
            regions: {
                envSelectRegion: "#env-select"
            },
            behaviors: {
                accelerators: {
                    behaviorClass: o.default
                }
            },
            events: {
                "change .language-select": "_onLanguageChange"
            },
            accelerators: {
                spreadArrows: "_onSpreadArrowsClicked",
                hideArrows: "_onHideArrowClicked"
            },
            bindings: {
                "input[name=twoWayRoad]": "twoWaySegmentsByDefault",
                "input[name=turnsAllowed]": "enableTurnsByDefault",
                "input[name=requireDeselect]": "requireFeatureDeselect",
                "input[name=units-radio]": "isImperial",
                "input[name=spreadTurnArrows]": "spreadTurnArrows",
                "input[name=showTransparentTurnArrows]": "showTransparentTurnArrows"
            },
            onRender: function() {
                this.showChildView("envSelectRegion", new r.default),
                    this.stickit()
            },
            _onLanguageChange: function(e) {
                var t = $(e.target).val();
                return W.location.setLocale(t),
                    W.location.redirectToLocale()
            },
            _onSpreadArrowsClicked: function() {
                this.model.set({
                    spreadTurnArrows: !this.model.get("spreadTurnArrows")
                })
            },
            _onHideArrowClicked: function() {
                this.model.set({
                    showTransparentTurnArrows: !this.model.get("showTransparentTurnArrows")
                })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/location-switcher",
        events: {
            "change select": "onLocationChanged"
        },
        onLocationChanged: function(e) {
            var t = $(e.target).val();
            if (t)
                return this.changeLocation(t)
        },
        changeLocation: function(e) {
            return W.location.changeAndRemovePermalink(e)
        },
        templateContext: {
            isCurrentEnv: function(e) {
                return W.location.code === e
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/sidebar/user-sandbox",
        events: {
            "click .sign-in-button": "_onLoginButtonClick"
        },
        initialize: function(e) {
            this.app = e.app
        },
        _onLoginButtonClick: function() {
            this.app.disableSandboxMode(!1)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(292),
        r = n(s),
        a = i(293),
        o = n(a),
        l = i(294),
        u = n(l),
        d = i(1048),
        c = n(d),
        h = i(1050),
        f = n(h),
        p = i(1051),
        g = n(p),
        m = Marionette.Object.extend({
            initialize: function(e) {
                this.map = e.map,
                    this.controller = e.controller,
                    this.editingMediator = e.mediator,
                    this.actionManager = e.actionManager,
                    this.selectionManager = e.selectionManager,
                    this.dataModel = e.dataModel,
                    this.app = e.app,
                    this.loginManager = e.loginManager,
                    this.toolbarLayout = new r.default({
                        model: this.app
                    }),
                    this.listenTo(this.toolbarLayout, "render", this._onRender),
                    this.layerSwitcherController = new u.default({
                        map: this.map,
                        actionManager: this.actionManager,
                        togglerTree: e.togglerTree,
                        controller: this.controller
                    }),
                    this.toolbarCollectionBuilder = new g.default({
                        actionManager: this.actionManager,
                        controller: this.controller,
                        map: this.map,
                        app: this.app,
                        selectionManager: this.selectionManager,
                        dataModel: this.dataModel,
                        loginManager: this.loginManager,
                        editingMediator: this.editingMediator
                    }),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.searchView = new o.default({
                        map: this.map
                    })
            },
            destroy: function() {
                this.layerSwitcherController.destroy(),
                    this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            _onRender: function() {
                return this._showToolbar(),
                    this.toolbarLayout.showChildView("layerSwitcher", this.layerSwitcherController.getLayout()),
                    this.toolbarLayout.showChildView("search", this.searchView),
                    this._setToolbarState(this.editingMediator.get("editingEnabled"))
            },
            _showToolbar: function() {
                this.editingMediator.get("editingHouseNumbers") ? this._showHouseNumbersToolbar() : this._showEditingToolbar()
            },
            _showEditingToolbar: function() {
                var e = this.toolbarCollectionBuilder.getToolbarButtons();
                this.toolbarCollectionView = new c.default({
                        collection: e,
                        map: this.map
                    }),
                    this.toolbarLayout.showChildView("toolbar", this.toolbarCollectionView),
                    this.toolbarLayout.setHouseNumbersState(!1)
            },
            _showHouseNumbersToolbar: function() {
                var e = this.toolbarCollectionBuilder.getHouseNumbersToolbarButtons();
                this.toolbarCollectionView = new f.default({
                        collection: e,
                        map: this.map,
                        mediator: this.editingMediator
                    }),
                    this.toolbarLayout.showChildView("toolbar", this.toolbarCollectionView),
                    this.toolbarLayout.setHouseNumbersState(!0)
            },
            _setToolbarState: function(e) {
                this.enabled = e,
                    this.enabled ? (this.searchView.enable(),
                        this.toolbarCollectionView.enable()) : (this.searchView.disable(),
                        this.toolbarCollectionView.disable())
            },
            _onEditingEnabledChanged: function() {
                return this._setToolbarState(this.editingMediator.get("editingEnabled"))
            },
            onEditingHouseNumbersChanged: function() {
                this._showToolbar()
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mousedown .search-result": "_onClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".search-result": {
                                classes: {
                                    selected: {
                                        observe: "selected"
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        this.trigger("selected", this.model)
                    }
                }, {
                    key: "_getTitle",
                    value: function() {
                        var e = this.model.get("venue");
                        return e.name || e.street || e.city
                    }
                }, {
                    key: "_getDescription",
                    value: function() {
                        var e = this.model.get("venue"),
                            t = "";
                        e.house_number && (t = "house_"),
                            e.street && (t += "street_"),
                            e.city && (t += "city_"),
                            t = t.slice(0, -1);
                        var i = "";
                        e.state && (i = "state_"),
                            e.country && (i += "country_"),
                            i = i.slice(0, -1);
                        var n = I18n.t("toolbar.search_results.address_part2." + i, {
                            state: e.state,
                            country: e.country
                        });
                        if (t) {
                            var s = I18n.t("toolbar.search_results.address_part1." + t, {
                                house_number: e.house_number,
                                street: e.street,
                                city: e.city
                            });
                            return i ? I18n.t("toolbar.search_results.full_address", {
                                address_part1: s,
                                address_part2: n
                            }) : s
                        }
                        return i ? n : ""
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            title: this._getTitle(),
                            description: this._getDescription()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Toolbar/templates/search-result-item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(2),
        r = n(s),
        a = i(0),
        o = n(a),
        l = i(1),
        u = n(l),
        d = i(3),
        c = n(d),
        h = i(4),
        f = n(h),
        p = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".result-error-message": {
                                observe: "showRetrieveError",
                                visible: !0
                            },
                            ".no-results-error-message": {
                                observe: "showNoResultsError",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Toolbar/templates/search-empty-view"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/LayerSwitcher/templates/layout",
        regions: {
            layersList: ".layer-switcher-container"
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(4),
        g = n(p),
        m = i(135),
        v = n(m),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        f.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            menu: ".menu"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "mouseenter .layer-switcher-container": "_show",
                            "mouseleave .layer-switcher-container": "_hide"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.state = e.state,
                            this.treeState = e.treeState,
                            this.viewState = new Backbone.Model({
                                showMoreOptions: !1,
                                visible: !1,
                                pinned: !1
                            }),
                            this._map = e.map,
                            this.stateBindings = this._getStateBindings(),
                            this.treeStateBindings = this._getTreeStateBindings(),
                            this._windowResizeCallback = this._setViewHeight.bind(this),
                            this._hideTimeout = null,
                            this.listenTo(this.viewState, "change:pinned", this._onPinnedChanged),
                            this._onPinnedChanged(),
                            $(window).on("resize", this._windowResizeCallback)
                    }
                }, {
                    key: "_onPinnedChanged",
                    value: function() {
                        this._map.toggleLayerSwitcherPinned(this.viewState.get("pinned"))
                    }
                }, {
                    key: "_show",
                    value: function() {
                        this._cancelHideTimer(),
                            this._toggleVisibility(!0)
                    }
                }, {
                    key: "_hide",
                    value: function() {
                        this.viewState.get("pinned") || this._startHideTimer()
                    }
                }, {
                    key: "_toggle",
                    value: function() {
                        this.viewState.get("visible") ? this._hide() : this._show()
                    }
                }, {
                    key: "_startHideTimer",
                    value: function() {
                        var e = this;
                        this._hideTimeout = window.setTimeout(function() {
                            e._toggleVisibility(!1),
                                e._cancelHideTimer()
                        }, 200)
                    }
                }, {
                    key: "_cancelHideTimer",
                    value: function() {
                        window.clearTimeout(this._hideTimeout),
                            this._hideTimeout = null
                    }
                }, {
                    key: "_toggleVisibility",
                    value: function(e) {
                        this.viewState.set("visible", e),
                            this.ui.menu.toggleClass("not-visible", !e)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        $(window).off("resize", this._windowResizeCallback)
                    }
                }, {
                    key: "_setViewHeight",
                    value: function() {
                        var e = $(".WazeMapFooter").offset().top - this.ui.menu.offset().top;
                        this.ui.menu.outerHeight(e)
                    }
                }, {
                    key: "_getTreeStateBindings",
                    value: function() {
                        return (0,
                            r.default)(this.treeState.attributes).reduce(function(e, t) {
                            return e[".toggler .layer-switcher-" + t.toLowerCase()] = {
                                    attributes: [{
                                        name: "disabled",
                                        observe: t,
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }]
                                },
                                e
                        }, {})
                    }
                }, {
                    key: "_getStateBindings",
                    value: function() {
                        return (0,
                            r.default)(this.state.attributes).reduce(function(e, t) {
                            return e[".layer-switcher-" + t.toLowerCase()] = t,
                                e
                        }, {})
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.state, this.stateBindings),
                            this.stickit(this.treeState, this.treeStateBindings),
                            this.stickit(this.viewState, this.viewStateBindings)
                    }
                }, {
                    key: "onAttach",
                    value: function() {
                        this._setViewHeight()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/LayerSwitcher/templates/layer-switcher"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "layer-switcher"
                    }
                }, {
                    key: "behaviors",
                    get: function() {
                        return {
                            accelerators: {
                                behaviorClass: v.default
                            }
                        }
                    }
                }, {
                    key: "accelerators",
                    get: function() {
                        return {
                            displayLayerSwitcher: "_toggle"
                        }
                    }
                }, {
                    key: "viewStateBindings",
                    get: function() {
                        return {
                            ".extended": {
                                observe: "showMoreOptions",
                                visible: !0
                            },
                            ".more-options-toggle .title": {
                                observe: "showMoreOptions",
                                onGet: function(e) {
                                    return e ? I18n.t("layer_switcher.more_options.hide") : I18n.t("layer_switcher.more_options.show")
                                }
                            },
                            ".more-options-toggle input[name=show-more-options]": "showMoreOptions",
                            "input[name=pinned]": "pinned",
                            ".menu": {
                                classes: {
                                    "not-visible": {
                                        observe: "visible",
                                        onGet: _.negate(_.identity)
                                    }
                                }
                            }
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(184),
        r = n(s),
        a = i(1049),
        o = n(a),
        l = Marionette.CollectionView.extend({
            childView: r.default,
            itemGroupView: o.default,
            initialize: function(e) {
                this.map = e.map
            },
            buildChildView: function(e) {
                var t = {
                    model: e,
                    map: this.map
                };
                return null != e.children ? new this.itemGroupView(t) : new this.childView(t)
            },
            enable: function() {
                return this.children.invoke("enable")
            },
            disable: function() {
                return this.children.invoke("disable")
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(184),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            template: "Waze/Modules/Toolbar/templates/toolbar-item-group",
            enabled: !0,
            className: function() {
                var e = this.model.get("name"),
                    t = void 0;
                return t = this.enabled && this._hasEnabledChildren() ? this._hasActiveChildren() ? "ItemActive" : "ItemInactive" : "ItemDisabled",
                    "toolbar-submenu toolbar-group toolbar-group-" + e + " " + t
            },
            events: {
                mouseover: "_showMenu",
                mouseout: "_hideMenu"
            },
            childViewEvents: {
                controlTriggered: "_hideMenu"
            },
            childView: s.default,
            childViewContainer: "menu",
            collectionEvents: {
                "change:active": function(e, t) {
                    return this.setClassName()
                }
            },
            onRender: function() {
                return this.setClassName()
            },
            setClassName: function() {
                return this.$el.attr({
                    class: _.result(this, "className")
                })
            },
            _showMenu: function() {
                return this.$el.addClass("open")
            },
            _hideMenu: function() {
                return this.$el.removeClass("open")
            },
            _hasActiveChildren: function() {
                return this.model.children.some(function(e) {
                    return e.get("control").active
                })
            },
            _hasEnabledChildren: function() {
                return this.model.children.some(function(e) {
                    return e.get("control").enabled
                })
            },
            enable: function() {
                return this.children.invoke("enable"),
                    this.enabled = !0,
                    this.setClassName()
            },
            disable: function() {
                return this.children.invoke("disable"),
                    this.enabled = !1,
                    this.setClassName()
            },
            initialize: function(e) {
                var t = this;
                this.collection = this.model.children,
                    this.map = e.map,
                    this.childViewOptions = function(e, i) {
                        return {
                            parent: t.model,
                            map: t.map
                        }
                    }
            },
            buildChildView: function(e, t, i) {
                var n = _.extend({
                    model: e
                }, i);
                return new(e.get("childView") ? e.get("childView") : t)(n)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(184),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CollectionView.extend({
            childView: s.default,
            initialize: function(e) {
                this.map = e.map,
                    this.mediator = e.mediator,
                    this.mediator.on("change:saving", this._onSavingChanged, this),
                    this._onSavingChanged()
            },
            buildChildView: function(e) {
                var t = {
                    model: e,
                    map: this.map
                };
                return new this.childView(t)
            },
            onDestroy: function() {
                this.mediator.off("change:saving", this._onSavingChanged, this)
            },
            _onSavingChanged: function() {
                this.mediator.get("saving") ? this.disable() : this.enable()
            },
            enable: function() {
                return this.children.invoke("enable")
            },
            disable: function() {
                return this.children.invoke("disable")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(0),
        r = n(s),
        a = i(1),
        o = n(a),
        l = i(1052),
        u = n(l),
        d = i(1053),
        c = n(d),
        h = i(1054),
        f = n(h),
        p = i(295),
        g = n(p),
        m = i(1055),
        v = n(m),
        y = i(1056),
        b = n(y),
        w = i(1057),
        E = n(w),
        k = i(1058),
        M = n(k),
        S = i(16),
        T = n(S),
        C = i(240),
        I = n(C),
        A = i(1060),
        D = n(A),
        R = i(1061),
        O = n(R),
        L = i(1062),
        x = n(L),
        P = i(241),
        N = n(P),
        V = i(63),
        F = n(V),
        U = i(93),
        j = n(U),
        B = i(62),
        G = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(B),
        z = i(167),
        H = n(z),
        $ = i(158),
        q = i(96),
        Y = n(q),
        K = i(35),
        J = n(K),
        Z = i(128),
        X = n(Z),
        Q = i(297),
        ee = n(Q),
        te = i(30),
        ie = function() {
            function e(t) {
                var i = this;
                (0,
                    r.default)(this, e),
                this.actionManager = t.actionManager,
                    this.map = t.map,
                    this.selectionManager = t.selectionManager,
                    this.dataModel = t.dataModel,
                    this.controller = t.controller,
                    this.loginManager = t.loginManager,
                    this.editingMediator = t.editingMediator,
                    this.app = t.app,
                    this.app.on("change:loggedIn", function() {
                        i._enableControlsByRank(i.app.get("user"))
                    })
            }
            return (0,
                    o.default)(e, [{
                    key: "getToolbarButtons",
                    value: function(e) {
                        var t = J.default.getMenus().map(this.createMenu.bind(this)),
                            i = [].concat(t, this._generateVenueMenu(), this._generateDrawingControls(), this._generateEditingControls().reverse());
                        return new ee.default(i)
                    }
                }, {
                    key: "getHouseNumbersToolbarButtons",
                    value: function(e) {
                        return new ee.default(this._generateEditingHouseNumbersControls().reverse())
                    }
                }, {
                    key: "_enableControlsByRank",
                    value: function(e) {
                        W.Config.big_junctions.enable && this.drawBigJunction.control.setEnabled(null != e && this.loginManager.canEditBigJunctions())
                    }
                }, {
                    key: "_generateEditingControls",
                    value: function() {
                        return [{
                            title: I18n.t("toolbar.delete"),
                            iconClass: "delete-feature",
                            control: new M.default(this.dataModel, {
                                displayClass: "waze-icon-trash"
                            })
                        }, {
                            title: I18n.t("toolbar.reload"),
                            iconClass: "reload",
                            control: new c.default(this.actionManager, this.map.roadLayers, this.controller, {
                                displayClass: "waze-icon-reload"
                            })
                        }, {
                            title: I18n.t("toolbar.undo"),
                            control: new u.default(this.actionManager, {
                                displayClass: "waze-icon-undo"
                            })
                        }, {
                            title: I18n.t("toolbar.redo"),
                            control: new f.default(this.actionManager, {
                                displayClass: "waze-icon-redo"
                            })
                        }, {
                            title: I18n.t("toolbar.save.title"),
                            control: new g.default(this.actionManager, {
                                editingMediator: this.editingMediator,
                                displayClass: "waze-icon-save"
                            })
                        }]
                    }
                }, {
                    key: "_generateEditingHouseNumbersControls",
                    value: function() {
                        return [{
                            title: I18n.t("toolbar.add_house_numbers"),
                            control: new b.default({
                                displayClass: "add-house-number",
                                map: this.map
                            })
                        }, {
                            title: I18n.t("toolbar.undo"),
                            control: new u.default(this.actionManager, {
                                displayClass: "waze-icon-undo"
                            })
                        }, {
                            title: I18n.t("toolbar.redo"),
                            control: new f.default(this.actionManager, {
                                displayClass: "waze-icon-redo"
                            })
                        }, {
                            title: I18n.t("toolbar.save.title"),
                            control: new E.default(this.actionManager, {
                                editingMediator: this.editingMediator,
                                displayClass: "waze-icon-save"
                            })
                        }, {
                            title: I18n.t("toolbar.cancel"),
                            control: new v.default({
                                displayClass: "waze-icon-exit"
                            })
                        }]
                    }
                }, {
                    key: "_generateDrawingControls",
                    value: function() {
                        var e = this,
                            t = [{
                                title: I18n.t("drawing.road"),
                                iconClass: "road",
                                control: new O.default(this.map.sketchLayer, this.map.segmentLayer, OL.Handler.Path, {
                                    accelerator: "drawSegment",
                                    enableSnapping: !0,
                                    featureAdded: function(t, i, n) {
                                        e.actionManager.add(new Y.default(t, {
                                                createNodes: !0,
                                                openAllTurns: W.prefs.get("enableTurnsByDefault"),
                                                createTwoWay: W.prefs.get("twoWaySegmentsByDefault"),
                                                snappedFeatures: [i, n]
                                            })),
                                            _.defer(function() {
                                                return e.selectionManager.setSelectedModels([t])
                                            })
                                    }
                                })
                            }, {
                                title: I18n.t("drawing.walking_trail"),
                                iconClass: "walking-trail",
                                control: new O.default(this.map.sketchLayer, this.map.segmentLayer, OL.Handler.Path, {
                                    accelerator: "drawSegment",
                                    enableSnapping: !0,
                                    featureAdded: function(t, i, n) {
                                        t.attributes.roadType = te.ROAD_TYPES.WALKING_TRAIL,
                                            e.actionManager.add(new Y.default(t, {
                                                createNodes: !0,
                                                openAllTurns: !1,
                                                createTwoWay: !0,
                                                snappedFeatures: [i, n]
                                            })),
                                            _.defer(function() {
                                                return e.selectionManager.setSelectedModels([t])
                                            })
                                    }
                                })
                            }, {
                                title: I18n.t("drawing.roundabout"),
                                iconClass: "roundabout",
                                control: new x.default({
                                    onRoundaboutAdded: function(t) {
                                        var i = new N.default(t);
                                        e.actionManager.add(i),
                                            _.defer(function() {
                                                e.selectionManager.setSelectedModels(i.roundaboutSegments)
                                            })
                                    }
                                })
                            }, {
                                title: I18n.t("drawing.camera"),
                                iconClass: "camera",
                                control: new O.default(this.map.sketchLayer, this.map.camerasLayer, OL.Handler.Point, {
                                    enableSnapping: !0,
                                    featureAdded: function(t) {
                                        var i = new H.default({
                                            geometry: t.geometry
                                        });
                                        e.actionManager.add(new F.default(i, e.dataModel.cameras)),
                                            _.defer(function() {
                                                e.selectionManager.setSelectedModels([i])
                                            })
                                    }
                                })
                            }];
                        return W.Config.big_junctions.enable && (this.drawBigJunction = {
                                title: I18n.t("drawing.big_junction"),
                                iconClass: "junction-box",
                                control: new O.default(this.map.sketchLayer, this.map.bigJunctionLayer, OL.Handler.Polygon, {
                                    accelerator: "drawBigJunction",
                                    featureAdded: function(t) {
                                        var i = new $.BigJunction({
                                            geometry: t.geometry
                                        });
                                        e.actionManager.add(new D.default(i)),
                                            _.defer(function() {
                                                e.selectionManager.setSelectedModels([i])
                                            })
                                    }
                                })
                            },
                            t.push(this.drawBigJunction)), [{
                            name: "drawing",
                            children: t
                        }]
                    }
                }, {
                    key: "_generateVenueMenu",
                    value: function() {
                        var e = W.Config.venues.categories.map(this._generateVenueMenuItem.bind(this));
                        return this.createMenu({
                            name: "venues",
                            items: e
                        })
                    }
                }, {
                    key: "_generateVenueMenuItem",
                    value: function(e) {
                        var t = function(t, i) {
                                var n = new j.default({
                                    geometry: t,
                                    categories: [e]
                                });
                                return i.actionManager.add(new I.default(n)),
                                    n
                            },
                            i = {
                                primaryShape: "point",
                                secondaryShape: "polygon",
                                title: I18n.t("venues.categories." + e),
                                featureName: I18n.t("drawing.venue"),
                                iconClass: T.default.categoryToClassName(e),
                                layerUniqueName: X.default.LAYER_UNIQUE_NAMES.LANDMARKS,
                                createFeature: t
                            };
                        return e === G.PARKING_LOT && (i.primaryShape = "polygon",
                                i.secondaryShape = null),
                            i
                    }
                }, {
                    key: "createMenu",
                    value: function(e) {
                        var t = this;
                        return {
                            name: e.name,
                            displayClass: e.displayClass,
                            children: e.items.map(function(e) {
                                return t.createMenuItem(e)
                            })
                        }
                    }
                }, {
                    key: "createMenuItem",
                    value: function(e) {
                        var t = this,
                            i = function(i) {
                                return i = e.createFeature(i.geometry, t.dataModel),
                                    _.defer(function() {
                                        return t.selectionManager.setSelectedModels([i])
                                    })
                            },
                            n = this.map.getLayersBy("uniqueName", e.layerUniqueName)[0],
                            s = this.createDrawControl(e.primaryShape, n, i, e.enableSnapping),
                            r = void 0;
                        return e.secondaryShape && (r = this.createDrawControl(e.secondaryShape, n, i, e.enableSnapping)), {
                            title: e.title,
                            featureName: e.featureName,
                            showDrawingControls: null != e.secondaryShape,
                            control: s,
                            iconClass: e.iconClass,
                            secondaryControl: r
                        }
                    }
                }, {
                    key: "createDrawControl",
                    value: function(e, t, i, n) {
                        var s = void 0;
                        return s = "point" === e ? OL.Handler.Point : OL.Handler.Polygon,
                            new O.default(this.map.sketchLayer, t, s, {
                                enableSnapping: n,
                                featureAdded: i,
                                drawingType: e
                            })
                    }
                }]),
                e
        }();
    t.default = ie,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(40),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            actionManager: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("undo", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.unregister("undo", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                this.actionManager.canUndo() ? this.enable() : this.disable()
            },
            trigger: function() {
                this.enabled && (this.onUndo(),
                    this.actionManager.undo())
            },
            onUndo: function() {}
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(40),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            _actionManager: null,
            initialize: function(e, t, i, n) {
                OpenLayers.Control.prototype.initialize.apply(this, [n]),
                    this._actionManager = e,
                    this._roadLayers = t,
                    this._controller = i,
                    this.autoActivate = !1,
                    this._actionManager.events.on({
                        scope: this,
                        hasActions: this._redraw,
                        noActions: this._redraw
                    }),
                    W.accelerators.events.register("reloadData", this, this.trigger),
                    this._redraw()
            },
            destroy: function() {
                this._actionManager.events.un({
                        scope: this,
                        hasActions: this._redraw,
                        noActions: this._redraw
                    }),
                    W.accelerators.events.unregister("reloadData", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            _canReload: function() {
                return !this._actionManager.canUndo()
            },
            _redraw: function() {
                this._canReload() ? this.enable() : this.disable()
            },
            trigger: function() {
                this._canReload() && (this._roadLayers.forEach(function(e) {
                        e.redraw({
                                force: !0
                            }),
                            e.removeBackBuffer()
                    }),
                    this._controller.reload())
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(40),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            actionManager: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("redo", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.unregister("redo", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                this.actionManager.canRedo() ? this.enable() : this.disable()
            },
            trigger: function() {
                this.enabled && (this.onRedo(),
                    this.actionManager.redo())
            },
            onRedo: function() {}
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(40),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            trigger: function() {
                W.accelerators.events.triggerEvent("exitHouseNumbers")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(40),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    this._registerEvents(),
                    this.setEnabled(this.editingAllowedInZoom())
            },
            destroy: function() {
                this._unregisterEvents(),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            _registerEvents: function() {
                this.map.events.register("zoomend", this, this._onZoomChanged)
            },
            _onZoomChanged: function() {
                this.setEnabled(this.editingAllowedInZoom())
            },
            editingAllowedInZoom: function() {
                return this.map.getZoom() >= W.Config.houseNumbers.minEditZoom
            },
            _unregisterEvents: function() {
                this.map.events.unregister("zoomend", this, this._onZoomChanged)
            },
            trigger: function() {
                W.accelerators.events.triggerEvent("editHouseNumbers")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(295),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            trigger: function() {
                this.enabled && W.commands.execute("save:start")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(40),
        r = n(s),
        a = i(71),
        o = n(a),
        l = i(30),
        u = i(276),
        d = n(u),
        c = i(11),
        h = i(1059),
        f = n(h),
        p = i(75),
        g = new OpenLayers.Class(OpenLayers.Control.Button, r.default, {
            keyboardCodes: null,
            keyboardHandler: null,
            initialize: function(e, t) {
                r.default.prototype.initialize.apply(this, [t]),
                    OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.model = e,
                    this.keyboardCodes = [OpenLayers.Event.KEY_DELETE],
                    this.keyboardHandler = new d.default(this, {
                        keydown: this.handleKeypress
                    }),
                    this.setEnabled(!1),
                    W.selectionManager.events.register("selectionchanged", this, this._onSelectionChanged)
            },
            destroy: function() {
                r.default.prototype.destroy.apply(this, arguments),
                    this.keyboardHandler.destroy(),
                    W.selectionManager.events.unregister("selectionchanged", this, this._onSelectionChanged)
            },
            _onSelectionChanged: function(e) {
                var t = _(e.selected).pluck("model");
                this.setEnabledByFeatures(t || [])
            },
            trigger: function() {
                if (this.enabled) {
                    var e = this.features;
                    if (!_.isEmpty(e)) {
                        var t = !0,
                            i = e.some(function(e) {
                                return e.attributes.hasHNs
                            });
                        switch (e[0].type) {
                            case c.NODE:
                                this.model.deleteNodes(e);
                                break;
                            case c.SEGMENT:
                                e.length > 1 ? t = i ? window.confirm(I18n.t("edit.segment.delete_confirm.multiple_hn")) : window.confirm(I18n.t("edit.segment.delete_confirm.multiple")) : i && (t = window.confirm(I18n.t("edit.segment.delete_confirm.hn"))),
                                    t && this.model.deleteSegments(e);
                                break;
                            case c.BIG_JUNCTION:
                                this.model.actionManager.add(new f.default(e[0]));
                                break;
                            default:
                                this.model.deleteObjects(e)
                        }
                        this.onFeatureDelete(e)
                    }
                }
            },
            setTooltipByReason: function(e) {
                var t = (0,
                        p.getServerConfig)(),
                    i = t.minRankForDeletingSegment,
                    n = t.maxAllowedSegmentDeletions;
                return e === l.SEGMENT_DELETION_REJECTION.USER_QUOTA_EXCEEDED ? (this.setTooltip(I18n.t("toolbar.delete_quota_exceeded", {
                    quota: n
                })), !0) : e === l.SEGMENT_DELETION_REJECTION.USER_RANK_TOO_LOW && (this.setTooltip(I18n.t("toolbar.delete_rank_not_allowed", {
                    min_rank: o.default.normalizeLevel(i)
                })), !0)
            },
            setEnabledByFeatures: function(e) {
                if (!e || _.isEmpty(e))
                    return void this.setEnabled(!1);
                var t = 1 === e.length && e[0].type === c.NODE,
                    i = !_.isEmpty(e) && e.every(function(e) {
                        return e.type === c.SEGMENT
                    }),
                    n = !_.isEmpty(e) && e.some(function(e) {
                        return e.type === c.SEGMENT
                    }),
                    s = !1;
                if (t) {
                    s = e[0].isDeleteable(this.model)
                } else
                    s = i ? e.every(function(e) {
                        return e.isDeletable()
                    }) : e[0].isDeletable();
                var r = !1;
                if (n && !s) {
                    var a = e.find(function(e) {
                        return e.type === c.SEGMENT && !e.isDeletable()
                    });
                    a && (r = this.setTooltipByReason(a.deletionRejection()))
                }
                r || this.clearTooltip(),
                    this.features = e,
                    this.setEnabled(s)
            },
            handleKeypress: function(e) {
                this.keyboardCodes.includes(e.keyCode) && 1 === this.features.length && this.trigger()
            },
            clearTooltip: function() {
                this.tooltip = void 0,
                    this.events.triggerEvent("tooltipchanged")
            },
            setTooltip: function(e) {
                this.tooltip = e,
                    this.events.triggerEvent("tooltipchanged")
            },
            setEnabled: function(e, t) {
                r.default.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyboardHandler.activate() : this.keyboardHandler.deactivate()
            },
            onFeatureDelete: function(e) {}
        });
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        _ = i(12),
        y = n(_),
        b = i(18),
        w = n(b),
        E = i(11),
        k = i(20),
        M = n(k),
        S = i(296),
        T = n(S),
        C = function(e) {
            function t(e, i) {
                (0,
                    u.default)(this, t);
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, i));
                return n.bigJunction = e,
                    n.prevJunctionState = null,
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.bigJunction]
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.bigJunction.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = this;
                        if (this.bigJunction.state === OpenLayers.State.DELETE)
                            return !1;
                        var t = this.bigJunction.attributes.segIDs.map(function(t) {
                            return e.model.segments.get(t)
                        });
                        t.forEach(function(t) {
                                e.doSubAction(new M.default(t, {
                                    crossroadID: null
                                }, {
                                    dontSerialize: !0
                                }))
                            }),
                            this.doSubAction(new T.default(this.bigJunction.getID(), t, T.default.REMOVE_JUNCTION_FROM_SEGMENT)),
                            this.prevJunctionState = this.bigJunction.state,
                            this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                                this.model.bigJunctions.changed(this.bigJunction))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.bigJunction.getID(),
                            this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.put(this.bigJunction) : (this.bigJunction.state = this.prevJunctionState,
                                this.model.bigJunctions.changed(this.bigJunction)),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                                this.model.bigJunctions.changed(this.bigJunction)),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: E.BIG_JUNCTION,
                            action: w.default.TYPE.DELETE,
                            attributes: {
                                id: this.bigJunction.getID()
                            }
                        }
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this.bigJunction.name,
                            t = this.bigJunction.getAddress(),
                            i = t ? t.getCityName({
                                emptyString: null
                            }) : null;
                        this._description = e ? I18n.t("save.changes_log.actions.DeleteBigjunction.has_name", {
                            name: e
                        }) : i ? I18n.t("save.changes_log.actions.DeleteBigjunction.has_city", {
                            cityName: i
                        }) : I18n.t("save.changes_log.actions.DeleteBigjunction.default")
                    }
                }]),
                t
        }(y.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        a = i(2),
        o = n(a),
        l = i(0),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(3),
        f = n(h),
        p = i(8),
        g = n(p),
        m = i(4),
        v = n(m),
        y = i(18),
        b = n(y),
        w = i(12),
        E = n(w),
        k = i(11),
        M = i(95),
        S = n(M),
        T = i(20),
        C = n(T),
        I = i(296),
        A = n(I),
        D = i(37),
        R = n(D),
        O = function(e) {
            function t(e, i) {
                (0,
                    u.default)(this, t);
                var n = (0,
                    f.default)(this, (t.__proto__ || (0,
                    o.default)(t)).call(this, i));
                return n.bigJunction = e,
                    n.attributes = {},
                    n
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this;
                        this.initialGeometry = this.bigJunction.geometry.clone();
                        var t = void 0;
                        this.bigJunction.getID() || (t = this.model.bigJunctions.generateUniqueID()),
                            this.bigJunction.setID(t),
                            this.bigJunction.state = OpenLayers.State.INSERT,
                            this.model.bigJunctions.put(this.bigJunction);
                        var i = this._findShortSegments();
                        i.forEach(function(i) {
                            e.doSubAction(new C.default(i, {
                                crossroadID: t
                            }, {
                                dontSerialize: !0
                            }))
                        });
                        var n = new A.default(t, i, A.default.ADD_JUNCTION_TO_SEGMENT);
                        this.doSubAction(n);
                        var s = n.connectedSegments,
                            r = this._findMaxRankInSegmentArray(i.concat(s)),
                            a = _.invoke(i, "getID"),
                            o = {
                                segIDs: a,
                                rank: r
                            };
                        _.extend(this.attributes, o),
                            _.extend(this.bigJunction.attributes, o);
                        var l = null;
                        if (this.model.segments.topCityID && (l = this.model.cities.get(this.model.segments.topCityID)),
                            null === l && null != this.model.countries.top) {
                            var u = new S.default(this.model.states.top, this.model.countries.top, "", !0);
                            this.doSubAction(u),
                                l = u.city
                        }
                        return null !== l && (this.attributes.cityID = l.getID(),
                                this.bigJunction.attributes.cityID = l.getID()),
                            this.bigJunction.getShortestTurns().forEach(function(t) {
                                return e.doSubAction(new R.default(e.model.getTurnGraph(), t))
                            }), !0
                    }
                }, {
                    key: "_findShortSegments",
                    value: function() {
                        var e = this;
                        return this.model.segments.getObjectArray(function(t) {
                            var i = t.geometry.components;
                            return !t.isDeleted() && t.isDrivable() && e.initialGeometry.containsPoint(_.first(i)) && e.initialGeometry.containsPoint(_.last(i))
                        })
                    }
                }, {
                    key: "_findMaxRankInSegmentArray",
                    value: function(e) {
                        for (var t = 0, i = 0; i < e.length; i++) {
                            var n = e[i],
                                s = n.getLockRank();
                            s > t && (t = s)
                        }
                        return t
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "undoAction", this).call(this),
                            this.model.bigJunctions.remove(this.bigJunction)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.bigJunctions.put(this.bigJunction),
                            (0,
                                g.default)(t.prototype.__proto__ || (0,
                                o.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this.attributes;
                        return e.id = this.bigJunction.getID(),
                            e.geometry = this.initialGeometry, {
                                _objectType: k.BIG_JUNCTION,
                                action: b.default.TYPE.ADD,
                                attributes: e
                            }
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.bigJunction]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.AddBigJunction")
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.bigJunction.getUniqueID()].concat((0,
                            r.default)((0,
                            g.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(E.default);
    t.default = O,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(40),
        o = n(a),
        l = i(251),
        u = n(l),
        d = i(30),
        c = n(d),
        h = OpenLayers.Class(OpenLayers.Control.DrawFeature, o.default, {
            keyHandler: null,
            snapControl: null,
            snappedFrom: null,
            editingMediator: null,
            targetLayer: null,
            type: OL.Control.TYPE_TOGGLE,
            drawingAccuracy: 2,
            keyUp: function(e) {
                this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && this.handler.cancel()
            },
            handleShortcut: function(e) {
                this.isEnabled() && this.activate()
            },
            isEnabled: function() {
                return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
            },
            featureCancelled: function(e) {},
            onDrawCancel: function(e) {
                this.deactivate(),
                    this.featureCancelled(e)
            },
            createFeature: function(e) {
                return new c.default({
                    geometry: e
                })
            },
            drawFeature: function(e) {
                var t = this.createFeature(e);
                !1 !== this.layer.events.triggerEvent("sketchcomplete", {
                        feature: t
                    }) && ("OpenLayers.Geometry.LineString" === t.geometry.CLASS_NAME && (t.geometry = t.geometry.simplify(this.drawingAccuracy * this.map.getResolution())),
                        t.state = OpenLayers.State.INSERT,
                        this.enableSnapping ? (this.snappedFrom && (this.snappedFrom.feature = this.snappedFrom.feature.model,
                                this.snappedFrom.feature && this.snappedFrom.feature.setSnapped(!1)),
                            this.snapControl.snappedFeature && (this.snapControl.snappedFeature.feature = this.snapControl.snappedFeature.feature.model),
                            this.snapControl.snappedFeature && this.snapControl.snappedFeature.feature.outOfScope && (this.snapControl.snappedFeature = null),
                            this.snappedFrom && this.snappedFrom.feature.outOfScope && (this.snappedFrom = null),
                            this.snapControl.snappedFeature && this.snappedFrom && this.snapControl.snappedFeature.feature === this.snappedFrom.feature && (this.snappedFrom = null),
                            this.featureAdded(t, this.snappedFrom, this.snapControl.snappedFeature)) : this.featureAdded(t)),
                    this.deactivate()
            },
            initialize: function(e, t, i, n) {
                o.default.prototype.initialize.apply(this, [n]),
                    this.callbacks = (0,
                        r.default)({
                        cancel: this.onDrawCancel
                    }, this.callbacks),
                    this.editingMediator = W.editingMediator,
                    this.targetLayer = t,
                    OpenLayers.Control.DrawFeature.prototype.initialize.apply(this, [e, i, n]),
                    this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                        keyup: this.keyUp
                    }),
                    this.accelerator && W.accelerators.events.register(this.accelerator, this, this.handleShortcut)
            },
            setMap: function() {
                OL.Control.DrawFeature.prototype.setMap.apply(this, arguments),
                    this.enableSnapping && this._createSnappingControl()
            },
            _createSnappingControl: function() {
                this.snapControl = new u.default({
                        layer: this.map.sketchLayer,
                        targets: [{
                            layer: this.map.nodeLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.isConnectedToBigJunction()
                                }
                            }
                        }, {
                            layer: this.map.segmentLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.outOfScope && e.model.isGeometryEditable()
                                }
                            }
                        }]
                    }),
                    this.snapControl.events.on({
                        snap: function() {
                            var e = this.handler.getGeometry();
                            e && e.components && 1 === e.components.length && (this.snapControl.snappedFeature.feature.model && this.snapControl.snappedFeature.feature.model.setSnapped(!0),
                                this.snappedFrom = this.snapControl.snappedFeature)
                        },
                        scope: this
                    })
            },
            setEnabled: function(e, t) {
                o.default.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyHandler.activate() : this.keyHandler.deactivate()
            },
            activate: function() {
                this.active || (OpenLayers.Control.DrawFeature.prototype.activate.apply(this, arguments),
                    this.keyHandler.activate(),
                    this.targetLayer.getVisibility() || this.targetLayer.setVisibility(!0),
                    this.editingMediator.setDrawingInProgress(),
                    this.enableSnapping && (this.map.addControl(this.snapControl),
                        this.snapControl.activate()))
            },
            deactivate: function() {
                if (this.snappedFrom) {
                    var e = this.snappedFrom.feature;
                    e.setSnapped || (e = e.model),
                        e.setSnapped(!1)
                }
                this.snappedFrom = null,
                    this.active && (this.editingMediator.setDrawingDone(),
                        this.keyHandler.deactivate(),
                        this.enableSnapping && (this.snapControl.deactivate(),
                            this.map.removeControl(this.snapControl)),
                        OpenLayers.Control.DrawFeature.prototype.deactivate.apply(this, arguments))
            },
            CLASS_NAME: "Waze.Control.DrawFeature"
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(40),
        o = n(a),
        l = i(1063),
        u = n(l),
        d = OpenLayers.Class(OpenLayers.Control, o.default, {
            keyHandler: null,
            handler: null,
            type: OL.Control.TYPE_TOGGLE,
            editingMediator: null,
            keyUp: function(e) {
                this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && (this.handler.cancel(),
                    this.deactivate())
            },
            handleShortcut: function(e) {
                this.isEnabled() && this.activate()
            },
            onDrawCancel: function(e) {
                this.deactivate(),
                    this.featureCancelled(e)
            },
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    o.default.prototype.initialize.apply(this, [e]),
                    this.callbacks = (0,
                        r.default)({
                        cancel: this.onDrawCancel
                    }, this.callbacks),
                    this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                        keyup: this.keyUp
                    }),
                    W.accelerators.events.register("drawRoundabout", this, this.handleShortcut),
                    this.handler = new u.default(this, {
                        done: this.onEllipseDrawn,
                        cancel: this.onCancel
                    }),
                    this.editingMediator = W.editingMediator
            },
            onDrawStart: function() {
                OpenLayers.Element.addClass(this.map.viewPortDiv, this.displayClass + "Over")
            },
            onDrawEnd: function() {
                OpenLayers.Element.removeClass(this.map.viewPortDiv, this.displayClass + "Over")
            },
            isEnabled: function() {
                return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
            },
            onEllipseDrawn: function(e) {
                this.onDrawEnd();
                var t = new OpenLayers.LonLat(e.x, e.y),
                    i = e.rx * this.map.getResolution(),
                    n = e.ry * this.map.getResolution();
                t.x = t.lon,
                    t.y = t.lat;
                var s = new OpenLayers.Bounds(e.x - i, e.y - n, e.x + i, e.y + n);
                this.deactivate(),
                    this.onRoundaboutAdded({
                        center: t,
                        rx: i,
                        ry: n,
                        bounds: s
                    })
            },
            onCancel: function() {
                this.onDrawEnd(),
                    this.deactivate()
            },
            onRoundaboutAdded: function() {},
            setEnabled: function(e, t) {
                o.default.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyHandler.activate() : this.keyHandler.deactivate()
            },
            activate: function() {
                this.active || (OpenLayers.Control.prototype.activate.apply(this, arguments),
                    this.editingMediator.setDrawingInProgress(),
                    this.keyHandler.activate())
            },
            deactivate: function() {
                this.active && (this.keyHandler.deactivate(),
                    this.editingMediator.setDrawingDone(),
                    OpenLayers.Control.prototype.deactivate.apply(this, arguments))
            },
            CLASS_NAME: "Waze.Control.DrawRoundabout"
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        a = i(54),
        o = n(a),
        l = OpenLayers.Class(OpenLayers.Handler, {
            drawing: !1,
            dragging: !1,
            layer: null,
            style: null,
            point: null,
            lastDown: null,
            lastMove: null,
            distanceLine: null,
            radius: 0,
            rx: 0,
            ry: 0,
            regular: !1,
            geodesicPixelSize: null,
            MinEllipseSize: 15,
            MaxEllipseSizeMeters: 100,
            oldOnselectstart: null,
            initialize: function(e, t, i) {
                i && i.layerOptions && i.layerOptions.styleMap || (this.style = (0,
                        r.default)(OpenLayers.Feature.Vector.style.default, {})),
                    OpenLayers.Handler.prototype.initialize.apply(this, arguments)
            },
            setRegular: function(e) {
                this.regular !== e && (this.regular = e,
                    this.modifyFeature(this.lastMove))
            },
            activate: function() {
                if (!OpenLayers.Handler.prototype.activate.apply(this, arguments))
                    return !1;
                var e = (0,
                        r.default)({
                        calculateInRange: function() {
                            return !0
                        }
                    }, this.layerOptions),
                    t = OpenLayers.Layer.Vector.prototype.renderers;
                return OpenLayers.Layer.Vector.prototype.renderers = [o.default],
                    this.layer = new OpenLayers.Layer.Vector(this.CLASS_NAME, e),
                    OpenLayers.Layer.Vector.prototype.renderers = t,
                    this.map.addLayer(this.layer),
                    this.map.events.on({
                        zoomend: this.onZoom,
                        scope: this
                    }), !0
            },
            deactivate: function() {
                return !!OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.drawing && this.cancel(),
                    this.destroyFeature(),
                    null !== this.layer.map && this.layer.destroy(!1),
                    this.map.events.un({
                        zoomend: this.zoomend
                    }),
                    this.layer = null, !0)
            },
            onZoom: function() {
                this.drawing && this.cancel()
            },
            dblclick: function(e) {
                return OpenLayers.Event.stop(e), !1
            },
            mouseup: function(e) {
                if (this.drawing && this.dragging)
                    return this.finalize(), !1
            },
            mousedown: function(e) {
                return this.drawing ? (this.finalize(), !1) : (this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : function() {
                        return !0
                    }),
                    document.onselectstart = function() {
                        return !1
                    }, !this.checkModifiers(e) || (!(!this.lastDown || !this.lastDown.equals(e.xy)) || (this.drawing = !0,
                        this.geodesicPixelSize = this.map.getGeodesicPixelSize().w,
                        null === this.lastDown && this.createFeature(e.xy),
                        this.lastDown = e.xy, !1)))
            },
            createFeature: function(e) {
                var t = this.map.getLonLatFromPixel(e),
                    i = new OpenLayers.Geometry.LineString,
                    n = void 0;
                n = this.style ? (0,
                        r.default)({}, this.style) : (0,
                        r.default)({}, this.layerOptions.styleMap.styles.default.defaultStyle),
                    n.rx = this.MinEllipseSize,
                    n.ry = this.MinEllipseSize,
                    this.point = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t.lon, t.lat), {}, n),
                    i.addPoint(this.point.geometry.clone()),
                    i.addPoint(this.point.geometry.clone()),
                    this.distanceLine = new OpenLayers.Feature.Vector(i),
                    this.callback("create", [this.point.geometry, this.point]),
                    this.point.geometry.clearBounds(),
                    this.layer.addFeatures([this.point], {
                        silent: !0
                    })
            },
            finalize: function(e) {
                document.onselectstart = this.oldOnselectstart;
                var t = e ? "cancel" : "done",
                    i = void 0;
                this.point && (i = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y)),
                    this.drawing = !1,
                    this.dragging = !1,
                    this.regular = !1,
                    this.destroyFeature(),
                    Math.min(this.rx, this.ry) > this.MinEllipseSize && this.callback(t, [{
                        x: i.lon,
                        y: i.lat,
                        rx: this.rx,
                        ry: this.ry
                    }]),
                    this.lastDown = null,
                    this.rx = 0,
                    this.ry = 0
            },
            destroyFeature: function() {
                this.layer && this.layer.destroyFeatures(),
                    this.point = null,
                    this.distanceLine = null
            },
            cancel: function() {
                this.finalize(!0)
            },
            modifyFeature: function(e, t) {
                var i = _.last(this.distanceLine.geometry.components),
                    n = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y),
                    s = void 0,
                    r = void 0,
                    a = void 0;
                this.lastMove = e;
                var o = this.map.getPixelFromLonLat(n),
                    l = e.y - o.y,
                    u = e.x - o.x;
                s = Math.atan2(l, u),
                    this.rx = Math.abs(u),
                    this.ry = Math.abs(l),
                    this.rx < this.MinEllipseSize && (this.rx = this.MinEllipseSize),
                    this.ry < this.MinEllipseSize && (this.ry = this.MinEllipseSize);
                var d = Math.floor(this.geodesicPixelSize * this.rx * 1e3),
                    c = Math.floor(this.geodesicPixelSize * this.ry * 1e3);
                d > this.MaxEllipseSizeMeters && (this.rx = 1 / (10 * this.geodesicPixelSize)),
                    c > this.MaxEllipseSizeMeters && (this.ry = 1 / (10 * this.geodesicPixelSize));
                var h = Math.max(this.rx, this.ry),
                    f = Math.ceil(this.geodesicPixelSize * h * 1e3);
                t.shiftKey || (this.rx = h,
                        this.ry = h),
                    this.ry > this.rx ? (r = this.rx / this.ry,
                        a = 1) : (a = this.ry / this.rx,
                        r = 1),
                    s = Math.atan2(l / a, u / r),
                    this.callback("modify", [this.point.geometry, this.point]),
                    i.x = n.lon + this.rx * Math.cos(s) * this.map.getResolution(),
                    i.y = n.lat - this.ry * Math.sin(s) * this.map.getResolution(),
                    i.clearBounds(),
                    this.distanceLine.geometry.clearBounds(),
                    this.point.geometry.clearBounds(),
                    this.point.style.rx = this.rx,
                    this.point.style.ry = this.ry,
                    this.point.style.label = f + "m",
                    this.drawCircle()
            },
            drawCircle: function() {
                this.layer.drawFeature(this.point),
                    this.layer.drawFeature(this.distanceLine)
            },
            mousemove: function(e) {
                return this.drawing && (this.dragging = !0,
                    this.modifyFeature(e.xy, e),
                    this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                        document.onselectstart = function() {
                            return !1
                        }
                    )), !1
            },
            CLASS_NAME: "Waze.Handler.Ellipse"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            name: null,
            displayClass: null,
            featureName: null,
            parent: null,
            children: null,
            control: null,
            secondaryControl: null
        },
        initialize: function() {
            var e = i(297),
                t = this.get("children");
            if (null != t)
                return this.children = new e(t),
                    this.unset("children")
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(298),
        r = n(s),
        a = i(299),
        o = n(a),
        l = i(1066),
        u = n(l),
        d = i(1070),
        c = n(d),
        h = Marionette.Object.extend({
            initialize: function() {
                var e = new r.default({
                        globalVent: this.options.globalVent
                    }),
                    t = new o.default({
                        dataModel: this.options.dataModel,
                        map: this.options.map
                    }),
                    i = null;
                W.Config.area_manager_widget.enable && (i = new u.default({
                        managedAreasRepository: this.options.managedAreasRepository,
                        managedAreasLayer: this.options.map.managedAreasLayer,
                        pannable: this.options.map.getPannable(),
                        drawingContext: this.options.map.getDrawingContext()
                    })),
                    this.layout = new c.default({
                        loadingIndicatorView: e,
                        locationInfoView: t,
                        areaManagersLayout: i
                    })
            },
            destroy: function() {}
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1067),
        r = n(s),
        a = i(1068),
        o = n(a),
        l = i(1069),
        u = n(l),
        d = Marionette.View.extend({
            MAIN_LIST_NUM_ITEMS: 3,
            template: "Waze/Modules/Topbar/templates/area-managers/layout",
            className: "area-managers",
            regions: {
                mainList: ".main-list-region",
                restList: ".rest-list-region"
            },
            initialize: function() {
                var e = this;
                return this.managedAreasRepository = this.options.managedAreasRepository,
                    this.managedAreasRepository.model.events.register("mergeend", this, this._updateCollections),
                    this.mainCollection = new Backbone.Collection,
                    this.restCollection = new Backbone.Collection,
                    this.mainListView = new r.default({
                        collection: this.mainCollection
                    }),
                    this.restListView = new o.default({
                        collection: this.restCollection
                    }),
                    this.mapView = new u.default({
                        pannable: this.options.pannable,
                        managedAreasLayer: this.options.managedAreasLayer,
                        drawingContext: this.options.drawingContext
                    }), [this.mainListView, this.restListView].map(function(t) {
                        return e.listenTo(t, "onAreaMouseEnter", function(t) {
                                return e.mapView.highlightArea(t.attributes.externalModel)
                            }),
                            e.listenTo(t, "onAreaMouseLeave", function() {
                                return e.mapView.hideArea()
                            }),
                            e.listenTo(t, "onAreaClicked", function(t) {
                                return e.mapView.centerArea(t.attributes.externalModel)
                            })
                    })
            },
            onDestroy: function() {
                return this.managedAreasRepository.model.events.unregister("mergeend", this, this._updateCollections)
            },
            onRender: function() {
                this.showChildView("mainList", this.mainListView),
                    this.showChildView("restList", this.restListView)
            },
            _updateCollections: function() {
                var e = this.managedAreasRepository.getObjectArray().map(function(e) {
                        return new Backbone.Model({
                            username: e.getUserName(),
                            externalModel: e
                        })
                    }),
                    t = e.splice(this.MAIN_LIST_NUM_ITEMS);
                return this.mainCollection.reset(e),
                    this.restCollection.reset(t)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(300),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            childView: s.default,
            childViewContainer: "ul",
            ui: {
                title: ".title"
            },
            template: "Waze/Modules/Topbar/templates/area-managers/main-list",
            initialize: function() {
                var e = this;
                return this.on("childview:onAreaMouseEnter", function(t) {
                        return e.trigger("onAreaMouseEnter", t.model)
                    }),
                    this.on("childview:onAreaMouseLeave", function(t) {
                        return e.trigger("onAreaMouseLeave", t.model)
                    }),
                    this.on("childview:onAreaClicked", function(t) {
                        return e.trigger("onAreaClicked", t.model)
                    }),
                    this.listenTo(this.collection, "reset", this._toggleTitle)
            },
            _toggleTitle: function() {
                return this.ui.title.toggle(this.collection.length > 0)
            },
            onRender: function() {
                return this._toggleTitle()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(300),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            childView: s.default,
            className: "rest-list",
            childViewContainer: "ul",
            template: "Waze/Modules/Topbar/templates/area-managers/rest-list",
            initialize: function() {
                var e = this;
                return this.on("childview:onAreaMouseEnter", function(t) {
                        return e.trigger("onAreaMouseEnter", t.model)
                    }),
                    this.on("childview:onAreaMouseLeave", function(t) {
                        return e.trigger("onAreaMouseLeave", t.model)
                    }),
                    this.on("childview:onAreaClicked", function(t) {
                        return e.trigger("onAreaClicked", t.model)
                    }),
                    this.collection.on("reset", this.render)
            },
            serializeData: function() {
                return {
                    numItems: this.collection.length
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(258),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Object.extend({
            _highlightedArea: null,
            initialize: function() {
                return this.pannable = this.options.pannable,
                    this.managedAreasLayer = this.options.managedAreasLayer,
                    this.drawingContext = this.options.drawingContext,
                    this.drawingContext.setStyleMap(s.default)
            },
            centerArea: function(e) {
                var t = e.geometry.getBounds().getCenterLonLat();
                return this.pannable.panTo(t)
            },
            highlightArea: function(e) {
                var t = this.managedAreasLayer.getVisibility(),
                    i = void 0;
                return t ? (this._highlightedArea = e,
                    null != (i = this.managedAreasLayer.getVector(e)) ? this.managedAreasLayer.drawFeature(i, "highlight") : void 0) : (i = new OL.Feature.Vector(e.geometry.clone()),
                    i.model = e,
                    this.drawingContext.addFeatures(i))
            },
            hideArea: function() {
                if (this.drawingContext.removeAllFeatures(),
                    null != this._highlightedArea) {
                    var e = this.managedAreasLayer.getVector(this._highlightedArea);
                    null != e && this.managedAreasLayer.drawFeature(e, "default"),
                        this._highlightedArea = null
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Topbar/templates/layout",
        regions: {
            loadingIndicator: ".loading-indicator-region",
            locationInfo: ".location-info-region",
            areaManagers: ".area-managers-region"
        },
        onRender: function() {
            if (this.showChildView("loadingIndicator", this.options.loadingIndicatorView),
                this.showChildView("locationInfo", this.options.locationInfoView),
                null != this.options.areaManagersLayout)
                return this.showChildView("areaManagers", this.options.areaManagersLayout)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(127),
        r = i(27),
        a = i(1072),
        o = n(a),
        l = i(1074),
        u = n(l),
        d = i(1075),
        c = n(d),
        h = i(1076),
        f = n(h),
        p = Backbone.Model.extend({
            defaults: {
                pendingChanges: !1,
                showingList: !0,
                saving: !1,
                editedModel: null
            }
        }),
        g = Marionette.Object.extend({
            _editingLock: null,
            initialize: function() {
                this.app = W.app,
                    this.map = W.map,
                    this.dataModel = W.model,
                    this.controller = W.controller,
                    this.repo = this.dataModel.majorTrafficEvents,
                    this.mteModeState = new p,
                    this.listenTo(this.mteModeState, "change", this.trigger.bind(this, s.STATE_CHANGED)),
                    this.map.closuresMarkerLayer.toggleRepo = !1,
                    this.dataModel.roadClosures.setActive(!0),
                    this.toolbarController = new o.default({
                        app: W.app,
                        map: this.map,
                        editingMediator: W.editingMediator,
                        actionManager: this.dataModel.actionManager,
                        mteModeState: this.mteModeState,
                        controller: this.controller,
                        togglerTree: W.togglerTree
                    }),
                    this.topbarLayout = new c.default({
                        map: this.map,
                        dataModel: this.dataModel,
                        globalVent: W.vent
                    }),
                    this.sidebarLayout = new u.default({
                        app: W.app
                    }),
                    this.mteController = new f.default({
                        toolbarController: this.toolbarController,
                        sidebarLayout: this.sidebarLayout,
                        mteModeState: this.mteModeState,
                        dataModel: this.dataModel,
                        repository: this.repo,
                        controller: this.controller,
                        editingMediator: W.editingMediator,
                        map: this.map
                    })
            },
            enter: function() {
                this._editingLock = W.editingMediator.lockEditing()
            },
            exit: function() {
                W.editingMediator.releaseEditing(this._editingLock),
                    this.toolbarController.destroy(),
                    this.mteController.destroy(),
                    this.map.closuresMarkerLayer.toggleRepo = !0
            },
            blockingExit: function() {
                return this.mteModeState.get("pendingChanges")
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getTopbarLayout: function() {
                return this.topbarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getState: function() {
                var e = this.mteModeState.get("editedModel");
                return {
                    majorTrafficEvent: e ? e.getID() : void 0
                }
            },
            restore: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.majorTrafficEvent;
                if (null != i) {
                    var n = function() {
                        var t = e.repo.get(i);
                        return null != t && e.mteController.showEditView(t),
                            null != t
                    };
                    return n() ? void 0 : this.listenToOnce(this.repo, r.ADDED, n)
                }
            }
        });
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(294),
        r = n(s),
        a = i(293),
        o = n(a),
        l = i(1073),
        u = n(l),
        d = i(292),
        c = n(d),
        h = Marionette.Object.extend({
            initialize: function(e) {
                return this.app = e.app,
                    this.map = e.map,
                    this.editingMediator = e.editingMediator,
                    this.actionManager = e.actionManager,
                    this.mteModeState = e.mteModeState,
                    this.searchView = new o.default({
                        map: this.map
                    }),
                    this.layerSwitcherController = new r.default({
                        map: this.map,
                        actionManager: this.actionManager,
                        controller: e.controller,
                        togglerTree: e.togglerTree
                    }),
                    this.toolbarButtons = new u.default({
                        mteModeState: this.mteModeState
                    }),
                    this.toolbarButtons.on("saveClicked", this._onSaveClicked, this),
                    this.toolbarButtons.on("addClicked", this._onAddClicked, this),
                    this.toolbarButtons.on("deleteClicked", this._onDeleteClicked, this),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.toolbarLayout = new c.default({
                        editingMediator: this.editingMediator,
                        model: this.app,
                        className: "toolbar toolbar-mte"
                    }),
                    this.listenTo(this.toolbarLayout, "render", this._onRender)
            },
            destroy: function() {
                return this.toolbarLayout.destroy(),
                    this.layerSwitcherController.destroy(),
                    this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            _onRender: function() {
                this.toolbarLayout.showChildView("layerSwitcher", this.layerSwitcherController.getLayout()),
                    this.toolbarLayout.showChildView("toolbar", this.toolbarButtons),
                    this.toolbarLayout.showChildView("search", this.searchView)
            },
            _onSaveClicked: function() {
                return this.trigger("saveClicked")
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDeleteClicked: function() {
                return this.trigger("deleteClicked")
            },
            _onEditingEnabledChanged: function() {}
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(13),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/toolbar_buttons",
            triggers: {
                "click .save-button": "saveClicked",
                "click .add-button": "addClicked",
                "click .delete-button": "deleteClicked"
            },
            bindings: {
                ".save-button": {
                    attributes: function(e) {
                        return [{
                            name: "disabled",
                            observe: ["saving", e],
                            onGet: function(e) {
                                var t = (0,
                                        s.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i || !n
                            }
                        }]
                    }("pendingChanges")
                },
                ".add-button": {
                    attributes: function(e) {
                        return [{
                            name: "disabled",
                            observe: ["saving", e],
                            onGet: function(e) {
                                var t = (0,
                                        s.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i || n
                            }
                        }]
                    }("pendingChanges")
                },
                ".delete-button": {
                    attributes: [{
                        name: "disabled",
                        observe: ["editedModel", "showingList", "saving"],
                        onGet: function(e) {
                            var t = (0,
                                    s.default)(e, 3),
                                i = t[0],
                                n = t[1];
                            return t[2] || n || i && i.isNew()
                        }
                    }]
                }
            },
            initialize: function(e) {
                this.mteModeState = e.mteModeState
            },
            onRender: function() {
                return this.stickit(this.mteModeState)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/MTE/templates/sidebar",
        className: "sidebar-layout",
        regions: {
            loaderRegion: ".loaderRegion",
            mainRegion: ".mainRegion"
        },
        bindings: {
            ".loaderRegion": {
                observe: "loadingFeatures",
                visible: !0
            },
            ".mainRegion": {
                observe: "loadingFeatures",
                visible: _.negate(_.identity)
            }
        },
        initialize: function(e) {
            this.app = e.app
        },
        onRender: function() {
            return this.stickit(this.app)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(298),
        r = n(s),
        a = i(299),
        o = n(a),
        l = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/topbar",
            regions: {
                loadingIndicator: ".loading-indicator-region",
                locationInfo: ".location-info-region"
            },
            onRender: function() {
                this.showChildView("loadingIndicator", new r.default({
                        globalVent: this.options.globalVent
                    })),
                    this.showChildView("locationInfo", new o.default({
                        dataModel: this.options.dataModel,
                        map: this.options.map
                    }))
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1077),
        r = n(s),
        a = i(126),
        o = n(a),
        l = i(27),
        u = i(1079),
        d = n(u),
        c = i(1081),
        h = n(c),
        f = i(118),
        p = n(f),
        g = i(269),
        m = n(g),
        v = i(266),
        _ = n(v),
        y = i(99),
        b = Marionette.Object.extend({
            initialize: function(e) {
                var t = this;
                return this.toolbarController = e.toolbarController,
                    this.sidebarLayout = e.sidebarLayout,
                    this.mteModeState = e.mteModeState,
                    this.dataModel = e.dataModel,
                    this.repository = e.repository,
                    this.controller = e.controller,
                    this.editingMediator = e.editingMediator,
                    this.map = e.map,
                    this.mteCollection = new d.default,
                    this.mteListView = new r.default({
                        collection: this.mteCollection,
                        dataModel: this.dataModel
                    }),
                    this.listenTo(this.repository, l.UPDATED, this._updateCollection),
                    this.listenTo(this.toolbarController, "saveClicked", this._onSaveClicked),
                    this.listenTo(this.toolbarController, "addClicked", this._onAddClicked),
                    this.listenTo(this.toolbarController, "deleteClicked", this._onDeleteClicked),
                    this.listenTo(this.mteListView, "mteItemClicked", this._onMteItemClicked),
                    this.savePopoverRegion = new m.default({
                        saveButtonSelector: ".toolbar-mte .save-button"
                    }),
                    this.listenTo(this.sidebarLayout, "render", function() {
                        return t._updateCollection(),
                            t._showListView()
                    })
            },
            _updateCollection: function(e) {
                return this.mteCollection.reset(this.repository.getObjectArray())
            },
            _onSaveClicked: function() {
                this.editView.validate() && this._save(this.editView.getAction())
            },
            _save: function(e) {
                var t = this;
                e.doAction(),
                    this.mteModeState.set({
                        saving: !0
                    });
                var i = new _.default({
                    map: this.map,
                    mediator: this.editingMediator,
                    popoverRegion: this.savePopoverRegion
                });
                return this.controller.save({
                    actions: [e]
                }).then(function(e) {
                    i.success(e),
                        t.mteModeState.set({
                            pendingChanges: !1
                        })
                }).catch(function(n) {
                    if (t._rollbackChanges(e), !(n instanceof y.SaveError))
                        throw n;
                    i.fail(n.errors)
                }).finally(function() {
                    t.mteModeState.set({
                        saving: !1
                    })
                })
            },
            _onMteItemClicked: function(e) {
                return this.showEditView(e)
            },
            showEditView: function(e) {
                return this.mteModeState.set({
                        showingList: !1,
                        pendingChanges: !1,
                        editedModel: e
                    }),
                    this.editView = new h.default({
                        model: e,
                        dataModel: this.dataModel,
                        map: this.map,
                        mteModeState: this.mteModeState
                    }),
                    this.sidebarLayout.showChildView("mainRegion", this.editView, {
                        preventDestroy: !0
                    }),
                    this.editView.on("backButtonClicked", this._showListView, this),
                    this.editView.on("modelChanged", this._onModelChanged, this)
            },
            _onAddClicked: function() {
                var e = new p.default;
                return e.model = this.dataModel,
                    this.showEditView(e),
                    this.mteModeState.set({
                        pendingChanges: !0
                    })
            },
            _onDeleteClicked: function() {
                if (!this.mteModeState.get("pendingChanges") || window.confirm(I18n.t("mte.edit.pending_changes_delete"))) {
                    var e = new o.default(this.mteModeState.get("editedModel"));
                    return e.setModel(this.dataModel),
                        this._save(e).then(this._showListView.bind(this))
                }
            },
            _onModelChanged: function() {
                return this.mteModeState.set({
                    pendingChanges: !0
                })
            },
            _showListView: function() {
                return this.mteModeState.set({
                        showingList: !0,
                        pendingChanges: !1,
                        editedModel: null
                    }),
                    this.sidebarLayout.showChildView("mainRegion", this.mteListView)
            },
            _rollbackChanges: function(e) {
                return e.undoAction(),
                    this.dataModel.actionManager.clear()
            },
            onDestroy: function() {
                return this.savePopoverRegion.destroy()
            }
        });
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(1078),
        o = n(a),
        l = {
            THIS_WEEK: {
                name: I18n.t("mte.search.this_week"),
                endDate: 7..day().fromNow()
            },
            THIS_MONTH: {
                name: I18n.t("mte.search.this_month"),
                endDate: 1..month().fromNow()
            },
            NEXT_3_MONTHS: {
                name: I18n.t("mte.search.next_3_months"),
                endDate: 3..month().fromNow()
            },
            NEXT_YEAR: {
                name: I18n.t("mte.search.next_year"),
                endDate: 1..year().fromNow()
            }
        },
        u = Marionette.View.extend({
            className: "empty-message",
            template: function() {
                return I18n.t("mte.search.empty")
            }
        }),
        d = Marionette.CompositeView.extend({
            template: "Waze/Modules/MTE/templates/mte_list",
            className: "flex-parent",
            childView: o.default,
            childViewContainer: "ul.mte-list",
            emptyView: u,
            ui: {
                search: ".search-input",
                list: "ul.mte-list"
            },
            events: {
                "focus @ui.search": "_onFocusChange",
                "blur @ui.search": "_onFocusChange",
                "click .add-mte-button": "_onAddClicked",
                "click .date-filter-item": "_onDateFilterClicked"
            },
            childViewEvents: {
                click: "_onItemClicked"
            },
            bindings: {
                ".search-input": {
                    observe: "query",
                    onSet: function(e) {
                        return e.toLowerCase()
                    }
                },
                ".current-date-filter": {
                    observe: "dateFilter",
                    onGet: function(e) {
                        return e.name
                    }
                },
                "ul.mte-list": {
                    classes: {
                        disabled: {
                            observe: ["typing", "query"],
                            onGet: function(e) {
                                var t = (0,
                                        r.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i && !n
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                return this.dataModel = e.dataModel,
                    this.model = new Backbone.Model({
                        query: "",
                        typing: !1,
                        dateFilter: l.THIS_MONTH
                    }),
                    this.listenTo(this.model, "change:query change:dateFilter", function() {
                        return t._renderChildren()
                    })
            },
            filter: function(e) {
                if (Date.parse(e.get("startDate")) > this.model.get("dateFilter").endDate)
                    return !1;
                var t = this.model.get("query"),
                    i = e.getEnglishName(),
                    n = this.dataModel.cities.get(e.get("cityID"));
                return n && (i = i + " " + n.attributes.englishName + " " + n.attributes.name),
                    i.toLowerCase().indexOf(t) > -1
            },
            onRender: function() {
                return this.stickit()
            },
            serializeData: function() {
                return {
                    dateFilters: l
                }
            },
            _onFocusChange: function(e) {
                return this.model.set("typing", this.ui.search.is(":focus"))
            },
            _onItemClicked: function(e) {
                return this.trigger("mteItemClicked", e.model)
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDateFilterClicked: function(e) {
                var t = $(e.target);
                return this.model.set("dateFilter", l[t.data().filter])
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            tagName: "li",
            className: "mte-item",
            template: "Waze/Modules/MTE/templates/mte_item_view",
            triggers: {
                click: "click"
            },
            serializeData: function() {
                return {
                    published: this.model.get("published"),
                    name: this.model.getEnglishName(),
                    date: this._shortDate()
                }
            },
            _shortDate: function() {
                var e = Date.parse(this.model.get("startDate")),
                    t = Date.parse(this.model.get("endDate"));
                return s.default.formatMonthRange(e, t)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(1080),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default,
            comparator: function(e) {
                return (e.getEnglishName() || "").toLowerCase()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            name: null
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(13),
        u = n(l),
        d = i(134),
        c = n(d),
        h = i(63),
        f = n(h),
        p = i(94),
        g = n(p),
        m = i(1082),
        v = n(m),
        y = i(118),
        b = i(1084),
        w = n(b),
        E = i(1085),
        k = n(E),
        M = i(20),
        S = n(M),
        T = i(16),
        C = n(T),
        I = i(1086),
        A = n(I),
        D = i(1087),
        R = n(D),
        O = i(1089),
        L = n(O),
        x = i(25),
        P = Marionette.View.extend({
            className: "mte-edit-view",
            template: "Waze/Modules/MTE/templates/mte_edit_view",
            behaviors: {
                dateTimePickers: {
                    behaviorClass: g.default
                }
            },
            regions: {
                namesRegion: ".names-region",
                addressEditRegion: ".address-edit-region",
                closuresRegion: "#mte-edit-closures",
                contributorsRegion: ".contributors-region",
                twitterUrlsRegion: ".twitter-urls-region"
            },
            events: {
                "click .back-button": "_onBackButtonClicked",
                "show.bs.tab .closures-tab": "_onClosuresTabClick",
                "show.bs.tab .contributors-tab": "_onContributorsTabClick",
                "click .submit-button": "_onSubmitClicked",
                "click .publish-button": "_onPublishClicked",
                "submit @ui.attributesForm": "_onFormSubmitted"
            },
            ui: {
                formSubmit: ".form-submit-button",
                attributesForm: ".attributes-form",
                formInputs: "form button, form input, form select",
                locationTooltip: ".location-tooltip"
            },
            bindings: {
                ".url": "url",
                ".event-page": {
                    observe: "uniqueName",
                    visible: !0
                },
                ".event-page a": {
                    attributes: [{
                        name: "href",
                        observe: "uniqueName",
                        onGet: function(e) {
                            return e ? W.Config.mte.root_url + "/" + e : null
                        }
                    }]
                },
                ".submit-buttons": {
                    observe: "published",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    }
                },
                ".category": {
                    observe: "category",
                    selectOptions: {
                        collection: "this.categoryOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.select_category")
                        }
                    }
                },
                "[name=tweetText]": {
                    observe: "tweetText",
                    attributes: [{
                        name: "disabled",
                        observe: "published"
                    }]
                }
            },
            submitButtonBindings: {
                ".submit-button": {
                    observe: "submitted",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "submitting"
                    }]
                },
                ".submitted-indication": {
                    observe: "submitted",
                    visible: !0
                }
            },
            publishBindings: {
                ".publish-button": {
                    observe: ["published", "canPublish"],
                    visible: !0,
                    onGet: function(e) {
                        var t = (0,
                                u.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return !i && n
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "publishing"
                    }]
                },
                ".published-indication": {
                    observe: ["published", "canPublish"],
                    visible: !0,
                    onGet: function(e) {
                        var t = (0,
                                u.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return i && n
                    }
                }
            },
            validationErrorsBindings: {
                ".validation-error[for=cityID]": "cityID",
                ".validation-error[for=names]": "names",
                ".validation-error[for=startDate]": "startDate",
                ".validation-error[for=endDate]": "endDate",
                ".start-date-group": {
                    classes: {
                        "has-error": {
                            observe: "startDate"
                        }
                    }
                },
                ".end-date-group": {
                    classes: {
                        "has-error": {
                            observe: "endDate"
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.api = new v.default({
                        dataModel: this.dataModel
                    });
                var i = [this.model.clone(), this.model];
                return this.model = i[0],
                    this.originalModel = i[1],
                    this.api = new v.default({
                        dataModel: this.dataModel
                    }),
                    this.submitViewModel = new Backbone.Model({
                        submitting: !1,
                        submitted: this.originalModel.get("ready")
                    }),
                    this.publishViewModel = new Backbone.Model({
                        publishing: !1,
                        canPublish: this.model.canPublish(),
                        published: this.originalModel.get("published")
                    }),
                    this.categoryOptions = _.map(y.CATEGORIES, function(e) {
                        return {
                            label: I18n.t("mte.edit.categories." + e),
                            value: e
                        }
                    }),
                    this.listenTo(this.originalModel, "change", function(e) {
                        return t.model.set(e.changed),
                            t.submitViewModel.set({
                                submitted: t.originalModel.get("ready")
                            }),
                            t.publishViewModel.set({
                                published: t.originalModel.get("published"),
                                canPublish: t.originalModel.canPublish()
                            })
                    }),
                    this.listenTo(this.model, "change", this._onModelChanged),
                    this.listenTo(this.mteModeState, "change:saving", this._onSavingChanged)
            },
            _onModelChanged: function(e) {
                if (null != this.validator) {
                    var t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                o.default)((0,
                                r.default)(e.changed)); !(t = (s = a.next()).done); t = !0) {
                            var l = s.value;
                            this.validator.clearErrorFor(l)
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && a.return && a.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
                var u = (0,
                    r.default)(e.changed);
                if (_.intersection(u, y.WRITABLE_ATTRIBUTES).length > 0)
                    return this.trigger("modelChanged")
            },
            onRender: function() {
                var e = this;
                this.namesView = new k.default({
                        model: this.model,
                        editable: this.model.arePropertiesEditable()
                    }),
                    this.listenTo(this.namesView, "namesChanged", function(t) {
                        return e.model.set({
                            names: t
                        })
                    }),
                    this.showChildView("namesRegion", this.namesView),
                    this.addressView = new c.default({
                        addressModel: this.model.getAddress(),
                        dataModel: this.dataModel,
                        feature: this.model,
                        editable: this.model.arePropertiesEditable(),
                        editStreet: !1,
                        showCitySelect: !0
                    }),
                    this.listenTo(this.addressView, "addressChanged", function() {
                        e.trigger("modelChanged"),
                            e.validator && e.validator.clearErrorFor("cityID")
                    }),
                    this.showChildView("addressEditRegion", this.addressView),
                    this._showTwitterUrls(),
                    this.stickit(),
                    this.stickit(this.submitViewModel, this.submitButtonBindings),
                    this.stickit(this.publishViewModel, this.publishBindings),
                    this.model.arePropertiesEditable() || this._toggleFormInputs(!1),
                    this.ui.locationTooltip.tooltip()
            },
            _showTwitterUrls: function() {
                this.getRegion("twitterUrlsRegion").empty();
                var e = this.model.attributes.twitterAccountsUrls;
                e.length > 0 && this.showChildView("twitterUrlsRegion", new Marionette.View({
                    template: "Waze/Modules/MTE/templates/item_edit/twitter_urls",
                    templateContext: {
                        twitterAccountsUrls: e
                    }
                }))
            },
            templateContext: function() {
                return {
                    modelAttributes: this.model.attributes,
                    canEditTweetText: this.model.canEditTweetText(),
                    newModel: this.model.isNew()
                }
            },
            _onSavingChanged: function(e, t) {
                if (this.model.arePropertiesEditable())
                    return this._toggleFormInputs(!t),
                        this.namesView.toggleEditable(!t),
                        this.addressView.toggleEditable(!t)
            },
            _toggleFormInputs: function(e) {
                return this.ui.formInputs.prop("disabled", !e)
            },
            validate: function() {
                return !!this._isMTEValid() || (this._showValidationErrors(), !1)
            },
            _isMTEValid: function() {
                var e = this.ui.attributesForm.get(0).checkValidity();
                return null != this.validator && this.unstickit(this.validator, this.validationErrorsBindings),
                    this.validator = w.default.validate(this.model),
                    this.stickit(this.validator, this.validationErrorsBindings),
                    this.validator.isValid() && e
            },
            _showValidationErrors: function() {
                return this.ui.formSubmit.click()
            },
            getAction: function() {
                var e = void 0;
                return e = this.model.isNew() ? new f.default(this.model, this.dataModel.majorTrafficEvents) : new S.default(this.originalModel, this.model.attributes),
                    e.setModel(this.dataModel),
                    e
            },
            _onBackButtonClicked: function() {
                var e = !0;
                if (this.mteModeState.get("pendingChanges") && (e = window.confirm(I18n.t("mte.edit.pending_changes"))),
                    e)
                    return this.trigger("backButtonClicked")
            },
            _loadMTEDetails: function(e, t) {
                return e.show(new A.default({
                        loading: !0,
                        loadingMessage: t
                    })),
                    this.api.getMTEDetails(this.model.get("id"))
            },
            _showMTEDetailsError: function(e, t) {
                e.show(new A.default({
                    error: !0,
                    errorMessage: t
                }))
            },
            _onClosuresTabClick: function() {
                var e = this,
                    t = this.getRegion("closuresRegion");
                return this._loadMTEDetails(t, I18n.t("mte.edit.closures.loading")).then(function(t) {
                    return e.showChildView("closuresRegion", new L.default({
                        map: e.options.map,
                        model: e.model,
                        mteModeState: e.mteModeState,
                        dataModel: e.dataModel,
                        detailsModel: t,
                        canAdd: !1,
                        drawingContext: e.options.map.getDrawingContext({
                            extendedMode: !0
                        }),
                        closuresMarkerLayer: e.options.map.closuresMarkerLayer
                    }))
                }).catch(function() {
                    e._showMTEDetailsError(t, I18n.t("mte.edit.closures.error"))
                })
            },
            _onContributorsTabClick: function() {
                var e = this,
                    t = this.getRegion("contributorsRegion");
                return this._loadMTEDetails(t, I18n.t("mte.edit.contributors.loading")).then(function(t) {
                    return e.showChildView("contributorsRegion", new R.default({
                        detailsModel: t,
                        mteModel: e.model,
                        editable: e.model.canEditPartners()
                    }))
                }).catch(function() {
                    e._showMTEDetailsError(t, I18n.t("mte.edit.contributors.error"))
                })
            },
            _onSubmitClicked: function() {
                var e = this;
                if (window.confirm(I18n.t("mte.edit.submit_confirm")))
                    return this.submitViewModel.set({
                            submitting: !0
                        }),
                        this.api.submit(this.originalModel).catch(function(e) {
                            if (!(e instanceof x.FetchError))
                                throw e;
                            var t = e.response.errorList,
                                i = t ? t[0].code : void 0;
                            alert(C.default.getSaveErrorTitle(i, "mte.edit.submit_failed"))
                        }).finally(function() {
                            e.submitViewModel.set({
                                submitting: !1
                            })
                        })
            },
            _onPublishClicked: function() {
                var e = this;
                return this.publishViewModel.set({
                        publishing: !0
                    }),
                    this.api.publish(this.originalModel).finally(function() {
                        e.publishViewModel.set({
                                publishing: !1
                            }),
                            e._showTwitterUrls()
                    }).catch(function(e) {
                        if (!(e instanceof x.FetchError))
                            throw e;
                        var t = e.response.errorList,
                            i = t ? t[0].code : void 0;
                        alert(C.default.getSaveErrorTitle(i, "mte.edit.publish_failed"))
                    })
            },
            _onFormSubmitted: function(e) {
                return e.preventDefault()
            }
        });
    t.default = P,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1083),
        r = n(s),
        a = i(60),
        o = n(a),
        l = i(25),
        u = Marionette.Object.extend({
            initialize: function(e) {
                this.dataModel = e.dataModel
            },
            getMTEDetails: function(e) {
                var t = this,
                    i = {
                        id: e,
                        mapVersionID: this.dataModel.lastTransactionID
                    };
                return (0,
                    l.httpGet)(W.Config.paths.mteDetails, i).then(function(e) {
                    var i = _.omit(e, "extendedDetails"),
                        n = (new o.default).read(i);
                    t.dataModel.putPersistent(n);
                    var s = _.extend(e.extendedDetails, {
                        segments: n.segments.objects,
                        closures: n.roadClosures.objects
                    });
                    return new r.default(s)
                })
            },
            submit: function(e) {
                return (0,
                    l.httpPost)(W.Config.paths.mteReady, {
                    id: e.getID()
                }).then(function(t) {
                    return e.set(t.majorTrafficEvents.objects[0]),
                        e
                })
            },
            publish: function(e) {
                return (0,
                    l.httpPost)(W.Config.paths.mtePublish, {
                    id: e.getID()
                }).then(function(t) {
                    return e.set(t.majorTrafficEvents.objects[0]),
                        e
                })
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            segments: null,
            closures: null,
            contributors: null,
            partners: null,
            availablePartners: null
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = new RegExp("^[a-zA-Z0-9]{1,1}[\\sa-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]{0,26}$", "i"),
        s = Backbone.Model.extend({
            isValid: function() {
                return _.isEmpty(this.attributes)
            },
            clearErrorFor: function(e) {
                return this.unset(e)
            }
        });
    s.validate = function(e) {
            var t = {},
                i = e.get("startDate"),
                r = e.get("endDate"),
                a = e.getEnglishName();
            return e.getAddress().get("isEmpty") && (t.cityID = I18n.t("mte.edit.validation_errors.location")),
                null === a ? t.names = I18n.t("mte.edit.validation_errors.names") : a.length > 27 ? t.names = I18n.t("mte.edit.validation_errors.english_name_length") : n.test(a) || (t.names = I18n.t("mte.edit.validation_errors.english_name")),
                null === i && (t.startDate = I18n.t("mte.edit.validation_errors.start_date")),
                null === r && (t.endDate = I18n.t("mte.edit.validation_errors.end_date")),
                null !== i && null !== r && Date.parse(i) > Date.parse(r) && (t.endDate = I18n.t("mte.edit.validation_errors.end_before_start")),
                new s(t)
        },
        s.ENGLISH_NAME_PATTERN = n,
        t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(7),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(118),
        a = Backbone.Model.extend({
            defaults: {
                englishName: "",
                localName: "",
                locale: "es",
                showAddButton: !0,
                showLocalName: !1,
                showPreview: !0,
                editable: !0
            }
        }),
        o = Marionette.CompositeView.extend({
            template: "Waze/Modules/MTE/templates/item_edit/names",
            className: "mte-names-edit-view",
            events: {
                "click .add-local-name-button": "_onAddLocalNameButtonClicked",
                "click .remove-local-name-button": "_onRemoveLocalNameButtonClicked",
                "click .edit-names-button": "_onEditNamesButtonClicked",
                submit: "_onFormSubmitted"
            },
            bindings: {
                ".preview": {
                    observe: "showPreview",
                    visible: !0
                },
                ".edit-form": {
                    observe: "showPreview",
                    visible: _.negate(_.identity)
                },
                ".english-name-preview .name": {
                    observe: "englishName",
                    onGet: function(e) {
                        return _.isEmpty(e) ? I18n.t("mte.edit.name_list.add_name") : e
                    }
                },
                ".english-name-preview": {
                    classes: {
                        empty: {
                            observe: "englishName",
                            onGet: _.negate(_.identity)
                        }
                    }
                },
                ".language-preview": {
                    observe: "englishName",
                    visible: !0,
                    onGet: function(e) {
                        return !_.isEmpty(e)
                    }
                },
                ".local-name-preview": {
                    observe: "showLocalName",
                    visible: !0
                },
                ".local-language-preview": "locale",
                ".local-name-preview .name": "localName",
                ".english-name input": "englishName",
                ".local-name input": {
                    observe: "localName",
                    attributes: [{
                        name: "required",
                        observe: "showLocalName"
                    }]
                },
                ".locale": {
                    observe: "locale",
                    selectOptions: {
                        collection: "this.localeOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.name_list.select_language")
                        }
                    },
                    attributes: [{
                        observe: "showLocalName",
                        name: "required"
                    }]
                },
                ".form-group.local-name": {
                    observe: "showLocalName",
                    visible: !0
                },
                ".add-local-name-button": {
                    observe: "showAddButton",
                    visible: !0
                },
                ".edit-names-button": {
                    attributes: [{
                        name: "disabled",
                        observe: "editable",
                        onGet: _.negate(_.identity)
                    }]
                },
                ".edit-names-button .waze-icon-edit": {
                    observe: "editable",
                    visible: !0
                }
            },
            initialize: function(e) {
                var t = this.model.getLocale();
                this.viewModel = new a({
                        englishName: this.model.getEnglishName(),
                        localName: this.model.getLocalName(),
                        locale: t,
                        editable: e.editable
                    }),
                    null !== t && this.viewModel.set({
                        showLocalName: !0,
                        showAddButton: !1
                    });
                var i = _.without(I18n.availableLocales, r.ENGLISH_LOCALE).map(function(e) {
                        return {
                            label: I18n.languageNames[e],
                            value: e
                        }
                    }),
                    n = (0,
                        s.default)(r.MTE_LOCALES).map(function(e) {
                        return {
                            label: r.MTE_LOCALES[e],
                            value: e
                        }
                    });
                this.localeOptions = _.sortBy(i.concat(n), "value")
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            serializeData: function() {
                return {
                    ENGLISH_LOCALE: r.ENGLISH_LOCALE
                }
            },
            toggleEditable: function(e) {
                return !1 === e && this.viewModel.set({
                        showPreview: !0
                    }),
                    this.viewModel.set({
                        editable: e
                    })
            },
            _onAddLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !0,
                    showAddButton: !1
                })
            },
            _onRemoveLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !1,
                    showAddButton: !0
                })
            },
            _onEditNamesButtonClicked: function() {
                return this.viewModel.set({
                    showPreview: !1
                })
            },
            _onFormSubmitted: function(e) {
                e.preventDefault(),
                    this.viewModel.set({
                        showPreview: !0
                    });
                var t = [{
                    locale: r.ENGLISH_LOCALE,
                    value: this.viewModel.get("englishName")
                }];
                return this.viewModel.get("showLocalName") && t.push({
                        locale: this.viewModel.get("locale"),
                        value: this.viewModel.get("localName")
                    }),
                    this.trigger("namesChanged", t)
            }
        });
    t.default = o,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
            defaults: {
                loading: !1,
                error: !1,
                loadingMessage: "",
                errorMessage: ""
            }
        }),
        s = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/item_edit/loading",
            bindings: {
                ".loading": {
                    observe: "loading",
                    visible: !0
                },
                ".error": {
                    observe: "error",
                    visible: !0
                }
            },
            initialize: function(e) {
                this.model = new n(e)
            },
            onRender: function() {
                return this.stickit()
            }
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(13),
        r = n(s),
        a = i(1088),
        o = n(a),
        l = i(16),
        u = n(l),
        d = Marionette.CompositeView.extend({
            template: "Waze/Modules/MTE/templates/contributors/list",
            className: "mte-contributors-list",
            childView: o.default,
            childViewContainer: ".list",
            childViewOptions: function() {
                return {
                    editable: this.options.editable
                }
            },
            events: {
                "click .add-partner-button": "_onAddClicked",
                "click .cancel-button": "_onCancelClicked",
                "submit .add-partner-form": "_onPartnerFormSubmitted"
            },
            childViewEvents: {
                removeClicked: "_onRemoveClicked"
            },
            bindings: {
                ".add-partner-form": {
                    observe: "showAddPartnerForm",
                    visible: !0
                },
                ".add-partner-button": {
                    observe: ["showAddPartnerForm", "editable"],
                    visible: !0,
                    onGet: function(e) {
                        var t = (0,
                                r.default)(e, 2),
                            i = t[0];
                        return t[1] && !i
                    }
                },
                ".partner-select": {
                    observe: "selectedPartner",
                    selectOptions: {
                        collection: "this._partnerOptions",
                        defaultOption: {
                            label: I18n.t("mte.edit.contributors.choose_partner"),
                            value: null
                        }
                    }
                }
            },
            initialize: function() {
                var e = this.options.mteModel.get("partners").map(function(e) {
                        return {
                            userID: e,
                            isPartner: !0
                        }
                    }),
                    t = this.options.detailsModel.get("contributors").map(function(e) {
                        return {
                            userID: e
                        }
                    });
                this.collection = new Backbone.Collection(e.concat(t)),
                    this.collection.on("reset add remove", this._onPartnersChanged, this),
                    this._generatePartnerOptions(),
                    this.viewModel = new Backbone.Model({
                        showAddPartnerForm: !1,
                        selectedPartner: null,
                        editable: this.options.editable
                    })
            },
            _generatePartnerOptions: function() {
                var e = this.collection.where({
                        isPartner: !0
                    }).map(function(e) {
                        return e.get("userID")
                    }),
                    t = _.difference(this.options.detailsModel.get("availablePartners"), e);
                this._partnerOptions = t.map(function(e) {
                    return {
                        label: u.default.formatUserName(e),
                        value: e
                    }
                }).sort(function(e, t) {
                    return e.label.localeCompare(t.label)
                })
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            _onAddClicked: function() {
                return this.viewModel.set({
                    showAddPartnerForm: !0
                })
            },
            _onCancelClicked: function() {
                return this.viewModel.set({
                    showAddPartnerForm: !1
                })
            },
            _onRemoveClicked: function(e) {
                return this.collection.remove(e.model)
            },
            _onPartnerFormSubmitted: function(e) {
                e.preventDefault();
                var t = new Backbone.Model({
                    userID: this.viewModel.get("selectedPartner"),
                    isPartner: !0
                });
                return this.collection.add(t),
                    this.viewModel.set({
                        showAddPartnerForm: !1,
                        selectedPartner: null
                    })
            },
            _updateModel: function() {
                var e = this.collection.where({
                    isPartner: !0
                }).map(function(e) {
                    return e.get("userID")
                });
                return this.options.mteModel.set({
                    partners: e
                })
            },
            _onPartnersChanged: function() {
                return this._generatePartnerOptions(),
                    this.stickit(this.viewModel),
                    this._updateModel()
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/MTE/templates/contributors/item",
        className: "mte-contributors-item",
        triggers: {
            "click .remove-button": "removeClicked"
        },
        serializeData: function() {
            var e = this;
            return _.tap(Marionette.View.prototype.serializeData.apply(this, arguments), function(t) {
                t.editable = e.options.editable
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(7),
        r = n(s),
        a = i(21),
        o = n(a),
        l = i(286),
        u = n(l),
        d = i(288),
        c = n(d),
        h = i(289),
        f = n(h),
        p = i(182),
        g = n(p),
        m = i(180),
        v = n(m),
        y = i(1090),
        b = n(y),
        w = Marionette.View.extend({
            template: function() {
                return I18n.t("mte.edit.closures.empty")
            }
        }),
        E = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/item_edit/closures",
            regions: {
                closuresRegion: ".closures"
            },
            initialize: function(e) {
                this.segments = e.detailsModel.get("segments"),
                    this.closures = e.detailsModel.get("closures"),
                    this.map = e.map,
                    this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.drawingContext = e.drawingContext,
                    this.closuresMarkerLayer = e.closuresMarkerLayer,
                    this._showClosures() && (this.compositeSegment = new g.default(this.segments, this.dataModel, v.default.getReversedSegments(this.segments)))
            },
            onRender: function() {
                if (this._showClosures()) {
                    new u.default({
                            region: this.getRegion("closuresRegion"),
                            pannable: this.map.getPannable(),
                            dataModel: this.dataModel,
                            compositeSegment: this.compositeSegment,
                            allClosures: this.closures,
                            repoActive: this.dataModel.roadClosures.active,
                            canSaveClosures: this._canSaveClosures(),
                            listViewConfig: f.default.MTE,
                            editViewConfig: c.default.MTE
                        }).showClosures(),
                        this._drawClosures(),
                        this._toggleMarkers(!1)
                } else
                    this.showChildView("closuresRegion", new w)
            },
            _showClosures: function() {
                return Boolean(this.segments.length)
            },
            _canSaveClosures: function() {
                return this.model.arePropertiesEditable() && !this.mteModeState.get("pendingChanges")
            },
            _drawClosures: function() {
                var e = this,
                    t = void 0;
                return this.drawingContext.setStyleMap(b.default), ["outline", "fill", "dash"].map(function(i) {
                    return t = e.segments.map(function(e) {
                            return new OL.Feature.Vector(e.geometry.clone(), {
                                type: i
                            })
                        }),
                        e.drawingContext.addFeatures(t)
                })
            },
            _toggleMarkers: function(e) {
                var t = _.pluck(this.closures, "id"),
                    i = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, l = (0,
                            o.default)((0,
                            r.default)(this.closuresMarkerLayer.markers)); !(i = (a = l.next()).done); i = !0) {
                        var u = a.value,
                            d = this.closuresMarkerLayer.markers[u];
                        _.contains(t, u) || d.toggle(e)
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !i && l.return && l.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
            },
            onDestroy: function() {
                return this.drawingContext.destroy(),
                    this._toggleMarkers(!0)
            }
        });
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = new OL.StyleMap;
    n.addUniqueValueRules("default", "type", {
            outline: {
                strokeColor: "black",
                strokeWidth: 14
            },
            fill: {
                strokeColor: "white",
                strokeWidth: 10
            },
            dash: {
                strokeColor: "red",
                strokeDashstyle: "dash",
                strokeDashArray: "10 10",
                strokeLinecap: "butt",
                strokeWidth: 10
            }
        }),
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            id: 1,
            isImperial: null,
            twoWaySegmentsByDefault: !1,
            enableTurnsByDefault: !1,
            requireFeatureDeselect: !1,
            spreadTurnArrows: !1,
            showTransparentTurnArrows: !1
        },
        localStorage: new Backbone.LocalStorage("preferences"),
        initialize: function() {
            var e = this;
            this.on("change", function() {
                return e.save()
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    I18n.pluralization.ru = function(e) {
            return [e % 10 == 1 && e % 100 != 11 ? "one" : [2, 3, 4].indexOf(e % 10) >= 0 && [12, 13, 14].indexOf(e % 100) < 0 ? "few" : e % 10 == 0 || [5, 6, 7, 8, 9].indexOf(e % 10) >= 0 || [11, 12, 13, 14].indexOf(e % 100) >= 0 ? "many" : "other"]
        },
        I18n.pluralization.oneRule = function(e) {
            return ["other"]
        }, ["ko", "ja", "ms", "zh", "zh", "zh-TW"].forEach(function(e) {
            I18n.pluralization[e] = I18n.pluralization.oneRule
        });
    var n = I18n.pluralization.get;
    I18n.pluralization.get = function() {
        var e = n.apply(this, arguments);
        return function() {
            var t = e.apply(void 0, arguments);
            return t.push("other"),
                t
        }
    }
}, function(e, t, i) {
    "use strict";
    i(1094),
        i(1095),
        i(1096),
        i(1097),
        i(1098),
        i(1099),
        i(1100),
        i(1101),
        i(1102),
        i(1103),
        i(1104),
        i(1105),
        i(1106),
        i(1107),
        i(1108),
        i(1109),
        i(1110),
        i(1111),
        i(1112),
        i(1113),
        i(1114),
        i(1115),
        i(1116),
        i(1117),
        i(1118),
        i(1119),
        i(1120),
        i(1121),
        i(1122),
        i(1123),
        i(1124),
        i(1125),
        i(1126),
        i(1127),
        i(1128),
        i(1129),
        i(1130),
        i(1131),
        i(1132),
        i(1133),
        i(1134),
        i(1135),
        i(1136)
}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}], [431]);